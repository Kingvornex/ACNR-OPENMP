//New Vegas Cops and Robbers(NVCNR) - v2.3 - by Weponz 2010-2012 : https://github.com/WeponzTV/NVCNR
//New Vegas Cops and Robbers(NVCNR) - v2.3 - by Weponz 2010-2012 Edit: DopeX aka [ND]xXZeusXx : https://sampforum.blast.hk/showthread.php?tid=566923

//Abolfazl Cops and Robbers(ACNR) - v2.1.5 - by Abolfazl 2015 - 2018 : https://github.com/Kingvornex/ACNR-OPENMP/blob/main/OLD%20VERSION%20UPDATES.MD
//Nigh Life Cops and Robbers(ACNR) - OPEN.mp - v2.2.2 - by Abolfazl 2024 : https://github.com/Kingvornex/ACNR-OPENMP

/*
BETA > ALFA > TETA // i know order is wrong but it is what it is
see :updates or https://github.com/Kingvornex/ACNR-OPENMP/blob/main/CHANGELOG.md for changelog
ToDo:
1.save in user files when the data being edited
*/

#define NO_TAGS //#pragma warning disable 213 //tag mismatch
#define MIXED_SPELLINGS //warning 234: function is deprecated (symbol "TextDrawBackgroundColor") Use `TextDrawBackgroundColour` 

#pragma warning disable 213 //tag mismatch
#pragma warning disable 214 //const
#pragma warning disable 219 //shadows
#pragma warning disable 239 //const

#include <open.mp>

#undef MAX_PLAYERS
#define MAX_PLAYERS 51
/*
 //fixes include...
#define 							FIXES_Single                               0
#define 							FIX_file_inc                               0
#define 							FIX_GetPlayerColor 						   0
#define                             FIX_FILTERSCRIPT                           0
#define 							FIX_SpawnPlayer 						   0
#define 							FIX_GetPlayerSkin 						   0
#define 							FIX_IsPlayerAttachedObjectSlotUsed 		   0
#define 							FIX_SetPlayerAttachedObject 			   0
#define 							FIX_OnPlayerDeath                          0
#define 							FIX_OnVehicleMod				   	   	   0
#define                             FIX_HydraSniper                            0
#define 							FIX_SetPlayerCheckpoint 				   0
#define 							FIX_SetPlayerRaceCheckpoint 			   0
#define                             FIX_AllowTeleport                          0
#define 							FIX_AllowInteriorWeapons 				   0
#define                             FIX_GetPlayerDialog                        0
#define 							FIX_SetSpawnInfo 						   0
#define                             FIX_HideMenuForPlayer                      0
#define                             FIX_fclose                                 0
#define                             FIX_fwrite                                 0
#define                             FIX_fread                                  0
#define                             FIX_fputchar                               0
#define                             FIX_fgetchar                               0
#define                             FIX_fblockwrite                            0
#define                             FIX_fblockread                             0
#define                             FIX_fseek                                  0
#define                             FIX_flength                                0
#define 							FIX_TextDrawCreate                         0
#define 							FIX_TextDrawSetString                      0
//
#define 							FIX_SetPlayerName 						   1
#define                             FIX_SetPlayerWorldBounds                   1
#define 							FIX_GetWeaponName					       1
#define 							FIX_TogglePlayerControllable 			   1
#define 							FIX_IsPlayerInCheckpoint                   1
#define 							FIX_IsPlayerInRaceCheckpoint               1
#define 							FIX_GetPlayerWeapon 					   1
#define 							FIX_PutPlayerInVehicle 					   1
#define 							FIX_KEY_AIM 							   1
#define 							FIX_OnPlayerEnterVehicle 				   1
#define 							FIX_SetPlayerSpecialAction 				   1
#define 							FIX_OnDialogResponse 					   1
#define 							FIX_SetPlayerSkin 						   1
#define 							FIX_valstr 								   1
//
#include 							<fixes>
 */ //
//#include <elc_ac_4.4>

#define CGEN_MEMORY 20000

#include <crashdetect>
#include <YSI-Includes\YSI_Storage\y_ini>
#include <izcmd>
#include <sscanf2>
#include <YSI-Includes\YSI_Data\y_iterate>
#include <streamer>
#include <CheckpointManager2>
//#include <GetVehicleColor> // GetVehicleColor is added to open.mp by default
#include <YSI-Includes\YSI_Coding\y_timers>
#include <a_actor>
#include <mGates2>
#include <fly>
#include <AutoAFK>
#include <easyDialog>
//#include <samp_bcrypt> //dont know how to use it
//#include "whirlpool" //dont use whirlpool use bcrypt : https://github.com/Southclaws/samp-whirlpool , https://github.com/Sreyas-Sreelal/samp-bcrypt/

//native WP_Hash(buffer[], len, const str[]); //whirlpool

stock WP_Hash(buffer[], len, const str[])
{
	format(buffer, len, "%s", str);
}

// new ACNR_DEBUG = 1;

#define WHITE 0xFFFFFFAA
#define RED 0xFF0000FF
#define BLUE 0x0000FFFF
#define GREEN 0x33AA33AA
#define COLOR_GREEN 0x33AA33AA
#define LIGHTGREEN 0x24FF0AB9
#define YELLOW 0xFFFF00FF
#define PINK 0xFF80C0FF
#define PURPLE 0x800080AA
#define LIGHTBLUE 0x0080C0FF
#define GREY 0xAFAFAFAA
#define ORANGE 0xFF8000FF
#define BEGE 0xFFA97F99
#define LIGHTRED 0xFF8080FF
#define DER 0xAA3333AA
#define COLOR_GRAD1 0xff00bbAA

#define CLASS_CIV 1
#define CLASS_COPS 2
#define CLASS_CIA 3
#define CLASS_ARMY 4
#define CLASS_MEDIC 5
#define CLASS_FBI 6

#define GUN_FILE "ACNR/Guns/%s.ini"
#define POS_FILE "ACNR/Positions/%s.ini"
#define DEGREE_FILE "ACNR/Degrees/%s.ini"
#define STYLE_FILE "ACNR/Styles/%s.ini"
#define BANK_FILE "ACNR/Bank/%s.ini"
#define USER_FILE "ACNR/Users/%s.ini"
#define VEH_FILE "ACNR/Vehicles/%d.ini"
#define HOUSE_FILE "ACNR/Houses/%d.ini"
#define BIZ_FILE "ACNR/Businesses/%d.ini"

#define ACNR_ACCS "ACNR/Accounts.ini"

#define MAX_VEHICLE_SPEED 300
#define MAX_ON_FOOT_SPEED 300

#define MAX_GROUPS 20

// Players Move Speed
#define MOVE_SPEED              100.0
#define ACCEL_RATE              0.03

// Players Mode
#define CAMERA_MODE_NONE    	0
#define CAMERA_MODE_FLY     	1

// Key state definitions
#define MOVE_FORWARD    		1
#define MOVE_BACK       		2
#define MOVE_LEFT       		3
#define MOVE_RIGHT      		4
#define MOVE_FORWARD_LEFT       5
#define MOVE_FORWARD_RIGHT      6
#define MOVE_BACK_LEFT          7
#define MOVE_BACK_RIGHT         8

#define ResetServerCash ResetPlayerMoney
#define UpdateServerCash GivePlayerMoney

#define MAX_BUSINESSES 600

#define DEFAULT_BIZ_OWNER_ID "INVALID_PLAYER_ID"
#define DEFAULT_BIZ_OWNER_NAME "Nobody"

#define MAX_PLAYER_BIZ 3
#define MAX_DEGREE_BIZ 5
#define MAX_VIP_BIZ 7

#define MAX_HOUSES 600
#define MAX_OWNABLE_HOUSES 3
#define MAX_DEGREE_HOUSES 5
#define MAX_VIP_HOUSES 7

#define HOUSE_SELLING_PERCENT_RETURN 60
#define HOUSE_SOLD_AREA_VALUE 1
#define VALUE_RANGE_BETWEEN_HOUSES 100

#define MAX_ALOUD_MODS 12

#define MAX_BUYABLE_VEHS 3//Players
#define MAX_DEGREE_VEHS 5//Dealership Degree
#define MAX_VIP_VEHS 7//VIP/Donator

#define MAX_SET_OBJECTS 100

#define OFF 0
#define ON 1

#define NO_PAINT -1

#define NO_NEONS -1
#define BLUE_NEONS 0
#define RED_NEONS 1
#define GREEN_NEONS 2
#define YELLOW_NEONS 3
#define PINK_NEONS 4
#define WHITE_NEONS 5

#define MAX_SHOP_VEHICLES 1000

#define BANK_MENU 0
#define WITHDRAW_MENU 1
#define DEPOSIT_MENU 2
#define TRANSFER_MENU 3
#define CREDIT_MENU 4
#define GLOBAL_AMMU_MENU 5
#define GLOBAL_AMMU_MENU1 6
#define GLOBAL_AMMU_MENU2 7
#define GLOBAL_AMMU_MENU3 8
#define GLOBAL_AMMU_MENU4 9
#define GLOBAL_AMMU_MENU5 10
#define GLOBAL_SHOP_MENU 11
#define GLOBAL_SHOP_MENU1 12
#define GLOBAL_SHOP_MENU2 13
#define GLOBAL_SHOP_MENU3 14
#define HOS_MENU 15
#define HOS_MENU1 16
#define CLUCK_MENU 17
#define CLUCK_MENU1 18
#define BURG_MENU 19
#define BURG_MENU1 20
#define PIZZA_MENU 21
#define PIZZA_MENU1 22
#define REGISTER_MENU 23
#define LOGIN_MENU 24
#define COP_MSG 25
#define CIA_MSG 26
#define ARMY_MSG 27
#define MEDIC_MSG 28
#define CIV_MSG 29
#define NVPD_ELEVATOR_MENU 30
#define CMDS_LIST1 31
#define CMDS_LIST2 32
#define CMDS_LIST3 33
#define CMDS_LIST4 34
#define CMDS_LIST5 35
#define ROB_LIST 36
#define RULES_LIST 37
#define ACMDS_LIST 38
#define VCMDS_LIST 39
#define ANIM_LIST 40
#define TUNE_MENU 41
#define TUNE_MENU1 42
#define TUNE_MENU2 43
#define TUNE_MENU3 44
#define TUNE_MENU4 45
#define TUNE_MENU5 46
#define TUNE_MENU6 47
#define TUNE_MENU7 48
#define TUNE_MENU8 49
#define TUNE_MENU9 50
#define TUNE_MENU10 51
#define TUNE_MENU11 52
#define TUNE_MENU12 53
#define TUNE_MENU13 54
#define TUNE_MENU14 55
#define TUNE_MENU15 56
#define TUNE_MENU16 57
#define PC_MENU 58
#define GLOBAL_CLUB_MENU 59
#define GLOBAL_CLUB_MENU1 60
#define GLOBAL_CLUB_MENU2 61
#define VEH_MENU 62
#define FBI_MSG 63
#define CMDS_LIST6 64
#define GPS 65
#define VEGAS_STATS 66
#define ONLINE_ADMINS 67
#define WEAPON_MENU 68
#define WEAPON_MENU1 69
#define WEAPON_MENU2 70
#define WEAPON_MENU3 71
#define WEAPON_MENU4 72
#define WEAPON_MENU5 73
#define WEAPON_MENU6 74
#define WEAPON_MENU7 75
#define WEAPON_MENU8 76
#define VEHICLE_MENU 77
#define SKIN_MENU 78
#define TELE_MENU 79
#define TELE_MENU1 80
#define TELE_MENU2 81
#define TELE_MENU3 82
#define PANEL_MENU 83
#define TRANSFER_MENU2 84
#define OBJECT_LIST_DIALOG 85
#define CREDITS_LIST 86
#define CREDIT_MENU2 87
#define EVENTS_HOWTO 88
#define ADMIN_HCMDS 89
#define WEALTH_DIALOG 90
#define GYM_DIALOG 91
#define CREDIT_MENU3 92
#define CREDIT_MENU4 93
#define STATEMENT_MENU 94
#define OBJECTS_DIALOG 95
#define CONTROL_PANEL 96
#define CONTROL_PANEL2 97
#define CONTROL_PANEL3 98
#define CONTROL_PANEL4 99
#define CONTROL_PANEL5 100
#define ARANKS_DIALOG 101
#define ASK_DIALOG 102
#define BANK_HELP 103
#define STATS_LIST 104
#define KELISA_DIALOG 105
#define ADMIN_BCMDS 106
#define BIZ_BUY_DIALOG 107
#define BIZ_SELL_DIALOG 108
#define BIZ_SHOP_DIALOG 109
#define BIZ_SHOP2_DIALOG 110
#define BIZ_SHOP3_DIALOG 111
#define BIZ_SHOP4_DIALOG 112
#define BIZ_SHOP5_DIALOG 113
#define BIZ_SHOP6_DIALOG 114
#define BIZ_SHOP7_DIALOG 115
#define BIZ_SHOP8_DIALOG 116
#define BIZ_SHOP9_DIALOG 117
#define BIZ_SHOP10_DIALOG 118
#define BIZ_MENU_DIALOG 119
#define BIZ_WITHDRAW_DIALOG 120
#define BIZ_BALANCE_DIALOG 121
#define BIZ_NAME_DIALOG 122
#define BIZ_LIST_DIALOG 123
#define CONTROL_PANEL6 124
#define DEGREE_INFO_LIST 125
#define DEGREE_LIST_DIALOG 126
#define FAQS_DIALOG 127
#define FAQS_ANSWER 128
#define GCMDS_DIALOG 129
#define AIRPORT_DIALOG 130
#define UPDATES 131
#define DEGREE_LIST_REVIEW 132
#define DEGREE_LIST_REVIEW1 133
#define DEGREE_LIST_REVIEW2 134
#define DEGREE_LIST_REVIEW3 135
#define DEGREE_LIST_REVIEW4 136
#define DEGREE_LIST_REVIEW5 137
#define DEGREE_LIST_REVIEW6 138
#define DEGREE_LIST_REVIEW7 139
#define HOUSE_KEYS_DIALOG 140
#define HOUSE_KEYS_INPUT 141
#define HOUSE_KEYS_INPUT2 142
#define HOUSE_KEYS_INPUT3 143
#define HOUSE_KEYS_INPUT4 144
#define HOUSE_KEYS_INPUT5 145
#define HOUSE_KEYS_INPUT6 146
#define HOUSE_KEYS_INPUT7 147
#define HOUSE_KEYS_INPUT8 148
#define HOUSE_KEYS_INPUT9 149
#define HOUSE_KEYS_INPUT10 150
#define SERVICE_STATION_MENU 151
#define NVM_MENU 152
#define NVM_CARS 153
#define NVM_BIKES 154
#define NVM_SPEC 155
#define MY_VEHS_MENU 156
#define APARTMENTS_ELEVATOR 157
#define DEGREES_INFO 158
#define KELISA_DIALOG1 159
#define KELISA_DIALOG2 160
#define KELISA_DIALOG3 161
#define KELISA_DIALOG4 162
#define VOTECMDS 163
#define VOTES1 164
#define VOTES2 165
#define VOTES3 166
#define KELISA_DIALOG5 167

#define HOUSE_MENU 2000//Dont change id

#define NVPD_BASE_BOTT_CP 1
#define NVPD_BASE_TOP_CP 2
#define NVPD_ENT_1_CP 3
#define NVPD_ENT_2_CP 4
#define NVPD_TOP_CPARK_CP 5
#define NVPD_ROOF_CP 6
#define NV_BANK_CP 7
#define ISLE_CP 8
#define VEGAS_CP 9
#define CALG_CP 10
#define DRAG_CP 11
#define AMMU1_CP 12
#define BURGER1_CP 13
#define CLUCK1_CP 14
#define BURGER2_CP 15
#define SHOP_24_1_CP 16
#define SHOP_24_2_CP 17
#define CITYHALL_CP 18
#define SHOP_24_3_CP 19
#define BURGER3_CP 20
#define AMMU2_CP 21
#define CLUCK2_CP 22
#define AMMU3_CP 23
#define AMMU4_CP 24
#define AMMU5_CP 25
#define BURGER4_CP 26
#define ELQ_BANK_CP 27
#define FORT_BANK_CP 28
#define BARA_BANK_CP 29
#define REDSANDS_CP 30
#define PIZZA_CP 31
#define NVPD_ELEV_CP 32
#define NVPD_EXT_1_CP 33
#define NVPD_EXT_2_CP 34
#define BANK_EXIT1_CP 35
#define BANK_EXIT2_CP 36
#define BANK_EXIT3_CP 37
#define BANK_EXIT4_CP 38
#define ISLE_EXIT_CP 39
#define VEGAS_EXIT_CP 40
#define REDSANDS_EXIT_CP 41
#define CALG_EXIT_CP 42
#define DRAG_EXIT_CP 43
#define AMMU_EXIT1_CP 44
#define AMMU_EXIT2_CP 45
#define AMMU_EXIT3_CP 46
#define AMMU_EXIT4_CP 47
#define AMMU_EXIT5_CP 48
#define CITYHALL_EXT_CP 49
#define BURG1_EXT_CP 50
#define BURG2_EXT_CP 51
#define BURG3_EXT_CP 52
#define CLUCK1_EXT_CP 53
#define CLUCK2_EXT_CP 54
#define BURG4_EXT_CP 55
#define EXT1_24_CP 56
#define EXT2_24_CP 57
#define EXT3_24_CP 58
#define PIZZA_EXT_CP 59
#define NV_BANK_ROB 60
#define NVPD_ROB 61
#define ISLE_ROB 62
#define VEGAS_ROB 63
#define REDSANDS_ROB 64
#define CALG_ROB 65
#define DRAG_ROB 66
#define AMMU1_ROB 67
#define AMMU2_ROB 68
#define AMMU3_ROB 69
#define AMMU4_ROB 70
#define AMMU5_ROB 71
#define CITYHALL_ROB 72
#define BURG1_ROB 73
#define BURG2_ROB 74
#define BURG3_ROB 75
#define CLUCK1_ROB 76
#define CLUCK2_ROB 77
#define BURG4_ROB 78
#define ROB_24_1 79
#define ROB_24_2 80
#define ROB_24_3 81
#define ELQ_BANK_ROB 82
#define FORT_BANK_ROB 83
#define BARA_BANK_ROB 84
#define PIZZA_ROB 85
#define HOS_CP 86
#define CELLCP_1 87
#define NIGHT_CLUB_CP 88
#define NIGHT_CLUB_EXIT_CP 89
#define NIGHT_CLUB_ROB 90
#define AMMU6_CP 91
#define AMMU_EXIT6_CP 92
#define AMMU6_ROB 93
#define ROB_24_4 94
#define EXT4_24_CP 95
#define SHOP_24_4_CP 96
#define BURG5_ROB 97
#define BURG5_EXT_CP 98
#define BURGER5_CP 99
#define CLUCK3_EXT_CP 100
#define CLUCK3_ROB 101
#define CLUCK3_CP 102
#define FBI_ENTER_CP 103
#define FBI_ELEV_OUT 104
#define FBI_EXIT_CP 105
#define FBI_ELEV_IN 106
#define FBI_ROB 107
#define GYM_ENTER_CP 108
#define GYM_EXIT_SPAWN 109
#define GYM_EXIT_CP 110
#define GYM_STYLE_CP 111
#define GYM_RING_CP 112
#define CAR_SHOP 113
#define MATS_CP_LV 114
#define MATS_CP_BS 115
#define NV_UNI_CP 116
#define NV_UNI_CP2 117
#define NV_UNI_CP3 118
#define TOWER_CP 119
#define AIRPORT_CP 120
#define CIA_CP 121
#define CIA_CP2 122
#define CIA_CP3 123
#define CELLCP_2 124
#define CELLCP_3 125
#define CELLCP_4 126
#define CELLCP_5 127
#define CELLCP_6 128
#define BAR_CP 129
#define BAR_EXIT_CP 130
#define BAR_ROB_CP 131
#define APARTMENTS_CP 132
//
#define V1 133
#define V2 134
#define V3 135
#define V4 136
#define V5 137
#define V6 138
#define K1 139
#define K2 140
#define K3 141
#define K4 142
#define K5 143
#define K6 144
#define V11 145
#define V12 146
#define V13 147
#define V14 148
#define V15 149
#define V16 150
#define K11 151
#define K12 152
#define K13 153
#define K14 154
#define K15 156
#define K16 157
#define CP1 158
#define CP2 159
#define CP3 160
#define CP4 161
#define CP5 162
#define CP6 163

#define Loop(%0,%1) for(new %0 = 0; %0 < %1; %0++)
#define TYPE_OUT (0)
#define TYPE_INT (1)
#define strcpy(%0,%1) \
            strcat((%0[0] = '\0', %0), %1)

new vipvehicle[MAX_VEHICLES];
new PVeh[MAX_PLAYERS];
new cambug[MAX_PLAYERS char];
new IsAnopmOn[MAX_PLAYERS char];
new mohlatincpass[MAX_PLAYERS char];
new ele;
new tedadeacc = 1;
new newestname[60];
new tedadvoro = 0, tedadekick = 0, tedadeban = 0;
new IsAccseptSong[MAX_PLAYERS];
new bool:IsFlying[MAX_PLAYERS];
new Text:LOADSCS[15];
new bool:Inactive[MAX_PLAYERS];
new AFKcount;
new Text:MULTITD;
new Text:MULTIPLAYER;
new Text:UnderPPWtd[MAX_PLAYERS];
new Text:playerwanted[MAX_PLAYERS];
new playerpool[MAX_PLAYERS];
new OnVote;
new Voted[MAX_PLAYERS];
new votetimer;

enum VOTES
{
	Vote[50],
	VoteY,
	VoteN,
}
new Voting[VOTES];

forward CancelVote();
forward ExBanExe(plyid,reason[]);
forward SRCFB(cmd[]);
forward EntryRules(playerid);
forward KickPublic(plyid);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward OnCheckpointEXIT(playerid, checkpointid);
forward WaitToTryEscape(playerid);
forward IsPlayerAloudToLay(playerid);
forward ResetTextLines(playerid);
forward RedsandsRob(playerid);
forward AmmuRob(playerid);
forward KelisaRob(playerid);
forward FBIRob(playerid);
forward UNIRob(playerid);
forward CIARob(playerid);
forward DragRob(playerid);
forward IsleRob(playerid);
forward CalgRob(playerid);
forward CluckRob(playerid);
forward ShotRob(playerid);
forward ClubRob(playerid);
forward GymRob(playerid);
forward StoreRob(playerid);
forward PizzaRob(playerid);
forward BankRob(playerid);
forward NVPDRob(playerid);
forward HallRob(playerid);
forward BarRob(playerid);
forward VegasRob(playerid);
forward Update_Zones();
forward SendPlayerToJail(playerid);
forward LoadVeh_data(vehicleid, name[], value[]);
forward LoadBank_data(playerid, name[], value[]);
forward LoadDegree_data(playerid, name[], value[]);
forward LoadUser_data(playerid, name[], value[]);
forward LoadStyle_data(playerid, name[], value[]);
forward SetVehicleParamsForAll(carid,objective,doorslocked);
forward AcceptCMDExpire(playerid);
forward LoadBiz_data(bizid,name[],value[]);
forward LoadHouse_data(houseid,name[],value[]);
forward BizRobRecentTimer(bizid);
forward BizRob(playerid);
forward TazerTimer(playerid);
forward HouseRob(playerid);
forward SkydiveInteriorChanger(playerid);
forward DetectATDeparture(playerid);
forward FailureToPayTicket(playerid);
forward RestartServer();
forward StartCountDown();
forward CountDownStage1();
forward CountDownStage2();
forward CountDownStage3();
forward FinishCountDown();
forward AutoUncage(playerid);
forward AutoUnjail(playerid);
forward LoadGun_data(playerid, name[], value[]);
forward LoadPos_data(playerid, name[], value[]);
forward FPSUP(playerid);

new bool:HasBeenIssuedTicket[MAX_PLAYERS char];
new bool:IsPlayerUsingTuneMenu[MAX_PLAYERS char];
new bool:HasShieldAttached[MAX_PLAYERS char];
new bool:HasBandanaAttached[MAX_PLAYERS char];
new bool:HasBeenArrested[MAX_PLAYERS char];
new bool:GoToJail[MAX_PLAYERS char];
new bool:IsUnfairDeath[MAX_PLAYERS char];
new bool:IsJailed[MAX_PLAYERS char];
new bool:CanESC[MAX_PLAYERS char];
new bool:HasSpawned[MAX_PLAYERS char];
new bool:HasConnectedSpawned[MAX_PLAYERS char];
new bool:HasSavedPos[MAX_PLAYERS char];
new bool:IsCaged[MAX_PLAYERS char];
new bool:IsRobbingIsle[MAX_PLAYERS char];
new bool:IsRobbingVegas[MAX_PLAYERS char];
new bool:IsRobbingRedsands[MAX_PLAYERS char];
new bool:IsRobbingCalg[MAX_PLAYERS char];
new bool:IsRobbingDrag[MAX_PLAYERS char];
new bool:IsRobbingBank1[MAX_PLAYERS char];
new bool:IsRobbingBank2[MAX_PLAYERS char];
new bool:IsRobbingBank3[MAX_PLAYERS char];
new bool:IsRobbingBank4[MAX_PLAYERS char];
new bool:IsRobbingNVPD[MAX_PLAYERS char];
new bool:IsRobbingHall[MAX_PLAYERS char];
new bool:IsRobbingBar[MAX_PLAYERS char];
new bool:IsRobbingKelisa1[MAX_PLAYERS char];
new bool:IsRobbingKelisa2[MAX_PLAYERS char];
new bool:IsRobbingKelisa3[MAX_PLAYERS char];
new bool:IsRobbingKelisa4[MAX_PLAYERS char];
new bool:IsRobbingKelisa5[MAX_PLAYERS char];
new bool:IsRobbingKelisa6[MAX_PLAYERS char];
new bool:IsRobbingAmmu1[MAX_PLAYERS char];
new bool:IsRobbingAmmu2[MAX_PLAYERS char];
new bool:IsRobbingAmmu3[MAX_PLAYERS char];
new bool:IsRobbingAmmu4[MAX_PLAYERS char];
new bool:IsRobbingAmmu5[MAX_PLAYERS char];
new bool:IsRobbingAmmu6[MAX_PLAYERS char];
new bool:IsRobbingFBI[MAX_PLAYERS char];
new bool:IsRobbingUNI[MAX_PLAYERS char];
new bool:IsRobbingCIA[MAX_PLAYERS char];
new bool:IsRobbingClub[MAX_PLAYERS char];
new bool:IsRobbingGym[MAX_PLAYERS char];
new bool:IsRobbingShot1[MAX_PLAYERS char];
new bool:IsRobbingShot2[MAX_PLAYERS char];
new bool:IsRobbingShot3[MAX_PLAYERS char];
new bool:IsRobbingShot4[MAX_PLAYERS char];
new bool:IsRobbingShot5[MAX_PLAYERS char];
new bool:IsRobbingCluck1[MAX_PLAYERS char];
new bool:IsRobbingCluck2[MAX_PLAYERS char];
new bool:IsRobbingCluck3[MAX_PLAYERS char];
new bool:IsRobbingStore1[MAX_PLAYERS char];
new bool:IsRobbingStore2[MAX_PLAYERS char];
new bool:IsRobbingStore3[MAX_PLAYERS char];
new bool:IsRobbingStore4[MAX_PLAYERS char];
new bool:IsRobbingPizza[MAX_PLAYERS char];
new bool:HasBeenTied[MAX_PLAYERS char];
new bool:HasBeenCuffed[MAX_PLAYERS char];
new bool:IsInCellCP[MAX_PLAYERS char];
new bool:IsInCellCP1[MAX_PLAYERS char];
new bool:IsInCellCP2[MAX_PLAYERS char];
new bool:IsInCellCP3[MAX_PLAYERS char];
new bool:IsInCellCP4[MAX_PLAYERS char];
new bool:IsInCellCP5[MAX_PLAYERS char];
new bool:IsInCellCP6[MAX_PLAYERS char];
new bool:IsNewbieMutted[MAX_PLAYERS char];
new bool:IsPlayerEditingObject[MAX_PLAYERS char];
new bool:IsPlayerAttachingObject[MAX_PLAYERS char];
new bool:HasDied[MAX_PLAYERS char];
new bool:IsPlayerRobbingBiz[MAX_PLAYERS char];
new bool:IsPlayerSetBuilder[MAX_PLAYERS char];
new bool:IsPlayerRobbingHouse[MAX_PLAYERS char];
new bool:IsPlayerInArena[MAX_PLAYERS char];
new bool:IsPlayerGettingMatsNV[MAX_PLAYERS char];
new bool:IsPlayerGettingMatsBS[MAX_PLAYERS char];
new bool:IsVIPInColorMode[MAX_PLAYERS char];
new bool:HasChangedSkin[MAX_PLAYERS char];
new bool:IsPlayerUsingAnim[MAX_PLAYERS char];
new bool:HasPlayerDiedInJail[MAX_PLAYERS char];
new bool:HasPlayerDiedInCage[MAX_PLAYERS char];
new bool:IsAdminSpectating[MAX_PLAYERS char];
new bool:IsPlayerBeingSpectated[MAX_PLAYERS char];
new bool:IsPlayersFirstSpawn[MAX_PLAYERS char];
new bool:IsAdminUnderCover[MAX_PLAYERS char];

new GetPlayerLastVehicleID[MAX_PLAYERS];
new NVPD_pickup_gun;
new NVPD_pickup_arm;
new FBI_pickup_gun;
new FBI_pickup_arm;
new CIA_pickup_gun;
new CIA_pickup_arm;
new JailTimer[MAX_PLAYERS];
new CageTimer[MAX_PLAYERS];
new PlayerBeingSpectatedBy[MAX_PLAYERS];
new eventvehs[MAX_VEHICLES];
new eventvehsused;
new GetSetObjects[MAX_PLAYERS][MAX_SET_OBJECTS];
new GetSetObjectsCount[MAX_PLAYERS];
new BomberStage[MAX_PLAYERS char];
new VehicleBombOwner[MAX_VEHICLES];
new GetServerVehicles = -1;
new GetPlayerVehicles[MAX_PLAYERS char];
new IsShopVehicle[MAX_VEHICLES];
new GetVehicleMods[MAX_SHOP_VEHICLES][12];
new verifydestroycar[MAX_PLAYERS char];
new Vehicle_Data_Model[MAX_PLAYERS][7];
new Vehicle_Data_ID[MAX_PLAYERS][7];
new TicketIssuer[MAX_PLAYERS];
new TicketTimer[MAX_PLAYERS char];
new CountStatus;
new isletimer[MAX_PLAYERS char];
new vegastimer[MAX_PLAYERS char];
new redsandstimer[MAX_PLAYERS char];
new calgtimer[MAX_PLAYERS char];
new dragtimer[MAX_PLAYERS char];
new banktimer[MAX_PLAYERS char];
new nvpdtimer[MAX_PLAYERS char];
new halltimer[MAX_PLAYERS char];
new bartimer[MAX_PLAYERS char];
new ammutimer[MAX_PLAYERS char];
new kelisatimer[MAX_PLAYERS char];
new shottimer[MAX_PLAYERS char];
new clucktimer[MAX_PLAYERS char];
new storetimer[MAX_PLAYERS char];
new pizzatimer[MAX_PLAYERS char];
new clubtimer[MAX_PLAYERS char];
new gymtimer[MAX_PLAYERS char];
new fbitimer[MAX_PLAYERS char];
new unitimer[MAX_PLAYERS char];
new ciatimer[MAX_PLAYERS char];
new skytimer[MAX_PLAYERS char];
new biztimer[MAX_PLAYERS char];
new attimer[MAX_PLAYERS char];
new IsInCell[MAX_PLAYERS char];
new InMateID[MAX_PLAYERS];
new hasenteredtower[MAX_PLAYERS char];
new Float:lastx[MAX_PLAYERS], Float:lasty[MAX_PLAYERS], Float:lastz[MAX_PLAYERS];
new FightStyleID[MAX_PLAYERS char];
new HouseCPOut[MAX_HOUSES];
new HouseCPInt[MAX_HOUSES];
new Text3D:HouseLabel[MAX_HOUSES];
new Float:hX, Float:hY, Float:hZ, Float:hAngle;
new Text:ACNRInfo[MAX_PLAYERS];
new Text:txtTimeDisp;
new Text:txtDateDisp;
new Text:esmmashin[MAX_PLAYERS];
new Text:FPS[MAX_PLAYERS];
new FPSTimer[MAX_PLAYERS];
new DLlast[MAX_PLAYERS] = 0;
new FPS2[MAX_PLAYERS] = 0;
new GetTeam[MAX_PLAYERS char];
new BribeTo[MAX_PLAYERS];
new BribeFrom[MAX_PLAYERS];
new Bribe[MAX_PLAYERS];
new IsLoggedIn[MAX_PLAYERS char];
new JailTime[MAX_PLAYERS];
new CageTime[MAX_PLAYERS];
new HasHit[MAX_PLAYERS];
new HasPlacedHit[MAX_PLAYERS];
new IsInGod[MAX_PLAYERS char];
new IsInGodCar[MAX_PLAYERS char];
new IsMuted[MAX_PLAYERS char];
new IsOnduty[MAX_PLAYERS char];
new HasLotteryTicket[MAX_PLAYERS char];
new IsIgnoringPMs[MAX_PLAYERS char];
new PlayersLottoNumbers[6][MAX_PLAYERS];
new HasSetCheckpoint[MAX_PLAYERS char];
new ServerSideCash[MAX_PLAYERS];
new IsAtEvent[MAX_PLAYERS char];
new HasMadeEvent[MAX_PLAYERS char];
new HasEventStarted;
new HasAdminStoppedJoins;
new CantJoinEvent;
new Number[6];
new PDGate1;
new PDGate2;
new FBIGate;
new ID;
new fstr[200];
new fstr2[200];
new fstr3[200];
new transferid[MAX_PLAYERS];
new text_line_count[MAX_PLAYERS char];
new ZoneUpdates[MAX_PLAYERS];
new Player_Zone[MAX_PLAYERS];
new ZoneTimer[MAX_PLAYERS];
new reportee[MAX_PLAYERS];
new chattingwith[MAX_PLAYERS];
new gunbuying[MAX_PLAYERS];
new matsbuying[MAX_PLAYERS];
new degreebuying[MAX_PLAYERS];
new shotsfired[MAX_PLAYERS] = 0;
new bizrobbed[MAX_BUSINESSES] = 0;
new unirobbed = 0;
new ciarobbed = 0;
new fbirobbed = 0;
new gymrobbed = 0;
new clubrobbed = 0;
new kelisa1robbed = 0;
new kelisa2robbed = 0;
new kelisa3robbed = 0;
new kelisa4robbed = 0;
new kelisa5robbed = 0;
new kelisa6robbed = 0;
new ammu1robbed = 0;
new ammu2robbed = 0;
new ammu3robbed = 0;
new ammu4robbed = 0;
new ammu5robbed = 0;
new ammu6robbed = 0;
new shot1robbed = 0;
new shot2robbed = 0;
new shot3robbed = 0;
new shot4robbed = 0;
new shot5robbed = 0;
new cluck1robbed = 0;
new cluck2robbed = 0;
new cluck3robbed = 0;
new store1robbed = 0;
new store2robbed = 0;
new store3robbed = 0;
new store4robbed = 0;
new pizzarobbed = 0;
new islerobbed = 0;
new vegasrobbed = 0;
new redrobbed = 0;
new calgrobbed = 0;
new dragrobbed = 0;
new bank1robbed = 0;
new bank2robbed = 0;
new bank3robbed = 0;
new bank4robbed = 0;
new nvpdrobbed = 0;
new hallrobbed = 0;
new barrobbed = 0;
new hanger1;
new hanger2;
new hanger3;
new hanger4;
new Text3D:bLabel[MAX_BUSINESSES];
new GetVehicleFuel[MAX_VEHICLES];
new Float:GetVehicleCurrentHealth[MAX_VEHICLES];
new sellingbizid[MAX_PLAYERS];
new sellinghouseid[MAX_PLAYERS];
new offerer_id2[MAX_PLAYERS];
new offer_price2[MAX_PLAYERS];
new offerer_id5[MAX_PLAYERS];
new offer_price5[MAX_PLAYERS];
new offerer_id6[MAX_PLAYERS];
new offer_price6[MAX_PLAYERS];
new offerer_id7[MAX_PLAYERS];//
new offer_price7[MAX_PLAYERS];//
new offeredveh[MAX_PLAYERS];
new bizentercp[MAX_BUSINESSES];
new bizexitcp[MAX_BUSINESSES];
new bizrobberycp[MAX_BUSINESSES];
new BizRobCP[MAX_PLAYERS];
new BizID[MAX_PLAYERS];
new bizlabel[50];
new offer_price[MAX_PLAYERS];
new offerer_id[MAX_PLAYERS];
new offer_price3[MAX_PLAYERS];
new offerer_id3[MAX_PLAYERS];
new offer_price8[MAX_PLAYERS];
new offerer_id8[MAX_PLAYERS];
new offer_price9[MAX_PLAYERS];
new offerer_id9[MAX_PLAYERS];
new offer_price4[MAX_PLAYERS];
new offerer_id4[MAX_PLAYERS];
new engine, lights, alarm, doors, bonnet, boot, vcondition;
new blueneons[MAX_VEHICLES], redneons[MAX_VEHICLES], greenneons[MAX_VEHICLES], yellowneons[MAX_VEHICLES], pinkneons[MAX_VEHICLES], whiteneons[MAX_VEHICLES];
new blueneons2[MAX_VEHICLES], redneons2[MAX_VEHICLES], greenneons2[MAX_VEHICLES], yellowneons2[MAX_VEHICLES], pinkneons2[MAX_VEHICLES], whiteneons2[MAX_VEHICLES];
new LastHouseCP[MAX_PLAYERS];
new IsInHouse[MAX_PLAYERS];

// Enumeration for storing data about the player
enum noclipenum
{
	cameramode,
	flyobject,
	mode,
	lrold,
	udold,
	lastmove,
	Float:accelmul
}
new noclipdata[MAX_PLAYERS][noclipenum];

enum ACNR_specmode_data
{
	IsSpectating
}
new SpecInfo[MAX_PLAYERS][ACNR_specmode_data];

enum ACNR_gun_saving
{
    gSlot0_gun,
    gSlot0_ammo,
    gSlot1_gun,
    gSlot1_ammo,
    gSlot2_gun,
    gSlot2_ammo,
    gSlot3_gun,
    gSlot3_ammo,
    gSlot4_gun,
    gSlot4_ammo,
    gSlot5_gun,
    gSlot5_ammo,
    gSlot6_gun,
    gSlot6_ammo,
    gSlot7_gun,
    gSlot7_ammo,
    gSlot8_gun,
    gSlot8_ammo,
    gSlot9_gun,
    gSlot9_ammo,
    gSlot10_gun,
    gSlot10_ammo,
    gSlot11_gun,
    gSlot11_ammo,
    gSlot12_gun,
    gSlot12_ammo,
}
new GunInfo[MAX_PLAYERS][ACNR_gun_saving];

enum ACNR_position_saving
{
	Float:rPos_X,
	Float:rPos_Y,
	Float:rPos_Z,
	Float:rPos_A,
	rInterior,
	rWorld,
}
new PosInfo[MAX_PLAYERS][ACNR_position_saving];

enum ACNR_command_timers
{
    CMD_timer1,
    CMD_timer2,
    CMD_timer3,
    CMD_timer4,
    CMD_timer5,
    CMD_timer6,
    CMD_timer7,
    CMD_timer8,
    CMD_timer9,
    CMD_timer10,
    CMD_timer11,
    CMD_timer12,
    CMD_timer13,
    CMD_timer14,
    CMD_timer15,
    CMD_timer16,
    CMD_timer17,
    CMD_timer18,
    CMD_timer19,
    CMD_timer20,
    CMD_timer21,
    CMD_timer22,
    CMD_timer23,
    CMD_timer24,
    CMD_timer25,
    CMD_timer26,
    CMD_timer27,
    CMD_timer28,
    CMD_timer29,
    CMD_timer30,
    CMD_timer31,
    CMD_timer32,
    CMD_timer33,
    CMD_timer34,
    CMD_timer35,
    CMD_timer36,
    CMD_timer37,
    CMD_timer38,
    CMD_timer39,
    CMD_timer40,//
    CMD_timer41,
    CMD_timer42,
    CMD_timer43,
    CMD_timer44,
    CMD_timer45,//
    CMD_timer46,//
    CMD_timer47,
    CMD_timer48,
    CMD_timer49,
    CMD_timer50,
    CMD_timer51,//
    CMD_timer52,//
    CMD_timer53,
    CMD_timer54,
    CMD_timer55,
    CMD_timer56,
    CMD_timer57,//
    CMD_timer58,//
    CMD_timer59,
    CMD_timer60,
    CMD_timer61,
    CMD_timer62,
    CMD_timer63,//
    CMD_timer64,//
    CMD_timer65,
    CMD_timer66,
    CMD_timer67,
    CMD_timer68,
    CMD_timer69,
    CMD_timer70,//
    CMD_timer71,
    CMD_timer72,
    CMD_timer73,
    CMD_timer74,
    CMD_timer75
    
}
new TimerInfo[MAX_PLAYERS][ACNR_command_timers];

enum ACNR_degrees
{
    dReal,
    dLaw,
    dDefense,
    dHealth,
    dMechanic,
    dDealer,
    dWeapons,
}
new DegreeInfo[MAX_PLAYERS][ACNR_degrees];

enum ACNR_house
{
    hOwner[24],
    hName[40],
    Float:hCPOutX,
    Float:hCPOutY,
    Float:hCPOutZ,
    Float:hSPOutX,
    Float:hSPOutY,
    Float:hSPOutZ,
    Float:hSPOutA,
    hValue,
    hLock,
    hWorld,
    hSpawnInterior,
    hHouseInterior,
    hQuit,
    hKeyOwner1[24],
    hKeyOwner2[24],
    hKeyOwner3[24],
    hKeyOwner4[24],
    hKeyOwner5[24],
    hKeyOwner6[24],
    hKeyOwner7[24],
    hKeyOwner8[24],
    hKeyOwner9[24],
    hKeyOwner10[24]
}
new HouseInfo[MAX_HOUSES][ACNR_house];

enum ACNR_biz
{
	bName[50],
	bOwner[24],
	bPrice,
	Float:bExtX,
	Float:bExtY,
	Float:bExtZ,
	Float:bIntX,
	Float:bIntY,
	Float:bIntZ,
	Float:bExtSpwnX,
	Float:bExtSpwnY,
	Float:bExtSpwnZ,
	Float:bExtSpwnA,
	Float:bIntSpwnX,
	Float:bIntSpwnY,
	Float:bIntSpwnZ,
	Float:bIntSpwnA,
	Float:bRobX,
	Float:bRobY,
	Float:bRobZ,
	bInterior,
	bVWorld,
	bEarnings
}
new BizInfo[MAX_BUSINESSES][ACNR_biz];

enum ACNR_vehicle
{
	vModel,
	vColor1,
	vColor2,
	vPrice,
	vOwner[24],
	Float:vPosX,
	Float:vPosY,
	Float:vPosZ,
	Float:vPosA,
	vPlate[32],
	vPaintJob,
	vLocked,
	vNeons,
	vFuel,
	Float:vHealth
}
new VehicleInfo[MAX_SHOP_VEHICLES][ACNR_vehicle];

enum ACNR_user
{
	pPass[129],
	aTT,
	vTT,
    aLevel,
    vLevel,
    pCash,
    pScore,
    pKills,
    pDeaths,
    pHoldups,
    pCrimes,
    pFined,
    pArrests,
    pTakedowns,
    pTickets,
    pRope,
    pPaintCan,
    pScissors,
    pKits,
    vLock,
    Helper,
    hHelper,
    pWarns,
    pKicks,
    pJoins,
    pMaterials,
    Banned,
    jTime,
    Float:pArmour,
    Float:pHealth,
    pWanted,
    cTime
}
new PlayerInfo[MAX_PLAYERS][ACNR_user];

enum ACNR_bank
{
	Balance,
    Credit,
    Debt,
    Fees,
    Transactions
}
new BankInfo[MAX_PLAYERS][ACNR_bank];

enum ACNR_object
{
    oID,
    oCurrent,
    Float:oX,
    Float:oY,
    Float:oZ,
    Float:oRotX,
    Float:oRotY,
    Float:oRotZ
}
new ObjectInfo[MAX_PLAYERS][ACNR_object];

enum ACNR_groups
{
	grname[75],
	leader,
	active
};
new GroupInfo[MAX_GROUPS][ACNR_groups];

enum gInfo
{
	gid,
	order,
	invited,
	attemptjoin
};
new pGroupInfo[MAX_PLAYERS][gInfo];

enum GetAdminPos
{
	Float:evX,
	Float:evY,
	Float:evZ,
	Float:evA
};
new aPos[GetAdminPos];

enum GetPlayersPos
{
	Float:evX,
	Float:evY,
	Float:evZ,
	Float:evA
};
new pPos[GetPlayersPos];

enum SpeedometerComponents {
	Namev,
	Status,
	Speedr,
	Enabled
}

static tds_Player[MAX_PLAYERS][SpeedometerComponents];

new is3don[MAX_PLAYERS];

new GlobalVehicleNames[212][] =
{
	{"Landstalker"},
	{"Bravura"},
	{"Buffalo"},
	{"Linerunner"},
	{"Perrenial"},
	{"Sentinel"},
	{"Dumper"},
	{"Firetruck"},
	{"Trash Master"},
	{"Stretch"},
	{"Manana"},
	{"Infernus"},
	{"Voodoo"},
	{"Pony"},
	{"Mule"},
	{"Cheetah"},
	{"Ambulance"},
	{"Leviathan"},
	{"Moonbeam"},
	{"Esperanto"},
	{"Taxi"},
	{"Washington"},
	{"Bobcat"},
	{"Mr Whoopee"},
	{"BF Injection"},
	{"Hunter"},
	{"Premier"},
	{"Enforcer"},
	{"Securicar"},
	{"Banshee"},
	{"Predator"},
	{"Bus"},
	{"Rhino"},
	{"Barracks"},
	{"Hotknife"},
	{"Trailer 1"},
	{"Previon"},
	{"Coach"},
	{"Cabbie"},
	{"Stallion"},
	{"Rumpo"},
	{"RC Bandit"},
	{"Romero"},
	{"Packer"},
	{"Monster"},
	{"Admiral"},
	{"Squalo"},
	{"Seasparrow"},
	{"Pizzaboy"},
	{"Tram"},
	{"Trailer 2"},
	{"Turismo"},
	{"Speeder"},
	{"Reefer"},
	{"Tropic"},
	{"Flatbed"},
	{"Yankee"},
	{"Caddy"},
	{"Solair"},
	{"Berkley's RC Van"},
	{"Skimmer"},
	{"PCJ-600"},
	{"Faggio"},
	{"Freeway"},
	{"RC Baron"},
	{"RC Raider"},
	{"Glendale"},
	{"Oceanic"},
	{"Sanchez"},
	{"Sparrow"},
	{"Patriot"},
	{"Quad"},
	{"Coastguard"},
	{"Dinghy"},
	{"Hermes"},
	{"Sabre"},
	{"Rustler"},
	{"ZR-350"},
	{"Walton"},
	{"Regina"},
	{"Comet"},
	{"BMX"},
	{"Burrito"},
	{"Camper"},
	{"Marquis"},
	{"Baggage"},
	{"Dozer"},
	{"Maverick"},
	{"News Chopper"},
	{"Rancher"},
	{"FBI Rancher"},
	{"Virgo"},
	{"Greenwood"},
	{"Jetmax"},
	{"Hotring"},
	{"Sandking"},
	{"Blista Compact"},
	{"Police Maverick"},
	{"Boxville"},
	{"Benson"},
	{"Mesa"},
	{"RC Goblin"},
	{"Hotring Racer A"},
	{"Hotring Racer B"},
	{"Bloodring Banger"},
	{"Rancher"},
	{"Super GT"},
	{"Elegant"},
	{"Journey"},
	{"Bike"},
	{"Mountain Bike"},
	{"Beagle"},
	{"Cropdust"},
	{"Stunt Plane"},
	{"Tanker"},
	{"Roadtrain"},
	{"Nebula"},
	{"Majestic"},
	{"Buccaneer"},
	{"Shamal"},
	{"Hydra"},
	{"FCR-900"},
	{"NRG-500"},
	{"HPV1000"},
	{"Cement Truck"},
	{"Tow Truck"},
	{"Fortune"},
	{"Cadrona"},
	{"FBI Truck"},
	{"Willard"},
	{"Forklift"},
	{"Tractor"},
	{"Combine"},
	{"Feltzer"},
	{"Remington"},
	{"Slamvan"},
	{"Blade"},
	{"Freight"},
	{"Streak"},
	{"Vortex"},
	{"Vincent"},
	{"Bullet"},
	{"Clover"},
	{"Sadler"},
	{"Firetruck LA"},
	{"Hustler"},
	{"Intruder"},
	{"Primo"},
	{"Cargobob"},
	{"Tampa"},
	{"Sunrise"},
	{"Merit"},
	{"Utility"},
	{"Nevada"},
	{"Yosemite"},
	{"Windsor"},
	{"Monster A"},
	{"Monster B"},
	{"Uranus"},
	{"Jester"},
	{"Sultan"},
	{"Stratum"},
	{"Elegy"},
	{"Raindance"},
	{"RC Tiger"},
	{"Flash"},
	{"Tahoma"},
	{"Savanna"},
	{"Bandito"},
	{"Freight Flat"},
	{"Streak Carriage"},
	{"Kart"},
	{"Mower"},
	{"Duneride"},
	{"Sweeper"},
	{"Broadway"},
	{"Tornado"},
	{"AT-400"},
	{"DFT-30"},
	{"Huntley"},
	{"Stafford"},
	{"BF-400"},
	{"Newsvan"},
	{"Tug"},
	{"Trailer 3"},
	{"Emperor"},
	{"Wayfarer"},
	{"Euros"},
	{"Hotdog"},
	{"Club"},
	{"Freight Carriage"},
	{"Trailer 3"},
	{"Andromada"},
	{"Dodo"},
	{"RC Cam"},
	{"Launch"},
	{"Police Car (LSPD)"},
	{"Police Car (SFPD)"},
	{"Police Car (LVPD)"},
	{"Police Ranger"},
	{"Picador"},
	{"S.W.A.T. Van"},
	{"Alpha"},
	{"Phoenix"},
	{"Glendale"},
	{"Sadler"},
	{"Luggage Trailer A"},
	{"Luggage Trailer B"},
	{"Stair Trailer"},
	{"Boxville"},
	{"Farm Plow"},
	{"Utility Trailer"}
};

stock Update3DSpeedometer(playerid, speedr, fuel=-1, vhp)
{
	if (!tds_Player[playerid][Enabled]) return 1;
	if (!IsPlayerInAnyVehicle(playerid))
	{
		tdSpeedo_Toggle(playerid, 0);
		return 1;
	}
	else if (!IsPlayerNPC(playerid)) 
	{
		new vehid = GetPlayerVehicleID(playerid);
//		new Float:pvX, Float:pvY, Float:pvZ, 
//		new Float:vhp;
//		GetVehicleHealth(vehid, vhp);
//		vhp = (((vhp - 250.0) / 750.0) * 100.0);
		new speedText[48];
		new statusText[48];
		if (fuel > -1)
		{
				format(statusText, 48, "Fuel: %i%%, Health: %.0f%%", fuel, vhp);
		}
		else
		{
				format(statusText, 48, "Health: %.0f%%", vhp);
		}
		format(speedText, 48, "%0.f KMH", speedr);
		new modelid = GetVehicleModel(vehid);
		SetDynamicObjectMaterialText(tds_Player[playerid][Namev], 0, GlobalVehicleNames[modelid-400], OBJECT_MATERIAL_SIZE_512x256, "Arial", 30, true, 0xFFFFFFFF, 0, OBJECT_MATERIAL_TEXT_ALIGN_RIGHT);
		SetDynamicObjectMaterialText(tds_Player[playerid][Status], 0, statusText, OBJECT_MATERIAL_SIZE_512x256, "Arial", 30, false, 0xFFFFFFFF, 0, OBJECT_MATERIAL_TEXT_ALIGN_RIGHT);
		SetDynamicObjectMaterialText(tds_Player[playerid][Speedr], 0, speedText, OBJECT_MATERIAL_SIZE_512x256, "Arial", 30, false, 0xFFFFFFFF, 0, OBJECT_MATERIAL_TEXT_ALIGN_RIGHT);
	}
	return 1;
}

static tdSpeedo_Toggle(playerid, activate)
{
	if (activate)
	{
		if (tds_Player[playerid][Enabled])
		{
			return 1;
		}
		new vid = GetPlayerVehicleID(playerid);
		new vmod = GetVehicleModel(vid);
		tds_Player[playerid][Namev] = CreateDynamicObject(19482, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, playerid, 200.0);
		tds_Player[playerid][Status] = CreateDynamicObject(19482, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, playerid, 200.0);
		tds_Player[playerid][Speedr] = CreateDynamicObject(19482, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -1, -1, playerid, 200.0);
		new Float:vX,Float:vY,Float:vZ;
		GetVehicleModelInfo(vmod, VEHICLE_MODEL_INFO_SIZE, vX, vY, vZ);
		if (vX < 1.5)
		{
			vX = 1.5;
		}
		AttachDynamicObjectToVehicle(tds_Player[playerid][Namev], vid, -vX-1.75, -1.0, 0.0, 0.0, 0.0, 290.0);
		AttachDynamicObjectToVehicle(tds_Player[playerid][Status], vid, -vX-1.75, -1.0, -0.3, 0.0, 0.0, 290.0);
		AttachDynamicObjectToVehicle(tds_Player[playerid][Speedr], vid, -vX-1.75, -1.0, -0.6, 0.0, 0.0, 290.0);
		Streamer_Update(playerid);
		tds_Player[playerid][Enabled] = 1;
	}
	else
	{
		if (tds_Player[playerid][Status] != INVALID_OBJECT_ID)
		{
			DestroyDynamicObject(tds_Player[playerid][Namev]);
			tds_Player[playerid][Namev] = INVALID_OBJECT_ID;
			DestroyDynamicObject(tds_Player[playerid][Status]);
			tds_Player[playerid][Status] = INVALID_OBJECT_ID;
			DestroyDynamicObject(tds_Player[playerid][Speedr]);
			tds_Player[playerid][Speedr] = INVALID_OBJECT_ID;
		}
		tds_Player[playerid][Enabled] = 0;
	}
	return 1;
}

new AVehicleModPrices[] =
{
    400, // ID 1000, Spoiler Pro                                Certain Transfender cars
    550, // ID 1001, Spoiler Win                                Certain Transfender cars
    200, // ID 1002, Spoiler Drag                               Certain Transfender cars
    250, // ID 1003, Spoiler Alpha                              Certain Transfender cars
    100, // ID 1004, Hood Champ Scoop                           Certain Transfender cars
    150, // ID 1005, Hood Fury Scoop                            Certain Transfender cars
    80, // ID 1006, Roof Roof Scoop                             Certain Transfender cars
    500, // ID 1007, Sideskirt Right Sideskirt                  Certain Transfender cars
    500, // ID 1008, Nitro 5 times                              Most cars, Most planes and Most Helicopters
    200, // ID 1009, Nitro 2 times                              Most cars, Most planes and Most Helicopters
    1000, // ID 1010, Nitro 10 times                            Most cars, Most planes and Most Helicopters
    220, // ID 1011, Hood Race Scoop                            Certain Transfender cars
    250, // ID 1012, Hood Worx Scoop                            Certain Transfender cars
    100, // ID 1013, Lamps Round Fog                            Certain Transfender cars
    400, // ID 1014, Spoiler Champ                              Certain Transfender cars
    500, // ID 1015, Spoiler Race                               Certain Transfender cars
    200, // ID 1016, Spoiler Worx                               Certain Transfender cars
    500, // ID 1017, Sideskirt Left Sideskirt                   Certain Transfender cars
    350, // ID 1018, Exhaust Upswept                            Most cars
    300, // ID 1019, Exhaust Twin                               Most cars
    250, // ID 1020, Exhaust Large                              Most cars
    200, // ID 1021, Exhaust Medium                             Most cars
    150, // ID 1022, Exhaust Small                              Most cars
    350, // ID 1023, Spoiler Fury                               Certain Transfender cars
    50, // ID 1024, Lamps Square Fog                            Certain Transfender cars
    1000, // ID 1025, Wheels Offroad                            Certain Transfender cars
    480, // ID 1026, Sideskirt Right Alien Sideskirt            Sultan
    480, // ID 1027, Sideskirt Left Alien Sideskirt             Sultan
    770, // ID 1028, Exhaust Alien                              Sultan
    680, // ID 1029, Exhaust X-Flow                             Sultan
    370, // ID 1030, Sideskirt Left X-Flow Sideskirt            Sultan
    370, // ID 1031, Sideskirt Right X-Flow Sideskirt           Sultan
    170, // ID 1032, Roof Alien Roof Vent                       Sultan
    120, // ID 1033, Roof X-Flow Roof Vent                      Sultan
    790, // ID 1034, Exhaust Alien                              Elegy
    150, // ID 1035, Roof X-Flow Roof Vent                      Elegy
    500, // ID 1036, SideSkirt Right Alien Sideskirt            Elegy
    690, // ID 1037, Exhaust X-Flow                             Elegy
    190, // ID 1038, Roof Alien Roof Vent                       Elegy
    390, // ID 1039, SideSkirt Right X-Flow Sideskirt           Elegy
    500, // ID 1040, SideSkirt Left Alien Sideskirt             Elegy
    390, // ID 1041, SideSkirt Right X-Flow Sideskirt           Elegy
    1000, // ID 1042, SideSkirt Right Chrome Sideskirt          Broadway
    500, // ID 1043, Exhaust Slamin                             Broadway
    500, // ID 1044, Exhaust Chrome                             Broadway
    510, // ID 1045, Exhaust X-Flow                             Flash
    710, // ID 1046, Exhaust Alien                              Flash
    670, // ID 1047, SideSkirt Right Alien Sideskirt            Flash
    530, // ID 1048, SideSkirt Right X-Flow Sideskirt           Flash
    810, // ID 1049, Spoiler Alien                              Flash
    620, // ID 1050, Spoiler X-Flow                             Flash
    670, // ID 1051, SideSkirt Left Alien Sideskirt             Flash
    530, // ID 1052, SideSkirt Left X-Flow Sideskirt            Flash
    130, // ID 1053, Roof X-Flow                                Flash
    210, // ID 1054, Roof Alien                                 Flash
    230, // ID 1055, Roof Alien                                 Stratum
    520, // ID 1056, Sideskirt Right Alien Sideskirt            Stratum
    430, // ID 1057, Sideskirt Right X-Flow Sideskirt           Stratum
    620, // ID 1058, Spoiler Alien                              Stratum
    720, // ID 1059, Exhaust X-Flow                             Stratum
    530, // ID 1060, Spoiler X-Flow                             Stratum
    180, // ID 1061, Roof X-Flow                                Stratum
    520, // ID 1062, Sideskirt Left Alien Sideskirt             Stratum
    430, // ID 1063, Sideskirt Left X-Flow Sideskirt            Stratum
    830, // ID 1064, Exhaust Alien                              Stratum
    850, // ID 1065, Exhaust Alien                              Jester
    750, // ID 1066, Exhaust X-Flow                             Jester
    250, // ID 1067, Roof Alien                                 Jester
    200, // ID 1068, Roof X-Flow                                Jester
    550, // ID 1069, Sideskirt Right Alien Sideskirt            Jester
    450, // ID 1070, Sideskirt Right X-Flow Sideskirt           Jester
    550, // ID 1071, Sideskirt Left Alien Sideskirt             Jester
    450, // ID 1072, Sideskirt Left X-Flow Sideskirt            Jester
    1100, // ID 1073, Wheels Shadow                             Most cars
    1030, // ID 1074, Wheels Mega                               Most cars
    980, // ID 1075, Wheels Rimshine                            Most cars
    1560, // ID 1076, Wheels Wires                              Most cars
    1620, // ID 1077, Wheels Classic                            Most cars
    1200, // ID 1078, Wheels Twist                              Most cars
    1030, // ID 1079, Wheels Cutter                             Most cars
    900, // ID 1080, Wheels Switch                              Most cars
    1230, // ID 1081, Wheels Grove                              Most cars
    820, // ID 1082, Wheels Import                              Most cars
    1560, // ID 1083, Wheels Dollar                             Most cars
    1350, // ID 1084, Wheels Trance                             Most cars
    770, // ID 1085, Wheels Atomic                              Most cars
    100, // ID 1086, Stereo Stereo                              Most cars
    1500, // ID 1087, Hydraulics Hydraulics                     Most cars
    150, // ID 1088, Roof Alien                                 Uranus
    650, // ID 1089, Exhaust X-Flow                             Uranus
    450, // ID 1090, Sideskirt Right Alien Sideskirt            Uranus
    100, // ID 1091, Roof X-Flow                                Uranus
    750, // ID 1092, Exhaust Alien                              Uranus
    350, // ID 1093, Sideskirt Right X-Flow Sideskirt           Uranus
    450, // ID 1094, Sideskirt Left Alien Sideskirt             Uranus
    350, // ID 1095, Sideskirt Right X-Flow Sideskirt           Uranus
    1000, // ID 1096, Wheels Ahab                               Most cars
    620, // ID 1097, Wheels Virtual                             Most cars
    1140, // ID 1098, Wheels Access                             Most cars
    1000, // ID 1099, Sideskirt Left Chrome Sideskirt           Broadway
    940, // ID 1100, Bullbar Chrome Grill                       Remington
    780, // ID 1101, Sideskirt Left `Chrome Flames` Sideskirt   Remington
    830, // ID 1102, Sideskirt Left `Chrome Strip` Sideskirt    Savanna
    3250, // ID 1103, Roof Convertible                          Blade
    1610, // ID 1104, Exhaust Chrome                            Blade
    1540, // ID 1105, Exhaust Slamin                            Blade
    780, // ID 1106, Sideskirt Right `Chrome Arches`            Remington
    780, // ID 1107, Sideskirt Left `Chrome Strip` Sideskirt    Blade
    780, // ID 1108, Sideskirt Right `Chrome Strip` Sideskirt   Blade
    1610, // ID 1109, Rear Bullbars Chrome                      Slamvan
    1540, // ID 1110, Rear Bullbars Slamin                      Slamvan
    55, // ID 1111, Front Sign? Little Sign?                    Slamvan         ???
    55, // ID 1112, Front Sign? Little Sign?                    Slamvan         ???
    3340, // ID 1113, Exhaust Chrome                            Slamvan
    3250, // ID 1114, Exhaust Slamin                            Slamvan
    2130, // ID 1115, Front Bullbars Chrome                     Slamvan
    2050, // ID 1116, Front Bullbars Slamin                     Slamvan
    2040, // ID 1117, Front Bumper Chrome                       Slamvan
    780, // ID 1118, Sideskirt Right `Chrome Trim` Sideskirt    Slamvan
    940, // ID 1119, Sideskirt Right `Wheelcovers` Sideskirt    Slamvan
    780, // ID 1120, Sideskirt Left `Chrome Trim` Sideskirt     Slamvan
    940, // ID 1121, Sideskirt Left `Wheelcovers` Sideskirt     Slamvan
    780, // ID 1122, Sideskirt Right `Chrome Flames` Sideskirt  Remington
    860, // ID 1123, Bullbars Bullbar Chrome Bars               Remington
    780, // ID 1124, Sideskirt Left `Chrome Arches` Sideskirt   Remington
    1120, // ID 1125, Bullbars Bullbar Chrome Lights            Remington
    3340, // ID 1126, Exhaust Chrome Exhaust                    Remington
    3250, // ID 1127, Exhaust Slamin Exhaust                    Remington
    3340, // ID 1128, Roof Vinyl Hardtop                        Blade
    1650, // ID 1129, Exhaust Chrome                            Savanna
    3380, // ID 1130, Roof Hardtop                              Savanna
    3290, // ID 1131, Roof Softtop                              Savanna
    1590, // ID 1132, Exhaust Slamin                            Savanna
    830, // ID 1133, Sideskirt Right `Chrome Strip` Sideskirt   Savanna
    800, // ID 1134, SideSkirt Right `Chrome Strip` Sideskirt   Tornado
    1500, // ID 1135, Exhaust Slamin                            Tornado
    1000, // ID 1136, Exhaust Chrome                            Tornado
    800, // ID 1137, Sideskirt Left `Chrome Strip` Sideskirt    Tornado
    580, // ID 1138, Spoiler Alien                              Sultan
    470, // ID 1139, Spoiler X-Flow                             Sultan
    870, // ID 1140, Rear Bumper X-Flow                         Sultan
    980, // ID 1141, Rear Bumper Alien                          Sultan
    150, // ID 1142, Vents Left Oval Vents                      Certain Transfender Cars
    150, // ID 1143, Vents Right Oval Vents                     Certain Transfender Cars
    100, // ID 1144, Vents Left Square Vents                    Certain Transfender Cars
    100, // ID 1145, Vents Right Square Vents                   Certain Transfender Cars
    490, // ID 1146, Spoiler X-Flow                             Elegy
    600, // ID 1147, Spoiler Alien                              Elegy
    890, // ID 1148, Rear Bumper X-Flow                         Elegy
    1000, // ID 1149, Rear Bumper Alien                         Elegy
    1090, // ID 1150, Rear Bumper Alien                         Flash
    840, // ID 1151, Rear Bumper X-Flow                         Flash
    910, // ID 1152, Front Bumper X-Flow                        Flash
    1200, // ID 1153, Front Bumper Alien                        Flash
    1030, // ID 1154, Rear Bumper Alien                         Stratum
    1030, // ID 1155, Front Bumper Alien                        Stratum
    920, // ID 1156, Rear Bumper X-Flow                         Stratum
    930, // ID 1157, Front Bumper X-Flow                        Stratum
    550, // ID 1158, Spoiler X-Flow                             Jester
    1050, // ID 1159, Rear Bumper Alien                         Jester
    1050, // ID 1160, Front Bumper Alien                        Jester
    950, // ID 1161, Rear Bumper X-Flow                         Jester
    650, // ID 1162, Spoiler Alien                              Jester
    450, // ID 1163, Spoiler X-Flow                             Uranus
    550, // ID 1164, Spoiler Alien                              Uranus
    850, // ID 1165, Front Bumper X-Flow                        Uranus
    950, // ID 1166, Front Bumper Alien                         Uranus
    850, // ID 1167, Rear Bumper X-Flow                         Uranus
    950, // ID 1168, Rear Bumper Alien                          Uranus
    970, // ID 1169, Front Bumper Alien                         Sultan
    880, // ID 1170, Front Bumper X-Flow                        Sultan
    990, // ID 1171, Front Bumper Alien                         Elegy
    900, // ID 1172, Front Bumper X-Flow                        Elegy
    950, // ID 1173, Front Bumper X-Flow                        Jester
    1000, // ID 1174, Front Bumper Chrome                       Broadway
    900, // ID 1175, Front Bumper Slamin                        Broadway
    1000, // ID 1176, Rear Bumper Chrome                        Broadway
    900, // ID 1177, Rear Bumper Slamin                         Broadway
    2050, // ID 1178, Rear Bumper Slamin                        Remington
    2150, // ID 1179, Front Bumper Chrome                       Remington
    2130, // ID 1180, Rear Bumper Chrome                        Remington
    2050, // ID 1181, Front Bumper Slamin                       Blade
    2130, // ID 1182, Front Bumper Chrome                       Blade
    2040, // ID 1183, Rear Bumper Slamin                        Blade
    2150, // ID 1184, Rear Bumper Chrome                        Blade
    2040, // ID 1185, Front Bumper Slamin                       Remington
    2095, // ID 1186, Rear Bumper Slamin                        Savanna
    2175, // ID 1187, Rear Bumper Chrome                        Savanna
    2080, // ID 1188, Front Bumper Slamin                       Savanna
    2200, // ID 1189, Front Bumper Chrome                       Savanna
    1200, // ID 1190, Front Bumper Slamin                       Tornado
    1040, // ID 1191, Front Bumper Chrome                       Tornado
    940, // ID 1192, Rear Bumper Chrome                         Tornado
    1100, // ID 1193 Rear Bumper Slamin                         Tornado
};

new Float:CopSpawns[3][4] =
{
	{2268.0537,2445.0354,3.2734,181.3522},
	{2268.1650,2444.9575,-7.4531,180.5292},
	{2293.4761,2451.6462,10.8203,88.6331}
};

new Float:CIASpawns[2][4] =
{
	{941.1046,1736.1487,8.8516,270.8704},
	{941.1307,1730.2427,8.8516,269.5543}
};

new Float:FBISpawns[2][4] =
{
	{2487.7542,2397.2356,10.8203,90.4967},
	{2487.7480,2397.2407,4.2109,88.0134}
};

new Float:ArmySpawns[3][4] =
{
	{285.4526,2035.0264,17.6406,178.6992},
	{285.6859,2000.1420,17.6406,178.6993},
	{285.4151,1966.1923,17.6406,177.3832}
};

new Float:CivSpawns[4][4] =
{
	{2325.8777,2337.3208,10.8203,5.6401},
	{2106.3457,2199.4788,10.8203,269.2403},
	{2198.7742,1968.1080,10.8203,91.4318},
	{2124.3691,1454.2067,10.8203,180.0200}
};

new Float:MedicSpawns[2][4] =
{
	{1614.6974,1817.9830,10.8203,0.7182},
	{1599.6218,1818.3469,10.8203,1.1569}
};

new ACNR_Elvis_Mainchat_Messages[][] =
{
    "Elvis: baraye gozareshe chizi be admin ha mitavanid az /bug /askadmin /report estefade konid.",
    "Elvis: baraye mamor ghanon shodan aval bayad az daneshgah Madrak bekhardi sepas class anhara entekhab konid",
    "Elvis: dar bazi khane ha va bissines haye faravani pakhsh shode ke mitavanid anha ra bekharid.",
    "Elvis: baraye kharid mashin mitavanid be foroshgah ke kenar bimarestan gharar darad beravid.",
    "Elvis: agar dar makane khasi mikhahid khane ya maghazei dashte bashid be owner begid baraye shoma dar anja khane ezafe konad.",
    "Elvis: agar komak khasti az /help va /faqs, va /(n)ew ya /askadmin baraye komak gereftan estefade kon.",
    "Elvis: Salam, man BOT ACNR hastam, mitonid mano dar meydan asli peyda konid.",
    "Elvis: Dar Anjoman/site ma sabtenam kardi? Forum/site: just-samp.rozblog.com",
    "Elvis: baraye kharid admini/vip va... be site/anjoman morajee konid",
    "Elvis: Tavajo agar ban shavid tamam bissines ha va khane ha va mashin haye shoma hazf mishavand :|.",
    "Elvis: Welcome to Nigh Life Cops And Robbers (Dozd va Police) [ ACNR ] v2.2.2.",
    "Elvis: lotfan /rules /pc va /faqs ra kamel bekhanid, ta dar bazi barayetan moshkeli pish nayayad.",
    "Elvis: agar moshkeli dar server didid hatman be adminha gozaresh dahid",
    "Elvis: agar yek cheater/hacker didid hatman on ro ba /report [id] [report] gozaresh konid",
    "Elvis: Mitavanid baraye rahat peyda kardan makan haye mohem az /gps estefade konid",
    "Elvis: Tavajo hatman ghabl az khoroj az server cmd /savestats ra bezanid ta moshakhasate shoma zakhire shavad."
};

enum MainCity
{
City_Name[28],
Float:City_Area[6]
};

static const SACities[][MainCity] = {

	{"Los Santos",    {44.60,-2892.90,-242.90,2997.00,-768.00,900.00}},
	{"Las Venturas",  {869.40,596.30,-242.90,2997.00,2993.80,900.00}},
	{"Bone County",   {-480.50,596.30,-242.90,869.40,2993.80,900.00}},
	{"Tierra Robada", {-2997.40,1659.60,-242.90,-480.50,2993.80,900.00}},
	{"Tierra Robada", {-1213.90,596.30,-242.90,-480.50,1659.60,900.00}},
	{"San Fierro",    {-2997.40,-1115.50,-242.90,-1213.90,1659.60,900.00}},
	{"Red County",    {-1213.90,-768.00,-242.90,2997.00,596.30,900.00}},
	{"Flint County",  {-1213.90,-2892.90,-242.90,44.60,-768.00,900.00}},
	{"Whetstone",     {-2997.40,-2892.90,-242.90,-1213.90,-1115.50,900.00}}
};

stock GetPlayerCity(playerid, zone[], len)
{
	new Float:pox, Float:poy, Float:poz;
	GetPlayerPos(playerid, pox, poy, poz);
 	for(new i = 0; i != sizeof(SACities); i++ )
    {
	    if(pox >= SACities[i][City_Area][0] && pox <= SACities[i][City_Area][3] && poy >= SACities[i][City_Area][1] && poy <= SACities[i][City_Area][4])
	    {
	        return format(zone, len, "%s", SACities[i][City_Name]);
	    }
	}
	return 1;
}

stock buildingremoveformap(playerid)
{
RemoveBuildingForPlayer(playerid, 8513, 1927.3906, 703.2266, 14.0781, 0.25);
RemoveBuildingForPlayer(playerid, 8820, 1927.3906, 703.2266, 14.0781, 0.25);
RemoveBuildingForPlayer(playerid, 8969, 2071.6250, 702.8906, 22.0078, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1960.7656, 643.8906, 9.7422, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1975.4453, 644.5469, 9.7422, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1959.9922, 647.8672, 10.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1959.9922, 658.3516, 10.2266, 0.25);
RemoveBuildingForPlayer(playerid, 8887, 1967.5547, 653.0781, 10.4688, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1974.8672, 647.8672, 10.2266, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1974.8672, 658.3516, 10.2266, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1967.7344, 653.0703, 19.3438, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 1878.6484, 683.7734, 10.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 1881.3828, 683.7734, 10.6250, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1879.0547, 698.9141, 10.7109, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1879.0547, 710.3359, 10.7109, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1917.7109, 683.2656, 12.4609, 0.25);
RemoveBuildingForPlayer(playerid, 1343, 1885.4844, 683.7500, 10.5625, 0.25);
RemoveBuildingForPlayer(playerid, 628, 1905.0859, 703.2969, 11.8125, 0.25);
RemoveBuildingForPlayer(playerid, 627, 1908.9297, 703.1328, 11.9297, 0.25);
RemoveBuildingForPlayer(playerid, 8841, 1924.8203, 703.2188, 13.1484, 0.25);
RemoveBuildingForPlayer(playerid, 627, 1923.8438, 703.1328, 11.9297, 0.25);
RemoveBuildingForPlayer(playerid, 627, 1925.4609, 703.1328, 11.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1937.2969, 683.2656, 12.4609, 0.25);
RemoveBuildingForPlayer(playerid, 627, 1938.6563, 703.1328, 11.9297, 0.25);
RemoveBuildingForPlayer(playerid, 627, 1940.2031, 703.1328, 11.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 1969.9453, 693.7422, 10.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1343, 1976.6797, 693.7109, 10.5625, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1978.2031, 698.9141, 10.7109, 0.25);
RemoveBuildingForPlayer(playerid, 1343, 1969.2109, 712.7344, 10.5625, 0.25);
RemoveBuildingForPlayer(playerid, 644, 1945.9766, 703.2031, 10.1250, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 1975.6953, 712.7031, 10.6250, 0.25);
RemoveBuildingForPlayer(playerid, 625, 1978.2031, 710.0156, 10.7109, 0.25);
RemoveBuildingForPlayer(playerid, 1294, 1871.6875, 717.3828, 14.2500, 0.25);
RemoveBuildingForPlayer(playerid, 632, 1896.0703, 717.8984, 10.2734, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 1884.8359, 722.7031, 10.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 1882.1016, 722.7031, 10.6250, 0.25);
RemoveBuildingForPlayer(playerid, 1343, 1877.8828, 722.7344, 10.5625, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1937.3594, 723.0859, 12.4609, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 1917.4219, 723.0859, 12.4609, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1959.9922, 747.9375, 10.2266, 0.25);
RemoveBuildingForPlayer(playerid, 8888, 1967.5547, 753.2656, 10.4688, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1974.8672, 747.9375, 10.2266, 0.25);
RemoveBuildingForPlayer(playerid, 712, 1967.7344, 753.0078, 19.3438, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1959.9922, 758.4219, 10.2266, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1960.7656, 761.8281, 9.7422, 0.25);
RemoveBuildingForPlayer(playerid, 1280, 1974.8672, 758.4219, 10.2266, 0.25);
RemoveBuildingForPlayer(playerid, 620, 1976.8125, 760.9453, 9.7422, 0.25);
RemoveBuildingForPlayer(playerid, 10499, -2655.7422, -140.3359, 3.0859, 0.25);
RemoveBuildingForPlayer(playerid, 3831, -2682.3047, -187.8828, 7.8672, 0.25);
RemoveBuildingForPlayer(playerid, 3832, -2684.3281, -177.8594, 8.1406, 0.25);
RemoveBuildingForPlayer(playerid, 3833, -2685.2422, -167.8594, 8.0000, 0.25);
RemoveBuildingForPlayer(playerid, 3837, -2684.6719, -158.5781, 6.4609, 0.25);
RemoveBuildingForPlayer(playerid, 3836, -2685.2969, -150.0000, 8.0313, 0.25);
RemoveBuildingForPlayer(playerid, 3839, -2685.2422, -140.7266, 6.8906, 0.25);
RemoveBuildingForPlayer(playerid, 3838, -2685.4922, -130.7500, 7.7188, 0.25);
RemoveBuildingForPlayer(playerid, 3840, -2684.3281, -120.7500, 8.1406, 0.25);
RemoveBuildingForPlayer(playerid, 3841, -2685.7578, -111.4453, 8.0313, 0.25);
RemoveBuildingForPlayer(playerid, 3835, -2683.6875, -102.1719, 6.6172, 0.25);
RemoveBuildingForPlayer(playerid, 3834, -2682.1563, -92.1719, 9.8672, 0.25);
RemoveBuildingForPlayer(playerid, 3831, -2627.9453, -99.6172, 7.8672, 0.25);
RemoveBuildingForPlayer(playerid, 3832, -2625.9219, -109.6406, 8.1406, 0.25);
RemoveBuildingForPlayer(playerid, 3833, -2625.0078, -119.6406, 8.0000, 0.25);
RemoveBuildingForPlayer(playerid, 3837, -2625.5781, -128.9141, 6.4609, 0.25);
RemoveBuildingForPlayer(playerid, 3839, -2625.0078, -146.7734, 6.8906, 0.25);
RemoveBuildingForPlayer(playerid, 3838, -2624.7578, -156.7422, 7.7188, 0.25);
RemoveBuildingForPlayer(playerid, 3832, -2625.9219, -166.7500, 8.1406, 0.25);
RemoveBuildingForPlayer(playerid, 3841, -2624.4922, -176.0469, 8.0313, 0.25);
RemoveBuildingForPlayer(playerid, 3835, -2626.5625, -185.3281, 6.6172, 0.25);
RemoveBuildingForPlayer(playerid, 3834, -2628.0938, -195.3281, 9.8672, 0.25);
RemoveBuildingForPlayer(playerid, 3836, -2624.9531, -137.4922, 8.0313, 0.25);
RemoveBuildingForPlayer(playerid, 10593, -2677.7188, -107.6641, 5.0313, 0.25);
RemoveBuildingForPlayer(playerid, 10594, -2677.7266, -167.6406, 4.4219, 0.25);
RemoveBuildingForPlayer(playerid, 10595, -2633.1172, -167.8984, 4.4219, 0.25);
RemoveBuildingForPlayer(playerid, 10596, -2633.1641, -107.8984, 4.4219, 0.25);
RemoveBuildingForPlayer(playerid, 10698, -2676.3828, -105.1016, 11.6406, 0.25);
RemoveBuildingForPlayer(playerid, 10707, -2585.7344, -140.3359, 19.0469, 0.25);
RemoveBuildingForPlayer(playerid, 10739, -2679.8516, -183.0078, 12.0234, 0.25);
RemoveBuildingForPlayer(playerid, 703, -2769.8438, -192.5391, 5.9531, 0.25);
RemoveBuildingForPlayer(playerid, 737, -2700.4063, -168.7344, 3.4297, 0.25);
RemoveBuildingForPlayer(playerid, 1308, -2696.7578, -174.1250, 3.6406, 0.25);
RemoveBuildingForPlayer(playerid, 673, -2693.2109, -195.8750, 3.2344, 0.25);
RemoveBuildingForPlayer(playerid, 3821, -2684.3281, -177.8594, 8.1406, 0.25);
RemoveBuildingForPlayer(playerid, 3822, -2685.2422, -167.8594, 8.0000, 0.25);
RemoveBuildingForPlayer(playerid, 3828, -2684.6719, -158.5781, 6.4609, 0.25);
RemoveBuildingForPlayer(playerid, 737, -2679.9141, -204.1719, 3.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3820, -2682.3047, -187.8828, 7.8672, 0.25);
RemoveBuildingForPlayer(playerid, 10415, -2677.7266, -167.6406, 4.4219, 0.25);
RemoveBuildingForPlayer(playerid, 669, -2665.3438, -188.8516, 3.4844, 0.25);
RemoveBuildingForPlayer(playerid, 1227, -2658.9766, -168.8984, 3.9844, 0.25);
RemoveBuildingForPlayer(playerid, 1227, -2657.9297, -189.0703, 3.9844, 0.25);
RemoveBuildingForPlayer(playerid, 673, -2659.8828, -183.1250, 3.0703, 0.25);
RemoveBuildingForPlayer(playerid, 1308, -2658.4531, -198.7969, 3.2500, 0.25);
RemoveBuildingForPlayer(playerid, 1227, -2652.7891, -188.2891, 3.9844, 0.25);
RemoveBuildingForPlayer(playerid, 1227, -2653.3828, -167.3984, 3.9844, 0.25);
RemoveBuildingForPlayer(playerid, 1308, -2652.5625, -177.2188, 3.2500, 0.25);
RemoveBuildingForPlayer(playerid, 673, -2645.0469, -176.9063, 3.3828, 0.25);
RemoveBuildingForPlayer(playerid, 10416, -2633.1172, -167.8984, 4.4219, 0.25);
RemoveBuildingForPlayer(playerid, 3823, -2628.0938, -195.3281, 9.8672, 0.25);
RemoveBuildingForPlayer(playerid, 3827, -2624.7578, -156.7422, 7.7188, 0.25);
RemoveBuildingForPlayer(playerid, 3821, -2625.9219, -166.7500, 8.1406, 0.25);
RemoveBuildingForPlayer(playerid, 3825, -2624.4922, -176.0469, 8.0313, 0.25);
RemoveBuildingForPlayer(playerid, 3824, -2626.5625, -185.3281, 6.6172, 0.25);
RemoveBuildingForPlayer(playerid, 737, -2711.7500, -141.8281, 3.4297, 0.25);
RemoveBuildingForPlayer(playerid, 3830, -2685.2969, -150.0000, 8.0313, 0.25);
RemoveBuildingForPlayer(playerid, 3829, -2685.2422, -140.7266, 6.8906, 0.25);
RemoveBuildingForPlayer(playerid, 3827, -2685.4922, -130.7500, 7.7188, 0.25);
RemoveBuildingForPlayer(playerid, 669, -2668.7344, -149.8594, 2.1953, 0.25);
RemoveBuildingForPlayer(playerid, 1227, -2659.2734, -125.2031, 3.9844, 0.25);
RemoveBuildingForPlayer(playerid, 673, -2663.1250, -140.6328, 3.0703, 0.25);
RemoveBuildingForPlayer(playerid, 1308, -2659.0469, -128.0625, 3.2500, 0.25);
RemoveBuildingForPlayer(playerid, 10371, -2655.7422, -140.3359, 3.0859, 0.25);
RemoveBuildingForPlayer(playerid, 1308, -2653.0000, -151.9531, 3.2500, 0.25);
RemoveBuildingForPlayer(playerid, 3828, -2625.5781, -128.9141, 6.4609, 0.25);
RemoveBuildingForPlayer(playerid, 3829, -2625.0078, -146.7734, 6.8906, 0.25);
RemoveBuildingForPlayer(playerid, 3830, -2624.9531, -137.4922, 8.0313, 0.25);
RemoveBuildingForPlayer(playerid, 1308, -2696.6719, -116.8906, 3.6406, 0.25);
RemoveBuildingForPlayer(playerid, 673, -2662.8047, -110.8594, 2.7031, 0.25);
RemoveBuildingForPlayer(playerid, 3826, -2684.3281, -120.7500, 8.1406, 0.25);
RemoveBuildingForPlayer(playerid, 3825, -2685.7578, -111.4453, 8.0313, 0.25);
RemoveBuildingForPlayer(playerid, 1227, -2653.6797, -124.7422, 3.9844, 0.25);
RemoveBuildingForPlayer(playerid, 673, -2645.4844, -121.8984, 3.3828, 0.25);
RemoveBuildingForPlayer(playerid, 673, -2648.7266, -118.8906, 3.3828, 0.25);
RemoveBuildingForPlayer(playerid, 3822, -2625.0078, -119.6406, 8.0000, 0.25);
RemoveBuildingForPlayer(playerid, 737, -2700.0156, -103.2578, 3.4297, 0.25);
RemoveBuildingForPlayer(playerid, 10564, -2677.7188, -107.6641, 5.0313, 0.25);
RemoveBuildingForPlayer(playerid, 3821, -2625.9219, -109.6406, 8.1406, 0.25);
RemoveBuildingForPlayer(playerid, 10563, -2633.1641, -107.8984, 4.4219, 0.25);
RemoveBuildingForPlayer(playerid, 1308, -2652.4453, -105.2188, 3.2500, 0.25);
RemoveBuildingForPlayer(playerid, 3824, -2683.6875, -102.1719, 6.6172, 0.25);
RemoveBuildingForPlayer(playerid, 1308, -2613.4141, -100.4531, 3.6406, 0.25);
RemoveBuildingForPlayer(playerid, 3820, -2627.9453, -99.6172, 7.8672, 0.25);
RemoveBuildingForPlayer(playerid, 3823, -2682.1563, -92.1719, 9.8672, 0.25);
RemoveBuildingForPlayer(playerid, 673, -2669.2266, -87.5391, 1.1172, 0.25);
RemoveBuildingForPlayer(playerid, 1227, -2658.3125, -89.6172, 3.9844, 0.25);
RemoveBuildingForPlayer(playerid, 1308, -2651.6016, -81.4531, 3.2500, 0.25);
RemoveBuildingForPlayer(playerid, 703, -2646.2578, -86.4297, 3.1016, 0.25);
RemoveBuildingForPlayer(playerid, 669, -2618.7031, -91.6094, 3.4844, 0.25);
RemoveBuildingForPlayer(playerid, 669, -2616.4922, -83.6953, 3.4844, 0.25);
RemoveBuildingForPlayer(playerid, 8544, 2844.2500, 874.7188, 15.4453, 0.25);
RemoveBuildingForPlayer(playerid, 8549, 2836.0938, 928.2813, 11.3672, 0.25);
RemoveBuildingForPlayer(playerid, 8737, 2814.3438, 993.8438, 13.1406, 0.25);
RemoveBuildingForPlayer(playerid, 8738, 2867.9766, 976.5078, 14.7422, 0.25);
RemoveBuildingForPlayer(playerid, 8739, 2844.2500, 874.7188, 15.4453, 0.25);
RemoveBuildingForPlayer(playerid, 8960, 2787.0000, 953.4375, 13.2500, 0.25);
RemoveBuildingForPlayer(playerid, 8961, 2797.6250, 885.4531, 13.2500, 0.25);
RemoveBuildingForPlayer(playerid, 8962, 2797.6250, 865.4063, 13.2500, 0.25);
RemoveBuildingForPlayer(playerid, 8963, 2885.5313, 919.2266, 13.2500, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2806.2109, 838.6094, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2866.0313, 838.6094, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1365, 2801.0703, 858.1016, 10.8516, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2782.6641, 851.7656, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1358, 2808.7969, 857.2031, 10.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1343, 2821.8750, 858.1875, 10.4844, 0.25);
RemoveBuildingForPlayer(playerid, 1365, 2848.4844, 857.1797, 10.8516, 0.25);
RemoveBuildingForPlayer(playerid, 1343, 2836.9531, 858.1953, 10.4844, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 2879.0859, 858.1563, 10.5391, 0.25);
RemoveBuildingForPlayer(playerid, 1358, 2863.7891, 857.2031, 10.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2889.7344, 851.7656, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2782.6641, 899.2813, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2800.9453, 879.3047, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2800.9453, 876.6406, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 8886, 2797.6250, 865.4063, 13.2500, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2806.6094, 892.3828, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 8885, 2797.6250, 885.4531, 13.2500, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2887.3047, 871.9141, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2887.3047, 874.5781, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2889.6172, 895.2109, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2782.6641, 929.2969, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 3458, 2818.4609, 928.6484, 11.2422, 0.25);
RemoveBuildingForPlayer(playerid, 8883, 2885.5313, 919.2266, 13.2500, 0.25);
RemoveBuildingForPlayer(playerid, 8884, 2787.0000, 953.4375, 13.2500, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 2801.9219, 933.8281, 12.7109, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 2812.2266, 933.8281, 12.7109, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 2823.4609, 933.8281, 12.7109, 0.25);
RemoveBuildingForPlayer(playerid, 3458, 2818.4609, 938.7188, 11.2422, 0.25);
RemoveBuildingForPlayer(playerid, 1231, 2834.5078, 933.8281, 12.7109, 0.25);
RemoveBuildingForPlayer(playerid, 1365, 2849.5391, 945.0156, 10.7813, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2858.2734, 944.9766, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 1343, 2863.4688, 946.0156, 10.4844, 0.25);
RemoveBuildingForPlayer(playerid, 1344, 2879.6484, 945.9688, 10.5391, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2889.7266, 943.2656, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2782.6641, 986.6719, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1358, 2796.8438, 977.6953, 10.8047, 0.25);
RemoveBuildingForPlayer(playerid, 1365, 2796.6016, 984.8203, 10.7813, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2796.5469, 996.7578, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2796.5469, 1000.3516, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2806.2109, 1017.9375, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 8546, 2814.3438, 993.8438, 13.1406, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2844.0000, 967.4063, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2844.0000, 964.7422, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2846.4688, 986.8516, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 1219, 2846.4688, 980.0391, 9.9766, 0.25);
RemoveBuildingForPlayer(playerid, 8545, 2867.9766, 976.5078, 14.7422, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2866.0313, 1017.9375, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 1278, 2889.7266, 986.6719, 23.9297, 0.25);
RemoveBuildingForPlayer(playerid, 11223, -2049.1719, 250.3203, 33.0781, 0.25);
RemoveBuildingForPlayer(playerid, 11226, -2049.1719, 250.3203, 29.3750, 0.25);
RemoveBuildingForPlayer(playerid, 1264, -1980.9141, 149.5625, 27.0391, 0.25);
RemoveBuildingForPlayer(playerid, 1264, -1980.9141, 148.0781, 27.0391, 0.25);
RemoveBuildingForPlayer(playerid, 1264, -1981.4375, 148.9219, 27.0391, 0.25);
RemoveBuildingForPlayer(playerid, 955, -1980.7891, 142.6641, 27.0703, 0.25);
RemoveBuildingForPlayer(playerid, 11391, -2056.2031, 158.5469, 29.0938, 0.25);
RemoveBuildingForPlayer(playerid, 11388, -2048.1797, 166.7188, 34.5156, 0.25);
RemoveBuildingForPlayer(playerid, 11389, -2048.1172, 166.7188, 30.9766, 0.25);
RemoveBuildingForPlayer(playerid, 11390, -2048.1797, 166.7188, 32.2266, 0.25);
RemoveBuildingForPlayer(playerid, 11392, -2047.7578, 168.1406, 27.8828, 0.25);
RemoveBuildingForPlayer(playerid, 11394, -2048.1641, 168.3125, 31.7344, 0.25);
RemoveBuildingForPlayer(playerid, 11393, -2043.5156, 161.3438, 29.3359, 0.25);
RemoveBuildingForPlayer(playerid, 11416, -2038.9297, 178.8047, 29.9375, 0.25);
}

stock kenararmyremove(playerid)
{
RemoveBuildingForPlayer(playerid, 3682, 247.9297, 1461.8594, 33.4141, 0.25);
RemoveBuildingForPlayer(playerid, 3682, 192.2734, 1456.1250, 33.4141, 0.25);
RemoveBuildingForPlayer(playerid, 3682, 199.7578, 1397.8828, 33.4141, 0.25);
RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1356.9922, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1356.9922, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1392.1563, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1392.1563, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1426.9141, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1426.9141, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3288, 221.5703, 1374.9688, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3289, 212.0781, 1426.0313, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3290, 218.2578, 1467.5391, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1435.1953, 9.6875, 0.25);
RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1410.5391, 9.6875, 0.25);
RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1385.8906, 9.6875, 0.25);
RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1361.2422, 9.6875, 0.25);
RemoveBuildingForPlayer(playerid, 3290, 190.9141, 1371.7734, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3289, 183.7422, 1444.8672, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3289, 222.5078, 1444.6953, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3289, 221.1797, 1390.2969, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3288, 223.1797, 1421.1875, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1459.6406, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3289, 207.5391, 1371.2422, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3424, 220.6484, 1355.1875, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3424, 221.7031, 1404.5078, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3424, 210.4141, 1444.8438, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3424, 262.5078, 1465.2031, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3259, 220.6484, 1355.1875, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1356.9922, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1356.9922, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3256, 190.9141, 1371.7734, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1392.1563, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1392.1563, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3258, 207.5391, 1371.2422, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 10.1172, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1392.1563, 16.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 23.7813, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1390.5703, 19.1484, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1387.8516, 27.4922, 0.25);
RemoveBuildingForPlayer(playerid, 3673, 199.7578, 1397.8828, 33.4141, 0.25);
RemoveBuildingForPlayer(playerid, 3257, 221.5703, 1374.9688, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3258, 221.1797, 1390.2969, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 203.9531, 1409.9141, 16.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3674, 199.3828, 1407.1172, 35.8984, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 204.6406, 1409.8516, 11.4063, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1404.2344, 18.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1400.6563, 22.4688, 0.25);
RemoveBuildingForPlayer(playerid, 3259, 221.7031, 1404.5078, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1409.0000, 19.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3257, 223.1797, 1421.1875, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3258, 212.0781, 1426.0313, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1426.9141, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1426.9141, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1361.2422, 9.6875, 0.25);
RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1385.8906, 9.6875, 0.25);
RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1410.5391, 9.6875, 0.25);
RemoveBuildingForPlayer(playerid, 3258, 183.7422, 1444.8672, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3259, 210.4141, 1444.8438, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3258, 222.5078, 1444.6953, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 16086, 232.2891, 1434.4844, 13.5000, 0.25);
RemoveBuildingForPlayer(playerid, 3673, 192.2734, 1456.1250, 33.4141, 0.25);
RemoveBuildingForPlayer(playerid, 3674, 183.0391, 1455.7500, 35.8984, 0.25);
RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1459.6406, 17.0938, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 10.1172, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 198.0000, 1462.0156, 16.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 23.7813, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 180.2422, 1460.3203, 16.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 180.3047, 1461.0078, 11.4063, 0.25);
RemoveBuildingForPlayer(playerid, 3256, 218.2578, 1467.5391, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 199.5859, 1463.7266, 19.1484, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 181.1563, 1463.7266, 19.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 185.9219, 1462.8750, 18.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 202.3047, 1462.8750, 27.4922, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 189.5000, 1462.8750, 22.4688, 0.25);
RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1435.1953, 9.6875, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1451.8281, 27.4922, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 23.7813, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1454.5469, 19.1484, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1456.1328, 16.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 10.1172, 0.25);
RemoveBuildingForPlayer(playerid, 3259, 262.5078, 1465.2031, 9.5859, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1468.2109, 18.2969, 0.25);
RemoveBuildingForPlayer(playerid, 3673, 247.9297, 1461.8594, 33.4141, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1464.6328, 22.4688, 0.25);
RemoveBuildingForPlayer(playerid, 3674, 247.5547, 1471.0938, 35.8984, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1472.9766, 19.7578, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 252.8125, 1473.8281, 11.4063, 0.25);
RemoveBuildingForPlayer(playerid, 3675, 252.1250, 1473.8906, 16.2969, 0.25);
}

stock kenararmy()
{
CreateDynamicObject(8168, 284.53610, 1397.90820, 11.36328,   0.00000, 0.00000, 553.73895);
CreateDynamicObject(16091, 288.99637, 1411.68176, 9.97766,   356.85840, 0.00000, 3.14159);
CreateDynamicObject(19425, 287.72046, 1406.76233, 9.38120,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 287.71506, 1416.44116, 9.38120,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 287.71439, 1413.19543, 9.38120,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 287.74060, 1410.00330, 9.38120,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(4835, 182.66777, 1411.35840, 13.69385,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(4828, 191.1162, 1411.3789, 23.6814,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(4985, 247.67999, 1410.83411, 6.11392,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(4985, 110.23038, 1412.71228, 13.19891,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18650, 287.72049, 1406.76233, 9.38120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18650, 287.74060, 1410.00330, 9.38120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18650, 287.71439, 1413.19543, 9.38120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18650, 287.71509, 1416.44116, 9.38120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18846, 190.94087, 1411.36853, 115.44773,   0.00000, 0.00000, 0.00000);
}

stock objectcreation()
{
CreateDynamicObject(11394, -2048.16406, 168.31250, 31.73438,   0, 0.00000, 0);
CreateDynamicObject(11392, -2047.75781, 168.14063, 27.88281,   0, 0.00000, 0);
CreateDynamicObject(11393, -2043.51563, 161.34375, 29.33594,   0, 0.00000, 0);
CreateDynamicObject(11390, -2048.17969, 166.71875, 32.22656,   0, 0.00000, 0);
CreateDynamicObject(11389, -2048.11719, 166.71875, 30.97656,   0, 0.00000, 0);
CreateDynamicObject(11391, -2056.20313, 158.54688, 29.09375,   0, 0.00000, 0);
CreateDynamicObject(11388, -2048.17969, 166.71875, 34.51563,   0, 0.00000, 0);
CreateDynamicObject(1622, 2865.42822, 2040.88489, 22.13656,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8042, -1980.38586, 186.26402, 32.55489,   0.00000, 0.00000, 196.99658);
CreateDynamicObject(1374, -1980.14502, 177.70044, 27.90055,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1374, -1980.16492, 194.52893, 28.02067,   0.00000, 0.00000, 183.99902);
CreateDynamicObject(1232, -1995.35413, 165.32040, 29.32414,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, -1995.29065, 174.68069, 29.32414,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, -1995.25000, 152.15355, 29.31651,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, -1995.51331, 140.05833, 29.31651,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, -1995.48315, 125.83853, 29.32414,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, -2001.31250, 122.41602, 29.17570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, -2001.32031, 131.67484, 29.17570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, -2001.31348, 143.09961, 29.17570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, -2001.39233, 155.10510, 29.17570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, -2001.41895, 167.48047, 29.17570,   0.00000, 0.00000, 358.00000);
CreateDynamicObject(1686, -2026.00281, 158.73140, 28.03906,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1686, -2025.96680, 154.63184, 28.03906,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1686, -2027.12170, 158.73819, 28.03906,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1686, -2027.16956, 154.78746, 28.03906,   0.00000, 0.00000, 179.99451);
CreateDynamicObject(3660, -2000.09912, 166.59613, 29.34057,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3660, -2000.09656, 147.17715, 29.34057,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3660, -2000.05286, 130.16141, 29.33293,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3660, -1996.21875, 130.16840, 29.34057,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3660, -1996.18567, 149.61073, 29.33293,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3660, -1996.18945, 166.53784, 29.34057,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1364, -1981.13989, 164.33208, 27.47162,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(3806, -1998.36572, 119.95146, 26.96061,   0.00000, 0.00000, 269.99951);
CreateDynamicObject(3806, -1998.48340, 176.78320, 27.01062,   0.00000, 0.00000, 87.99500);
CreateDynamicObject(11674, -1991.36621, 212.81152, 26.67986,   0.00000, 0.00000, 37.99622);
CreateDynamicObject(1223, -2097.84277, 233.16040, 34.04072,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, -2098.17212, 278.59647, 34.01521,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1290, -2040.34180, 208.62546, 41.41370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1500, -1988.62561, 207.37593, 26.68768,   0.00000, 0.00000, 268.75000);
CreateDynamicObject(1500, -1988.61890, 207.32213, 26.68768,   0.00000, 0.00000, 92.74756);
CreateDynamicObject(983, -1980.30652, 172.43839, 27.22262,   0.00000, 0.00000, 0.50000);
CreateDynamicObject(983, -1980.32397, 174.04399, 27.22262,   0.00000, 0.00000, 0.49988);
CreateDynamicObject(983, -1980.54639, 199.04620, 27.22262,   0.00000, 0.00000, 0.49988);
CreateDynamicObject(983, -1980.60608, 203.03714, 27.22262,   0.00000, 0.00000, 0.49988);
CreateDynamicObject(983, -1977.29517, 206.31691, 27.19762,   4.00000, 0.00000, 89.99988);
CreateDynamicObject(983, -1971.58557, 206.33324, 26.77261,   3.99902, 0.00000, 89.99451);
CreateDynamicObject(983, -1965.23486, 206.30257, 26.29762,   3.99902, 0.00000, 89.74451);
CreateDynamicObject(983, -1963.60364, 206.28320, 26.19762,   4.49353, 0.00000, 89.74182);
CreateDynamicObject(983, -1960.42981, 203.02658, 25.97393,   0.00000, 0.00000, 358.49988);
CreateDynamicObject(983, -1960.52063, 196.68181, 25.97393,   0.00000, 0.00000, 359.49487);
CreateDynamicObject(983, -1960.56079, 191.88167, 26.04893,   357.00000, 0.00000, 359.49463);
CreateDynamicObject(983, -1960.62756, 185.51855, 26.44893,   355.99524, 0.00000, 359.48914);
CreateDynamicObject(983, -1960.67126, 179.14342, 26.87392,   355.98999, 0.00000, 359.48914);
CreateDynamicObject(983, -1960.71436, 172.47418, 27.32391,   356.23999, 0.00000, 359.48914);
CreateDynamicObject(983, -1960.72839, 174.06158, 27.22392,   356.23718, 0.00000, 359.48914);
CreateDynamicObject(983, -1960.77380, 167.70416, 27.44891,   358.48718, 0.00000, 359.48914);
CreateDynamicObject(1223, -1980.36475, 206.31165, 26.63475,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, -1980.51074, 206.28516, 26.68750,   0.00000, 0.00000, 76.00000);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 12.00000);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 17.99707);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 25.99561);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 37.99365);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 45.99072);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 51.98877);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 57.98730);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 63.98584);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 73.98438);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 81.98193);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 89.97998);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 97.97803);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 107.97607);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 115.97363);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 119.97171);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 127.97070);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 137.96875);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 145.96631);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 153.96436);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 161.96240);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 167.96045);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 169.95898);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 177.95850);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 185.95654);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 193.95459);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 201.95264);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 209.95070);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 215.94873);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 221.94727);
CreateDynamicObject(1223, -1981.80115, 169.23224, 26.68750,   0.00000, 0.00000, 223.94580);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 231.94534);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 235.94336);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 243.94240);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 251.94043);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 257.93848);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 263.93701);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 271.93555);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 277.93359);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 283.93213);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 291.93066);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 299.92871);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 307.92676);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 311.92480);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 315.92383);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 321.92285);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 327.92139);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 333.91992);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 341.91846);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 349.91650);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 357.91455);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 357.91260);
CreateDynamicObject(1223, -1980.36426, 206.31152, 26.63475,   0.00000, 0.00000, 223.94531);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 233.94534);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 247.94287);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 259.93942);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 275.93652);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 287.93262);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 307.92969);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 323.92480);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 339.92090);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 353.91699);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 17.91357);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 37.91321);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 51.90833);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 67.90491);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 83.90100);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 99.89709);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 113.89319);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 127.88977);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 139.88635);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 149.88342);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 159.88098);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 177.87854);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 171.87415);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 189.87012);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 207.86572);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 203.86133);
CreateDynamicObject(1223, -1981.80078, 169.23145, 26.68750,   0.00000, 0.00000, 219.85683);
CreateDynamicObject(1223, -1960.41418, 206.17059, 25.31166,   0.00000, 0.00000, 219.85291);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 231.85291);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 245.84998);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 259.84656);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 271.84314);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 283.84021);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 293.83728);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 305.83484);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 319.83191);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 325.82849);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 337.82703);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 349.82410);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 357.82117);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 11.81921);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 23.81580);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 37.81287);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 53.80945);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 71.80554);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 85.80115);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 97.79773);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 109.79480);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 119.79187);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 131.78943);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 145.78650);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 159.78308);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 171.77966);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 189.77673);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 205.77234);
CreateDynamicObject(1223, -1960.41406, 206.16992, 25.31166,   0.00000, 0.00000, 211.76843);
CreateDynamicObject(1223, -1960.72192, 170.83539, 26.68750,   0.00000, 0.00000, 275.76697);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 289.76233);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 305.75891);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 321.75500);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 333.75110);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 347.74817);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 357.74475);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 13.74231);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 23.73840);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 31.73596);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 43.73401);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 59.73108);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 71.72717);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 83.72424);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 99.72131);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 113.71741);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 127.71402);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 139.71057);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 153.70764);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 167.70422);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 179.70081);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 187.69788);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 199.69592);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 205.69301);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 215.69153);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 227.68910);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 241.68616);
CreateDynamicObject(1223, -1960.72168, 170.83496, 26.68750,   0.00000, 0.00000, 249.68275);
CreateDynamicObject(1215, -1998.05908, 207.37949, 31.72075,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -1997.35254, 207.12627, 31.72075,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -1997.09985, 207.83212, 31.72075,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -1997.79419, 208.46075, 31.72075,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -1998.59839, 208.24866, 31.72075,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -1986.05420, 207.36740, 31.72075,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -1984.40283, 207.28891, 31.72075,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -1985.09387, 206.65427, 31.72075,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -1985.10986, 207.75305, 31.72075,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1542.11023, -1622.94824, 12.83112,   0.00000, 0.00000, 359.38477);
CreateDynamicObject(970, 1538.09827, -1622.30615, 12.79348,   0.00000, 0.00000, 341.94196);
CreateDynamicObject(970, 1534.52441, -1611.74304, 12.81600,   0.00000, 0.00000, 265.00000);
CreateDynamicObject(970, 1535.31897, -1619.79565, 12.79692,   0.00000, 0.00000, 293.37061);
CreateDynamicObject(970, 1534.41699, -1615.85022, 12.80886,   0.00000, 0.00000, 271.97855);
CreateDynamicObject(970, 1534.65076, -1607.49451, 12.80552,   0.00000, 0.00000, 271.97855);
CreateDynamicObject(638, 1573.04895, -1622.27173, 13.10541,   0.00000, 0.00000, -88.02001);
CreateDynamicObject(638, 1572.96509, -1618.33350, 13.10541,   0.00000, 0.00000, -88.02001);
CreateDynamicObject(640, 1502.08777, -1741.62659, 13.02492,   0.00000, 0.00000, 90.30000);
CreateDynamicObject(640, 1496.70544, -1741.66174, 13.02492,   0.00000, 0.00000, 90.30000);
CreateDynamicObject(640, 1491.31714, -1741.66174, 13.02492,   0.00000, 0.00000, 90.30000);
CreateDynamicObject(640, 1470.54602, -1741.76392, 13.02492,   0.00000, 0.00000, 90.30000);
CreateDynamicObject(640, 1465.14624, -1741.77307, 13.02492,   0.00000, 0.00000, 90.30000);
CreateDynamicObject(640, 1459.78638, -1741.79651, 13.02492,   0.00000, 0.00000, 90.30000);
CreateDynamicObject(970, 1524.53540, -1716.21191, 13.00780,   0.00000, 0.00000, 89.87997);
CreateDynamicObject(970, 1524.53015, -1720.32385, 13.02770,   0.00000, 0.00000, 89.63998);
CreateDynamicObject(970, 1524.50854, -1712.07385, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.51599, -1708.00305, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.50879, -1703.87317, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.50745, -1699.72449, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.51807, -1695.57666, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.52722, -1691.48779, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.52820, -1687.33728, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.52209, -1683.16870, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.53455, -1679.02454, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.54578, -1674.90100, 12.98840,   0.00000, 0.00000, 89.99999);
CreateDynamicObject(970, 1524.54602, -1670.73267, 12.98860,   0.00000, 0.00000, 90.18001);
CreateDynamicObject(970, 1524.55066, -1666.59338, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.51953, -1662.43848, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.52356, -1658.34143, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.52783, -1654.23010, 12.98861,   0.00000, 0.00000, 89.45998);
CreateDynamicObject(970, 1524.53625, -1650.08020, 12.98861,   0.00000, 0.00000, 89.93998);
CreateDynamicObject(970, 1524.54211, -1645.92871, 12.98861,   0.00000, 0.00000, 90.05999);
CreateDynamicObject(970, 1524.50586, -1641.79456, 12.97112,   0.00000, 0.00000, 89.75999);
CreateDynamicObject(970, 1524.51318, -1637.62219, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.50696, -1633.52197, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.50330, -1629.35547, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.49805, -1625.20874, 12.98861,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.51086, -1621.03076, 12.98861,   0.00000, 0.00000, 89.81999);
CreateDynamicObject(970, 1524.50134, -1612.73462, 12.96870,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.52356, -1616.87549, 12.96870,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.50537, -1608.58240, 12.96870,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1524.49500, -1604.46899, 12.96870,   0.00000, 0.00000, 90.11999);
CreateDynamicObject(970, 1534.64075, -1641.08679, 12.98866,   0.00000, 0.00000, 89.99993);
CreateDynamicObject(970, 1534.63403, -1645.24316, 12.98866,   0.00000, 0.00000, 89.99993);
CreateDynamicObject(970, 1534.64966, -1649.36047, 12.98866,   0.00000, 0.00000, 89.99993);
CreateDynamicObject(970, 1534.65002, -1653.49915, 12.98866,   0.00000, 0.00000, 89.99993);
CreateDynamicObject(970, 1534.65771, -1657.61377, 12.98866,   0.00000, 0.00000, 89.99993);
CreateDynamicObject(970, 1534.67224, -1661.74622, 12.98866,   0.00000, 0.00000, 89.99993);
CreateDynamicObject(970, 1534.72339, -1683.83569, 12.98866,   0.00000, 0.00000, 89.99981);
CreateDynamicObject(970, 1534.71460, -1687.96851, 12.98866,   0.00000, 0.00000, 89.75979);
CreateDynamicObject(970, 1534.71887, -1692.08215, 12.98866,   0.00000, 0.00000, 90.47980);
CreateDynamicObject(970, 1534.73706, -1696.18298, 12.98866,   0.00000, 0.00000, 89.99980);
CreateDynamicObject(970, 1534.71643, -1700.27051, 12.98866,   0.00000, 0.00000, 89.63980);
CreateDynamicObject(970, 1534.70947, -1704.42249, 12.99432,   0.00000, 0.00000, 90.11981);
CreateDynamicObject(970, 1534.71106, -1708.56409, 12.99432,   0.00000, 0.00000, 90.11981);
CreateDynamicObject(970, 1534.70276, -1712.68750, 12.99432,   0.00000, 0.00000, 90.11981);
CreateDynamicObject(970, 1534.71875, -1716.85095, 12.99432,   0.00000, 0.00000, 90.11981);
CreateDynamicObject(970, 1534.73462, -1721.01221, 12.99432,   0.00000, 0.00000, 90.11981);
CreateDynamicObject(970, 1534.63049, -1636.91589, 12.80957,   0.00000, 0.00000, 89.99993);
CreateDynamicObject(970, 1536.79028, -1681.80237, 12.98866,   0.00000, 0.00000, 180.41960);
CreateDynamicObject(970, 1536.70349, -1663.78979, 12.98866,   0.00000, 0.00000, 361.01978);
CreateDynamicObject(970, 1538.78101, -1665.79211, 12.98866,   0.00000, 0.00000, 269.94019);
CreateDynamicObject(970, 1538.76831, -1669.90405, 12.98866,   0.00000, 0.00000, 269.76010);
CreateDynamicObject(970, 1538.78491, -1679.71729, 12.98866,   0.00000, 0.00000, 270.95953);
CreateDynamicObject(983, 1604.88062, -1602.52930, 16.47574,   0.00000, 0.00000, 90.78002);
CreateDynamicObject(983, 1546.12744, -1617.71191, 16.41414,   0.00000, 0.00000, 89.82004);
CreateDynamicObject(983, 1542.88672, -1617.69617, 16.43105,   0.00000, 0.00000, 90.54003);
CreateDynamicObject(983, 1604.66528, -1637.90112, 16.54974,   0.00000, 0.00000, 90.72002);
CreateDynamicObject(983, 1607.92834, -1634.55701, 16.59070,   0.00000, 0.00000, 178.91991);
CreateDynamicObject(984, 1539.64087, -1611.35828, 16.39256,   0.00000, 0.00000, 0.42001);
CreateDynamicObject(984, 1539.63330, -1608.80115, 16.38496,   0.00000, 0.00000, 0.42001);
CreateDynamicObject(984, 1545.99646, -1602.43567, 16.44917,   0.00000, 0.00000, 89.82000);
CreateDynamicObject(984, 1558.80286, -1602.48169, 16.45181,   0.00000, 0.00000, 89.82000);
CreateDynamicObject(984, 1571.62756, -1602.50903, 16.45190,   0.00000, 0.00000, 89.82000);
CreateDynamicObject(984, 1584.44861, -1602.54919, 16.45522,   0.00000, 0.00000, 89.82000);
CreateDynamicObject(984, 1597.29565, -1602.54749, 16.45378,   0.00000, 0.00000, 90.18003);
CreateDynamicObject(984, 1608.03052, -1608.87439, 16.44423,   0.00000, 0.00000, 179.82005);
CreateDynamicObject(984, 1607.99683, -1621.74377, 16.44228,   0.00000, 0.00000, 179.82005);
CreateDynamicObject(984, 1607.97632, -1629.79248, 16.46828,   0.00000, 0.00000, 179.82005);
CreateDynamicObject(984, 1556.09753, -1622.72192, 13.10905,   0.00000, 0.00000, 89.82000);
CreateDynamicObject(984, 1568.90515, -1622.76672, 13.10905,   0.00000, 0.00000, 89.82000);
CreateDynamicObject(984, 1568.82751, -1617.84790, 13.10905,   0.00000, 0.00000, 89.82000);
CreateDynamicObject(984, 1555.99255, -1617.80359, 13.10905,   0.00000, 0.00000, 89.82000);
CreateDynamicObject(984, 1527.28125, -1742.44995, 14.26578,   0.00000, 0.00000, 89.75999);
CreateDynamicObject(984, 1520.88831, -1742.43921, 14.26578,   0.00000, 0.00000, 89.75999);
CreateDynamicObject(984, 1508.11108, -1742.42053, 14.26578,   0.00000, 0.00000, 89.75999);
CreateDynamicObject(984, 1495.18079, -1742.35144, 14.26578,   0.00000, 0.00000, 89.75999);
CreateDynamicObject(984, 1504.54077, -1748.81592, 14.16752,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 1466.75720, -1742.47058, 14.26578,   0.00000, 0.00000, 89.75999);
CreateDynamicObject(984, 1453.96045, -1742.41211, 14.26578,   0.00000, 0.00000, 89.75999);
CreateDynamicObject(984, 1504.56335, -1761.61719, 14.16752,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 1450.75708, -1742.37756, 14.26704,   0.00000, 0.00000, 89.75999);
CreateDynamicObject(984, 1457.13147, -1748.86658, 14.16752,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(984, 1457.12207, -1761.65869, 14.16752,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(994, 1544.72229, -1638.96960, 12.07589,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1257, 1522.79871, -1629.17542, 13.68899,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1340, 1544.68994, -1697.78223, 13.67446,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1360, 1574.32788, -1620.33569, 13.10701,   0.00000, 0.00000, 179.12346);
CreateDynamicObject(1360, 1550.35083, -1620.34961, 13.08854,   0.00000, 0.00000, 179.12346);
CreateDynamicObject(1360, 1554.63330, -1620.28516, 13.10701,   0.00000, 0.00000, 179.12346);
CreateDynamicObject(1360, 1560.21631, -1620.39917, 13.10701,   0.00000, 0.00000, 179.12346);
CreateDynamicObject(1360, 1566.12866, -1620.02673, 13.10701,   0.00000, 0.00000, 179.12346);
CreateDynamicObject(1360, 1572.03247, -1620.46912, 13.10701,   0.00000, 0.00000, 179.12346);
CreateDynamicObject(1360, 1573.11816, -1620.39722, 13.10701,   0.00000, 0.00000, 179.12346);
CreateDynamicObject(1419, 1541.83679, -1609.47424, 12.92420,   0.00000, 0.00000, 88.95680);
CreateDynamicObject(1419, 1541.83679, -1606.75830, 12.92420,   0.00000, 0.00000, 88.95680);
CreateDynamicObject(1419, 1541.83679, -1613.53418, 12.92420,   0.00000, 0.00000, 88.95680);
CreateDynamicObject(1568, 1519.64868, -1732.28711, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1512.22522, -1732.28699, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1504.41443, -1732.29553, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1496.68640, -1732.33215, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1488.54211, -1732.23181, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1480.77246, -1732.27661, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1473.04456, -1732.23035, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1465.47705, -1732.28174, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1461.21680, -1732.27856, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1453.50964, -1732.26196, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1445.74634, -1732.25488, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1438.18799, -1732.28564, 12.42736,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1616, 1478.25195, -1772.03333, 21.68171,   0.00000, 0.00000, -106.85998);
CreateDynamicObject(1892, 1555.22607, -1676.11804, 15.21052,   0.00000, 0.00000, 89.70009);
CreateDynamicObject(2011, 1534.19519, -1742.63623, 13.75093,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2011, 1443.58252, -1742.42957, 13.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2614, 1481.06970, -1772.57495, 21.66954,   0.18000, -1.92000, -183.60014);
CreateDynamicObject(2745, 1484.80994, -1772.18066, 18.31669,   0.00000, 0.00000, 178.47246);
CreateDynamicObject(2745, 1477.36804, -1772.13855, 18.31669,   0.00000, 0.00000, 182.19252);
CreateDynamicObject(2755, 1487.82813, -1744.07727, 14.46684,   0.00000, 0.00000, 55.07998);
CreateDynamicObject(2755, 1473.69885, -1744.29358, 14.23226,   0.00000, 0.00000, -59.82002);
CreateDynamicObject(2773, 1487.53784, -1742.23877, 13.09060,   0.00000, 0.00000, 89.93998);
CreateDynamicObject(2773, 1485.19714, -1742.27466, 13.09060,   0.00000, 0.00000, 89.93998);
CreateDynamicObject(2773, 1481.01782, -1742.39233, 13.09060,   0.00000, 0.00000, 90.95995);
CreateDynamicObject(2773, 1476.68018, -1742.41138, 13.09060,   0.00000, 0.00000, 89.93998);
CreateDynamicObject(2773, 1474.37195, -1742.44763, 13.09060,   0.00000, 0.00000, 89.93998);
CreateDynamicObject(2773, 1483.95605, -1757.91064, 17.04157,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1478.50647, -1757.85620, 17.04157,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1484.17651, -1764.24377, 18.32409,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1484.17493, -1766.63611, 18.26797,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1478.03271, -1764.45984, 18.31701,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1484.16101, -1768.97009, 18.26797,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1478.05554, -1766.81702, 18.26797,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1484.16931, -1771.30640, 18.26797,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1478.06738, -1769.16577, 18.26797,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1478.07813, -1771.53418, 18.26797,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3471, 1489.39587, -1749.87610, 15.47205,   0.00000, 0.00000, 87.24384);
CreateDynamicObject(3471, 1483.89221, -1749.81238, 15.47205,   0.00000, 0.00000, 87.24384);
CreateDynamicObject(3471, 1478.51025, -1749.78162, 15.47205,   0.00000, 0.00000, 87.24384);
CreateDynamicObject(3471, 1473.09106, -1749.80957, 15.47205,   0.00000, 0.00000, 87.24384);
CreateDynamicObject(3532, 1540.74390, -1611.13391, 13.02575,   0.00000, 0.00000, 1.54992);
CreateDynamicObject(3532, 1540.69263, -1607.23071, 13.02575,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3532, 1540.58167, -1609.15332, 13.02575,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3532, 1540.69263, -1613.16187, 13.02580,   0.00000, 0.00000, -178.00000);
CreateDynamicObject(3532, 1557.52563, -1618.76648, 13.09147,   0.00000, 0.00000, -90.11996);
CreateDynamicObject(3532, 1552.52844, -1621.54895, 13.09147,   0.00000, 0.00000, -87.95999);
CreateDynamicObject(3532, 1552.40527, -1618.76904, 13.09147,   0.00000, 0.00000, -89.81998);
CreateDynamicObject(3532, 1552.21680, -1619.94189, 13.09147,   0.00000, 0.00000, -87.95999);
CreateDynamicObject(3532, 1557.32153, -1621.59436, 13.09147,   0.00000, 0.00000, -87.95999);
CreateDynamicObject(3532, 1557.39844, -1620.04602, 13.09147,   0.00000, 0.00000, -87.95999);
CreateDynamicObject(3532, 1563.19055, -1621.57556, 13.09147,   0.00000, 0.00000, -87.95999);
CreateDynamicObject(3532, 1563.19971, -1620.21423, 13.09147,   0.00000, 0.00000, -87.95999);
CreateDynamicObject(3532, 1563.20801, -1618.87317, 13.09147,   0.00000, 0.00000, -87.95999);
CreateDynamicObject(3532, 1569.19177, -1619.99829, 13.09147,   0.00000, 0.00000, -87.95999);
CreateDynamicObject(3532, 1569.06091, -1621.65527, 13.09147,   0.00000, 0.00000, -87.95999);
CreateDynamicObject(3532, 1569.07629, -1618.81030, 13.09147,   0.00000, 0.00000, -87.95999);
CreateDynamicObject(3660, 1598.03552, -1603.43726, 14.52644,   0.00000, 0.00000, 359.69415);
CreateDynamicObject(3660, 1578.41455, -1603.37805, 14.52640,   0.00000, 0.00000, 359.99719);
CreateDynamicObject(3660, 1558.78259, -1603.37805, 14.52640,   0.00000, 0.00000, 359.99719);
CreateDynamicObject(3660, 1549.61865, -1603.37805, 14.52640,   0.00000, 0.00000, 359.99719);
CreateDynamicObject(3660, 1607.02515, -1614.53906, 14.52640,   0.00000, 0.00000, 270.20895);
CreateDynamicObject(3660, 1607.02515, -1628.28516, 14.52640,   0.00000, 0.00000, 270.20901);
CreateDynamicObject(3660, 1562.96069, -1636.65222, 14.52640,   0.00000, 0.00000, 359.99719);
CreateDynamicObject(3660, 1555.12646, -1636.64197, 14.52640,   0.00000, 0.00000, 359.99719);
CreateDynamicObject(3660, 1509.32288, -1726.01721, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3660, 1489.68884, -1726.02271, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3660, 1470.05774, -1726.02600, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3660, 1450.45752, -1726.04529, 14.04510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1549.62354, -1621.01465, 13.04484,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, 1549.61877, -1619.28320, 13.04484,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(5043, 1582.31396, -1637.86646, 13.62540,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8168, 1577.79431, -1620.41016, 14.19774,   0.00000, 0.00000, 106.19988);
CreateDynamicObject(8649, 1505.03967, -1732.28137, 13.19574,   0.00000, 0.00000, 89.93997);
CreateDynamicObject(8650, 1519.44653, -1742.60596, 12.64503,   0.00000, 0.00000, 89.69998);
CreateDynamicObject(8650, 1503.96631, -1742.50085, 12.64503,   0.00000, 0.00000, 89.69998);
CreateDynamicObject(8650, 1504.64575, -1757.49841, 12.65313,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8650, 1457.93079, -1742.52039, 12.64503,   0.00000, 0.00000, 89.69998);
CreateDynamicObject(8650, 1457.16333, -1757.48999, 12.65313,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8652, 1480.06885, -1732.34082, 13.18884,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8652, 1452.78235, -1732.37402, 13.18884,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9482, 1529.56799, -1722.70288, 18.01218,   0.00000, 0.00000, 91.98000);
CreateDynamicObject(9482, 1529.51233, -1602.11536, 18.01218,   0.00000, 0.00000, 91.98000);
CreateDynamicObject(9833, 1502.17896, -1744.53906, 9.48469,   0.00000, 0.00000, 25.16084);
CreateDynamicObject(9833, 1496.05396, -1744.56592, 9.48469,   0.00000, 0.00000, 25.16084);
CreateDynamicObject(9833, 1489.81543, -1744.55823, 9.48469,   0.00000, 0.00000, 25.16084);
CreateDynamicObject(9833, 1471.08948, -1744.60730, 9.48469,   0.00000, 0.00000, 24.83999);
CreateDynamicObject(9833, 1465.50476, -1744.62427, 9.48469,   0.00000, 0.00000, 24.83999);
CreateDynamicObject(9833, 1459.41528, -1744.53235, 9.48469,   0.00000, 0.00000, 24.83999);
CreateDynamicObject(9833, 1493.07556, -1770.82092, 19.24104,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, 1468.69263, -1771.56433, 19.24104,   0.00000, 0.00000, 34.14000);
CreateDynamicObject(11489, 1541.12341, -1653.61255, 12.44572,   0.00000, 0.00000, -56.33998);
CreateDynamicObject(11547, 1552.14783, -1608.34644, 15.30490,   0.00000, 0.00000, 90.11060);
CreateDynamicObject(11547, 1573.30066, -1608.33411, 15.30490,   0.00000, 0.00000, 269.65494);
CreateDynamicObject(19379, 1484.09778, -1747.19556, 12.43536,   2.45999, 89.34000, 0.96000);
CreateDynamicObject(19379, 1477.65088, -1747.30188, 12.44120,   2.45999, 90.18000, 0.96000);
CreateDynamicObject(19425, 1532.16382, -1722.50159, 12.39699,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1526.93652, -1722.63599, 12.39699,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1531.99329, -1602.05737, 12.39699,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1527.11279, -1602.05334, 12.39699,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1519.53650, -1729.78796, 12.37660,   0.00000, 0.00000, 92.34000);
CreateDynamicObject(19425, 1519.72839, -1734.84656, 12.35660,   0.00000, 0.00000, 92.34000);
CreateDynamicObject(19425, 1438.24646, -1729.47314, 12.35660,   0.00000, 0.00000, 89.82001);
CreateDynamicObject(19425, 1438.35608, -1734.63831, 12.35660,   0.00000, 0.00000, 91.38000);
CreateDynamicObject(2773, 1640.25354, -2248.69531, 12.83109,   0.00000, 0.00000, 270.18170);
CreateDynamicObject(2773, 1645.53833, -2248.77197, 12.83109,   0.00000, 0.00000, 270.18170);
CreateDynamicObject(970, 1648.80505, -2248.89087, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1652.89209, -2248.88477, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1657.05347, -2248.90796, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1661.15735, -2248.92065, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1665.29822, -2248.93359, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1669.38684, -2248.93579, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1673.42346, -2248.95581, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1677.59888, -2248.95044, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1681.62512, -2248.95435, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1685.79517, -2248.95459, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1689.92090, -2248.92017, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1693.99390, -2248.92529, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1698.07361, -2248.93872, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1702.21545, -2248.94312, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1706.38367, -2248.95605, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1710.50647, -2248.95166, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1714.65710, -2248.94702, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1718.76611, -2248.92236, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1722.88513, -2248.92310, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1726.98950, -2248.92114, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1734.57104, -2250.44336, 12.78141,   0.00000, 0.00000, 312.95200);
CreateDynamicObject(970, 1731.10413, -2248.90991, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1736.42981, -2254.02612, 12.78141,   0.00000, 0.00000, 460.19244);
CreateDynamicObject(970, 1736.97607, -2258.15894, 12.78141,   0.00000, 0.00000, 94.82485);
CreateDynamicObject(970, 1737.14319, -2262.32007, 12.78141,   0.00000, 0.00000, 89.78732);
CreateDynamicObject(970, 1737.13477, -2266.45581, 12.78141,   0.00000, 0.00000, 89.78732);
CreateDynamicObject(970, 1636.94519, -2248.77466, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1632.82764, -2248.81323, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1628.67883, -2248.82617, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1624.52002, -2248.83276, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1620.36475, -2248.84497, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1616.24658, -2248.85083, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1612.22510, -2248.87817, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1608.07678, -2248.85571, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1603.91760, -2248.82910, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1599.73743, -2248.82593, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1595.56372, -2248.82959, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1591.41638, -2248.83569, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1587.29285, -2248.81519, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1583.15735, -2248.84937, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1579.00781, -2248.87720, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1586.71301, -2258.65063, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1590.82300, -2258.65796, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1603.24280, -2258.56323, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1607.34412, -2258.59619, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1611.48279, -2258.59717, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1615.61816, -2258.59937, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1619.78772, -2258.65527, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1628.03589, -2258.65234, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1623.91760, -2258.65527, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1594.97046, -2258.60889, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1599.12317, -2258.62134, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1633.98743, -2261.41699, 12.78141,   0.00000, 0.00000, 266.18704);
CreateDynamicObject(970, 1645.27454, -2258.73584, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1643.23560, -2261.42041, 12.78141,   0.00000, 0.00000, 270.36465);
CreateDynamicObject(970, 1638.34973, -2263.65845, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1632.12854, -2258.62134, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1649.31494, -2258.71411, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1653.35522, -2258.69165, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1657.35596, -2258.67358, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1661.51440, -2258.67017, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1665.58411, -2258.66284, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1669.49304, -2258.61816, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1673.67688, -2258.65112, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1677.73779, -2258.71045, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1681.88721, -2258.71387, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1686.05737, -2258.70654, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1690.15979, -2258.70532, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1694.13367, -2258.67163, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1698.17419, -2258.63379, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1702.24072, -2258.62427, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1706.35791, -2258.62646, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1710.36450, -2258.60986, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1714.45447, -2258.63623, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1718.46899, -2258.63379, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1722.60315, -2258.61304, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1725.33105, -2258.58081, 12.78141,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1727.39685, -2260.63354, 12.78141,   0.00000, 0.00000, 89.16000);
CreateDynamicObject(970, 1727.40259, -2264.64307, 12.78141,   0.00000, 0.00000, 89.16000);
CreateDynamicObject(970, 1727.31812, -2268.80811, 12.78141,   0.00000, 0.00000, 89.16000);
CreateDynamicObject(970, 1737.17603, -2270.62476, 12.78141,   0.00000, 0.00000, 89.78732);
CreateDynamicObject(19425, 1642.93579, -2251.42847, 12.31231,   -0.12000, -0.06000, 270.34912);
CreateDynamicObject(19425, 1642.93469, -2255.99463, 12.31231,   -0.12000, -0.06000, 270.34912);
CreateDynamicObject(18647, 1642.25146, -2237.37524, 15.93297,   0.00000, 0.00000, 271.35760);
CreateDynamicObject(1215, 1643.46411, -2249.09692, 13.01074,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1642.26453, -2249.11621, 13.01074,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1589.32471, -2239.52148, 13.05148,   0.00000, 0.00000, 269.37585);
CreateDynamicObject(1215, 1589.15930, -2242.43164, 13.17363,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1589.04785, -2243.74756, 13.17363,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1589.11426, -2246.70313, 12.85048,   0.00000, 0.00000, 269.37585);
CreateDynamicObject(7504, 1679.52625, -2253.65625, 13.28271,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7504, 1639.35388, -2253.63330, 13.78774,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(640, 1592.89038, -2253.56860, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1599.49646, -2253.60352, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1607.08643, -2253.63647, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1613.83923, -2253.61499, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1621.40186, -2253.62524, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1628.70496, -2253.62744, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1636.22668, -2253.74243, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1642.86780, -2253.65942, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1649.09058, -2253.64282, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1655.66626, -2253.65991, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1661.98169, -2253.65015, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1667.85840, -2253.72217, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1674.33716, -2253.80420, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1682.31848, -2253.90332, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1689.40552, -2253.88330, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1695.75903, -2253.94922, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1701.93677, -2253.98267, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1708.46240, -2253.98315, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1714.95557, -2253.98193, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(640, 1721.84119, -2253.90869, 14.13145,   0.00000, 0.00000, 270.11719);
CreateDynamicObject(1568, 1725.23450, -2253.98779, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1718.33667, -2253.89429, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1711.75500, -2253.93823, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1705.13428, -2253.97681, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1698.78625, -2253.94897, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1692.62341, -2253.90698, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1685.76184, -2253.87646, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1678.55042, -2253.88354, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1671.18872, -2253.74634, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1658.94067, -2253.66089, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1664.90149, -2253.69434, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1652.40454, -2253.65405, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1646.27478, -2253.63770, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1639.67444, -2253.67725, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1632.69739, -2253.70386, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1625.16296, -2253.54785, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1617.98169, -2253.56445, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1610.59509, -2253.70581, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1603.41748, -2253.56812, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1596.05688, -2253.59204, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1568, 1589.01685, -2253.61475, 13.63254,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7504, 1634.36438, -2253.75317, 13.78774,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7504, 1634.20190, -2253.63159, 13.78774,   0.00000, 0.00000, 180.15659);
CreateDynamicObject(1215, 1587.98865, -2253.33594, 12.97062,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1587.95093, -2253.52100, 12.97263,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1587.94336, -2253.73779, 12.97162,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1587.93408, -2253.94312, 12.97363,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1725.84326, -2253.26929, 12.96453,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(1215, 1725.85754, -2253.43018, 12.96453,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(1215, 1725.89197, -2253.59155, 12.96453,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(1215, 1725.88635, -2253.75098, 12.96453,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(1215, 1725.91772, -2253.99243, 12.96453,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(1215, 1725.91260, -2254.13257, 12.96453,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(1215, 1725.90674, -2254.29272, 12.96453,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(1215, 1725.96118, -2254.45483, 12.96453,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(1215, 1725.93921, -2254.51416, 12.96453,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(1215, 1725.93115, -2254.73438, 12.96453,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(1215, 1725.92822, -2254.81445, 12.96453,   0.00000, 0.00000, 0.30301);
CreateDynamicObject(1215, 1725.81274, -2253.68286, 13.48779,   89.45996, 5.88001, 0.30301);
CreateDynamicObject(1215, 1726.01257, -2254.45703, 13.48779,   89.45996, 5.88001, 0.30301);
CreateDynamicObject(1215, 1587.93103, -2253.76929, 13.52210,   17.51999, 90.06001, 271.28497);
CreateDynamicObject(1215, 1587.90344, -2254.17163, 12.97363,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(7504, 1679.57751, -2253.57764, 13.78774,   0.00000, 0.00000, 180.15659);
CreateDynamicObject(19425, 1614.04602, -2251.11353, 12.31231,   -0.12000, -0.06000, 270.34912);
CreateDynamicObject(19425, 1613.83984, -2256.63184, 12.31231,   -0.12000, -0.06000, 270.34912);
CreateDynamicObject(19425, 1590.90991, -2256.45117, 12.31231,   -0.12000, -0.06000, 270.34912);
CreateDynamicObject(19425, 1591.07190, -2251.10303, 12.31231,   -0.12000, -0.06000, 270.34912);
CreateDynamicObject(19425, 1591.07190, -2251.10303, 12.31231,   -0.12000, -0.06000, 270.34912);
CreateDynamicObject(19425, 1590.90991, -2256.45117, 12.31231,   -0.12000, -0.06000, 270.34912);
CreateDynamicObject(970, 1481.00000, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1485.19995, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1487.59998, -1024.09998, 23.40000,   0.00000, 0.00000, 88.25000);
CreateDynamicObject(970, 1476.80005, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1472.59998, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1468.40002, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1460.00000, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1455.80005, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1451.59998, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1447.40002, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1443.19995, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1439.00000, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1434.80005, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1430.59998, -1028.59998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(970, 1428.50000, -1024.00000, 23.40000,   0.00000, 0.00000, 268.75000);
CreateDynamicObject(1215, 1485.19995, -1022.00000, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1476.19995, -1022.09998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1472.30005, -1022.29999, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1466.80005, -1022.09998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1466.19995, -1028.50000, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1462.19995, -1028.40002, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1455.09998, -1022.00000, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1448.09998, -1022.09998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1444.19995, -1022.20001, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, 1435.19995, -1022.00000, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1216, 1480.09998, -1022.20001, 23.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1216, 1484.00000, -1022.20001, 23.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1216, 1440.19995, -1022.20001, 23.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1216, 1436.50000, -1022.09998, 23.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1223, 1464.30005, -1021.90002, 22.80000,   0.00000, 0.00000, 174.25000);
CreateDynamicObject(1223, 1459.69995, -1021.90002, 22.90000,   0.00000, 0.00000, 353.00000);
CreateDynamicObject(1231, 1487.40002, -1028.50000, 25.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, 1428.30005, -1028.50000, 25.60000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1487.30005, -1022.20001, 25.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1232, 1428.69995, -1022.00000, 25.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1280, 1478.19995, -1022.09998, 23.20000,   0.00000, 0.00000, 88.74756);
CreateDynamicObject(1280, 1474.30005, -1022.00000, 23.20000,   0.00000, 0.00000, 88.75000);
CreateDynamicObject(1280, 1446.09998, -1022.29999, 23.20000,   0.00000, 0.00000, 90.49756);
CreateDynamicObject(1280, 1442.19995, -1022.09998, 23.20000,   0.00000, 0.00000, 90.49438);
CreateDynamicObject(1285, 1469.09998, -1022.09998, 23.40000,   0.00000, 0.00000, 178.99976);
CreateDynamicObject(1285, 1454.00000, -1022.09998, 23.40000,   0.00000, 0.00000, 181.00000);
CreateDynamicObject(1286, 1468.59998, -1022.09998, 23.40000,   0.00000, 0.00000, 179.74731);
CreateDynamicObject(1286, 1453.50000, -1022.09998, 23.40000,   0.00000, 0.00000, 179.75000);
CreateDynamicObject(1287, 1468.09998, -1022.09998, 23.40000,   0.00000, 0.00000, 181.99951);
CreateDynamicObject(1287, 1453.00000, -1022.09998, 23.40000,   0.00000, 0.00000, 182.00000);
CreateDynamicObject(1288, 1467.59998, -1022.09998, 23.40000,   0.00000, 0.00000, 181.99951);
CreateDynamicObject(1288, 1452.50000, -1022.09998, 23.40000,   0.00000, 0.00000, 182.00000);
CreateDynamicObject(1289, 1469.59998, -1022.09998, 23.40000,   0.00000, 0.00000, 179.99670);
CreateDynamicObject(1289, 1454.50000, -1022.09998, 23.40000,   0.00000, 0.00000, 182.25000);
CreateDynamicObject(1319, 1487.40002, -1027.30005, 23.40000,   0.00000, 0.00000, 92.00000);
CreateDynamicObject(1319, 1464.90002, -1028.50000, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 1463.69995, -1028.50000, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1319, 1428.40002, -1027.40002, 23.40000,   0.00000, 0.00000, 269.99954);
CreateDynamicObject(1359, 1482.09998, -1022.09998, 23.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1359, 1470.90002, -1022.20001, 23.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1359, 1450.09998, -1022.20001, 23.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1359, 1438.30005, -1022.09998, 23.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1366, 1487.40002, -1026.09998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1366, 1428.59998, -1026.09998, 23.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, 1463.59998, -1021.59998, 22.90000,   0.00000, 0.00000, 178.75000);
CreateDynamicObject(1491, 1460.59998, -1021.59998, 22.90000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1478.09961, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1478.09998, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1478.09961, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1478.09998, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1482.09961, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1482.09998, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1482.09961, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1482.09998, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1482.09961, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1482.09998, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1485.89941, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1485.90002, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1485.89941, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1485.90002, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1485.89941, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1485.90002, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1490.29980, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1490.30005, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1490.29980, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1490.30005, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1490.29980, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1490.30005, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1478.09961, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1478.09998, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1474.39941, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1474.40002, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1474.39941, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1474.40002, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1474.39941, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1474.40002, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1472.59961, -1017.00000, 26.70000,   0.00000, 0.00000, 89.49463);
CreateDynamicObject(1649, 1472.59998, -1017.00000, 26.70000,   0.00000, 0.00000, 269.50000);
CreateDynamicObject(1649, 1472.59961, -1017.00000, 30.00000,   0.00000, 0.00000, 89.49463);
CreateDynamicObject(1649, 1472.59998, -1017.00000, 30.00000,   0.00000, 0.00000, 269.49695);
CreateDynamicObject(1649, 1470.39941, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1470.40002, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1470.39941, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1470.40002, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1470.39941, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1470.40002, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1470.39941, -1021.50000, 34.40000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1470.40002, -1021.50000, 34.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1466.59961, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1466.59998, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1466.59961, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1466.59998, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1466.59961, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1466.59998, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1466.59961, -1021.50000, 34.40000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1466.59998, -1021.50000, 34.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1462.09961, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1462.09998, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1462.09961, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1462.09998, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1462.09961, -1021.50000, 34.40000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1462.09998, -1021.50000, 34.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1457.39941, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1457.40002, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1457.39941, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1457.40002, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1457.39941, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1457.40002, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1457.39941, -1021.50000, 34.40000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1457.40002, -1021.50000, 34.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1453.69922, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1453.69995, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1453.69922, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1453.69995, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1453.69922, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1453.69995, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1453.69922, -1021.50000, 34.40000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1453.69995, -1021.50000, 34.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1450.00000, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1450.00000, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1450.00000, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1450.00000, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1451.19922, -1016.59961, 26.70000,   0.00000, 0.00000, 269.48917);
CreateDynamicObject(1649, 1451.19995, -1016.59998, 26.70000,   0.00000, 0.00000, 89.48914);
CreateDynamicObject(1649, 1450.00000, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1450.00000, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1451.19922, -1016.59961, 30.00000,   0.00000, 0.00000, 269.48917);
CreateDynamicObject(1649, 1451.19995, -1016.59998, 30.00000,   0.00000, 0.00000, 89.48914);
CreateDynamicObject(1649, 1446.09961, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1446.09998, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1446.09961, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1446.09998, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1446.09961, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1446.09998, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1442.19995, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1442.19995, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1442.19922, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1442.19995, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1442.19922, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1442.19995, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1438.29980, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1438.30005, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1438.29980, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1438.30005, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1438.29980, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1438.30005, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1434.19995, -1021.50000, 24.50000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1434.19995, -1021.50000, 24.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1434.19995, -1021.50000, 27.80000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1434.19995, -1021.50000, 27.80000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, 1434.19922, -1021.50000, 31.10000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, 1434.19995, -1021.50000, 31.10000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1463.50000, -1011.29999, 26.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2773, 1460.00000, -1011.59998, 26.40000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2946, 1463.30005, -1009.79999, 25.80000,   0.00000, 0.00000, 92.24951);
CreateDynamicObject(2946, 1460.19995, -1009.90002, 25.80000,   0.00000, 0.00000, 272.00000);
CreateDynamicObject(3435, 1484.50000, -1020.90002, 40.20498,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8648, 1479.59998, -1021.40002, 23.50000,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(8648, 1460.00000, -1021.40002, 34.60000,   359.99878, 358.00000, 90.24872);
CreateDynamicObject(8648, 1460.00000, -1021.29999, 34.80000,   0.00000, 177.99500, 90.24719);
CreateDynamicObject(8648, 1460.00000, -1021.29999, 35.80000,   0.00000, 177.99500, 90.24719);
CreateDynamicObject(8648, 1444.69995, -1021.40002, 23.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1480.09998, -1021.50000, 25.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1480.09998, -1021.50000, 27.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1480.09998, -1021.50000, 23.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1480.09998, -1021.50000, 29.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1484.00000, -1021.50000, 25.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1484.00000, -1021.50000, 27.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1484.00000, -1021.50000, 23.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1484.00000, -1021.50000, 29.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1487.90002, -1021.50000, 25.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1487.90002, -1021.50000, 27.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1487.90002, -1021.50000, 23.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1487.90002, -1021.50000, 29.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1476.30005, -1021.50000, 25.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1476.30005, -1021.50000, 23.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1476.30005, -1021.50000, 27.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1476.30005, -1021.50000, 29.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1472.40002, -1021.50000, 25.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1472.40002, -1021.50000, 23.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1472.40002, -1021.50000, 27.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1472.40002, -1021.50000, 29.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1468.50000, -1021.40002, 26.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1468.50000, -1021.40002, 24.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1468.50000, -1021.40002, 28.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1468.50000, -1021.40002, 30.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1468.50000, -1021.40002, 32.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1464.69995, -1021.50000, 24.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1464.69995, -1021.50000, 26.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1464.69995, -1021.50000, 28.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1464.00000, -1021.40002, 25.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1464.00000, -1021.40002, 22.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1464.69995, -1021.50000, 30.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1463.00000, -1021.20001, 25.80000,   90.00000, 180.00000, 270.00000);
CreateDynamicObject(9131, 1464.69995, -1021.50000, 32.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1460.80005, -1021.20001, 25.80000,   90.00000, 180.00000, 270.00000);
CreateDynamicObject(9131, 1460.19995, -1021.29999, 25.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1460.19995, -1021.29999, 22.90000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1459.50000, -1021.40002, 26.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1459.50000, -1021.40002, 24.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1459.50000, -1021.40002, 28.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1459.50000, -1021.40002, 30.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1459.50000, -1021.40002, 32.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1455.50000, -1021.40002, 26.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1455.50000, -1021.40002, 24.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1455.50000, -1021.40002, 28.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1455.50000, -1021.40002, 30.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1455.50000, -1021.40002, 32.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1451.80005, -1021.40002, 26.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1451.80005, -1021.40002, 24.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1451.80005, -1021.40002, 28.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1451.80005, -1021.40002, 30.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1451.80005, -1021.40002, 32.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1448.09998, -1021.40002, 25.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1448.09998, -1021.40002, 23.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1448.09998, -1021.40002, 27.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1448.09998, -1021.40002, 29.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1444.19995, -1021.50000, 25.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1444.19995, -1021.50000, 27.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1444.19995, -1021.50000, 23.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1444.19995, -1021.50000, 29.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1440.19995, -1021.50000, 25.30000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1440.19995, -1021.50000, 27.50000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1440.19995, -1021.50000, 23.10000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1440.19995, -1021.50000, 29.70000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1436.50000, -1021.40002, 25.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1436.50000, -1021.40002, 23.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1436.50000, -1021.40002, 27.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1436.50000, -1021.40002, 29.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1432.19995, -1021.40002, 25.20000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1432.19995, -1021.40002, 27.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1432.19995, -1021.40002, 23.00000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9131, 1432.19995, -1021.40002, 29.60000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16760, 1473.30005, -1019.59998, 40.10000,   0.00000, 0.00000, 89.00000);
CreateDynamicObject(19425, 1492.77905, -1031.57263, 22.62900,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 1492.83594, -1036.39368, 22.62900,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 1470.83813, -1031.36609, 22.65040,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 1470.75330, -1036.24512, 22.65040,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 1484.52917, -1044.50488, 22.65055,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19425, 1479.59875, -1044.51038, 22.65055,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 1956.89026, 743.04761, 9.85300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 1956.99133, 703.09448, 9.87200,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 1956.71130, 663.09778, 9.85500,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 1915.81152, 743.17902, 9.85300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 1915.58997, 703.47552, 9.85300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 1915.61279, 663.41107, 9.85500,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 1897.79138, 743.00720, 9.85208,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 1897.93323, 703.48651, 9.83463,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(6959, 1897.89697, 663.40851, 9.85300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 1877.41882, 691.03699, 9.78680,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1877.41882, 698.28070, 9.78680,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1877.41882, 679.14362, 9.78680,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1877.41882, 667.19592, 9.78680,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1877.41882, 763.21503, 9.78680,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1961.04553, 763.17432, 9.78680,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(987, 1972.74231, 763.17432, 9.78680,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(987, 1937.89526, 763.17432, 9.78680,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(987, 1949.42810, 763.17432, 9.78680,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(987, 1925.67407, 763.17432, 9.78680,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(987, 1913.67065, 763.15210, 9.78680,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(987, 1901.45679, 763.17432, 9.78680,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(987, 1889.44312, 763.17426, 9.78680,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(987, 1977.52954, 763.17432, 9.78680,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(987, 1977.39600, 686.41467, 9.78680,   0.00000, 0.00000, -270.00000);
CreateDynamicObject(987, 1977.39600, 674.49658, 9.78680,   0.00000, 0.00000, -270.00000);
CreateDynamicObject(987, 1977.39600, 662.47632, 9.78680,   0.00000, 0.00000, -270.00000);
CreateDynamicObject(987, 1977.39600, 650.45862, 9.78680,   0.00000, 0.00000, -270.00000);
CreateDynamicObject(987, 1977.39600, 751.18298, 9.78680,   0.00000, 0.00000, -270.00000);
CreateDynamicObject(987, 1977.39600, 739.28247, 9.78680,   0.00000, 0.00000, -270.00000);
CreateDynamicObject(987, 1977.39600, 727.56659, 9.78680,   0.00000, 0.00000, -270.00000);
CreateDynamicObject(987, 1977.39600, 719.09210, 9.78680,   0.00000, 0.00000, -270.00000);
CreateDynamicObject(987, 1977.39600, 708.29730, 9.78680,   0.00000, 0.00000, -270.00000);
CreateDynamicObject(987, 1977.12756, 643.61969, 9.78680,   0.00000, 0.00000, -270.00000);
CreateDynamicObject(987, 1929.56726, 643.38367, 9.78680,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(987, 1889.46094, 643.25201, 9.78680,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(987, 1877.72815, 643.37543, 9.78680,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(987, 1965.47559, 643.33868, 9.78680,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(987, 1953.63696, 643.38452, 9.78680,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(987, 1941.56909, 643.33405, 9.78680,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(987, 1905.52209, 643.40564, 9.78680,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(987, 1917.58325, 643.24353, 9.78680,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(987, 1901.41895, 643.34406, 9.78680,   0.00000, 0.00000, 360.00000);
CreateDynamicObject(987, 1877.41882, 655.11401, 9.78680,   0.00000, 0.00000, -450.00000);
CreateDynamicObject(987, 1877.41882, 755.81970, 9.78680,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1877.41882, 744.10980, 9.78680,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1877.41882, 732.11963, 9.78680,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(987, 1877.41882, 720.13898, 9.78680,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(18850, 1961.85889, 663.79071, -2.34530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18850, 1932.94885, 663.79071, -2.34530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(10401, 1933.36707, 708.63147, 11.75013,   0.00000, 0.00000, 46.00000);
CreateDynamicObject(10401, 1918.37000, 708.37000, 11.80910,   0.00000, 0.00000, 46.00000);
CreateDynamicObject(7832, 1927.03088, 733.58807, 14.40000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14826, 1950.08777, 756.34290, 10.50455,   0.00000, 0.00000, 69.18002);
CreateDynamicObject(14782, 1944.68958, 761.81641, 10.67956,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19903, 1928.10071, 756.31830, 9.81515,   0.00000, 0.00000, -126.30001);
CreateDynamicObject(19899, 1922.81641, 761.91211, 9.86384,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19898, 1937.39575, 746.85803, 9.82930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19898, 1917.92773, 757.65637, 9.82930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19898, 1924.54199, 759.41504, 9.82930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19898, 1938.35571, 756.34399, 9.82930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19872, 1933.83704, 755.13409, 8.96530,   0.00000, 0.00000, -184.44000);
CreateDynamicObject(19872, 1933.47290, 750.54059, 8.30000,   -17.00000, 0.00000, -184.44000);
CreateDynamicObject(19124, 1933.12170, 722.98767, 10.36670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1933.12170, 722.98767, 11.34670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1933.12170, 722.98767, 12.32670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1933.12170, 722.98767, 13.30670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1933.12170, 722.98767, 14.28670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1933.12170, 722.98767, 14.61867,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1920.87170, 722.98767, 10.36670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1920.87170, 722.98767, 11.34670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1920.87170, 722.98767, 12.32670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1920.87170, 722.98767, 13.30670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1920.87219, 722.96765, 14.28670,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19124, 1920.87219, 722.96771, 14.70000,   0.00000, 0.00000, 295.00000);
CreateDynamicObject(14805, 1931.13489, 758.35217, 15.08270,   -0.36000, 0.66000, -131.03999);
CreateDynamicObject(18014, 1938.61829, 759.61932, 14.73388,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18014, 1938.64526, 752.18286, 14.73390,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18014, 1926.99597, 752.19012, 14.73390,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18014, 1926.99597, 759.77972, 14.73390,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1544, 1929.72705, 759.06421, 14.85300,   0.00000, 0.00000, 8.94000);
CreateDynamicObject(1667, 1930.67175, 758.70471, 14.95330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1808, 1915.42200, 748.99384, 9.78881,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1978, 1906.57214, 740.80115, 10.84858,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2669, 1899.77393, 747.56689, 11.03273,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3877, 1960.63794, 723.56647, 20.20356,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 1892.78003, 723.56653, 20.31857,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11714, 1897.05627, 739.86304, 11.11558,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1557, 1896.96814, 730.98590, 9.81860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18260, 1902.08350, 727.45313, 11.39156,   0.00000, 0.00000, -31.50000);
CreateDynamicObject(2957, 1900.13916, 723.21997, 11.40100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 1904.54919, 723.21997, 11.40100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 1946.37402, 723.16925, 11.40100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 1900.13916, 723.21997, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 1904.54919, 723.21997, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 1907.64001, 723.21997, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 1907.59570, 723.21387, 11.40100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 1950.88000, 723.16931, 11.40100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 1953.80017, 723.16656, 11.40100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 1946.37402, 723.16931, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 1950.88000, 723.16931, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2957, 1953.80017, 723.16663, 13.50000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2048, 1927.53979, 723.15997, 17.20910,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19306, 1926.64771, 723.32349, 17.39940,   0.00000, 30.00000, -90.00000);
CreateDynamicObject(19306, 1928.44995, 723.20001, 17.39940,   0.00000, 30.00000, -90.00000);
CreateDynamicObject(19425, 1977.42139, 706.54401, 9.82270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 1977.42139, 703.29999, 9.82270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19425, 1977.42139, 699.98999, 9.82270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19799, 1915.58020, 757.96667, 15.58002,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19810, 1915.69922, 758.86737, 17.38000,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19817, 1944.20093, 752.13580, 9.81428,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19815, 1935.83374, 762.26190, 11.87497,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(941, 1917.04968, 761.19061, 10.14598,   0.00000, 0.00000, -132.95998);
CreateDynamicObject(941, 1916.36353, 757.92169, 10.14600,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(941, 1916.36353, 755.47052, 10.14600,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2036, 1916.19238, 758.70880, 10.61871,   0.00000, 0.00000, 55.02000);
CreateDynamicObject(2036, 1916.19238, 758.21881, 10.61870,   0.00000, 0.00000, 55.02000);
CreateDynamicObject(2036, 1916.19238, 757.72882, 10.61870,   0.00000, 0.00000, 55.02000);
CreateDynamicObject(2035, 1916.19495, 756.57867, 10.61880,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 1916.19495, 756.08868, 10.61880,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 1916.19495, 755.59869, 10.61880,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 1916.19495, 755.10870, 10.61880,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 1916.17261, 754.71613, 10.61880,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 1917.10913, 756.51276, 10.30225,   0.00000, -60.00000, -180.00000);
CreateDynamicObject(2035, 1917.12683, 755.06482, 10.30220,   0.00000, -60.00000, -180.00000);
CreateDynamicObject(2035, 1917.12463, 756.06470, 10.30220,   0.00000, -60.00000, -180.00000);
CreateDynamicObject(2035, 1917.14661, 755.55695, 10.30220,   0.00000, -60.00000, -180.00000);
CreateDynamicObject(19815, 1935.83374, 762.26190, 10.89500,   0.00000, -180.00000, 0.00000);
CreateDynamicObject(19787, 1943.36841, 762.31891, 13.26682,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19878, 1934.29297, 754.91431, 9.87785,   0.00000, 0.00000, -186.24002);
CreateDynamicObject(941, 1919.57422, 761.70416, 10.14600,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19893, 1919.10620, 761.58704, 10.61795,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19893, 1920.57617, 761.58698, 10.61790,   0.00000, 0.00000, -19.02000);
CreateDynamicObject(19894, 1919.83960, 761.68036, 10.61911,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18647, 1919.79333, 762.29382, 10.61880,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18647, 1916.42627, 761.37592, 10.61880,   0.00000, 0.00000, 135.00000);
CreateDynamicObject(18647, 1915.72009, 758.16669, 10.61989,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18647, 1915.72009, 755.71667, 10.61990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19360, 1959.30005, 760.76477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1959.30005, 757.82483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1959.30005, 754.88483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1959.30005, 751.94482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1959.30005, 751.45477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1955.87000, 751.45477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1952.43994, 751.45477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1949.00989, 751.45477, 14.26340,   0.00000, 89.94000, 0.00000);
CreateDynamicObject(19360, 1945.57996, 751.45477, 14.26340,   -0.06000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1942.15002, 751.45477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1938.71997, 751.45477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1935.29004, 751.45477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1931.85999, 751.45477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1928.43005, 751.45477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1925.00012, 751.45477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1921.57007, 751.45477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1918.14014, 751.45477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1918.14014, 754.37482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1918.14014, 757.31482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1918.12036, 760.78308, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1918.14014, 758.33002, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1921.57007, 754.39478, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1921.57007, 757.31482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1921.57007, 758.33002, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1921.55042, 760.78308, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1955.87000, 754.88483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1955.87000, 757.82483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1955.87000, 760.76477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1955.87000, 751.94482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(11544, 1944.42810, 743.79999, 10.56000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11544, 1944.39087, 751.10626, 13.31572,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19360, 1952.43994, 754.88483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1952.43994, 757.82483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1952.43994, 760.76477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1952.43994, 751.94482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1949.00989, 751.94482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1945.57996, 751.94482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1942.15002, 751.94482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1938.71997, 751.94482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1935.29004, 751.94482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1931.85999, 751.94482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1928.43005, 751.94482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1925.00012, 751.94482, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1949.00989, 754.88483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1945.57996, 754.88483, 14.26340,   0.06000, 90.06000, 0.00000);
CreateDynamicObject(19360, 1942.15002, 754.88483, 14.26340,   0.06000, 90.06000, 0.00000);
CreateDynamicObject(19360, 1938.71997, 754.88483, 14.26340,   0.06000, 90.06000, 0.00000);
CreateDynamicObject(19360, 1931.85999, 754.88483, 14.26340,   0.06000, 90.06000, 0.00000);
CreateDynamicObject(19360, 1935.29004, 754.88483, 14.26340,   0.06000, 90.06000, 0.00000);
CreateDynamicObject(19360, 1928.43005, 754.88483, 14.26340,   0.00000, 89.93999, 0.00000);
CreateDynamicObject(19360, 1925.00012, 754.88483, 14.26340,   0.00000, 89.94000, 0.00000);
CreateDynamicObject(19360, 1949.00989, 757.82483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1945.57996, 757.82483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1942.15002, 757.82483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1938.71997, 757.82483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1935.29004, 757.82483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1931.85999, 757.82483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1928.43005, 757.82483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1925.00012, 757.82483, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1949.00989, 760.76477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1945.57996, 760.76477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1942.15002, 760.76477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1938.71997, 760.76477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1935.29004, 760.76477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1931.85999, 760.76477, 14.26340,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19360, 1928.43005, 760.76477, 14.26340,   -0.06000, 89.94000, 0.00000);
CreateDynamicObject(19360, 1925.00012, 760.76477, 14.26340,   -0.06000, 89.94000, 0.00000);
CreateDynamicObject(19360, 1959.45801, 749.75549, 16.08430,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1956.54321, 749.75549, 16.08430,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1953.60315, 749.75549, 16.08181,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1950.66309, 749.75549, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1947.72314, 749.75549, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1947.23315, 749.75549, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1941.54004, 749.75549, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1938.59998, 749.75549, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1935.66003, 749.75549, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1932.71997, 749.75549, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1929.78003, 749.75549, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1926.83997, 749.75549, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1923.91833, 749.74731, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1920.97827, 749.74731, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1918.03833, 749.74731, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19360, 1917.30005, 749.74731, 16.08180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2205, 1919.47351, 753.75977, 14.28878,   0.00000, 0.00000, -40.25998);
CreateDynamicObject(1715, 1919.09375, 752.39154, 14.35114,   0.00000, 0.00000, 113.39996);
CreateDynamicObject(2816, 1920.00427, 753.36932, 15.22323,   0.00000, 0.00000, -63.54000);
CreateDynamicObject(2828, 1919.66565, 754.00708, 15.22360,   0.00000, 0.00000, 139.07996);
CreateDynamicObject(330, 1919.38184, 753.79352, 15.21898,   90.00000, 0.00000, 180.00000);
CreateDynamicObject(2066, 1916.03076, 750.15704, 14.30834,   0.00000, 0.00000, -61.91998);
CreateDynamicObject(2827, 1920.63623, 752.82568, 15.22417,   0.00000, 0.00000, 92.21997);
CreateDynamicObject(1667, 1920.17212, 752.78186, 15.32046,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(348, 1919.54968, 753.34357, 15.22370,   90.00000, 0.00000, 163.08012);
CreateDynamicObject(19898, 1922.51355, 745.44647, 10.11838,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19172, 1915.39624, 753.17560, 16.31054,   0.00000, 0.00000, 89.93999);
CreateDynamicObject(2251, 1926.58594, 757.36096, 15.18712,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2251, 1926.50586, 754.48102, 15.18710,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19365, 1961.00000, 729.37457, 10.89990,   0.00000, 180.00000, 0.00000);
CreateDynamicObject(19365, 1961.00000, 743.09460, 10.89990,   0.00000, 180.00000, 0.00000);
CreateDynamicObject(19365, 1961.00000, 742.60461, 10.89990,   0.00000, 180.00000, 0.00000);
CreateDynamicObject(19365, 1961.00000, 728.88458, 10.89990,   0.00000, 180.00000, 0.00000);
CreateDynamicObject(1580, 1916.59705, 761.08728, 10.61869,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1580, 1916.52087, 760.13367, 10.61870,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1580, 1916.10876, 760.57764, 10.61870,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1580, 1917.65540, 761.39215, 10.61869,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1580, 1917.11755, 761.44464, 10.61869,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1580, 1917.13696, 760.72351, 10.61869,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(12943, 1901.40967, 651.99738, 9.80980,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(12943, 1893.56970, 651.99738, 9.80980,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(12943, 1909.24976, 651.99738, 9.80980,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(12943, 1885.72974, 651.99738, 9.80980,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2921, 1893.25964, 723.14105, 17.92275,   0.00000, 0.00000, 163.85999);
CreateDynamicObject(2921, 1958.95935, 723.17200, 18.07343,   0.00000, 0.00000, 69.12003);
CreateDynamicObject(2921, 1913.93433, 748.99548, 17.07890,   0.00000, 0.00000, 148.62000);
CreateDynamicObject(2114, 1888.30212, 735.20020, 10.00878,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19381, 1882.92627, 744.55603, 9.75300,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19381, 1882.90747, 734.20563, 9.75300,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19381, 1892.33752, 744.49817, 9.75300,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19381, 1892.23633, 734.26599, 9.75300,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(3496, 1887.69141, 748.83752, 9.82700,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3496, 1887.69141, 730.00000, 9.82700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3497, 1896.69214, 734.91296, 14.42510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3578, 1882.97083, 676.10242, 9.04984,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1882.97083, 681.98242, 9.04980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1882.97083, 687.86243, 9.04980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1882.97083, 693.74237, 9.04980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1882.93542, 717.51337, 9.04980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1882.89514, 723.46246, 9.04980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3578, 1882.97083, 711.38239, 9.04980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1627, 1933.83130, 723.12628, 12.91143,   0.00000, 0.00000, 88.74000);
CreateDynamicObject(8613, 1972.96179, 736.32141, 7.80000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8613, 1965.14880, 744.50708, 15.24500,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14805, 1925.77759, 740.81122, 19.49270,   -0.36000, 0.66000, -131.03999);
CreateDynamicObject(1550, 1900.76331, 747.17468, 10.15991,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1897.77979, 748.60425, 10.15991,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1900.27686, 747.87445, 10.03992,   0.00000, 90.00000, -66.66000);
CreateDynamicObject(1550, 1897.77979, 748.60425, 10.15991,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1898.97009, 748.32184, 10.19989,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1899.47974, 747.19263, 10.15991,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1898.83240, 748.28265, 10.03992,   0.00000, 90.00000, -66.66000);
CreateDynamicObject(1550, 1897.87964, 747.81873, 10.19989,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1898.37817, 746.68463, 10.15991,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1550, 1899.65088, 746.66162, 10.15991,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2679, 1902.47827, 748.36359, 10.91000,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2678, 1902.38501, 746.78564, 10.89911,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14604, 1929.00232, 737.43646, 19.46311,   0.00000, 0.00000, 40.32000);
CreateDynamicObject(8661, -2596.92212, -90.16490, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2676.82690, -209.92039, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2636.85522, -90.16490, 3.14170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8661, -2676.82690, -90.16489, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2676.82690, -110.13850, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2676.82690, -130.08681, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2676.82690, -150.04640, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2676.82690, -170.02180, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2676.82690, -189.97360, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2636.85522, -110.13850, 3.14170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8661, -2596.92212, -110.13850, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2636.85522, -130.08681, 3.14170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8661, -2596.92212, -130.08681, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2636.85522, -150.04640, 3.14170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8661, -2636.85522, -170.02180, 3.14170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8661, -2636.85522, -189.97360, 3.14170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8661, -2636.85522, -209.92039, 3.14170,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8661, -2596.92212, -150.04640, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2596.92212, -170.02180, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2596.92212, -189.97360, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, -2596.92212, -209.92039, 3.14170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2683.66968, -200.20020, 2.68560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2613.67090, -93.34988, 2.68560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2613.67090, -145.58971, 2.68560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2613.67090, -171.59990, 2.68560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2626.57959, -80.41840, 2.68560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2626.59351, -200.20018, 2.68560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2638.21484, -200.20020, 2.68560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2613.67090, -187.28500, 2.68560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2696.59229, -187.28429, 2.68560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2615.45581, -166.88310, 2.63760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2696.59229, -135.05530, 2.68560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2696.59229, -108.94800, 2.68560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2696.59229, -93.33610, 2.68560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2683.66724, -80.41837, 2.68560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2696.30273, -160.93919, 3.41560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2638.25171, -80.41840, 2.68560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2671.76367, -200.20020, 2.68560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2627.43286, -109.41270, 3.52160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2613.67090, -119.47020, 2.68560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2678.94824, -157.86052, 2.56960,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2679.39160, -171.59990, 3.52160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2640.35156, -184.51407, 3.52160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2627.43286, -171.59990, 3.52160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2627.43286, -145.58971, 3.52160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2627.43286, -119.47020, 3.52160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2679.39160, -160.29761, 3.52160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2679.39160, -119.47020, 3.52160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2679.39160, -109.40670, 3.52160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2666.46655, -184.51410, 3.52160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2666.46899, -147.37486, 3.52160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2666.46753, -96.48477, 3.52160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2666.47021, -132.38803, 3.52160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14394, -2675.20728, -136.39490, 3.39540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14394, -2675.20728, -143.24867, 3.39540,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, -2669.15430, -132.93730, 4.14620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2664.95557, -147.46950, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2641.82959, -184.41440, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, -2632.56665, -179.71629, 7.62220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, -2679.30347, -98.03349, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, -2674.00659, -152.36440, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2658.63818, -137.21390, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2664.95410, -132.31276, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, -2668.86328, -132.31880, 2.64140,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19450, -2669.58545, -147.45149, 2.64140,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, -2663.95190, -146.41980, 2.64140,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19450, -2669.58911, -132.31877, 2.64140,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19450, -2668.85229, -147.45151, 2.64140,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19450, -2663.95190, -133.62579, 2.64140,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19176, -2663.78027, -139.91934, 5.70070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2663.95044, -139.27220, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2663.94946, -140.56924, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, -2663.93604, -132.44521, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2663.95435, -135.46091, 6.01060,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -103.21770, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19176, -2663.99561, -139.91769, 5.70070,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2663.95435, -144.39040, 6.01060,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2627.49463, -98.03010, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2627.49463, -137.55589, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -148.98627, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -152.18900, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -159.80949, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2679.30469, -102.12730, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2679.30078, -163.01050, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -170.63550, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2679.30078, -166.82640, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2679.30078, -173.82660, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -181.44749, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -123.44360, 7.61670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2674.56934, -184.41435, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, -2658.63770, -146.83965, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2673.99487, -101.40330, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2674.00659, -169.86481, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2674.00659, -160.24120, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -173.68250, 5.81150,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2679.29736, -119.80860, 5.81950,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2627.49658, -101.75310, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -181.59050, 5.96350,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -162.87170, 5.81150,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2679.29736, -173.68250, 5.96350,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2679.29736, -177.03160, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -167.42850, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -175.11740, 5.81150,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2679.29736, -152.04691, 5.96750,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2679.29736, -170.77670, 5.81150,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -162.87170, 5.99750,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2679.29736, -165.83340, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -156.67200, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -170.77670, 5.96750,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -159.95230, 5.71550,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -159.95230, 5.96750,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -152.04691, 5.72750,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19377, -2653.43457, -179.68280, 4.15020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -101.16500, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -161.78340, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -171.40550, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -130.79399, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2679.30078, -156.00410, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2679.30469, -127.58370, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -119.95190, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2679.30469, -123.76470, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2679.30469, -116.76130, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -109.13040, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2679.30469, -112.94250, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2679.30469, -105.93090, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2635.61523, -133.16090, 5.06270,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2674.57397, -96.51157, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, -2632.81299, -179.50130, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2673.99487, -117.80530, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2673.99487, -108.18270, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -152.16209, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -142.54050, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -132.91769, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -123.28870, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -113.67160, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -104.03920, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -154.64420, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -124.38750, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -106.07230, 5.79350,   90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2679.29736, -127.72490, 5.98150,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -127.72490, 5.81950,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -119.80860, 5.98150,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2679.29736, -122.22270, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -113.63450, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -98.18130, 5.80150,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -108.99720, 6.01750,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -108.99720, 5.79350,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -116.90270, 6.00350,   90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2679.29736, -111.86370, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -102.73330, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -101.13270, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -98.32480, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.29883, -182.89755, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2679.30078, -177.64020, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2658.54590, -184.41440, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -178.87981, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2627.49463, -172.04581, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -164.41180, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2627.49463, -168.22800, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2627.49463, -161.20641, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -153.58299, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2627.49463, -157.39639, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2627.49268, -131.87163, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -121.07560, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2627.49463, -124.88600, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2627.49463, -117.88680, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -110.23760, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2627.49463, -114.05710, 5.87860,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2627.49463, -107.03270, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -99.39500, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2661.61694, -96.50963, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2632.22339, -96.51160, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2632.22314, -184.41440, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2664.95313, -184.41440, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2627.49072, -182.89690, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, -2663.93604, -147.41060, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, -2674.00659, -179.50130, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2663.50952, -179.50130, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2653.01465, -179.50130, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2642.52148, -179.50130, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -175.26109, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2648.25732, -184.41440, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19434, -2649.05762, -182.98119, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19434, -2649.77295, -183.69669, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2663.94458, -139.27289, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -150.76781, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.20190, -153.97580, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -179.54530, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2658.56226, -169.94611, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2664.79883, -184.40590, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2660.04736, -169.17270, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2679.29370, -163.01587, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -173.14529, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, -2663.50952, -169.86481, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2653.01465, -169.86481, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2642.52148, -169.86481, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2632.81299, -169.86481, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19354, -2669.82642, -182.75510, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.57471, -184.40509, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2679.29492, -173.82620, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29590, -181.44687, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.41309, -161.32938, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2674.42676, -184.40590, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19384, -2658.61011, -105.23160, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29395, -182.75378, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.56250, -179.54491, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.56250, -182.75951, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2657.03027, -183.69913, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2657.61084, -98.01102, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19361, -2658.46753, -182.73837, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -182.78247, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.34058, -123.65430, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -169.93750, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.46753, -176.34061, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, -2663.50952, -160.24120, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2653.01465, -160.24120, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2642.52148, -160.24120, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2632.81299, -160.24120, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19354, -2660.10303, -158.29739, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.82642, -173.89510, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -166.72861, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29468, -170.63242, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.31445, -170.64169, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2665.09717, -169.17073, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2648.18604, -156.60904, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.38232, -147.48315, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19384, -2648.18408, -153.97610, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2658.56250, -157.11411, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -160.32449, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2659.97534, -132.32532, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19390, -2658.46753, -163.52660, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -157.11189, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2662.26050, -132.32439, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19434, -2663.93408, -147.41185, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2658.46948, -148.18198, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -98.85000, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2663.94531, -140.56631, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2658.46753, -148.31380, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2662.27881, -147.46451, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19361, -2659.99463, -147.46649, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, -2663.50952, -152.36440, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2648.14624, -137.21390, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2642.52148, -152.36440, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2632.81299, -152.36440, 4.14410,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2653.01465, -152.36440, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2637.64502, -142.74126, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2648.14624, -142.75191, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2632.81299, -142.74130, 4.14410,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2637.64502, -137.21390, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2632.81299, -137.21390, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2673.99487, -127.42660, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2663.50171, -101.39870, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2653.00757, -127.58770, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2642.51294, -127.58770, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19384, -2658.56226, -163.52577, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29077, -159.80881, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -2664.65820, -128.50214, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2674.41309, -131.70534, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.68213, -159.81242, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2663.91260, -149.15889, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.28882, -152.18903, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29077, -149.15787, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -2658.56250, -148.33450, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2665.37329, -130.01945, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2665.33228, -149.16394, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2669.68408, -155.71646, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.55688, -172.20625, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.82642, -170.68805, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.49878, -182.75285, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.30469, -184.39581, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19361, -2648.20190, -179.57060, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -173.15390, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.20190, -176.36250, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -169.95320, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.29321, -152.49135, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2632.37793, -162.86290, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2632.36035, -184.39775, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2641.91699, -184.39780, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2648.18604, -179.03979, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -180.24181, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -181.59048, 5.81150,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49072, -182.58891, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -179.55290, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -182.73289, 6.00550,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -99.25320, 5.81150,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2627.49658, -175.11740, 6.04550,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2627.49658, -178.43919, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -182.73289, 5.81150,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -164.26981, 5.81150,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2627.49658, -167.45641, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -159.09360, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -153.44341, 5.81150,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2627.49658, -123.42810, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -120.93520, 5.81150,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2627.49658, -114.75170, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -110.09770, 5.81150,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2627.49658, -103.85390, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49512, -107.17570, 6.05950,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49512, -107.17569, 5.81150,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -99.25320, 6.03550,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2627.49658, -113.30760, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -118.02740, 6.04350,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -118.02740, 5.81150,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -110.09770, 6.03550,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2627.49658, -125.62650, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -128.84210, 6.04350,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -128.84210, 5.81150,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -120.93520, 6.04350,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2627.49658, -156.24159, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -161.34940, 6.05150,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -161.34940, 5.81150,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -153.44341, 6.03550,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2627.49658, -169.99930, 2.48950,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -172.18260, 6.04350,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -172.18260, 5.81150,   -90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2627.49658, -164.26981, 6.03550,   -90.00000, 0.00000, 180.00000);
CreateDynamicObject(19354, -2627.50073, -172.03819, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.50073, -175.26112, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.50073, -182.59090, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2637.09180, -175.35361, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18408, -182.76740, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18408, -179.56081, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18604, -169.92096, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18604, -173.73090, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.56250, -176.33907, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2637.10718, -161.34479, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2637.09180, -182.81970, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.36328, -173.67592, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19361, -2648.20190, -163.55040, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.49951, -153.58740, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2648.18408, -160.63210, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2641.83618, -159.82816, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.09180, -172.15779, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2637.09180, -164.54961, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2641.82129, -170.63972, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19384, -2648.18408, -176.36430, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18408, -172.30260, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -160.35249, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.20190, -166.75169, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.28369, -159.82620, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2643.46606, -152.48531, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2633.87061, -152.48531, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.49951, -164.41093, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2637.10718, -154.15730, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.18408, -166.75310, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.49951, -161.20500, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2645.05103, -96.51160, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2630.95898, -136.42360, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -128.70100, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -153.91251, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -130.80736, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -150.71300, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2664.95264, -158.29541, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2663.29492, -131.70145, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2674.39917, -96.62655, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2673.44336, -149.16264, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2669.68213, -152.81911, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -130.04677, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2669.69922, -109.10843, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2663.94360, -130.01950, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19379, -2663.50171, -127.58775, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2663.50171, -117.95880, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2663.50171, -108.34100, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -127.60950, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -121.21000, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -124.41020, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -118.01020, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -111.61020, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -114.81360, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -108.42160, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -130.02570, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2657.74487, -182.98402, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19434, -2649.77173, -97.29572, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2658.44995, -97.28966, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2664.95117, -96.51160, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2672.91821, -131.70140, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2674.42798, -107.59162, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2658.60815, -98.24773, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2664.96582, -121.05490, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2658.60815, -126.84618, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.61011, -124.40870, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -121.19690, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -117.99670, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.21582, -101.32348, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.20972, -123.65500, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -108.39970, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -102.03730, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29346, -130.11415, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2663.29224, -110.62407, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2632.27783, -96.57950, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2673.07764, -96.62910, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2658.61011, -98.85370, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29565, -98.32365, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -98.18130, 5.94950,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(19367, -2679.29736, -116.90270, 5.79350,   90.00000, 0.00000, 180.00000);
CreateDynamicObject(19367, -2679.29736, -106.07230, 5.95750,   90.00000, 0.00000, 180.00000);
CreateDynamicObject(19354, -2679.27930, -105.93559, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29541, -109.13910, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29541, -116.76190, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29541, -119.94960, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29541, -127.58330, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.42407, -118.01977, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.69458, -119.53727, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2663.30786, -121.05290, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2664.96924, -110.62600, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19379, -2632.81299, -127.58770, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2632.81299, -117.95880, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2642.51294, -117.95880, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2653.00757, -117.95880, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2653.00757, -108.34100, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2642.51294, -108.34100, 4.14810,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2632.81299, -108.34100, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2653.00757, -101.39870, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2642.51294, -101.39870, 4.14610,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19379, -2632.81299, -101.39870, 4.14410,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -157.15891, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19453, -2632.35181, -149.25200, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19453, -2648.34058, -136.43919, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2649.05762, -98.01100, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19434, -2656.89526, -97.29616, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2641.82690, -96.51160, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19361, -2658.45801, -102.04390, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -98.11643, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -105.23130, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -101.30580, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -107.70160, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.34058, -104.50170, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -110.88170, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -117.26770, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.34058, -114.07310, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -120.46170, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -126.84110, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19453, -2632.23682, -131.63020, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2658.61011, -111.61030, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.61011, -114.81550, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.51880, -98.15366, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -107.70850, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -101.23960, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.21167, -129.87769, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.20972, -104.50730, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -110.90510, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.20972, -114.07010, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -117.26930, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -120.48170, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -126.83560, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2663.48267, -96.62909, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2632.35449, -131.46120, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2633.75195, -96.58150, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2648.20972, -98.04732, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.51880, -129.98209, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -99.39517, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -107.03510, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -110.23810, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -117.88900, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2637.11694, -108.79971, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -128.71170, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.35474, -96.58148, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2643.40161, -116.50750, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2633.90479, -131.46320, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, -2669.15430, -142.57050, 4.14620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.43457, -101.24760, 4.15020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.43457, -110.86470, 4.15020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.43457, -120.48940, 4.15020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.43457, -139.70959, 4.15020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.43457, -149.32590, 4.15020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.43457, -158.94910, 4.15020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.43457, -168.56520, 4.15020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.43457, -178.19310, 4.15220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.43457, -130.09370, 4.15020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2658.96338, -137.06200, 4.15420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.96362, -144.39177, 4.15220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2658.96338, -142.58929, 4.15220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(14394, -2647.31396, -145.23349, 3.87840,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, -2641.19629, -144.52176, 4.61220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.86816, -144.52180, 4.61020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(14394, -2642.44312, -135.70067, 6.86440,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19434, -2663.93384, -132.44427, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2674.57617, -132.31149, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2635.61523, -134.72490, 5.06470,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(14394, -2634.82056, -140.77319, 4.32840,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(14394, -2641.16406, -135.70396, 5.94040,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19377, -2674.17041, -179.71629, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -179.71629, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -179.71629, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -179.71629, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -171.40550, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -161.78340, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -152.16209, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -142.54050, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2666.42627, -136.44482, 9.12620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -123.28870, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -113.67160, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -104.03920, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -101.16500, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -171.40550, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -161.78340, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -152.16209, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -142.54050, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -132.91769, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -123.28870, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -113.67160, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -104.03920, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -101.16500, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -171.40550, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -161.78340, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -123.28870, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -113.67160, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -104.03920, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -101.16500, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -171.40550, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -153.97301, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -104.03920, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -113.67160, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2648.50464, -135.00819, 7.62220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -101.16500, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -123.28870, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -126.91420, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2629.06519, -134.99170, 7.62270,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2635.61523, -138.21135, 5.06470,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2629.06519, -144.59399, 7.62270,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2629.30542, -144.60980, 7.62070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2629.30542, -134.98610, 7.62070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -161.78340, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -153.97301, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(3850, -2681.11523, -107.53460, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2674.57275, -147.46950, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2681.10938, -161.40150, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2682.85376, -99.07595, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -102.49820, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -102.12370, 7.61870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -111.72550, 7.61870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -154.21310, 7.61670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -105.93320, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -109.35950, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -112.80090, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -116.22940, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -119.66230, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -123.08520, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2681.11230, -97.33426, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2679.30347, -98.03350, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -98.32480, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -105.93090, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -109.13040, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2679.30469, -99.90450, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30469, -121.61490, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2679.30469, -116.76130, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -119.95190, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -127.58370, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -130.79401, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2679.30469, -104.33140, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30469, -110.80600, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30469, -115.20720, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30469, -126.00740, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2674.57617, -132.31149, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2664.95410, -132.31281, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2665.09204, -147.46581, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2679.30078, -148.98630, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -152.18900, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -159.80949, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -163.01050, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -170.63550, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30103, -173.83260, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -181.44749, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.29883, -182.89760, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2681.11523, -128.24138, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2681.11523, -118.34570, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2681.12427, -121.34170, 7.61870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -121.34170, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -126.49030, 7.61470,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -169.37390, 7.61870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -159.75490, 7.61870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -126.51280, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -182.03563, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -178.59750, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -175.16119, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -171.73090, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -168.29390, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -164.86710, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -161.44031, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -158.02811, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -154.60361, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -151.17850, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2681.10913, -149.44084, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2623.88379, -181.73505, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2681.10938, -172.25980, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -158.24890, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -179.91541, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -153.83051, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -164.72009, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -169.13370, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -175.52499, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2674.57397, -96.51160, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2661.61694, -96.50960, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2645.05103, -96.51160, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2641.82690, -96.51160, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2632.22339, -96.51160, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2627.49463, -99.39500, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -98.03010, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -107.03270, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -110.23760, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -117.88680, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -121.07560, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -128.70100, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -130.14223, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49878, -150.75410, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -153.58299, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -161.20641, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -164.41180, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -172.04581, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -175.26109, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49072, -182.58890, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49072, -182.89690, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2632.22314, -184.41440, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2641.82959, -184.41440, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2648.25732, -184.41440, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2658.54590, -184.41440, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2664.95313, -184.41440, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2674.56934, -184.41440, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2681.12427, -178.97740, 7.61870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(3850, -2681.10938, -183.76820, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2625.58984, -178.69052, 7.61870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -169.07671, 7.61870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -159.45450, 7.61870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -157.25720, 7.61670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -102.23640, 7.61670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -111.85490, 7.61670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -121.45330, 7.61670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(3850, -2625.63379, -183.46669, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2625.62427, -173.65370, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2623.88379, -178.30890, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -174.87270, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -171.43150, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -168.00070, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -164.55460, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -161.11340, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -157.67380, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -98.65960, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2625.61279, -119.56290, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2625.62427, -162.84430, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2623.88379, -154.24460, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2625.62427, -152.47617, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2658.45215, -134.32080, 11.71370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -126.11250, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -122.68410, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -119.25900, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -115.81900, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -112.38060, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -108.94220, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -105.51020, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -102.07650, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -101.70020, 7.61470,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(3850, -2625.60913, -131.28674, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2625.61279, -96.92551, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2625.61279, -108.63920, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, -2642.75244, -126.91420, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, -2644.03101, -140.43221, 7.62220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, -2647.50806, -140.46809, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, -2638.88159, -140.45190, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, -2644.01147, -140.46809, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, -2640.53857, -140.43216, 7.62420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(1649, -2627.49463, -100.93520, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -155.11510, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -122.70450, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -116.22400, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -111.83090, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -105.34820, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -127.13210, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -181.09419, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -159.54961, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -165.97090, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -170.39810, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -176.66991, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2643.52148, -131.46315, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.52075, -121.07260, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.38623, -108.70673, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2643.37964, -107.28360, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2632.40259, -119.53946, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.13062, -118.02286, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2641.85986, -116.50555, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2641.84473, -107.28162, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2664.95117, -96.51160, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19453, -2632.35181, -149.25200, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19453, -2632.24463, -131.63020, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19361, -2648.34058, -130.02570, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -126.84110, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.34058, -123.65430, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -120.46170, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -117.26770, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.34058, -114.07310, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -110.88170, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -107.70160, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.34058, -104.50170, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -101.30580, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -98.11640, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2649.05762, -98.01100, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19434, -2649.77173, -97.29570, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2657.61084, -98.01100, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19434, -2656.89526, -97.29620, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -98.85000, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -102.04390, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -105.23130, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -108.42160, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -111.61020, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -114.81360, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -118.01020, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -121.21000, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -124.41020, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -127.60950, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -130.80740, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2658.46753, -148.31380, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -150.71300, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -153.91251, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -157.11189, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -160.32449, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.46753, -163.52660, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -166.72861, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -169.93750, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -173.14529, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.46753, -176.34061, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -179.54530, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -182.73840, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2657.74487, -182.98399, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19434, -2657.03027, -183.69910, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2649.77295, -183.69670, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2649.05762, -182.98120, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19361, -2648.20190, -182.78250, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -179.57060, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.20190, -176.36250, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -173.15390, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -169.95320, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.20190, -166.75169, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -163.55040, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -160.35249, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -157.15891, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.20190, -153.97580, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -150.76781, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19453, -2658.45972, -144.46529, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19453, -2672.79492, -132.32410, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2623.87695, -129.55362, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2648.18237, -146.95799, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.61011, -124.40870, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -121.19690, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2663.30786, -121.05290, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2664.96582, -121.05490, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.69458, -119.53730, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.42407, -118.01980, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2679.29541, -119.94960, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29541, -127.58530, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29346, -130.11420, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.41309, -131.70531, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2672.91821, -131.70140, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2663.29492, -131.70140, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2665.37329, -130.01950, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -2664.65820, -128.50211, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2663.94360, -130.01950, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2663.29492, -131.70140, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2658.61011, -130.04680, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.60815, -126.84620, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29541, -116.76190, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -117.99670, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.61011, -114.81550, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -111.61030, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2663.29224, -110.62410, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2664.96924, -110.62600, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.69922, -109.10840, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.42798, -107.59160, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2679.29541, -109.13910, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29541, -116.76190, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.27930, -105.93560, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29565, -98.32360, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.39917, -96.62650, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2673.07764, -96.62910, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2663.48267, -96.62910, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2658.61011, -98.85370, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -102.03730, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.61011, -105.23160, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -108.39970, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.60815, -98.24770, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.35474, -96.58150, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2633.75195, -96.58150, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2632.27783, -96.57950, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.51880, -98.15370, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -99.39520, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -107.03510, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.38623, -108.70670, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.11694, -108.79970, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2641.84473, -107.28160, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2643.37964, -107.28360, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2648.20972, -107.70850, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.20972, -104.50730, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -101.23960, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -98.04730, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.21582, -101.32350, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -110.90510, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.20972, -114.07010, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -117.26930, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.40161, -116.50750, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2641.85986, -116.50550, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.13062, -118.02290, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.40259, -119.53950, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.52075, -117.88900, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -110.23810, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -121.07260, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -128.71170, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.51880, -129.98210, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.35449, -131.46120, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2633.90479, -131.46320, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2643.52148, -131.46320, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2648.21167, -129.87770, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -126.83560, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.20972, -123.65500, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -120.48170, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.18408, -153.97610, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.46606, -152.48531, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2633.87061, -152.48531, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.10718, -154.15730, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.29321, -152.49130, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.49951, -153.58740, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.49951, -161.20500, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.37793, -162.86290, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.10718, -161.34480, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2641.83618, -159.82820, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2643.28369, -159.82620, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2648.18408, -160.63210, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18604, -156.60899, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.18408, -166.75310, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18604, -169.92101, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.31445, -170.64169, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2641.82129, -170.63969, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.09180, -172.15781, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.36328, -173.67590, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.50073, -172.03819, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.49951, -164.41090, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2637.09180, -172.15781, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2637.09180, -175.35361, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18408, -172.30260, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18604, -173.73090, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.18408, -176.36430, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18408, -179.56081, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18408, -182.76740, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.30469, -184.39580, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2641.91699, -184.39780, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2632.36035, -184.39780, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.50073, -182.59090, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2637.09180, -182.81970, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.49878, -182.75290, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.50073, -175.26109, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2658.56226, -169.94611, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.56226, -163.52580, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2660.04736, -169.17270, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2665.09717, -169.17070, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.82642, -170.68800, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.55688, -172.20630, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2679.29468, -170.63840, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29370, -163.00790, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.41309, -161.32941, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.68213, -159.81239, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2664.95264, -158.29539, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2660.10303, -158.29739, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2658.56250, -157.11411, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.56250, -150.71280, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -2658.56250, -148.33450, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2663.45288, -147.48869, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2663.91064, -149.64259, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2663.91260, -149.15891, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -2664.62622, -151.16040, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2666.04761, -149.64349, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2666.04590, -149.14796, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2673.07153, -147.48869, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2674.38232, -147.48320, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2679.29077, -149.15790, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.28882, -152.18900, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29077, -159.80881, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.56250, -176.33910, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.56250, -179.54491, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.56250, -182.75951, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.57471, -184.40511, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2664.79883, -184.40590, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2674.42676, -184.40590, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.82642, -182.75510, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29395, -182.75380, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29590, -181.44690, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29492, -173.82620, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2669.82642, -173.89510, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2669.82642, -173.89510, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14394, -2660.37329, -136.29007, 8.37840,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(19434, -2648.35498, -140.44972, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -132.91769, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2671.10840, -142.69289, 9.12820,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(14394, -2664.28735, -143.66330, 10.40440,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, -2673.97729, -136.51170, 9.12420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19427, -2665.33301, -151.16238, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19377, -2632.60205, -127.61090, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.25439, -152.17529, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.79492, -127.61090, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2658.23267, -144.88600, 11.16220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.83105, -127.61090, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.27930, -127.61086, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17920, -152.17532, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.71216, -152.17529, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.60205, -152.17529, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.77954, -152.17529, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, -2666.26807, -140.44051, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, -2660.07861, -140.44049, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, -2663.56763, -140.44051, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, -2678.62744, -134.17310, 11.16620,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, -2663.56763, -140.46851, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, -2660.07861, -140.46851, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.30884, -127.61090, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.26099, -137.21764, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.77954, -144.62250, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.60205, -144.62250, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.77954, -137.21800, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.60205, -137.21800, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -161.78340, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -161.78340, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -161.78340, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -161.78340, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -161.78340, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -171.40550, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -179.71629, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -179.71629, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -179.71629, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -179.71629, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -179.71629, 11.16220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -171.40550, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -171.40550, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -171.40550, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -171.40550, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -123.28870, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -123.28870, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -123.28870, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -123.28870, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -123.28870, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -113.67160, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -113.67160, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -113.67160, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -113.67160, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -113.67160, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -104.03920, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -104.03920, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -104.03920, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -104.03920, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -104.03920, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -101.16500, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -101.16500, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -101.16500, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -101.16500, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -101.16500, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2679.30273, -142.57303, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2679.30469, -137.19991, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, -2666.26807, -140.46852, 11.16620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19435, -2677.02881, -134.16518, 11.16620,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, -2677.02881, -137.64281, 11.16620,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, -2677.02881, -141.12289, 11.16620,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, -2677.02881, -144.61909, 11.16620,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(14394, -2664.92749, -143.66330, 9.99440,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, -2653.26099, -144.62213, 11.16420,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2627.49658, -144.52083, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2627.49463, -136.55580, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -181.44749, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.29883, -182.89760, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30103, -173.83260, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -170.63550, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -163.01050, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -159.80949, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -152.18900, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30078, -148.98630, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2679.30273, -142.57300, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2679.30469, -137.19991, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19435, -2677.02881, -145.66570, 11.16620,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, -2678.62744, -145.62415, 11.16620,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, -2678.62744, -142.14720, 11.16620,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, -2678.62744, -138.66660, 11.16620,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19435, -2678.62744, -135.19321, 11.16620,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19362, -2679.30469, -130.79401, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -127.58370, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -119.95190, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -116.76130, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -109.13040, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -105.93090, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30469, -98.32480, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2679.30347, -98.03350, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2674.57397, -96.51160, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2664.95117, -96.51160, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2661.61694, -96.50960, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2645.05103, -96.51160, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2641.82690, -96.51160, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2632.22339, -96.51160, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2627.49463, -98.03010, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -99.39500, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -107.03270, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -110.23760, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -117.88680, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -121.07560, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -128.70100, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -130.14220, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49878, -133.21629, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -153.58299, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -161.20641, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -164.41180, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -172.04581, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49463, -175.26109, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49072, -182.58890, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49072, -182.89690, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2632.22314, -184.41440, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2641.82959, -184.41440, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2648.25732, -184.41440, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19362, -2658.54590, -184.41440, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2664.95313, -184.41440, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2674.56934, -184.41440, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2654.68750, -186.29150, 11.15870,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2625.58984, -169.07671, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -159.45450, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -142.30260, 11.15670,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -121.45330, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -111.85490, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -102.23640, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -101.70020, 11.15870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -102.12370, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -111.72550, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -123.44360, 11.15870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -154.21310, 11.15870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -159.75490, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -169.37390, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -178.97740, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(3850, -2681.10938, -183.76820, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2682.84546, -182.03560, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -178.59750, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -175.16119, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -171.73090, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2681.10938, -172.25980, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2682.84546, -168.29390, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -164.86710, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -161.44031, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -158.02811, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2681.10938, -161.40150, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2682.84546, -154.60361, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.84546, -151.17850, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2681.10913, -149.44080, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2681.11523, -128.24139, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2682.85376, -126.51280, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -123.08520, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -119.66230, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -116.22940, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -112.80090, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -109.35950, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -105.93320, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -102.49820, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2682.85376, -99.07600, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2659.46875, -94.59376, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2681.11523, -107.53460, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2681.11523, -118.34570, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2657.64233, -188.02209, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2623.88379, -181.73500, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -178.30890, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -174.87270, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -171.43150, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -168.00070, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -164.55460, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -161.11340, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -157.67380, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.88379, -154.24460, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2625.62427, -152.47620, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2625.62427, -162.84430, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2625.62427, -173.65370, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2625.60913, -147.11050, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2623.87695, -135.13580, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -126.11250, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -122.68410, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -119.25900, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -115.81900, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -112.38060, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -108.94220, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -105.51020, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -102.07650, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -98.65960, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2625.61279, -96.92550, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2625.61279, -119.56290, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2625.61279, -108.63920, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -100.93520, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -105.34820, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -111.83090, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -116.22400, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -122.70450, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -127.13210, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -155.11510, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -159.54961, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -165.97090, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -170.39810, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -176.66991, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -181.09419, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -179.91541, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -175.52499, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -169.13370, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -164.72009, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -158.24890, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30078, -153.83051, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30469, -126.00740, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30469, -121.61490, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30469, -115.20720, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30469, -110.80600, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30469, -104.33140, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2679.30469, -99.90450, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2627.49463, -147.17039, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2643.61084, -141.16760, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2668.66211, -149.32147, 4.17670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2633.83960, -149.25000, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2643.47168, -149.25000, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19435, -2640.53662, -140.46809, 7.62620,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2643.61108, -131.63220, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2643.61084, -141.16760, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2643.61084, -139.73720, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2633.98926, -131.63220, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2676.32153, -142.60730, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2633.98926, -131.63220, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2630.95898, -136.42360, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2630.96094, -144.39940, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2633.83960, -149.25000, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2643.47168, -149.25000, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19435, -2667.92065, -140.45250, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2643.61084, -139.73720, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2643.61108, -131.63220, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2663.19067, -139.73732, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -147.46381, -145.91341, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2676.32349, -136.93491, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2663.18677, -132.32410, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2663.19067, -141.16762, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19435, -2638.88159, -140.45190, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2672.79492, -132.32610, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2674.57275, -147.46950, 9.41770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19435, -2667.92065, -140.45250, 12.99370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2663.19067, -141.16760, 12.99370,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2663.19067, -139.73730, 12.99370,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2665.09204, -147.46581, 12.99370,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2674.57275, -147.46950, 12.99370,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2676.32153, -142.60730, 12.99370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2676.32349, -136.93491, 12.99370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2672.79492, -132.32610, 12.99370,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2663.18677, -132.32410, 12.99370,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2648.18237, -143.53880, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2658.45215, -137.74890, 11.71370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.28882, -152.18900, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29077, -149.15790, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.38232, -147.48320, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2673.07153, -147.48869, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2663.45288, -147.48869, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2666.04761, -149.64349, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -2665.33301, -151.16240, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19427, -2664.62622, -151.16040, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2663.91064, -149.64259, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2663.91260, -149.15891, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -2658.56250, -148.33450, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.56250, -150.71280, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2658.56250, -157.11411, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2660.10303, -158.29739, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2664.95264, -158.29539, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.68213, -159.81239, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.41309, -161.32941, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2679.29077, -159.80881, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2666.04590, -149.14799, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2658.56250, -157.11411, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.56226, -163.52580, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2658.56226, -169.94611, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2660.04736, -169.17270, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2665.09717, -169.17070, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.82642, -170.68800, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.55688, -172.20630, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2679.29468, -170.63840, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29370, -163.00790, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2669.82642, -173.89510, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2658.56226, -169.94611, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.56250, -176.33910, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.56250, -179.54491, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.56250, -182.75951, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.57471, -184.40511, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2664.79883, -184.40590, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.82642, -182.75510, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.42676, -184.40590, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2679.29395, -182.75380, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29590, -181.44690, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29492, -173.82620, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.50073, -182.59090, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.49878, -182.75290, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.36035, -184.39780, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.09180, -182.81970, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.30469, -184.39580, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2648.18408, -182.76740, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18408, -179.56081, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.18408, -176.36430, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18604, -173.73090, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18408, -172.30260, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.31445, -170.64169, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.09180, -175.35361, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.36328, -173.67590, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.50073, -175.26109, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2641.82129, -170.63969, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2641.91699, -184.39780, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2648.18604, -169.92101, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.18408, -166.75310, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2648.18408, -160.63210, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.28369, -159.82620, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2641.83618, -159.82820, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.10718, -161.34480, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.37793, -162.86290, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.49951, -164.41090, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.50073, -172.03819, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2648.18408, -160.63210, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.18408, -153.97610, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.46606, -152.48531, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2633.87061, -152.48531, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.10718, -154.15730, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.29321, -152.49130, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.49951, -153.58740, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.49951, -161.20500, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.18604, -156.60899, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.61011, -124.40870, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.60815, -126.84620, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -130.04680, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19427, -2664.65820, -128.50211, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2663.94360, -130.01950, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2665.37329, -130.01950, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2672.91821, -131.70140, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2674.41309, -131.70531, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2679.29346, -130.11420, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29541, -127.58530, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29541, -119.94960, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2674.42407, -118.01980, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.69458, -119.53730, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2664.96582, -121.05490, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2663.30786, -121.05290, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2658.61011, -121.19690, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -117.99670, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.61011, -114.81550, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -111.61030, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2663.29224, -110.62410, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2664.96924, -110.62600, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2674.42798, -107.59160, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.69922, -109.10840, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.29541, -109.13910, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -108.39970, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.61011, -105.23160, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -102.03730, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.61011, -98.85370, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2658.60815, -98.24770, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2663.48267, -96.62910, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2673.07764, -96.62910, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2674.39917, -96.62650, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2679.29565, -98.32360, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2679.27930, -105.93560, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -128.71170, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.51880, -129.98210, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.35449, -131.46120, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2633.90479, -131.46320, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2643.52148, -131.46320, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2648.21167, -129.87770, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -126.83560, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.20972, -123.65500, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -120.48170, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -117.26930, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.40161, -116.50750, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2641.85986, -116.50550, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2637.13062, -118.02290, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.40259, -119.53950, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.52075, -121.07260, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -117.88900, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -110.23810, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2632.38623, -108.70670, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2641.84473, -107.28160, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2643.37964, -107.28360, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2648.20972, -107.70850, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -110.90510, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.20972, -114.07010, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2637.11694, -108.79970, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2648.20972, -104.50730, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -101.23960, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.20972, -98.04730, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2643.35474, -96.58150, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2633.75195, -96.58150, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2632.27783, -96.57950, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2627.51880, -98.15370, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -99.39520, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2627.52075, -107.03510, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2648.21582, -101.32350, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -150.76781, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.20190, -153.97580, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -157.15891, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -160.35249, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -163.55040, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.20190, -166.75169, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -169.95320, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -173.15390, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.20190, -176.36250, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -179.57060, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.20190, -182.78250, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2649.05762, -182.98120, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19434, -2649.77295, -183.69670, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2657.03027, -183.69910, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2657.74487, -182.98399, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19361, -2658.46753, -182.73840, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -179.54530, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.46753, -176.34061, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -173.14529, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -169.93750, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -166.72861, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.46753, -163.52660, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -160.32449, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.46753, -157.11189, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2627.61230, -133.22260, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -150.71300, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2658.45801, -148.31799, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -130.02570, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -126.84110, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.34058, -123.65430, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -120.46170, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -117.26770, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.34058, -114.07310, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -110.88170, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -107.70160, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2648.34058, -104.50170, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -101.30580, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2648.34058, -98.11640, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2649.05762, -98.01100, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19434, -2649.77173, -97.29570, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2656.89526, -97.29620, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2657.61084, -98.01100, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19361, -2658.45801, -98.85000, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -102.04390, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -105.23130, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -108.42160, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -111.61020, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -114.81360, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -118.01020, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -121.21000, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19390, -2658.45801, -124.41020, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -127.60950, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2658.45801, -130.80740, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19434, -2658.45947, -140.45277, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2663.18896, -147.47148, 12.99370,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19434, -2658.45996, -148.18739, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19453, -2632.27124, -149.25211, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19453, -2632.30566, -131.54190, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19453, -2633.85278, -149.25011, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19453, -2643.47217, -149.25014, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19453, -2643.61182, -131.54390, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19453, -2633.99170, -131.54390, 12.96970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19361, -2658.46753, -153.91251, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49878, -150.75410, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19362, -2627.49878, -147.56470, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19361, -2627.61230, -147.57025, 12.96970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -179.71629, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -179.71629, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -179.71629, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -179.71629, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -179.71629, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -171.40550, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -171.40550, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -171.40550, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -171.40550, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -171.40550, 14.68820,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -161.78340, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.60205, -152.17529, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -161.78340, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.77954, -152.17529, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -161.78340, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.25439, -152.17529, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -161.78340, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -161.78340, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17920, -152.17529, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.71216, -152.17529, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -101.16500, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -101.16500, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -101.16500, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -101.16500, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -101.16500, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -104.03920, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -104.03920, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -104.03920, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -104.03920, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -104.03920, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -113.67160, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -113.67160, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -113.67160, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -113.67160, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -113.67160, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17041, -123.28870, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -123.28870, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -123.28870, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -123.28870, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -142.53799, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -123.28870, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2632.56665, -132.91370, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -132.91370, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2642.75244, -142.53799, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -142.53799, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2653.21997, -132.91370, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -132.91370, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2663.69312, -142.53799, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17920, -142.53799, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, -2674.17920, -132.91370, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -178.69051, 11.16070,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2652.11157, -186.29153, 11.16070,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(3850, -2625.63379, -183.46671, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2659.41455, -186.29094, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2652.48657, -188.02010, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2655.91797, -188.02010, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2649.04663, -188.02008, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2647.32202, -186.28380, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2652.11157, -186.29150, 7.61870,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2654.68750, -186.29150, 7.61670,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(3850, -2647.32202, -186.28380, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2649.04663, -188.02010, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2652.48657, -188.02010, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2657.64233, -188.02209, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2655.91797, -188.02010, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2659.41455, -186.29089, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2654.68750, -186.29150, 14.69220,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2625.58984, -178.69051, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -169.07671, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -159.45450, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -157.25720, 11.15870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -157.25720, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -126.49030, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -121.45330, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -111.85490, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2652.11157, -94.57830, 14.69220,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2681.12427, -102.12370, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -111.72550, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -121.34170, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -123.44360, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -154.21310, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -159.75490, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -169.37390, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2681.12427, -178.97740, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2652.11157, -186.29150, 14.69020,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2625.58984, -102.23640, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2654.68750, -94.57830, 14.69020,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2652.11157, -94.57830, 11.16420,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2654.68750, -94.57830, 11.16220,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2652.11157, -94.57830, 7.62420,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(19454, -2654.68750, -94.57830, 7.62220,   0.00000, 90.00000, 90.00000);
CreateDynamicObject(3850, -2681.11230, -97.33430, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2657.72607, -92.85648, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2654.28906, -92.85650, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2650.84351, -92.85650, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2649.14453, -92.85450, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2647.39990, -94.59002, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2657.72607, -92.85650, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2659.46875, -94.59380, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2654.28906, -92.85650, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2650.84351, -92.85650, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2649.14453, -92.85450, 8.19770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2647.39990, -94.59000, 8.19770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2673.44189, -149.64349, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2357, -2676.93506, -156.02290, 4.63130,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1744, -2658.49512, -148.24480, 5.93860,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2025, -2663.28564, -148.06343, 4.22890,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2120, -2675.73315, -155.19131, 4.86620,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1736, -2660.25049, -147.88651, 6.47850,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2267, -2663.79053, -149.82240, 6.16340,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2108, -2669.00806, -157.66351, 4.24100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1737, -2660.29248, -148.04253, 4.22300,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1706, -2666.35059, -151.75610, 4.21570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(14720, -2674.02539, -149.09189, 4.20760,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2563, -2661.12231, -152.98483, 4.21010,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(14867, -2662.64551, -157.69666, 5.74990,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, -2630.96094, -144.39940, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19446, -2673.07153, -147.48869, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.43823, -151.16000, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19446, -2663.45288, -147.48868, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2665.34009, -149.64348, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2658.56250, -150.71280, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2665.42798, -151.16197, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2668.62573, -151.16200, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2120, -2661.23877, -148.04790, 4.86620,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2120, -2676.89258, -153.31010, 4.86620,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2120, -2676.93848, -158.68651, 4.86620,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2120, -2675.68140, -156.94438, 4.86620,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19354, -2663.91064, -149.64258, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19384, -2671.92261, -151.16200, 5.92270,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19354, -2669.68213, -156.63820, 5.92270,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2296, -2669.28516, -156.51001, 4.21190,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2108, -2663.52686, -151.00620, 4.24100,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2268, -2665.86768, -151.75491, 5.70698,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2265, -2667.76563, -157.71809, 6.07800,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(2264, -2659.16113, -154.59894, 6.10820,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2836, -2660.53589, -151.64340, 4.23080,   0.00000, 0.00000, 15.00000);
CreateDynamicObject(2571, -2671.26782, -156.18591, 4.21710,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2517, -2665.09741, -150.55431, 4.24790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2514, -2665.97119, -148.74550, 4.25670,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2515, -2671.64795, -147.86238, 5.32870,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2522, -2670.01440, -150.59053, 4.25590,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2263, -2670.26270, -157.75566, 5.53410,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1649, -2663.95435, -144.39040, 6.01060,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2663.95435, -135.46091, 6.01060,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -156.00410, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -166.82640, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -177.64020, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -153.83051, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -158.24890, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -164.72009, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -169.13370, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -175.52499, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -179.91541, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -175.52499, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -179.91541, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -169.13370, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -164.72009, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -158.24890, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30078, -153.83051, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30469, -123.76470, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30469, -112.94250, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30469, -102.12730, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30469, -121.61490, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30469, -126.00740, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30469, -126.00740, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30469, -121.61490, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30469, -115.20720, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30469, -110.80600, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30469, -104.33140, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2679.30469, -99.90450, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -103.21770, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -114.05710, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -124.88600, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -105.34820, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -100.93520, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -111.83090, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -116.22400, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -122.70450, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -127.13210, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -143.74809, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -122.70450, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -116.22400, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -111.83090, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -105.34820, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2656.47070, -96.51160, 12.94570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2627.49463, -157.39639, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -168.22800, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -178.87981, 5.87860,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -155.11510, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -159.54961, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -165.97090, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -170.39810, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -176.66991, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -181.09419, 9.41770,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -181.09419, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -176.66991, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -170.39810, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -165.97090, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -159.54961, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -155.11510, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19454, -2625.58984, -126.49030, 11.15870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -138.19150, 11.15870,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -129.55360, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -145.38290, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -142.01070, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2623.87695, -138.58150, 11.73970,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3850, -2625.60913, -131.28670, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3850, -2625.60913, -133.40981, 11.73970,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -127.13210, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -137.00079, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2627.49463, -143.74809, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -137.00079, 12.94570,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1649, -2627.49463, -100.93520, 12.94570,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(1649, -2652.06128, -96.51160, 12.94570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2656.47070, -96.51160, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2656.45142, -184.41440, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2648.91699, -96.51160, 5.87860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2653.32642, -96.51160, 5.87860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2657.75220, -96.51160, 5.87860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2653.32642, -96.51160, 5.87860,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2657.75220, -96.51160, 5.87860,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2648.91699, -96.51160, 5.87860,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2652.06128, -96.51160, 9.41770,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2656.47070, -96.51160, 9.41770,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2656.47070, -96.51160, 12.94570,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2652.06128, -96.51160, 12.94570,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2652.06128, -96.51160, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2652.06128, -184.41440, 9.41770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2656.45142, -184.41440, 12.94570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2652.06128, -184.41440, 12.94570,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2657.71509, -184.41440, 5.87860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2653.29907, -184.41440, 5.87860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2648.88843, -184.41440, 5.87860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1649, -2652.06128, -184.41440, 12.94570,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2656.45142, -184.41440, 12.94570,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2652.06128, -184.41440, 9.41770,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2656.45142, -184.41440, 9.41770,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2653.29907, -184.41440, 5.87860,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2648.88843, -184.41440, 5.87860,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1649, -2657.71509, -184.41440, 5.87860,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8326, -2679.55176, -139.89101, 11.52290,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1491, -2658.48071, -151.47154, 4.20730,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(1491, -2648.22192, -177.10541, 4.20730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.22192, -167.49651, 4.20730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.22192, -154.72169, 4.20730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.35986, -124.39870, 4.20730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.35986, -114.81930, 4.20730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.35986, -105.24590, 4.20730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -105.97445, 4.20730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -115.55910, 4.20730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -177.08510, 4.20730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -125.15200, 4.20730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -164.27119, 4.20730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -177.08510, 7.69530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -177.08510, 11.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -164.27119, 7.69530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.48071, -151.47150, 7.69530,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(1491, -2648.22192, -177.10539, 7.69530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.22192, -167.49651, 7.69530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.22192, -154.72169, 7.69530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.35986, -124.39870, 7.69530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.35986, -114.81930, 7.69530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.35986, -105.24590, 7.69530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -105.97440, 7.69530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -115.55910, 7.69530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -125.15200, 7.69530,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -164.27119, 11.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.48071, -151.47150, 11.24730,   0.00000, 0.00000, 4.00000);
CreateDynamicObject(1491, -2658.40308, -125.15200, 11.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -115.55910, 11.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2658.40308, -105.97440, 11.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.35986, -105.24590, 11.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.35986, -114.81930, 11.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.35986, -124.39870, 11.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.22192, -154.72169, 11.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.22192, -167.49651, 11.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1491, -2648.22192, -177.10539, 11.24730,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19454, -2625.58984, -142.30260, 14.69020,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19454, -2625.58984, -138.19150, 14.69220,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(9339, -2671.76636, -80.41840, 2.68560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2671.76416, -80.69810, 3.41560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2626.89014, -199.92970, 3.41560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2696.30273, -93.61780, 3.41560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2696.30273, -119.70260, 3.41560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2638.24927, -80.68120, 3.41560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2683.38037, -80.69810, 3.41560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2683.37671, -199.92966, 3.41560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2671.76636, -199.92970, 3.41560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2638.20703, -199.92970, 3.41560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2696.30273, -187.01289, 3.41560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2613.96997, -187.01349, 3.41560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2613.96997, -160.93311, 3.41560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2613.96997, -134.85159, 3.41560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2613.96997, -108.75190, 3.41560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2613.96997, -93.60960, 3.41560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2626.88721, -80.68122, 3.41560,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19381, -2631.08472, -108.47430, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2631.08472, -99.70004, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2641.47021, -99.70000, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2651.82861, -99.70000, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2662.21924, -99.70000, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2672.49585, -99.70000, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2675.62427, -99.70000, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2675.62427, -109.27890, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2675.62427, -118.72000, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2675.62427, -127.69500, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2675.62427, -152.05090, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2675.62427, -161.67200, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2675.62427, -171.23241, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2675.62427, -180.84331, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2665.33008, -180.84331, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2654.84277, -180.84331, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2644.53296, -180.84331, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2634.11719, -180.84331, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2631.08472, -180.84331, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2631.08472, -171.40810, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2631.08472, -161.79250, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2631.08472, -152.17329, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2631.08472, -142.68530, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2631.08472, -133.06540, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2631.08472, -123.56560, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19381, -2631.08472, -114.01660, 3.07650,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, -2680.67578, -185.69189, 3.13390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, -2626.65210, -95.72309, 3.13390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, -2680.67578, -95.72310, 3.13390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, -2680.67578, -133.52240, 3.13390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, -2680.67578, -146.41440, 3.13390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19373, -2626.13647, -185.69189, 3.13390,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(9339, -2640.35083, -96.48480, 3.52160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2637.90015, -97.36430, 2.56960,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2628.46118, -107.12394, 2.56960,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2678.89282, -107.17090, 2.56960,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2669.37378, -97.41142, 2.56960,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2641.06836, -185.61060, 2.47160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2679.00171, -122.10127, 2.56960,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2669.41870, -131.97395, 2.56960,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2669.43604, -148.03255, 2.56960,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2669.40771, -184.03052, 2.56960,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2678.92456, -174.26332, 2.56960,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2627.92505, -174.25388, 2.56960,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2637.41919, -184.12825, 2.56960,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2625.85352, -170.98151, 2.47160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2625.85352, -144.90179, 2.47160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2625.85352, -118.95260, 2.47160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2625.85352, -110.34920, 2.47160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2641.59570, -94.92112, 2.47160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2665.72583, -94.92110, 2.47160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2680.90625, -110.32598, 2.47160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2680.90625, -119.09570, 2.47160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2680.90625, -160.96910, 2.47160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2680.90625, -171.04390, 2.47160,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2665.83325, -185.61063, 2.47160,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(647, -2680.97632, -145.99876, 4.68140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(647, -2680.71851, -185.88792, 4.68140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(647, -2680.60156, -133.58788, 4.68140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(647, -2681.08813, -95.37956, 4.68140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(647, -2625.94141, -95.45937, 4.68140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(647, -2625.83154, -186.07455, 4.68140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, -2696.07349, -133.13467, 2.99680,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, -2696.07349, -147.51961, 2.99680,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, -2650.94385, -80.90002, 2.97930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, -2659.08789, -80.93595, 2.97930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, -2650.91284, -199.71428, 2.97900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9131, -2659.08008, -199.70563, 2.97900,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, -2694.85596, -149.07550, 3.33070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, -2694.95386, -198.60408, 3.33070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, -2660.40430, -198.64609, 3.33070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, -2649.53784, -198.64610, 3.33070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, -2615.28833, -198.51950, 3.33070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, -2615.27002, -82.11806, 3.33070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, -2660.34180, -82.31586, 3.33070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, -2649.66626, -82.43526, 3.33070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, -2694.98169, -82.24707, 3.33070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(737, -2694.85596, -131.87358, 3.33070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2696.59229, -161.16220, 2.68560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2692.08423, -184.86389, 3.07420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2692.08423, -180.86391, 3.07420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2692.08423, -176.86391, 3.07420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2692.08423, -172.86391, 3.07420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2692.08423, -168.86391, 3.07420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2692.08423, -164.86391, 3.07420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2695.27710, -140.14481, 3.07420,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9339, -2694.64917, -172.79359, 2.63760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2691.97241, -119.64571, 3.07700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2691.97241, -115.64570, 3.07700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2691.97241, -111.64570, 3.07700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2691.97241, -107.64570, 3.07700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2691.97241, -103.64570, 3.07700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2691.97241, -99.64570, 3.07700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2691.97241, -95.64570, 3.07700,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2694.64917, -107.41060, 2.63760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -101.14254, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -105.14250, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -109.14250, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -113.14250, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -117.14250, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -121.14250, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -154.95810, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9339, -2615.45581, -113.21340, 2.63760,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -125.14250, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -158.95810, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -162.95810, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -166.95810, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -170.95810, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -174.95810, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2618.28174, -178.95810, 3.08650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1231, -2694.61841, -133.15179, 6.02430,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1231, -2694.64844, -147.59206, 6.02430,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1215, -2681.89478, -134.66647, 3.21650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1215, -2682.04443, -145.19769, 3.21650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2692.08423, -160.86391, 3.07420,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2960, -2693.27710, -140.14481, 3.07420,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2960, -2691.27710, -140.14481, 3.07420,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2960, -2689.27710, -140.14481, 3.07420,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2960, -2687.27710, -140.14481, 3.07420,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2960, -2685.27710, -140.14481, 3.07420,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2960, -2683.27710, -140.14481, 3.07420,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19129, -1990.11865, 110.09400, 26.63360,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19129, -1990.12024, 149.85429, 26.62260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19129, -1990.11292, 130.00481, 26.62260,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9482, -2000.28857, 109.17267, 33.13060,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19076, -1983.46008, 121.66750, 26.68300,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19076, -1983.43164, 110.89581, 26.68300,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(18787, -2047.72021, -97.24905, 35.86020,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(3461, -1981.62012, 99.19992, 26.68156,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.63843, 99.23560, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1983.67859, 99.23353, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1985.53943, 99.26337, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1987.43921, 99.25262, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1989.32373, 99.24183, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1991.16797, 99.22873, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1993.33130, 99.23000, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1995.33240, 99.21097, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1997.31360, 99.15152, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1999.15259, 99.20918, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1983.69702, 99.20081, 26.68156,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1985.54358, 99.23745, 26.68156,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1987.48926, 99.21833, 26.68156,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1989.37366, 99.20429, 26.68156,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1991.15918, 99.18326, 26.68156,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1993.34375, 99.19514, 26.68156,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1995.35767, 99.21712, 26.68156,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1997.35266, 99.14114, 26.68156,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1999.15674, 99.18986, 26.68156,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11431, -1983.22021, 103.80887, 28.09380,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19056, -1983.36816, 111.71481, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1984.42651, 110.72707, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1983.40320, 109.69505, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1982.30884, 110.66457, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1982.30884, 110.66457, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1983.56519, 120.74772, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1983.51709, 122.62978, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1984.52979, 121.66115, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1982.59082, 121.73520, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19076, -1998.33411, 125.95333, 26.68300,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19076, -1998.66260, 137.54944, 26.68300,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19076, -1998.59753, 145.89931, 26.68300,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19076, -1998.60852, 153.14709, 26.68300,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9833, -1984.14136, 103.67890, 32.32020,   0.00000, 0.00000, -2.00000);
CreateDynamicObject(3528, -1983.70544, 104.12252, 35.91530,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(14781, -1985.49695, 150.81137, 27.68370,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3819, -1985.15479, 157.29056, 27.68390,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3819, -1985.07788, 145.41577, 27.68390,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3461, -1980.84192, 118.20191, 28.01690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1982.06189, 118.18764, 28.01690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1983.22192, 118.23309, 28.01690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1984.60291, 118.15956, 28.01690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1985.72278, 118.22480, 28.01690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1980.91931, 114.19248, 28.01690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1982.25879, 114.23980, 28.01690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1983.55920, 114.28691, 28.01690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1984.81995, 114.32645, 28.01690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1985.67981, 114.35979, 28.01690,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1997.33667, 125.87476, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1998.33838, 124.67588, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1998.40906, 126.96022, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1999.21436, 125.77891, 27.16150,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3515, -1982.03345, 137.93893, 30.04250,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3528, -1982.27930, 138.24341, 33.30210,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(9833, -1981.83716, 134.28979, 32.19940,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9833, -1981.91687, 141.36255, 32.19940,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.42676, 141.45630, 35.81750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.41040, 134.26799, 35.81750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1775, -1980.78674, 131.59039, 27.78600,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(956, -1980.70837, 130.08131, 27.06610,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19056, -1981.97180, 128.09056, 27.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.95129, 126.86815, 27.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1983.21436, 128.07091, 27.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1983.17468, 126.82751, 27.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1983.15637, 125.56509, 27.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.93262, 125.60574, 27.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1984.45447, 128.09120, 27.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1984.45496, 126.84976, 27.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1984.43750, 125.56743, 27.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1983.19287, 126.84853, 28.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1984.45349, 128.11128, 28.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.99072, 128.11160, 28.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.99634, 125.52882, 28.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1984.49646, 125.59034, 28.30550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1983.20447, 126.90832, 29.48550,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, -1998.22278, 98.15770, 27.25770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, -1992.77576, 98.15770, 27.25770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, -1987.32190, 98.15770, 27.25770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, -1981.88147, 98.15770, 27.25770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, -1980.11926, 100.91460, 27.25770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1408, -1980.11926, 106.35490, 27.25770,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1408, -2000.71460, 157.37595, 27.25770,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, -2000.68335, 154.17470, 27.25770,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, -2000.68335, 148.70680, 27.25770,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, -2000.68335, 143.22900, 27.25770,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, -2000.68335, 137.74190, 27.25770,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, -2000.68335, 132.27470, 27.25770,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, -2000.68335, 126.82740, 27.25770,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1408, -2000.68335, 121.65730, 27.25770,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(5154, -1975.01245, 138.20700, 39.68430,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11470, -1975.82520, 144.77890, 47.89620,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(11470, -1975.85583, 131.58929, 47.89620,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(9833, -1976.87610, 137.69600, 45.76040,   0.00000, 0.00000, 52.00000);
CreateDynamicObject(3515, -1976.60852, 138.11200, 49.71040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3528, -1979.85059, 145.09883, 50.43550,   0.00000, 0.00000, 175.00000);
CreateDynamicObject(3528, -1979.99365, 131.79707, 50.43550,   0.00000, 0.00000, 175.00000);
CreateDynamicObject(19129, -1970.20251, 118.71318, 35.92070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19129, -1970.22437, 138.70241, 35.92070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19129, -1970.16711, 158.71201, 35.92070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1970.41052, 146.13980, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1978.41150, 146.15601, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1974.43652, 146.15500, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1978.41113, 142.18130, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1974.41602, 142.16991, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1970.42004, 142.17999, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1970.39722, 130.24899, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1974.36462, 130.23550, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1978.38208, 130.24850, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1970.39600, 134.25542, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1974.37439, 134.26430, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1978.38135, 134.22650, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1978.40955, 138.20329, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1974.40625, 138.21428, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19128, -1970.42664, 138.24562, 42.81120,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19076, -1976.94592, 138.14417, 50.51010,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3461, -1978.83521, 108.21910, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1978.33264, 108.19396, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1977.75085, 108.19433, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1977.21191, 108.13100, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1976.65112, 108.15485, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1976.10742, 108.17845, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1975.54517, 108.14179, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1975.02698, 108.18568, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1974.50134, 108.17213, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1974.02087, 108.17756, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1973.50073, 108.18345, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1972.96033, 108.16956, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11544, -1971.50000, 87.43030, 26.73400,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11544, -1971.50000, 94.71010, 29.46330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11544, -1971.50000, 102.00290, 32.14330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(11544, -1971.50000, 109.28430, 34.92330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1970.07275, 108.17785, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1969.54395, 108.21140, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1968.97839, 108.22005, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1968.45471, 108.21392, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1967.84399, 108.23598, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1967.20288, 108.23170, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1966.51917, 108.26455, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1965.89880, 108.22161, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1965.17676, 108.27325, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1964.41675, 108.26337, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1963.65759, 108.23374, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1962.75513, 108.27646, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1961.85510, 108.26071, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1960.71204, 108.28585, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1978.54407, 169.03311, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1977.84314, 169.02509, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1977.20398, 168.97385, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1976.58301, 169.00160, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1976.00330, 168.97017, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1975.42224, 169.01871, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1974.88220, 169.02811, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1974.26172, 169.03586, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1973.65991, 169.12401, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1973.03955, 169.11548, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1972.31909, 169.14560, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1971.70068, 169.08070, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1970.99780, 169.22748, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1970.29199, 169.16394, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1969.54822, 169.18953, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1968.80261, 169.15695, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1968.01892, 169.14792, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1967.25500, 169.13704, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1966.56873, 169.08853, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1965.90967, 169.06223, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1965.27759, 169.08556, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1964.59985, 169.05363, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1963.95935, 169.07510, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1963.29102, 169.13133, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1962.60107, 169.10078, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1961.78955, 169.06371, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3461, -1961.13000, 169.08090, 37.52930,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1977.08752, 139.05151, 51.12580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1977.79980, 138.20078, 51.12580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1976.87012, 137.27933, 51.12580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1976.05481, 138.15089, 51.12580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1976.34387, 138.09911, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1976.30432, 139.31912, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1976.32178, 136.87914, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1977.56226, 138.07791, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.03601, 147.54305, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.05884, 146.27931, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.04053, 144.99797, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.04358, 143.73543, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.04260, 142.41299, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.01685, 141.17328, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.00916, 139.91147, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1980.95068, 138.60529, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1980.97510, 137.26421, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.00208, 135.88327, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.02905, 134.50230, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.01379, 133.15875, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1980.98816, 131.73422, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.00757, 130.45084, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19056, -1981.00598, 128.96239, 43.50580,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3374, -1971.56824, 104.18260, 28.51660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3374, -1971.52087, 104.21692, 31.49660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3374, -1971.56824, 104.18260, 25.55660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3374, -1971.17029, 96.88227, 28.75660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3374, -1971.17029, 96.88230, 25.75660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3374, -1971.33997, 89.87645, 26.05660,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, -1997.75452, 159.91937, 27.25770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, -1992.33606, 159.91940, 27.25770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, -1986.84961, 159.91940, 27.25770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1408, -1981.37964, 159.91940, 27.25770,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2801.98950, 848.17279, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2841.98779, 848.17279, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2881.98535, 848.17279, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2801.96143, 868.15649, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2841.95557, 868.15649, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2881.95337, 868.15649, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(987, 2777.55518, 925.28461, 9.65921,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8661, 2801.92529, 888.13971, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2841.92554, 888.14172, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2881.92139, 888.14172, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8210, 2777.68408, 947.26270, 19.52180,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2777.64380, 965.01752, 10.93520,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 995.53900, 10.93520,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.62769, 1008.00250, 10.93520,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2792.41455, 1022.74988, 10.93520,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2822.94531, 1022.74988, 10.93520,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2853.48071, 1022.74988, 10.93520,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2879.79224, 1022.74988, 10.93520,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2894.54858, 1007.98462, 10.93520,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 977.45349, 10.93520,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 946.92932, 10.93520,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 916.41132, 10.93520,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 885.86902, 10.93520,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 855.34229, 10.93520,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 848.52863, 10.93520,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2879.78857, 833.78522, 10.93520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2849.24512, 833.78522, 10.93520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2818.69604, 833.78522, 10.93520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2792.42529, 833.78522, 10.93520,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2777.64380, 861.65088, 10.93520,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 892.16138, 10.93520,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2822.94531, 1022.74988, 13.21180,   180.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2822.94531, 1022.74988, 15.46510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2777.64380, 934.47400, 13.21180,   180.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 934.47400, 10.93520,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 965.01752, 13.21180,   180.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 995.53900, 13.21180,   180.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 1007.99060, 13.21180,   180.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2792.41455, 1022.74988, 13.21180,   180.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2853.48071, 1022.74988, 13.21180,   180.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2879.79224, 1022.74988, 13.21180,   180.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2894.54858, 1007.98462, 13.21180,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 977.45349, 13.21180,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 946.92932, 13.21180,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 916.41132, 13.21180,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 885.86902, 13.21180,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 855.34229, 13.21180,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 848.54858, 13.21180,   180.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2879.80859, 833.78522, 13.21180,   180.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2849.24512, 833.78522, 13.21180,   180.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2818.69604, 833.78522, 13.21180,   180.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2792.40601, 833.78522, 13.21180,   180.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2777.64380, 861.65088, 13.21180,   180.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 848.54858, 13.21180,   180.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 892.16138, 13.21180,   180.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 934.47400, 15.46510,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 965.01752, 15.46510,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 995.53900, 15.46510,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 1007.99060, 15.46510,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2792.41455, 1022.74988, 15.46510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2853.48071, 1022.74988, 15.46510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2879.79224, 1022.74988, 15.46510,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8656, 2894.54858, 1007.98462, 15.46510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 977.45349, 15.46510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 946.92932, 15.46510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 916.41132, 15.46510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 885.86902, 15.46510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 848.52863, 15.46510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2894.54858, 855.34229, 15.46510,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8656, 2879.78857, 833.78522, 15.46510,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2849.24512, 833.78522, 15.46510,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2818.69604, 833.78522, 15.46510,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2792.41211, 833.78522, 15.46510,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8656, 2777.64380, 848.54858, 10.93520,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 848.54858, 15.46510,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 861.65088, 15.46510,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8656, 2777.64380, 892.16138, 15.46510,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8210, 2777.68408, 995.39130, 19.52180,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8210, 2805.16797, 1022.75537, 19.52180,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8210, 2860.67163, 1022.75537, 19.52180,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8210, 2894.48657, 995.21295, 19.52180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8210, 2867.13159, 1022.75537, 19.52180,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(8210, 2894.48657, 939.85968, 19.52180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8210, 2894.48657, 884.36462, 19.52180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8210, 2894.48657, 861.16241, 19.52180,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8210, 2866.96582, 833.80560, 19.52180,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8210, 2811.42871, 833.80560, 19.52180,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8210, 2805.10889, 833.80560, 19.52180,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8210, 2777.68408, 861.28632, 19.52180,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(8210, 2777.68408, 879.49768, 19.52180,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(9254, 2806.45557, 851.30957, 10.36240,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9241, 2864.89136, 856.05389, 11.46370,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19447, 2813.73804, 868.20752, 9.62330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19447, 2823.36768, 868.20752, 9.62330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19447, 2830.22778, 868.20752, 9.62330,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19447, 2834.96582, 863.46527, 9.62330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 2834.96582, 853.84473, 9.62330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19447, 2834.96582, 844.21252, 9.62330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19355, 2834.96582, 837.78271, 9.62330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19428, 2834.96582, 835.41052, 9.62330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19428, 2834.96582, 834.09369, 9.62330,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(9244, 2791.76636, 982.74591, 14.89800,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8661, 2801.90771, 908.11987, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2841.88379, 908.11987, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2881.87280, 908.11987, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2801.87842, 928.10309, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2841.87427, 928.10309, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2881.87329, 928.10309, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2801.85034, 948.08319, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2841.83594, 948.08319, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2881.82568, 948.08319, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2801.85034, 968.05573, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2801.81836, 988.02728, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2801.81836, 1008.00909, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2841.83594, 968.05573, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2841.79590, 988.02728, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2841.80396, 1008.00909, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2881.82568, 968.05573, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2881.78564, 988.02728, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(8661, 2881.76978, 1008.00909, 9.75480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3624, 2855.66162, 1003.05322, 14.11030,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(12929, 2787.84399, 948.67371, 9.72780,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3279, 2784.68213, 886.52295, 9.75140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3279, 2784.68213, 1015.73828, 9.75140,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3077, 2784.41162, 945.30072, 9.70910,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(9243, 2879.30322, 910.39783, 14.72000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16093, 2819.82031, 1007.83832, 13.81750,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16638, 2819.91772, 1006.87598, 12.04650,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3397, 2819.67749, 1006.46942, 13.94230,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(3077, 2819.86572, 1004.83514, 9.70130,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3787, 2790.88135, 942.68109, 10.28370,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3383, 2790.81812, 946.78632, 9.75280,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3383, 2790.83301, 949.77832, 9.75280,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1252, 2790.89258, 942.64850, 10.91050,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 2790.85254, 950.85962, 10.80660,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(2035, 2790.85254, 949.86041, 10.80660,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(2035, 2790.85254, 948.87952, 10.80660,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(2036, 2790.85254, 947.25372, 10.80660,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(2036, 2790.85254, 946.05170, 10.80660,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(2048, 2787.80420, 940.68591, 13.59210,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(18044, 2863.77856, 1013.62488, 11.45260,   0.00000, 0.00000, -180.00000);
CreateDynamicObject(19447, 2849.40576, 1006.32550, 10.11790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19355, 2863.18311, 1006.32550, 10.61790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19355, 2866.38281, 1006.32550, 10.61790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19428, 2860.78711, 1006.32550, 10.61790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19428, 2843.96826, 1006.32550, 10.11790,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3077, 2857.29810, 1016.09601, 9.72190,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3787, 2852.90137, 1015.95093, 10.25980,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16782, 2814.52075, 1008.90332, 11.70066,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(16782, 2843.81250, 1010.13489, 12.29040,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(18032, 2863.97070, 1000.19971, 11.23430,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 2845.36572, 1002.40869, 10.06710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(16770, 2841.77759, 996.58380, 11.17380,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1583, 2845.36572, 1003.90869, 10.06710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 2845.36572, 1005.40869, 10.06710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 2845.36572, 1000.90869, 10.06710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 2845.36572, 999.40869, 10.06710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 2845.36572, 997.90869, 10.06710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 2845.36572, 996.40869, 10.06710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 2845.36572, 994.90869, 10.06710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 2845.36572, 993.40869, 10.06710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 2845.36572, 991.90869, 10.06710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1583, 2845.36572, 1002.40869, 10.06710,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2064, 2845.55884, 1007.42188, 10.33740,   0.00000, 0.00000, 130.00000);
CreateDynamicObject(2061, 2843.81226, 1011.92761, 10.95860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, 2843.81226, 1012.09760, 10.95860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, 2843.81226, 1012.60760, 10.95860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2061, 2843.81226, 1012.77759, 10.95860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 2847.86011, 1016.27008, 10.69500,   0.00000, 0.00000, 25.00000);
CreateDynamicObject(2035, 2849.14014, 1016.27008, 10.69500,   0.00000, 0.00000, 25.00000);
CreateDynamicObject(2044, 2846.17212, 1016.27411, 10.71000,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(2044, 2845.51074, 1016.27411, 10.71000,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(2044, 2844.78833, 1016.27411, 10.71000,   0.00000, 0.00000, -45.00000);
CreateDynamicObject(1578, 2867.53687, 1009.64111, 10.61070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1575, 2867.53687, 1008.50439, 10.61070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1579, 2867.53687, 1007.34161, 10.61070,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19363, 2867.97778, 1014.46820, 11.48590,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(955, 2798.07007, 982.72809, 10.14860,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 2816.67139, 1005.05768, 11.98730,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 2816.67139, 1005.05768, 11.23730,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2035, 2816.67139, 1005.05768, 10.48730,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(2036, 2823.42139, 1005.05768, 10.48730,   90.00000, 0.00000, 180.00000);
CreateDynamicObject(2036, 2823.42139, 1005.05768, 11.23730,   90.00000, 0.00000, 180.00000);
CreateDynamicObject(2036, 2823.42139, 1005.05768, 11.98730,   90.00000, 0.00000, 180.00000);
CreateDynamicObject(19169, 2783.86450, 951.20563, 12.42880,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(19267, 2783.88647, 951.87750, 12.15350,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(19168, 2783.86450, 949.70630, 12.42880,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(19170, 2783.86450, 949.70630, 10.94740,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(19171, 2783.86450, 951.20630, 10.94740,   90.00000, 0.00000, 90.00000);
CreateDynamicObject(19267, 2783.88452, 951.73950, 10.65350,   90.00000, 0.00000, 90.00000);
}

enum ZoneInfo
{
	zone_name[27],
    Float:zone_minx,
    Float:zone_miny,
    Float:zone_minz,
    Float:zone_maxx,
    Float:zone_maxy,
    Float:zone_maxz
}

new Float:ZoneNames[][ZoneInfo] =
{
	{ "LV FBI HQ",           2447.6692,2376.2556,12.1635,  2487.7480,2397.2407,4.2109},
    { "MultiStory",       	 2257.6921,  1383.5364,    9.0203,  2357.7520, 1523.2224,   500.5000},
    { "LV City Hall",       	 2354.4023,  1079.9636,    9.0203,  2420.8870, 1186.4084,   500.5000},
    { "LV Transfender",       	 2352.2302,  956.4175,    9.0203,  2421.1843, 1066.9310,   500.5000},
    { "The Four Dragons Casino",     1878.7661,  970.0151,    9.0203,  2035.9320, 1082.8287,   500.5000},
    { "Caligulas Casino",        2087.7002,  1543.7769,   9.8203,  2317.1528, 1763.7645,   500.5000},
    { "LV Police Dept",         228.8148,  140.0497,   1003.0000,  248.7047,  169.0779,    1003.0400},
    { "LV Police Dept",         188.3310,  156.6014,   1003.0000,  203.9910,  180.7771,    1003.0400},
    { "The Big Ear",                -410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00},
	{ "Aldea Malvada",               -1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00},
	{ "Angel Pine",                  -2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00},
	{ "Arco del Oeste",               -901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00},
	{ "Avispa Country Club",         -2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00},
	{ "Avispa Country Club",         -2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00},
	{ "Avispa Country Club",         -2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00},
	{ "Avispa Country Club",         -2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10},
	{ "Avispa Country Club",         -2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10},
	{ "Avispa Country Club",         -2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70},
	{ "Back o Beyond",               -1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00},
	{ "Battery Point",               -2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00},
	{ "Bayside",                     -2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00},
	{ "Bayside Marina",              -2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00},
	{ "Beacon Hill",                  -399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50},
	{ "Blackfield",                    964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90},
	{ "Blackfield",                    964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90},
	{ "Blackfield Chapel",            1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90},
	{ "Blackfield Chapel",            1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90},
	{ "Blackfield Intersection",      1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90},
	{ "Blackfield Intersection",      1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90},
	{ "Blackfield Intersection",      1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90},
	{ "Blackfield Intersection",      1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90},
	{ "Blueberry",                     104.50,  -220.10,     2.30,   349.60,   152.20,   200.00},
	{ "Blueberry",                      19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00},
	{ "Blueberry Acres",              -319.60,  -220.10,     0.00,   104.50,   293.30,   200.00},
	{ "Caligula's Palace",            2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90},
	{ "Caligula's Palace",            2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90},
	{ "Calton Heights",              -2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00},
	{ "Chinatown",                   -2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00},
	{ "City Hall",                   -2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00},
	{ "Come-A-Lot",                   2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90},
	{ "Commerce",                     1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90},
	{ "Commerce",                     1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90},
	{ "Commerce",                     1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90},
	{ "Commerce",                     1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90},
	{ "Commerce",                     1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90},
	{ "Commerce",                     1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90},
	{ "Conference Center",            1046.10, -1804.20,   -89.00,  1323.90, -1722.20,   110.90},
	{ "Conference Center",            1073.20, -1842.20,   -89.00,  1323.90, -1804.20,   110.90},
	{ "Creek",                        2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90},
	{ "Dillimore",                     580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00},
	{ "Doherty",                     -2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00},
	{ "Doherty",                     -2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00},
	{ "Cranberry Station",           -2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00},
	{ "Downtown SF",                    -1982.30,   744.10,    -6.10, -1871.70,  1274.20,   200.00},
	{ "Downtown SF",                    -1871.70,  1176.40,    -4.50, -1620.30,  1274.20,   200.00},
	{ "Downtown SF",                    -1700.00,   744.20,    -6.10, -1580.00,  1176.50,   200.00},
	{ "Downtown SF",                    -1580.00,   744.20,    -6.10, -1499.80,  1025.90,   200.00},
	{ "Downtown SF",                    -2078.60,   578.30,    -7.60, -1499.80,   744.20,   200.00},
	{ "Downtown SF",                    -1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00},
	{ "Downtown LS",          1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90},
	{ "Downtown LS",          1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90},
	{ "Downtown LS",          1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90},
	{ "Downtown LS",          1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90},
	{ "Downtown LS",          1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90},
	{ "Downtown LS",          1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90},
	{ "Downtown LS",          1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90},
	{ "Downtown LS",          1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90},
	{ "Downtown LS",          1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90},
	{ "East Beach",                   2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90},
	{ "East Beach",                   2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90},
	{ "East Beach",                   2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90},
	{ "East Beach",                   2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90},
	{ "East LS",              2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90},
	{ "East LS",              2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90},
	{ "East LS",              2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90},
	{ "East LS",              2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90},
	{ "East LS",              2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90},
	{ "East LS",              2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90},
	{ "East LS",              2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90},
	{ "Easter Basin",                -1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00},
	{ "Easter Basin",                -1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00},
	{ "Easter Bay Airport",          -1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00},
	{ "Easter Bay Airport",          -1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00},
	{ "Easter Bay Airport",          -1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00},
	{ "Easter Bay Airport",          -1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00},
	{ "Easter Bay Airport",          -1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00},
	{ "Easter Bay Airport",          -1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40},
	{ "Easter Bay Airport",          -1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40},
	{ "Easter Bay Airport",          -1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40},
	{ "Easter Bay Chemicals",        -1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00},
	{ "Easter Bay Chemicals",        -1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00},
	{ "El Castillo del Diablo",       -464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00},
	{ "El Corona",                    1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90},
	{ "El Corona",                    1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90},
	{ "El Quebrados",                -1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00},
	{ "Esplanade East",              -1620.30,  1176.50,    -4.50, -1580.00,  1274.20,   200.00},
	{ "Esplanade East",              -1580.00,  1025.90,    -6.10, -1499.80,  1274.20,   200.00},
	{ "Esplanade East",              -1499.80,   578.30,   -79.60, -1339.80,  1274.20,    20.30},
	{ "Esplanade North",             -2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00},
	{ "Esplanade North",             -1996.60,  1358.90,    -4.50, -1524.20,  1592.50,   200.00},
	{ "Esplanade North",             -1982.30,  1274.20,    -4.50, -1524.20,  1358.90,   200.00},
	{ "Fallen Tree",                  -792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00},
	{ "Fallow Bridge",                 434.30,   366.50,     0.00,   603.00,   555.60,   200.00},
	{ "Fern Ridge",                    508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00},
	{ "Financial",                   -1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00},
	{ "Fisher's Lagoon",              1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00},
	{ "Flint Intersection",           -187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90},
	{ "Flint Range",                  -594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00},
	{ "Fort Carson",                  -376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00},
	{ "Foster Valley",               -2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00},
	{ "Foster Valley",               -2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00},
	{ "Frederick Bridge",             2759.20,   296.50,     0.00,  2774.20,   594.70,   200.00},
	{ "Gant Bridge",                 -2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00},
	{ "Gant Bridge",                 -2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00},
	{ "Ganton",                       2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90},
	{ "Ganton",                       2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90},
	{ "Garcia",                      -2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00},
	{ "Garcia",                      -2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00},
	{ "Garver Bridge",               -1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90},
	{ "Garver Bridge",               -1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90},
	{ "Garver Bridge",               -1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30},
	{ "Glen Park",                    1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90},
	{ "Glen Park",                    1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90},
	{ "Glen Park",                    1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90},
	{ "Green Palms",                   176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00},
	{ "Greenglass College",            964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90},
	{ "Greenglass College",            964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90},
	{ "Hampton Barns",                 603.00,   264.30,     0.00,   761.90,   366.50,   200.00},
	{ "Hankypanky Point",             2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00},
	{ "Harry Gold Parkway",           1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90},
	{ "Hashbury",                    -2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00},
	{ "Hilltop Farm",                  967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00},
	{ "Hunter Quarry",                 337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70},
	{ "Idlewood",                     1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90},
	{ "Idlewood",                     1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90},
	{ "Idlewood",                     1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90},
	{ "Idlewood",                     1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90},
	{ "Idlewood",                     2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90},
	{ "Idlewood",                     1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90},
	{ "Jefferson",                    1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90},
	{ "Jefferson",                    2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90},
	{ "Jefferson",                    2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90},
	{ "Jefferson",                    2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90},
	{ "Jefferson",                    2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90},
	{ "Jefferson",                    2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90},
	{ "Julius Thruway East",          2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90},
	{ "Julius Thruway East",          2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90},
	{ "Julius Thruway East",          2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90},
	{ "Julius Thruway East",          2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90},
	{ "Julius Thruway North",         2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90},
	{ "Julius Thruway North",         2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90},
	{ "Julius Thruway North",         2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90},
	{ "Julius Thruway North",         1938.80,  2508.20,   -89.00,  2121.40,  2624.20,   110.90},
	{ "Julius Thruway North",         1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90},
	{ "Julius Thruway North",         1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90},
	{ "Julius Thruway North",         1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90},
	{ "Julius Thruway North",         1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90},
	{ "Julius Thruway South",         1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90},
	{ "Julius Thruway South",         2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90},
	{ "Julius Thruway West",          1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90},
	{ "Julius Thruway West",          1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90},
	{ "Juniper Hill",                -2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00},
	{ "Juniper Hollow",              -2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00},
	{ "K.A.C.C. Military Fuels",      2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90},
	{ "Kincaid Bridge",              -1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90},
	{ "Kincaid Bridge",              -1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90},
	{ "Kincaid Bridge",              -1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90},
	{ "King's",                      -2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00},
	{ "King's",                      -2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00},
	{ "King's",                      -2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00},
	{ "LVA Freight Depot",            1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90},
	{ "LVA Freight Depot",            1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90},
	{ "LVA Freight Depot",            1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90},
	{ "LVA Freight Depot",            1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90},
	{ "LVA Freight Depot",            1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90},
	{ "Las Barrancas",                -926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00},
	{ "Las Brujas",                   -365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00},
	{ "Las Colinas",                  1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90},
	{ "Las Colinas",                  2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90},
	{ "Las Colinas",                  2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90},
	{ "Las Colinas",                  2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90},
	{ "Las Colinas",                  2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90},
	{ "Las Colinas",                  2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90},
	{ "Las Colinas",                  2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90},
	{ "Las Payasadas",                -354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00},
	{ "LV Airport",         1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90},
	{ "LV Airport",         1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90},
	{ "LV Airport",         1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90},
	{ "LV Airport",         1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50},
	{ "Last Dime Motel",              1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90},
	{ "Leafy Hollow",                -1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00},
	{ "Lil' Probe Inn",                -90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00},
	{ "Linden Side",                  2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90},
	{ "Linden Station",               2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90},
	{ "Linden Station",               2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40},
	{ "Little Mexico",                1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90},
	{ "Little Mexico",                1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90},
	{ "Los Flores",                   2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90},
	{ "Los Flores",                   2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90},
	{ "LS International",     1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90},
	{ "LS International",     1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90},
	{ "LS International",     1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90},
	{ "LS International",     1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90},
	{ "LS International",     1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90},
	{ "LS International",     2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90},
	{ "Marina",                        647.70, -1804.20,   -89.00,   851.40, -1577.50,   110.90},
	{ "Marina",                        647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90},
	{ "Marina",                        807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90},
	{ "Market",                        787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90},
	{ "Market",                        952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90},
	{ "Market",                       1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90},
	{ "Market",                        926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90},
	{ "Market Station",                787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80},
	{ "Martin Bridge",                -222.10,   293.30,     0.00,  -122.10,   476.40,   200.00},
	{ "Missionary Hill",             -2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00},
	{ "Montgomery",                   1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00},
	{ "Montgomery",                   1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00},
	{ "Montgomery Intersection",      1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00},
	{ "Montgomery Intersection",      1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00},
	{ "Mulholland",                   1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90},
	{ "Mulholland",                   1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90},
	{ "Mulholland",                   1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90},
	{ "Mulholland",                   1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90},
	{ "Mulholland",                   1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90},
	{ "Mulholland",                   1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90},
	{ "Mulholland",                    768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90},
	{ "Mulholland",                    687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90},
	{ "Mulholland",                    737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90},
	{ "Mulholland",                   1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90},
	{ "Mulholland",                    952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90},
	{ "Mulholland",                    911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90},
	{ "Mulholland",                    861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90},
	{ "Mulholland Intersection",      1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90},
	{ "North Rock",                   2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00},
	{ "Ocean Docks",                  2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90},
	{ "Ocean Docks",                  2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90},
	{ "Ocean Docks",                  2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90},
	{ "Ocean Docks",                  2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90},
	{ "Ocean Docks",                  2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90},
	{ "Ocean Docks",                  2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90},
	{ "Ocean Docks",                  2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90},
	{ "Ocean Flats",                 -2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00},
	{ "Octane Springs",                338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00},
	{ "Old Venturas Strip",           2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90},
	{ "Palisades",                   -2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00},
	{ "Palomino Creek",               2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00},
	{ "The Bank",               2304.559326,  -18.569759,     23.898477,  2320.408691,   0.768405,   34.062568},
	{ "Paradiso",                    -2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00},
	{ "Pershing Square",              1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90},
	{ "Pilgrim",                      2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90},
	{ "Pilgrim",                      2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90},
	{ "Pilson Intersection",          1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90},
	{ "Pirates in Men's Pants",       1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90},
	{ "Playa del Seville",            2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90},
	{ "Prickle Pine",                 1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90},
	{ "Prickle Pine",                 1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90},
	{ "Prickle Pine",                 1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90},
	{ "Prickle Pine",                 1938.80,  2624.20,   -89.00,  2121.40,  2861.50,   110.90},
	{ "Queens",                      -2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00},
	{ "Queens",                      -2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00},
	{ "Queens",                      -2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00},
	{ "Randolph Industrial Estate",   1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90},
	{ "Redsands East",                1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90},
	{ "Redsands East",                1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90},
	{ "Redsands East",                1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90},
	{ "Redsands West",                1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90},
	{ "Redsands West",                1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90},
	{ "Redsands West",                1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90},
	{ "Redsands West",                1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90},
	{ "Regular Tom",                  -405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00},
	{ "Richman",                       647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90},
	{ "Richman",                       647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90},
	{ "Richman",                       225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90},
	{ "Richman",                       225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90},
	{ "Richman",                        72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90},
	{ "Richman",                        72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90},
	{ "Richman",                       321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90},
	{ "Richman",                       321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90},
	{ "Richman",                       321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90},
	{ "Richman",                       321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90},
	{ "Robada Intersection",         -1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90},
	{ "Meydan Asli",               2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90},
	{ "Meydan Asli",               2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90},
	{ "Rockshore East",               2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90},
	{ "Rockshore West",               1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90},
	{ "Rockshore West",               2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90},
	{ "Rodeo",                          72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90},
	{ "Rodeo",                          72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90},
	{ "Rodeo",                         225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90},
	{ "Rodeo",                         225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90},
	{ "Rodeo",                         334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90},
	{ "Rodeo",                         312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90},
	{ "Rodeo",                         422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90},
	{ "Rodeo",                         558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90},
	{ "Rodeo",                         466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90},
	{ "Rodeo",                         422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90},
	{ "Rodeo",                         466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90},
	{ "Rodeo",                         334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90},
	{ "Royal Casino",                 2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90},
	{ "San Andreas Sound",            2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00},
	{ "Santa Flora",                 -2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00},
	{ "Santa Maria Beach",             342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90},
	{ "Santa Maria Beach",              72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90},
	{ "Shady Cabin",                 -1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00},
	{ "Shady Creeks",                -1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00},
	{ "Shady Creeks",                -2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00},
	{ "Sobell Rail Yards",            2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90},
	{ "Spinybed",                     2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90},
	{ "Starfish Casino",              2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90},
	{ "Starfish Casino",              2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90},
	{ "Starfish Casino",              2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90},
	{ "Temple",                       1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90},
	{ "Temple",                       1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90},
	{ "Temple",                       1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90},
	{ "Temple",                        952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90},
	{ "Temple",                       1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90},
	{ "Temple",                       1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90},
	{ "The Camel's Toe",              2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90},
	{ "The Clown's Pocket",           2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90},
	{ "The Emerald Isle",             2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90},
	{ "The Farm",                    -1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90},
	{ "Four Dragons Casino",      1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90},
	{ "The High Roller",              1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90},
	{ "The Mako Span",                1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00},
	{ "The Panopticon",               -947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00},
	{ "The Pink Swan",                1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90},
	{ "The Sherman Dam",              -968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00},
	{ "The Strip",                    2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90},
	{ "The Strip",                    2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90},
	{ "The Strip",                    2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90},
	{ "The Strip",                    2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90},
	{ "The Visage",                   1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90},
	{ "The Visage",                   1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90},
	{ "Unity Station",                1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50},
	{ "Valle Ocultado",               -936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00},
	{ "Verdant Bluffs",                930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90},
	{ "Verdant Bluffs",               1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90},
	{ "Verdant Bluffs",               1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90},
	{ "Verdant Meadows",                37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00},
	{ "Verona Beach",                  647.70, -2173.20,   -89.00,   930.20, -1804.20,   110.90},
	{ "Verona Beach",                  930.20, -2006.70,   -89.00,  1073.20, -1804.20,   110.90},
	{ "Verona Beach",                  851.40, -1804.20,   -89.00,  1046.10, -1577.50,   110.90},
	{ "Verona Beach",                 1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90},
	{ "Verona Beach",                 1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90},
	{ "Vinewood",                      787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90},
	{ "Vinewood",                      787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90},
	{ "Vinewood",                      647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90},
	{ "Vinewood",                      647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90},
	{ "Whitewood Estates",             883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90},
	{ "Whitewood Estates",            1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90},
	{ "Willowfield",                  1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90},
	{ "Willowfield",                  2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90},
	{ "Willowfield",                  2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90},
	{ "Willowfield",                  2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90},
	{ "Willowfield",                  2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90},
	{ "Willowfield",                  2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90},
	{ "Willowfield",                  2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90},
	{ "Yellow Bell Station",          1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00},
	{ "Area 69",		  			  -76.40,   1640.00,   -31.90,   411.90,  2104.50,   110.90},
	{ "Mt Chilid", 					-2178.69, -1771.66, -47.9166, -1936.12, -1250.97, 576.083},
	{ "Mt Chilid", 					-2997.47, -1115.58, -47.9166, -2178.69, -971.913, 576.083},
	{ "Mt Chilid", 					-2994.49, -2189.91, -47.9166, -2178.69, -1115.58, 576.083},
	{ "Mt Chilid", 					-2178.69, -2189.91, -47.9166, -2030.12, -1771.66, 576.083}
};

WasteDeAMXersTime()
{
    new b;
    #emit load.pri b
    #emit stor.pri b
}

stock GetPlayersBizEarnings(playerid)
{
	new file[40], amount = 0;
	for(new b = 0; b < MAX_BUSINESSES; b++)
	{
	    format(file, sizeof(file), BIZ_FILE, b);
	    if(fexist(file))
	    {
	    	if(!strcmp(GetName(playerid), BizInfo[b][bOwner], true))
		    {
		        amount = amount + BizInfo[b][bEarnings];
		    }
		}
	}
	return amount;
}

stock accssave()
{
new INI:file = INI_Open(ACNR_ACCS);
INI_WriteInt(file, "accs", tedadeacc);
INI_WriteInt(file, "vorods", tedadvoro);
INI_WriteInt(file, "kicks", tedadekick);
INI_WriteInt(file, "bans", tedadeban);
INI_WriteString(file, "nem", newestname);
INI_Close(file);
return 1;
}

stock SendPlayerToCage(playerid, time)
{
	ResetPlayerWeapons(playerid);
	SetPlayerWantedLevel(playerid, 0);
	SetPlayerPos(playerid, 2178.3713, 2407.2861, 73.0339);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	IsCaged{playerid} = true;
	HasBeenCuffed{playerid} = false;
	SetPlayerArmour(playerid, 0);
	GameTextForPlayer(playerid,"~r~Be ghafas andakhte shodid!", 5000, 5);
	if(CageTime[playerid] > 0)
	{
		CageTime[playerid] = 0;
	}
	CageTime[playerid] = time;
	KillTimer(JailTimer[playerid]);
	KillTimer(CageTimer[playerid]);
	CageTimer[playerid] = SetTimerEx("AutoUncage", 1000, true, "%d", playerid);
	return 1;
}

stock DestroyNeons(vehicleid)
{
	DestroyDynamicObject(blueneons[vehicleid]);
	DestroyDynamicObject(blueneons2[vehicleid]);
	DestroyDynamicObject(redneons[vehicleid]);
	DestroyDynamicObject(redneons2[vehicleid]);
	DestroyDynamicObject(greenneons[vehicleid]);
	DestroyDynamicObject(greenneons2[vehicleid]);
	DestroyDynamicObject(yellowneons[vehicleid]);
	DestroyDynamicObject(yellowneons2[vehicleid]);
	DestroyDynamicObject(pinkneons[vehicleid]);
	DestroyDynamicObject(pinkneons2[vehicleid]);
	DestroyDynamicObject(whiteneons[vehicleid]);
	DestroyDynamicObject(whiteneons2[vehicleid]);
/*	if(IsShopVehicle[vehicleid] != -1)
	{
		VehicleInfo[IsShopVehicle[vehicleid]][vNeons] = NO_NEONS;
	}*/
	return 1;
}

stock GetVehicleName(vehicleid, model[], len)
{
	new checking = GetVehicleModel(vehicleid);
    if (checking >= 400 && checking < 612) 
    {
        return format(model, len, GlobalVehicleNames[checking - 400]);
    } 
    else 
    {
        return format(model, len, "WRONG VEHICLE ID!!!");
    }
	return 0;
}

stock GetVehicleIDFromModelName(vname[])
{
	for(new i = 0; i < 211; i++)
	{
		if(strfind(GlobalVehicleNames[i], vname, true) != -1)
		return i + 400;
	}
	return -1;
}

stock IsPlayerSkydiving(playerid)
{
    new index = GetPlayerAnimationIndex(playerid);
    if(index >= 958 && index <= 962)
    {
        return 1;
    }
    return 0;
}

stock IsPlayerUsingParachute(playerid)
{
    new index = GetPlayerAnimationIndex(playerid);
    if(index >= 963 && index <= 979)
    {
        return 1;
    }
    return 0;
}

Float:GetXYPosInFrontOfPlayer(playerid, &Float:gX, &Float:gY, Float:dist)
{
    new Float:gA;
    GetPlayerPos(playerid, gX, gY, gA);
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    GetVehicleZAngle(GetPlayerVehicleID(playerid), gA);
	}
    else GetPlayerFacingAngle(playerid, gA);
    {
        gX += (dist * floatsin(-gA, degrees));
        gY += (dist * floatcos(-gA, degrees));
	}
    return gA;
}

stock CheckValidSkinID(skinid)
{
    if((skinid == 0 || skinid == 1 || skinid == 2) || (skinid == 3) || (skinid >= 4 && skinid <= 41)
	|| (skinid >= 42 && skinid <= 64) || (skinid >= 65 && skinid <= 73)
	|| (skinid >= 74 && skinid <= 85) || (skinid >= 86 && skinid <= 119)
	|| (skinid >= 120 && skinid <= 148) || (skinid >= 149 && skinid <= 207)
	|| (skinid >= 208 && skinid <= 264) || (skinid >= 265 && skinid <= 288)
	|| (skinid >= 289 && skinid <= 311)) return 1;
    else return 0;
}

stock GetClosestPlayerID(playerid)
{
	new Float:range = 5.0;
    foreach(new i : Player)
    {
        if(playerid == i) continue;
        new Float:x, Float:y, Float:z;
        GetPlayerPos(i, x, y, z);
	    if(IsPlayerInRangeOfPoint(playerid, range, x, y, z))
	    {
	        return i;
	    }
    }
    return INVALID_PLAYER_ID;
}

stock LoadFightStyle(playerid)
{
	if(FightStyleID{playerid} == 0)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
		return 1;
	}
	else if(FightStyleID{playerid} == 1)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
		return 1;
	}
	else if(FightStyleID{playerid} == 2)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
		return 1;
	}
	else if(FightStyleID{playerid} == 3)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
		return 1;
	}
	else if(FightStyleID{playerid} == 4)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
		return 1;
	}
	else if(FightStyleID{playerid} == 5)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
	}
	return 1;
}
/*
stock IsNumeric(string[])
{
    for (new i = 0, j = strlen(string); i < j; i++)
    {
        if (string[i] > '9' || string[i] < '0') return 0;
    }
    return 1;
}
*/
stock GetPlayersInTeamFromMaxPlayers(teamid)
{
    new count = 0;
    foreach(new i : Player)
    {
        if(GetPlayerState(i) == PLAYER_STATE_NONE) continue;
        if(GetTeam{i} != teamid) continue;
        count++;
    }
    return count;
}

stock Float:GetPosBehindOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	if (IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	else GetPlayerFacingAngle(playerid, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return a;
}

stock GetID(username[])
{
	foreach(new i : Player)
	{
    	if(IsPlayerConnected(i))
    	{
      		if(strcmp(GetName(i), username, false, strlen(username)) == 0)
      		{
        		return i;
      		}
    	}
  	}
	return INVALID_PLAYER_ID;
}

stock SaveVehicleStats(vehicleid)
{
	new file[40];
	format(file, sizeof(file), VEH_FILE, vehicleid);
	if(fexist(file))
	{
	    new INI:vfile = INI_Open(file);

	    INI_WriteInt(vfile, "Model", VehicleInfo[vehicleid][vModel]);
		INI_WriteInt(vfile, "Color1", VehicleInfo[vehicleid][vColor1]);
		INI_WriteInt(vfile, "Color2", VehicleInfo[vehicleid][vColor2]);
	    INI_WriteInt(vfile, "Price", VehicleInfo[vehicleid][vPrice]);
	    INI_WriteString(vfile, "Owner", VehicleInfo[vehicleid][vOwner]);
	    INI_WriteFloat(vfile, "PosX", VehicleInfo[vehicleid][vPosX]);
	    INI_WriteFloat(vfile, "PosY", VehicleInfo[vehicleid][vPosY]);
	    INI_WriteFloat(vfile, "PosZ", VehicleInfo[vehicleid][vPosZ]);
	    INI_WriteFloat(vfile, "PosA", VehicleInfo[vehicleid][vPosA]);
	    INI_WriteString(vfile, "Plate", VehicleInfo[vehicleid][vPlate]);
	    INI_WriteInt(vfile, "PaintJob", VehicleInfo[vehicleid][vPaintJob]);
	    INI_WriteInt(vfile, "Locked", VehicleInfo[vehicleid][vLocked]);
	    INI_WriteInt(vfile, "Mod1", GetVehicleMods[vehicleid][0]);
	    INI_WriteInt(vfile, "Mod2", GetVehicleMods[vehicleid][1]);
	    INI_WriteInt(vfile, "Mod3", GetVehicleMods[vehicleid][2]);
	    INI_WriteInt(vfile, "Mod4", GetVehicleMods[vehicleid][3]);
	    INI_WriteInt(vfile, "Mod5", GetVehicleMods[vehicleid][4]);
	    INI_WriteInt(vfile, "Mod6", GetVehicleMods[vehicleid][5]);
	    INI_WriteInt(vfile, "Mod7", GetVehicleMods[vehicleid][6]);
	    INI_WriteInt(vfile, "Mod8", GetVehicleMods[vehicleid][7]);
	    INI_WriteInt(vfile, "Mod9", GetVehicleMods[vehicleid][8]);
	    INI_WriteInt(vfile, "Mod10", GetVehicleMods[vehicleid][9]);
	    INI_WriteInt(vfile, "Mod11", GetVehicleMods[vehicleid][10]);
	    INI_WriteInt(vfile, "Mod12", GetVehicleMods[vehicleid][11]);
	    INI_WriteInt(vfile, "Neons", VehicleInfo[vehicleid][vNeons]);
	    INI_WriteInt(vfile, "Fuel", VehicleInfo[vehicleid][vFuel]);
	    INI_WriteFloat(vfile, "Health", VehicleInfo[vehicleid][vHealth]);
	    INI_Close(vfile);
	}
	return 1;
}

stock LoadPlayerVehicles(playerid)
{
    GetPlayerVehicles{playerid} = 0;
    verifydestroycar{playerid} = 0;
	new vehcount = 0;
    for(new v = 0; v < MAX_SHOP_VEHICLES; v++)
	{
	    new file[40];
		format(file, sizeof(file), VEH_FILE, v);
		if(fexist(file))
		{
        	INI_ParseFile(file, "LoadVeh_data", .bExtra = true, .extra = v);

            if(!strcmp(GetName(playerid), VehicleInfo[v][vOwner], false))
			{
				new newveh = CreateVehicle(VehicleInfo[v][vModel], VehicleInfo[v][vPosX], VehicleInfo[v][vPosY], VehicleInfo[v][vPosZ], VehicleInfo[v][vPosA], VehicleInfo[v][vColor1], VehicleInfo[v][vColor2], 500000);
				SetVehicleNumberPlate(newveh, VehicleInfo[v][vPlate]);
				if(VehicleInfo[v][vPaintJob] != NO_PAINT)
				{
					ChangeVehiclePaintjob(newveh, VehicleInfo[v][vPaintJob]);
				}

				if(VehicleInfo[v][vHealth] <= 251.0)
				{
					SetVehicleHealth(newveh, 1000.0);
					VehicleInfo[v][vHealth] = 1000.0;
				}
				else
				{
					SetVehicleHealth(newveh, VehicleInfo[v][vHealth]);
				}

				for(new m = 0; m < 12; m++)
				{
					if(GetVehicleMods[v][m] > 0)
					{
						AddVehicleComponent(newveh, GetVehicleMods[v][m]);
					}
				}

				if(VehicleInfo[v][vLocked] == 1)
				{
					SetVehicleParamsForAll(newveh, 0, 1);
        			GetVehicleParamsEx(newveh, engine, lights, alarm, doors, bonnet, boot, vcondition);
					SetVehicleParamsEx(newveh, engine, lights, alarm, ON, bonnet, boot, vcondition);
				}
				else if(VehicleInfo[v][vLocked] == 0)
				{
					SetVehicleParamsForAll(newveh, 0, 0);
        			GetVehicleParamsEx(newveh, engine, lights, alarm, doors, bonnet, boot, vcondition);
					SetVehicleParamsEx(newveh, engine, lights, alarm, OFF, bonnet, boot, vcondition);
				}

				if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == BLUE_NEONS)
				{
				    blueneons[newveh] = CreateDynamicObject(18648,0,0,0,0,0,0);
            		blueneons2[newveh] = CreateDynamicObject(18648,0,0,0,0,0,0);
            		AttachDynamicObjectToVehicle(blueneons[newveh], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            		AttachDynamicObjectToVehicle(blueneons2[newveh], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				}
				else if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == RED_NEONS)
				{
				    redneons[newveh] = CreateDynamicObject(18647,0,0,0,0,0,0);
            		redneons2[newveh] = CreateDynamicObject(18647,0,0,0,0,0,0);
            		AttachDynamicObjectToVehicle(redneons[newveh], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            		AttachDynamicObjectToVehicle(redneons2[newveh], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				}
				else if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == GREEN_NEONS)
				{
				    greenneons[newveh] = CreateDynamicObject(18649,0,0,0,0,0,0);
            		greenneons2[newveh] = CreateDynamicObject(18649,0,0,0,0,0,0);
            		AttachDynamicObjectToVehicle(greenneons[newveh], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            		AttachDynamicObjectToVehicle(greenneons2[newveh], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				}
				else if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == YELLOW_NEONS)
				{
				    yellowneons[newveh] = CreateDynamicObject(18650,0,0,0,0,0,0);
            		yellowneons2[newveh] = CreateDynamicObject(18650,0,0,0,0,0,0);
            		AttachDynamicObjectToVehicle(yellowneons[newveh], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            		AttachDynamicObjectToVehicle(yellowneons2[newveh], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				}
				else if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == PINK_NEONS)
				{
				    pinkneons[newveh] = CreateDynamicObject(18651,0,0,0,0,0,0);
            		pinkneons2[newveh] = CreateDynamicObject(18651,0,0,0,0,0,0);
            		AttachDynamicObjectToVehicle(pinkneons[newveh], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            		AttachDynamicObjectToVehicle(pinkneons2[newveh], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				}
				else if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == WHITE_NEONS)
				{
				    whiteneons[newveh] = CreateDynamicObject(18652,0,0,0,0,0,0);
            		whiteneons2[newveh] = CreateDynamicObject(18652,0,0,0,0,0,0);
            		AttachDynamicObjectToVehicle(whiteneons[newveh], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            		AttachDynamicObjectToVehicle(whiteneons2[newveh], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				}

	        	IsShopVehicle[newveh] = v;
	        	GetPlayerVehicles{playerid}++;
	        	GetServerVehicles++;

				GetVehicleFuel[newveh] = VehicleInfo[v][vFuel];
				GetVehicleCurrentHealth[newveh] = VehicleInfo[v][vHealth];

				vehcount++;

	        	if(vehcount == MAX_VIP_VEHS)
				{
				    return 1;
				}
	        }
        }
    }
	return 1;
}

stock UnloadPlayerVehicles(playerid)
{
	new vehcount = 0;
	foreach(new v : Vehicle)
	{
	    if(IsShopVehicle[v] != -1)
		{
		    if(!strcmp(GetName(playerid), VehicleInfo[IsShopVehicle[v]][vOwner], false))
		    {
		        new color1, color2;
		        if(GetVehicleColor(v, color1, color2))
				{
	    			VehicleInfo[IsShopVehicle[v]][vColor1] = color1;
	    			VehicleInfo[IsShopVehicle[v]][vColor2] = color2;
	    		}
	    		new Float:health;
    			GetVehicleHealth(v, health);
    			VehicleInfo[IsShopVehicle[v]][vHealth] = health;
		        SaveVehicleStats(IsShopVehicle[v]);
		        DestroyNeons(v);
		        DestroyVehicle(v);
		        GetPlayerVehicles{playerid}--;
	        	GetServerVehicles--;
	        	IsShopVehicle[v] = -1;

				vehcount++;

	        	if(vehcount == MAX_VIP_VEHS)
				{
				    return 1;
				}
		    }
		}
	}
	return 1;
}

stock GetClosestOwnedVehID(playerid)
{
    new Float:diameter = 5.0, Float:distance;
    new Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2;
    GetPlayerPos(playerid, x1, y1, z1);
    foreach(new v : Vehicle)
    {
		if(IsShopVehicle[v] != -1)
		{
		    if(!strcmp(GetName(playerid), VehicleInfo[IsShopVehicle[v]][vOwner], false))
		    {
        		GetVehiclePos(v, x2, y2, z2);
        		distance = floatsqroot(floatpower(floatabs(floatsub(x2, x1)), 2) + floatpower(floatabs(floatsub(y2, y1)), 2) + floatpower(floatabs(floatsub(z2, z1)), 2));
        		if(distance <= diameter)
        		{
            		return v;
        		}
        	}
        }
    }
    return INVALID_VEHICLE_ID;
}

stock GetFreeVehicleSlot()
{
	new file[40];
    for(new v = 0; v < MAX_SHOP_VEHICLES; v++)
    {
		format(file, sizeof(file), VEH_FILE, v);
		if(!fexist(file))
		{
		    return v;
		}
    }
    return -1;
}

stock CreateNewPlayerVehicle(playerid, modelid, price)
{
    new Float:Pos[4], v = GetFreeVehicleSlot();
    if(v < 0)
	{
		SendClientMessage(playerid, RED, "Car Shop: Dige vasile naghlie forokhte nemishavad (mitavanid az player ha mashin bekharid).");
		return 1;
	}
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	GetPlayerFacingAngle(playerid, Pos[3]);

	GetPlayerVehicles{playerid}++;
	GetServerVehicles++;

	new color1 = random(255), color2 = random(255);

	VehicleInfo[v][vModel] = modelid;
	VehicleInfo[v][vColor1] = color1;
	VehicleInfo[v][vColor2] = color2;
	VehicleInfo[v][vPrice] = price;
	VehicleInfo[v][vPosX] = Pos[0] + 2.0;
	VehicleInfo[v][vPosY] = Pos[1] + 2.0;
	VehicleInfo[v][vPosZ] = Pos[2];
	VehicleInfo[v][vPosA] = Pos[3];
	strmid(VehicleInfo[v][vOwner], GetName(playerid), 0, 24, 24);
	strmid(VehicleInfo[v][vPlate], "ACNR", 0, 32, 32);
	VehicleInfo[v][vPaintJob] = NO_PAINT;
	VehicleInfo[v][vLocked] = 0;
	VehicleInfo[v][vNeons] = NO_NEONS;
	VehicleInfo[v][vFuel] = 100;
	VehicleInfo[v][vHealth] = 1000.0;

	new file[40];
	format(file, sizeof(file), VEH_FILE, v);

	new File:startfile = fopen(file, io_write);
	fclose(startfile);

	new INI:vfile = INI_Open(file);

	INI_WriteInt(vfile, "Model", modelid);
	INI_WriteInt(vfile, "Color1", color1);
	INI_WriteInt(vfile, "Color2", color2);
	INI_WriteInt(vfile, "Price", price);
	INI_WriteString(vfile, "Owner", GetName(playerid));
	INI_WriteFloat(vfile, "PosX", Pos[0] + 2.0);
	INI_WriteFloat(vfile, "PosY", Pos[1] + 2.0);
	INI_WriteFloat(vfile, "PosZ", Pos[2]);
	INI_WriteFloat(vfile, "PosA", Pos[3]);
	INI_WriteString(vfile, "Plate", "ACNR");
	INI_WriteInt(vfile, "PaintJob", NO_PAINT);
	INI_WriteInt(vfile, "Locked", 0);
	INI_WriteInt(vfile, "Neons", NO_NEONS);
	INI_WriteInt(vfile, "Fuel", 100);
	INI_WriteFloat(vfile, "Health", 1000.0);

	INI_Close(vfile);

	new vehicle = CreateVehicle(modelid, Pos[0] + 2.0, Pos[1] + 2.0, Pos[2] + 5 + random(30), Pos[3], color1, color2, 2073600);//24 day time delay (2073600 secs)
	SetVehicleNumberPlate(vehicle, "ACNR");
	GetVehicleFuel[vehicle] = 100;
	GetVehicleCurrentHealth[vehicle] = 1000.0;
	IsShopVehicle[vehicle] = v;
	SaveVehicleStats(v);

	GivePlayerCash(playerid, -price);
	return 1;
}

stock GetFreeBizID()
{
	for(new i = 0; i < MAX_BUSINESSES; i++)
	{
	    new file[40];
		format(file, sizeof(file), BIZ_FILE, i);
		if(!fexist(file))
		{
		    return i;
		}
	}
	return -1;
}

stock UnloadBusinesses()
{
	for(new i = 0; i < MAX_BUSINESSES; i++)
    {
		Delete3DTextLabel(bLabel[i]);
		DestroyDynamicCP(bizentercp[i]);
		DestroyDynamicCP(bizexitcp[i]);
		DestroyDynamicCP(bizrobberycp[i]);
	}
	return 1;
}

stock GetBizOwner(bizid)
{
	new owner[24];
	format(fstr, sizeof(fstr), BIZ_FILE, bizid);
	if(fexist(fstr))
	{
	    if(!strcmp(BizInfo[bizid][bOwner], DEFAULT_BIZ_OWNER_NAME))
	    {
	    	format(owner, sizeof(owner), "%s", DEFAULT_BIZ_OWNER_NAME);
	    }
	    else
	    {
	    	format(owner, sizeof(owner), "%s", BizInfo[bizid][bOwner]);
	    }
	}
	return owner;
}

stock GetPlayerOwnedBusinesses(playerid)
{
	new count = 0, file[40];
	for(new i = 0; i < MAX_BUSINESSES; i++)
	{
		format(file, sizeof(file), BIZ_FILE, i);
		if(fexist(file))
		{
	    	if(!strcmp(GetName(playerid), BizInfo[i][bOwner], true))
	    	{
	    		count++;
	    	}
	    }
	}
	return count;
}

stock SaveBizStats(bizid)
{
	new file[40];
	format(file, sizeof(file), BIZ_FILE, bizid);
	if(fexist(file))
	{
	    new INI:bfile = INI_Open(file);

	    INI_WriteString(bfile, "bName", BizInfo[bizid][bName]);
	    INI_WriteString(bfile, "bOwner", BizInfo[bizid][bOwner]);
	    INI_WriteInt(bfile, "bPrice", BizInfo[bizid][bPrice]);
	    INI_WriteFloat(bfile, "bExtX", BizInfo[bizid][bExtX]);
	    INI_WriteFloat(bfile, "bExtY", BizInfo[bizid][bExtY]);
	    INI_WriteFloat(bfile, "bExtZ", BizInfo[bizid][bExtZ]);
	    INI_WriteFloat(bfile, "bIntX", BizInfo[bizid][bIntX]);
	    INI_WriteFloat(bfile, "bIntY", BizInfo[bizid][bIntY]);
	    INI_WriteFloat(bfile, "bIntZ", BizInfo[bizid][bIntZ]);
	    INI_WriteFloat(bfile, "bExtSpwnX", BizInfo[bizid][bExtSpwnX]);
	    INI_WriteFloat(bfile, "bExtSpwnY", BizInfo[bizid][bExtSpwnY]);
	    INI_WriteFloat(bfile, "bExtSpwnZ", BizInfo[bizid][bExtSpwnZ]);
	    INI_WriteFloat(bfile, "bExtSpwnA", BizInfo[bizid][bExtSpwnA]);
	    INI_WriteFloat(bfile, "bIntSpwnX", BizInfo[bizid][bIntSpwnX]);
	    INI_WriteFloat(bfile, "bIntSpwnY", BizInfo[bizid][bIntSpwnY]);
	    INI_WriteFloat(bfile, "bIntSpwnZ", BizInfo[bizid][bIntSpwnZ]);
	    INI_WriteFloat(bfile, "bIntSpwnA", BizInfo[bizid][bIntSpwnA]);
	    INI_WriteFloat(bfile, "bRobX", BizInfo[bizid][bRobX]);
	    INI_WriteFloat(bfile, "bRobY", BizInfo[bizid][bRobY]);
	    INI_WriteFloat(bfile, "bRobZ", BizInfo[bizid][bRobZ]);
	    INI_WriteInt(bfile, "bInterior", BizInfo[bizid][bInterior]);
	    INI_WriteInt(bfile, "bVWorld", BizInfo[bizid][bVWorld]);
	    INI_WriteInt(bfile, "bEarnings", BizInfo[bizid][bEarnings]);
		INI_Close(bfile);
	}
	return 1;
}

stock SaveHouseStats(houseid)
{
	new file[40];
	format(file, sizeof(file), HOUSE_FILE, houseid);
	if(fexist(file))
	{
	    new INI:hfile = INI_Open(file);

	    INI_WriteString(hfile, "HouseOwner", HouseInfo[houseid][hOwner]);
	    INI_WriteString(hfile, "HouseName", HouseInfo[houseid][hName]);
	    INI_WriteInt(hfile, "HouseValue", HouseInfo[houseid][hValue]);
	    INI_WriteFloat(hfile, "CPOutX", HouseInfo[houseid][hCPOutX]);
	    INI_WriteFloat(hfile, "CPOutY", HouseInfo[houseid][hCPOutY]);
	    INI_WriteFloat(hfile, "CPOutZ", HouseInfo[houseid][hCPOutZ]);
	    INI_WriteFloat(hfile, "SpawnOutX", HouseInfo[houseid][hSPOutX]);
	    INI_WriteFloat(hfile, "SpawnOutY", HouseInfo[houseid][hSPOutY]);
	    INI_WriteFloat(hfile, "SpawnOutZ", HouseInfo[houseid][hSPOutZ]);
	    INI_WriteFloat(hfile, "SpawnOutAngle", HouseInfo[houseid][hSPOutA]);
	    INI_WriteInt(hfile, "SpawnWorld", HouseInfo[houseid][hWorld]);
	    INI_WriteInt(hfile, "SpawnInterior", HouseInfo[houseid][hSpawnInterior]);
	    INI_WriteInt(hfile, "HouseInterior", HouseInfo[houseid][hHouseInterior]);
	    INI_WriteInt(hfile, "QuitInHouse", HouseInfo[houseid][hQuit]);
	    INI_WriteString(hfile, "KeyOwner1", HouseInfo[houseid][hKeyOwner1]);
	    INI_WriteString(hfile, "KeyOwner2", HouseInfo[houseid][hKeyOwner2]);
	    INI_WriteString(hfile, "KeyOwner3", HouseInfo[houseid][hKeyOwner3]);
	    INI_WriteString(hfile, "KeyOwner4", HouseInfo[houseid][hKeyOwner4]);
	    INI_WriteString(hfile, "KeyOwner5", HouseInfo[houseid][hKeyOwner5]);
	    INI_WriteString(hfile, "KeyOwner6", HouseInfo[houseid][hKeyOwner6]);
	    INI_WriteString(hfile, "KeyOwner7", HouseInfo[houseid][hKeyOwner7]);
	    INI_WriteString(hfile, "KeyOwner8", HouseInfo[houseid][hKeyOwner8]);
	    INI_WriteString(hfile, "KeyOwner9", HouseInfo[houseid][hKeyOwner9]);
	    INI_WriteString(hfile, "KeyOwner10", HouseInfo[houseid][hKeyOwner10]);
		INI_Close(hfile);
	}
	return 1;
}

stock GetOwnedHouses(playerid)
{
	new file[40], tmpcount = 0;
	Loop(h, MAX_HOUSES)
	{
	    format(file, sizeof(file), HOUSE_FILE, h);
	    if(fexist(file))
	    {
	    	if(!strcmp(pNick(playerid), GetHouseOwner(h), true))
		    {
		        tmpcount++;
		    }
		}
	}
	return tmpcount;
}

stock GetHouseOwnerEx(houseid)
{
	new file[40];
	format(file, sizeof(file), HOUSE_FILE, houseid);
 	if(fexist(file))
  	{
   		foreach(new i : Player)
   		{
	    	if(!strcmp(pNick(i), GetHouseOwner(houseid), true))
   			{
      			return i;
   			}
		}
	}
	return INVALID_PLAYER_ID;
}

stock UnloadHouses()
{
	Loop(h, MAX_HOUSES)
	{
		DestroyHouseEntrance(h, TYPE_OUT);
		DestroyHouseEntrance(h, TYPE_INT);
		Delete3DTextLabel(HouseLabel[h]);
		
	}
	return 1;
}

stock GetHouseValue(houseid)
{
	new file[40];
	format(file, sizeof(file), HOUSE_FILE, houseid);
	if(fexist(file))
	{
		return HouseInfo[houseid][hValue];
	}
	else return 1;
}

stock GetHouseName(houseid)
{
	new file[40], hname[50];
	format(hname, 64, "%s", "For-Sale");
	format(file, sizeof(file), HOUSE_FILE, houseid);
	if(fexist(file))
	{
	    format(hname, 64, "%s", HouseInfo[houseid][hName]);
		return hname;
	}
	return hname;
}

stock GetHouseOwner(houseid)//
{
	new file[40], howner[MAX_PLAYER_NAME];
	format(howner, MAX_PLAYER_NAME, "Nobody");
	format(file, sizeof(file), HOUSE_FILE, houseid);
	if(fexist(file))
	{
	    format(howner, MAX_PLAYER_NAME, "%s", HouseInfo[houseid][hOwner]);
		return howner;
	}
	return howner;
}

stock IsHouseInRangeOfHouse(house, house2, Float:range = 250.0)//
{
	new file[40], file2[40];
	format(file, sizeof(file), HOUSE_FILE, house);
	format(file2, sizeof(file2), HOUSE_FILE, house2);
	if(fexist(file) && fexist(file2))
	{
		if(PointInRangeOfPoint(range, HouseInfo[house][hCPOutX], HouseInfo[house][hCPOutY], HouseInfo[house][hCPOutZ], HouseInfo[house2][hCPOutX], HouseInfo[house2][hCPOutY], HouseInfo[house2][hCPOutZ]))
		{
		    return 1;
		}
	}
	return 0;
}

stock CreateCorrectHouseExitCP(houseid)//
{
    new file[40];
	format(file, sizeof(file), HOUSE_FILE, houseid);
	switch(HouseInfo[houseid][hHouseInterior])
	{
		case 6: HouseCPInt[houseid] = CreateDynamicCP(2196.84, -1204.36, 1049.02, 1.0, (houseid + 1000), 6, -1, 4.0);// 1 Story
		case 7: HouseCPInt[houseid] = CreateDynamicCP(225.7121, 1021.4438, 1084.0177, 1.0, (houseid + 1000), 7, -1, 4.0);// Apartment
		case 9: HouseCPInt[houseid] = CreateDynamicCP(2317.77, -1026.76, 1050.21, 1.0, (houseid + 1000), 9, -1, 4.0);// 2 Story
		case 12: HouseCPInt[houseid] = CreateDynamicCP(2324.41, -1149.54, 1050.71, 1.0, (houseid + 1000), 12, -1, 4.0); // Small Mansion
		case 5: HouseCPInt[houseid] = CreateDynamicCP(140.28, 1365.92, 1083.85, 1.0, (houseid + 1000), 5, -1, 4.0);// Large Mansion
	}
	return 1;
}

stock SetPlayerHouseInterior(playerid, house)
{
    new file[40];
    format(file, sizeof(file), HOUSE_FILE, house);
	switch(HouseInfo[house][hHouseInterior])
	{
	 	case 6:
		{
		 	SetPlayerPosEx(playerid, 2193.9001, -1202.4185, 1049.0234, 6, (house + 1000));
    		SetPlayerFacingAngle(playerid, 91.9386); // 1 Story House Interior - Spawnpoint
		}
	 	case 7:
		{
		 	SetPlayerPosEx(playerid, 225.8993, 1023.9148, 1084.0078, 7, (house + 1000));
    		SetPlayerFacingAngle(playerid, 358.4921); // Apartment Interior - Spawnpoint
		}
		case 9:
		{
			SetPlayerPosEx(playerid, 2320.0730, -1023.9533, 1050.2109, 9, (house + 1000));
			SetPlayerFacingAngle(playerid, 358.4915); // 2 Story House Interior - Spawnpoint
		}
		case 12:
		{
		 	SetPlayerPosEx(playerid, 2324.4490, -1145.2841, 1050.7101, 12, (house + 1000));
			SetPlayerFacingAngle(playerid, 357.5873); // Small Mansion Interior - Spawnpoint
		}
		case 5:
		{
			SetPlayerPosEx(playerid, 140.1788, 1369.1936, 1083.8641, 5, (house + 1000));
			SetPlayerFacingAngle(playerid, 359.2263); // Large Mansion Interior - Spawnpoint
		}
	}
}

stock pNick(playerid)//
{
	new GHNick[MAX_PLAYER_NAME];
	GetPlayerName(playerid, GHNick, MAX_PLAYER_NAME);
 	return GHNick;
}

stock PointInRangeOfPoint(Float:range, Float:x2, Float:y2, Float:z2, Float:X2, Float:Y2, Float:Z2)//
{
    X2 -= x2;
    Y2 -= y2;
    Z2 -= z2;
    return ((X2 * X2) + (Y2 * Y2) + (Z2 * Z2)) < (range * range);
}

stock ReturnPercent(Float:amount, Float:procent)//
{
	return floatround((amount / 100 * procent));
}

stock SetPlayerPosEx(playerid, Float:posX, Float:posY, Float:posZ, Interior = 0, World = 0)//
{
	SetPlayerVirtualWorld(playerid, World);
	SetPlayerInterior(playerid, Interior);
	SetPlayerPos(playerid, posX, posY, posZ);
	SetCameraBehindPlayer(playerid);
	return 1;
}

stock GetFreeHouseID()//
{
	new file[40];
    Loop(h, MAX_HOUSES)
    {
        format(file, sizeof(file), HOUSE_FILE, h);
        if(!fexist(file))
        {
            return h;
		}
	}
    return -1;
}

stock GetTotalHouses()//
{
	new tmpcount, file[40];
    Loop(h, MAX_HOUSES)
    {
        format(file, sizeof(file), HOUSE_FILE, h);
        if(fexist(file))
        {
            tmpcount++;
		}
	}
    return tmpcount;
}

stock UpdateHouseText(houseid)//
{
	new labeltext[50], file[40];
	format(file, sizeof(file), HOUSE_FILE, houseid);
	if(fexist(file))
	{
	    if(!strcmp(HouseInfo[houseid][hOwner], "Nobody", false))
	    {
			format(labeltext, sizeof(labeltext), "%s", GetHouseName(houseid));
			Update3DTextLabelText(HouseLabel[houseid], YELLOW, labeltext);
		}
		else
		{
			format(labeltext, sizeof(labeltext), "%s", GetHouseName(houseid));
			Update3DTextLabelText(HouseLabel[houseid], YELLOW, labeltext);
		}
    }
}

stock DestroyHouseEntrance(houseid, type)//
{
    if(type == TYPE_OUT) { DestroyDynamicCP(HouseCPOut[houseid]); }
    if(type == TYPE_INT) { DestroyDynamicCP(HouseCPInt[houseid]); }
	return 1;
}

stock GivePlayerCash(playerid, money)
{
    ServerSideCash[playerid] += money;
    ResetServerCash(playerid);
    UpdateServerCash(playerid,ServerSideCash[playerid]);
    return ServerSideCash[playerid];
}

stock SetPlayerCash(playerid, money)
{
    ServerSideCash[playerid] = money;
    ResetServerCash(playerid);
    UpdateServerCash(playerid,ServerSideCash[playerid]);
    return ServerSideCash[playerid];
}

stock ResetPlayerCash(playerid)
{
    ServerSideCash[playerid] = 0;
    ResetServerCash(playerid);
    UpdateServerCash(playerid,ServerSideCash[playerid]);
    return ServerSideCash[playerid];
}

stock GetPlayerCash(playerid)
{
    return ServerSideCash[playerid];
}

stock GetName(playerid)
{
	new pName[24];
    GetPlayerName(playerid, (pName), sizeof(pName));
    return pName;
}

stock SaveBankStats(playerid)
{
	if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	{
		new bFilee[40];
    	format(bFilee, sizeof(bFilee), BANK_FILE, GetName(playerid));
		new INI:file = INI_Open(bFilee);

 		INI_WriteInt(file, "Balance", BankInfo[playerid][Balance]);
		INI_WriteInt(file, "Credit", BankInfo[playerid][Credit]);
		INI_WriteInt(file, "Debt", BankInfo[playerid][Debt]);
		INI_WriteInt(file, "Fees", BankInfo[playerid][Fees]);
		INI_WriteInt(file, "Transactions", BankInfo[playerid][Transactions]);
		INI_Close(file);
	}
	return 1;
}

stock CopRadio(color,const string[])
{
    //print(string);
	foreach(new i : Player)
	{
		if(GetPlayerState(i) != PLAYER_STATE_NONE)
		{
			if(GetTeam{i} == CLASS_COPS || GetTeam{i} == CLASS_CIA || GetTeam{i} == CLASS_FBI || GetTeam{i} == CLASS_ARMY)
			{
				SendClientMessage(i, color, string);
				PlayerPlaySound(i, 2607, 0.0, 0.0, 10.0);
			}
		}
	}
	return 1;
}

stock MedicRadio(color,const string[])
{
    //print(string);
	foreach(new i : Player)
	{
		if(GetPlayerState(i) != PLAYER_STATE_NONE)
		{
			if(GetTeam{i} == CLASS_MEDIC)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

stock MechanicRadio(color,const string[])
{
    //print(string);
	foreach(new i : Player)
	{
		if(GetPlayerState(i) != PLAYER_STATE_NONE)
		{
			if(DegreeInfo[i][dMechanic] == 1)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

stock DealerRadio(color,const string[])
{
    //print(string);
	foreach(new i : Player)
	{
		if(GetPlayerState(i) != PLAYER_STATE_NONE)
		{
			if(DegreeInfo[i][dWeapons] == 1)
			{
				SendClientMessage(i, color, string);
			}
		}
	}
	return 1;
}

stock SendAdminMessage(color,const astring[])
{
    print(astring);
	foreach(new i : Player)
	{
		if(GetPlayerState(i) != PLAYER_STATE_NONE)
		{
	    if(IsAnopmOn{i} == 0)
		{
			if(IsPlayerAdmin(i))
			{
				SendClientMessage(i, color, astring);
			}
			else if(PlayerInfo[i][aLevel] >= 2)
			{
				SendClientMessage(i, color, astring);
			}
		}
		}
	}
	return 1;
}

stock SendMessageToAll(color,const string[])
{
//    print(string);
	foreach(new i : Player)
	{
		if(GetPlayerState(i) != PLAYER_STATE_NONE)
		{
	        if(HasConnectedSpawned{i} == true)
	    	{
                SendClientMessage(i, color, string);
            }
		}
	}
	return 1;
}

stock SendHelpMessage(color,const astring[])
{
    print(astring);
	foreach(new i : Player)
	{
		if(GetPlayerState(i) != PLAYER_STATE_NONE)
		{
		    if(IsPlayerAdmin(i) || PlayerInfo[i][aLevel] >= 1 || PlayerInfo[i][Helper] == 1 || PlayerInfo[i][hHelper] == 1)
			{
				SendClientMessage(i, color, astring);
			}
		}
	}
	return 1;
}

stock SendOwnerMessage(color,const astring[])
{
    print(astring);
	foreach(new i : Player)
	{
		if(GetPlayerState(i) != PLAYER_STATE_NONE)
		{
		if(IsAnopmOn{i} == 0)
		{
			if(IsPlayerAdmin(i))
			{
				SendClientMessage(i, color, astring);
			}
			else if(PlayerInfo[i][aLevel] >= 4)
			{
				SendClientMessage(i, color, astring);
			}
		}
		}
	}
	return 1;
}

stock SendVIPMessage(color,const astring[])
{
    print(astring);
	foreach(new i : Player)
	{
		if(GetPlayerState(i) != PLAYER_STATE_NONE)
		{
			if(PlayerInfo[i][vLevel] >= 1)
			{
				SendClientMessage(i, color, astring);
			}
		}
	}
	return 1;
}

stock MakeNumber()
{
	Number[0] = random(99) +1;
	Number[1] = random(99) +1;
	Number[2] = random(99) +1;
	Number[3] = random(99) +1;
	Number[4] = random(99) +1;
	Number[5] = random(99) +1;
	return 1;
}

stock MakePlayersLottoNumbers(playerid)
{
	PlayersLottoNumbers[0][playerid] = random(99) +1;
	PlayersLottoNumbers[1][playerid] = random(99) +1;
	PlayersLottoNumbers[2][playerid] = random(99) +1;
	PlayersLottoNumbers[3][playerid] = random(99) +1;
	PlayersLottoNumbers[4][playerid] = random(99) +1;
	PlayersLottoNumbers[5][playerid] = random(99) +1;
	return 1;
}

stock SaveFightStats(playerid)
{
	if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	{
		new file[40];
		format(file, sizeof(file), STYLE_FILE, GetName(playerid));
		new INI:ffile = INI_Open(file);

		INI_WriteInt(ffile, "FightStyle", FightStyleID{playerid});
		INI_Close(ffile);
	}
	return 1;
}

stock SaveDegreeStats(playerid)
{
	if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	{
		new file[40];
		format(file, sizeof(file), DEGREE_FILE, GetName(playerid));
    	new INI:dfile = INI_Open(file);

    	INI_WriteInt(dfile, "dReal", DegreeInfo[playerid][dReal]);
    	INI_WriteInt(dfile, "dLaw", DegreeInfo[playerid][dLaw]);
    	INI_WriteInt(dfile, "dDefense", DegreeInfo[playerid][dDefense]);
    	INI_WriteInt(dfile, "dHealth", DegreeInfo[playerid][dHealth]);
    	INI_WriteInt(dfile, "dMechanic", DegreeInfo[playerid][dMechanic]);
    	INI_WriteInt(dfile, "dDealer", DegreeInfo[playerid][dDealer]);
    	INI_WriteInt(dfile, "dWeapons", DegreeInfo[playerid][dWeapons]);
		INI_Close(dfile);
	}
	return 1;
}

stock SaveUserStats(playerid)
{
	if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	{
		new file[40];
		new score = GetPlayerScore(playerid), cash = GetPlayerCash(playerid), wanted = GetPlayerWantedLevel(playerid), jail = JailTime[playerid], cage = CageTime[playerid];
		
		new Float:armour, Float:health;
		
		GetPlayerHealth(playerid, health);
		PlayerInfo[playerid][pHealth] = health;

		GetPlayerArmour(playerid, armour);
		PlayerInfo[playerid][pArmour] = armour;
		
//		if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n armour: %f \n pArmour: %f \n pHealth: %f",health, armour, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

		PlayerInfo[playerid][pScore] = score;
		PlayerInfo[playerid][pCash] = cash;
		PlayerInfo[playerid][pWanted] = wanted;
		PlayerInfo[playerid][jTime] = jail;
		PlayerInfo[playerid][cTime] = cage;
		
		format(file, sizeof(file), USER_FILE, GetName(playerid));
    	new INI:ufile = INI_Open(file);
    	INI_WriteString(ufile, "pPass", PlayerInfo[playerid][pPass]);
    	INI_WriteInt(ufile, "aLevel",PlayerInfo[playerid][aLevel]);
    	INI_WriteInt(ufile, "vLevel",PlayerInfo[playerid][vLevel]);
    	INI_WriteInt(ufile, "pCash", cash);
    	INI_WriteInt(ufile, "pScore", score);
    	INI_WriteInt(ufile, "pKills", PlayerInfo[playerid][pKills]);
    	INI_WriteInt(ufile, "pDeaths", PlayerInfo[playerid][pDeaths]);
    	INI_WriteInt(ufile, "pHoldups", PlayerInfo[playerid][pHoldups]);
    	INI_WriteInt(ufile, "pCrimes", PlayerInfo[playerid][pCrimes]);
    	INI_WriteInt(ufile, "pFined", PlayerInfo[playerid][pFined]);
    	INI_WriteInt(ufile, "pArrests", PlayerInfo[playerid][pArrests]);
    	INI_WriteInt(ufile, "pTakedowns", PlayerInfo[playerid][pTakedowns]);
    	INI_WriteInt(ufile, "pTickets", PlayerInfo[playerid][pTickets]);
    	INI_WriteInt(ufile, "pRope", PlayerInfo[playerid][pRope]);
    	INI_WriteInt(ufile, "pPaintCan", PlayerInfo[playerid][pPaintCan]);
    	INI_WriteInt(ufile, "pScissors", PlayerInfo[playerid][pScissors]);
    	INI_WriteInt(ufile, "pKits", PlayerInfo[playerid][pKits]);
    	INI_WriteInt(ufile, "vLock", PlayerInfo[playerid][vLock]);
    	INI_WriteInt(ufile, "Helper", PlayerInfo[playerid][Helper]);
    	INI_WriteInt(ufile, "hHelper", PlayerInfo[playerid][hHelper]);
    	INI_WriteInt(ufile, "pWarns", PlayerInfo[playerid][pWarns]);
    	INI_WriteInt(ufile, "pKicks", PlayerInfo[playerid][pKicks]);
    	INI_WriteInt(ufile, "pJoins", PlayerInfo[playerid][pJoins]);
    	INI_WriteInt(ufile, "pMaterials", PlayerInfo[playerid][pMaterials]);
    	INI_WriteInt(ufile, "Banned", PlayerInfo[playerid][Banned]);
    	INI_WriteInt(ufile, "jTime", jail);
    	INI_WriteFloat(ufile, "pArmour", armour);
    	INI_WriteFloat(ufile, "pHealth", health);
    	INI_WriteInt(ufile, "pWanted", wanted);
    	INI_WriteInt(ufile, "cTime", cage);
		INI_Close(ufile);
/*		if(ACNR_DEBUG == 1)
		{
			new dbstr[300];
			printf("DEBUG: SaveUserStats(%d, %s, %d, %f);",playerid, PlayerInfo[playerid][pPass], PlayerInfo[playerid][aLevel], PlayerInfo[playerid][pHealth]);
			format(dbstr, sizeof(dbstr), "DEBUG: SaveUserStats(%d, %s, %d, %f);",playerid, PlayerInfo[playerid][pPass], PlayerInfo[playerid][aLevel], PlayerInfo[playerid][pHealth]);
			SendClientMessage(playerid, RED, dbstr);
		}*/
	}
	return 1;
}

stock CalculateWealth(playerid)
{
	new wealth = GetPlayerCash(playerid) + BankInfo[playerid][Balance];
	return wealth;
}

stock SetPlayerTeamFromClass(playerid, classid)
{
	switch(classid)
	{
        case 0..3:
		{
		    GetTeam{playerid} = CLASS_MEDIC;
		    GameTextForPlayer(playerid, "~n~~n~~n~~n~~p~Doctor/Medic", 5000, 5);
		    return 1;
		}
		case 4..7:
		{
		    GetTeam{playerid} = CLASS_CIA;
		    GameTextForPlayer(playerid, "~n~~n~~n~~n~~w~Mamor CIA", 5000, 5);
		    return 1;
		}
		case 8..23:
		{
		    GetTeam{playerid} = CLASS_COPS;
		    GameTextForPlayer(playerid, "~n~~n~~n~~n~~b~Police/Cop", 5000, 5);
		    return 1;
		}
		case 24:
		{
		    GetTeam{playerid} = CLASS_ARMY;
		    GameTextForPlayer(playerid, "~n~~n~~n~~n~~g~Army", 5000, 5);
		    return 1;
		}
		case 25:
		{
		    GetTeam{playerid} = CLASS_FBI;
		    GameTextForPlayer(playerid, "~n~~n~~n~~n~~y~Mamor FBI", 5000, 5);
		    return 1;
		}
		case 26..157:
		{
		    GetTeam{playerid} = CLASS_CIV;
		    GameTextForPlayer(playerid, "~n~~n~~n~~n~~r~Shahrvand/Civilians", 5000, 5);
		}
	}
	return 1;
}

stock IsPlayerInInvalidNosVehicle(playerid)//
{
    new vehicleid = GetPlayerVehicleID(playerid);
    #define MAX_INVALID_NOS_VEHICLES 52
    new InvalidNosVehicles[MAX_INVALID_NOS_VEHICLES] =
    {
        581,523,462,521,463,522,461,448,468,586,417,425,469,487,512,520,563,593,
        509,481,510,472,473,493,520,595,484,430,453,432,476,497,513,533,577,
        452,446,447,454,590,569,537,538,570,449,519,460,488,511,519,548,592
    };
    if(IsPlayerInAnyVehicle(playerid))
    {
        for(new i = 0; i < MAX_INVALID_NOS_VEHICLES; i++)
        {
            if(GetVehicleModel(vehicleid) == InvalidNosVehicles[i]) return true;
        }
    }
    return false;
}

stock IsPlayerInZone(playerid, zoneid)
{
	if(zoneid == -1) return 0;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	if(x >= ZoneNames[zoneid][zone_minx] && x < ZoneNames[zoneid][zone_maxx]
	&& y >= ZoneNames[zoneid][zone_miny] && y < ZoneNames[zoneid][zone_maxy]
	&& z >= ZoneNames[zoneid][zone_minz] && z < ZoneNames[zoneid][zone_maxz]
	&& z < 1200.0000) return 1;
	return 0;
}

stock Float:GetPlayerSpeed(playerid)
{
    new Float:SpeedX, Float:SpeedY, Float:SpeedZ;
    new Float:Speed;
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid), SpeedX, SpeedY, SpeedZ);
    else GetPlayerVelocity(playerid, SpeedX, SpeedY, SpeedZ);
    Speed = floatsqroot( ( (SpeedX*SpeedX) + (SpeedY*SpeedY) + (SpeedZ*SpeedZ) ) ) * 200;
    return floatround(Speed, floatround_round);
}

stock soratbegirs(vehicleid)
{
	new Float:SpeedX, Float:SpeedY, Float:SpeedZ;
    new Float:Speed;
	GetVehicleVelocity(vehicleid, SpeedX, SpeedY, SpeedZ);
	Speed = floatsqroot( ( (SpeedX*SpeedX) + (SpeedY*SpeedY) + (SpeedZ*SpeedZ) ) ) * 200;
    return floatround(Speed, floatround_round);
	/*
	new Float:speed_xe,Float:speed_ye,Float:speed_ze,Float:final_speede,final_speed_inte;
    GetVehicleVelocity(vehicleid,speed_xe,speed_ye,speed_ze);
	final_speede = floatsqroot(((speed_xe*speed_xe)+(speed_ye*speed_ye)))*180.0;
	final_speed_inte = floatround(final_speede,floatround_round);
	return final_speed_inte;
	*/
	    
}

#define GetVehicleSpeed(%1) soratbegirs(%1)
/*
stock GetVehicleSpeed(vehicleid)
{
	return soratbegirs(vehicleid);
	
//	 new Float: vVel[3];
//	GetVehicleVelocity(vehicleid, vVel[0], vVel[1], vVel[2]);
//	return floatround(floatsqroot((vVel[0]*vVel[1]+vVel[2]*vVel[2]))*100.0*1.6);
	
   
}
*/
stock DisplayGroupMembers(groupid, playerid)
{
    new amount[2], string[400], shortstr[600], pname[50];
    format(string, sizeof(string), "%s (%d):", GroupInfo[groupid][grname], groupid);
	SendClientMessage(playerid, ORANGE, string);
	string = "";
	foreach(new x : Player)
	{
	    if(IsPlayerConnected(x) && pGroupInfo[x][gid] == groupid)
	    {
	        amount[0] ++;
	        amount[1] ++;
	        GetPlayerName(x, pname, 24);
	        if(GroupInfo[groupid][leader] != x) format(shortstr, sizeof(shortstr), "%s [%d]]", pname, x);
	        if(GroupInfo[groupid][leader] == x) format(shortstr, sizeof(shortstr), "[LEADER] %s [%d]]", pname, x);
	        if(amount[1] == 1) format(string, sizeof(string), "%s", shortstr);
	        if(amount[1] != 1) format(string, sizeof(string), "%s, %s", string, shortstr);
			if(amount[0] == 6)
	        {
	            strdel(string, strlen(string)-1, strlen(string));
				SendClientMessage(playerid, ORANGE, string);
			    string = "";
			    amount[0] = 0;
	        }
	    }
	}
	strdel(string, strlen(string)-1, strlen(string));
	if(amount[0] != 0) SendClientMessage(playerid, ORANGE, string);
	return 1;
}

stock ListGroups(playerid)
{
	new amount[2], string[600], shortstr[55];
	SendClientMessage(playerid, ORANGE, "Goroh haye faal:");
	for(new x=0; x < MAX_GROUPS; x++)
	{
		if(GroupInfo[x][active])
		{
	 		amount[0] ++;
	 		amount[1] ++;
	 		format(shortstr, sizeof(shortstr), "%s (%d)", GroupInfo[x][grname], x);
			if(amount[1] == 1) format(string, sizeof(string), "%s", shortstr);
	        if(amount[1] != 1) format(string, sizeof(string), "%s, %s", string, shortstr);
			if(amount[0] == 4)
			{
			    SendClientMessage(playerid, ORANGE, string);
			    string = "";
			    amount[0] = 0;
			}
		}
	}
	if(amount[1] == 0) SendClientMessage(playerid, RED, "dar in zaman hich gorohe faali vojod nadarad.");
	if(amount[1] != 0) SendClientMessage(playerid, ORANGE, string);
	return 1;
}

stock SendMessageToLeader(groupi, message[])
{
    return SendClientMessage(GroupInfo[groupi][leader], ORANGE, message);
}

stock GroupJoin(playerid, groupi)
{
	pGroupInfo[playerid][gid] = groupi;
	pGroupInfo[playerid][order] = GroupMembers(groupi);
    pGroupInfo[playerid][attemptjoin] = -1;
    pGroupInfo[playerid][invited] = -1;
    new pname[24], string[130];
	GetPlayerName(playerid, pname, 24);
    format(string, sizeof(string), "%s [%d] be goroh vared shod.", pname, playerid);
    SendMessageToAllGroupMembers(groupi, string);
	format(string, sizeof(string), "shoma be goroh %s (%d) vared shodid", GroupInfo[groupi][grname] ,groupi);
	SendClientMessage(playerid, YELLOW, string);
	return 1;
}

stock FindNextSlot()
{
	new id;
	while(GroupInfo[id][active]) id ++;
	return id;
}

stock IsGroupTaken(grpname[])
{
	for(new x; x < MAX_GROUPS; x++)
	{
	    if(GroupInfo[x][active] == 1)
	    {
			if(!strcmp(grpname, GroupInfo[x][grname], false) && strlen(GroupInfo[x][grname]) != 0) return 1;
		}
	}
	return 0;
}

stock GroupInvite(playerid, groupid)
{
    return pGroupInfo[playerid][invited] = groupid;
}

stock CreateGroup(grpname[], owner)
{
	new slotid = FindNextSlot();
	GroupInfo[slotid][leader] = owner;
	format(GroupInfo[slotid][grname], 75, "%s", grpname);
	GroupInfo[slotid][active] = 1;
	pGroupInfo[owner][gid] = slotid;
	pGroupInfo[owner][order] = 1;
	new string[120];
	format(string, sizeof(string), "Group %s (%d) sakhte shod.", grpname, slotid);
	SendClientMessage(owner, ORANGE, string);
	return slotid;
}

stock LeaveGroup(playerid, reason)
{
	new groupid = pGroupInfo[playerid][gid], orderid = pGroupInfo[playerid][order], string[200], pname[24];
	pGroupInfo[playerid][gid] = -1;
	pGroupInfo[playerid][order] = -1;
	pGroupInfo[playerid][invited] = -1;
	pGroupInfo[playerid][attemptjoin] = -1;
	GroupCheck(groupid, orderid);
	GetPlayerName(playerid, pname, 24);
	if(reason == 0)
	{
 		format(string, sizeof(string), "%s [%d] goroh ra tark kard. [Left]", pname, playerid);
 		SendClientMessage(playerid, YELLOW, "shoma goroh ra tark kardid.");
 	}
	if(reason == 1)
	{
		format(string, sizeof(string), "%s [%d] az goroh kick shod. [Kicked]", pname, playerid);
        SendClientMessage(playerid, RED, "shoma az goroh kick shodid.");
	}
    if(reason == 2) format(string, sizeof(string), "%s [%d] goroh ra tark kard. [Disconnected]", pname, playerid);
	SendMessageToAllGroupMembers(groupid, string);
	return 1;
}

stock GroupCheck(groupid, orderid)
{
	new gmems = GroupMembers(groupid);
	if(!gmems) GroupInfo[groupid][active] = 0;
	if(gmems != 0) ChangeMemberOrder(groupid, orderid);
	return 1;
}

stock GroupMembers(groupid)
{
    if(!GroupInfo[groupid][active]) return 0;
	new groupmembers;
	foreach(new i : Player)
	{
		if(IsPlayerConnected(i) && pGroupInfo[i][gid] == groupid) groupmembers++;
	}
	return groupmembers;
}

stock ChangeMemberOrder(groupid, orderid)
{
	foreach(new x : Player)
	{
		if(pGroupInfo[x][gid] != groupid || pGroupInfo[x][order] < orderid) continue;
		pGroupInfo[x][order] --;
		if(IsPlayerConnected(x) && pGroupInfo[x][order] == 1)
		{
			GroupInfo[groupid][leader] = x;
			new string[150], pname[24];
			GetPlayerName(x, pname, 24);
			format(string, sizeof(string), "%s [%d] leader goroh shod.", pname, x);
			SendMessageToAllGroupMembers(groupid, string);
		}
	}
	return 1;
}

stock SendMessageToAllGroupMembers(groupid, message[])
{
	if(!GroupInfo[groupid][active]) return 0;
	foreach(new x : Player)
	{
		if(pGroupInfo[x][gid] == groupid) SendClientMessage(x, ORANGE, message);
	}
	SendAdminMessage(GREY, message);
	return 1;
}

stock IsPlayerHoldingAGun(playerid)
{
	new answer = false, NINEMM = 22, SILENCED = 23, DEAGLE = 24, SHOTGUN = 25, SAWNOFF = 26, COMBAT = 27;
	new UZI = 28, MPFIVE = 29, AKFORTYSEVEN = 30, MFOUR = 31, TECNINE = 32, RIFLE = 33, SNIPER = 34;
	if(GetPlayerWeapon(playerid) == NINEMM || GetPlayerWeapon(playerid) == SILENCED || GetPlayerWeapon(playerid) == DEAGLE ||
	GetPlayerWeapon(playerid) == SHOTGUN || GetPlayerWeapon(playerid) == SAWNOFF || GetPlayerWeapon(playerid) == COMBAT ||
	GetPlayerWeapon(playerid) == UZI || GetPlayerWeapon(playerid) == MPFIVE || GetPlayerWeapon(playerid) == AKFORTYSEVEN ||
	GetPlayerWeapon(playerid) == MFOUR || GetPlayerWeapon(playerid) == TECNINE || GetPlayerWeapon(playerid) == RIFLE ||
	GetPlayerWeapon(playerid) == SNIPER)
	{
	    answer = true;
	}
	return answer;
}

stock GetVehicleDriverID(vehicleid)
{
    foreach(new i : Player)
    {
        if(GetPlayerState(i) != PLAYER_STATE_DRIVER) continue;
        if(GetPlayerVehicleID(i) == vehicleid)
        {
            return i;
        }
    }
    return INVALID_PLAYER_ID;
}

stock IsPlayerInOwnedVehicle(playerid, vehicleid)
{
	if(IsShopVehicle[vehicleid] != -1)
	{
		if(!strcmp(GetName(playerid), VehicleInfo[IsShopVehicle[vehicleid]][vOwner], false))
		{
		    if(GetPlayerVehicleID(playerid) == vehicleid)
		    {
				return 1;
			}
		}
	}
	return 0;
}

stock IsPlayerNearLawEnforcement(playerid)
{
	new Float:cPos[3], Float:range = 100.0;
	foreach(new i : Player)
	{
	    if(GetTeam{i} == CLASS_CIV || GetTeam{i} == CLASS_MEDIC) continue;
	    GetPlayerPos(i, cPos[0], cPos[1], cPos[2]);
	    if(IsPlayerInRangeOfPoint(playerid, range, cPos[0], cPos[1], cPos[2]))
	    {
	        return 1;
	    }
	}
	return 0;
}

stock IsPlayerInWater(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
	if (((anim >=  1538) && (anim <= 1542)) || (anim == 1544) || (anim == 1250) || (anim == 1062)) return 1;
	return 0;
}

stock IsPlayerAiming(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
	if (((anim >= 1160) && (anim <= 1163)) || (anim == 1167) || (anim == 1365) || (anim == 1643) || (anim == 1453) || (anim == 220)) return 1;
	return 0;
}

stock IsPlayerUndergoingHoldup(playerid)
{
	if(IsRobbingIsle{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingVegas{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingRedsands{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingCalg{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingDrag{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingBank1{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingBank2{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingBank3{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingBank4{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingNVPD{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingHall{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingBar{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingAmmu1{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingAmmu2{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingAmmu3{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingAmmu4{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingAmmu5{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingAmmu6{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingFBI{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingUNI{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingCIA{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingClub{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingGym{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingShot1{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingShot2{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingShot3{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingShot4{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingShot5{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingCluck1{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingCluck2{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingCluck3{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingStore1{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingStore2{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingStore3{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingStore4{playerid} == true)
	{
	    return 1;
	}
	else if(IsRobbingPizza{playerid} == true)
	{
	    return 1;
	}
	else return 0;
}

stock GunPath(playerid)
{
    new file[64];
    format(file, sizeof(file), GUN_FILE, GetName(playerid));
    return file;
}

stock PosPath(playerid)
{
    new file[64];
    format(file, sizeof(file), POS_FILE, GetName(playerid));
    return file;
}

stock SaveGunStats(playerid)
{
	if(fexist(GunPath(playerid)))
	{
		GetPlayerWeaponData(playerid, 0, GunInfo[playerid][gSlot0_gun], GunInfo[playerid][gSlot0_ammo]);
		GetPlayerWeaponData(playerid, 1, GunInfo[playerid][gSlot1_gun], GunInfo[playerid][gSlot1_ammo]);
		GetPlayerWeaponData(playerid, 2, GunInfo[playerid][gSlot2_gun], GunInfo[playerid][gSlot2_ammo]);
		GetPlayerWeaponData(playerid, 3, GunInfo[playerid][gSlot3_gun], GunInfo[playerid][gSlot3_ammo]);
		GetPlayerWeaponData(playerid, 4, GunInfo[playerid][gSlot4_gun], GunInfo[playerid][gSlot4_ammo]);
		GetPlayerWeaponData(playerid, 5, GunInfo[playerid][gSlot5_gun], GunInfo[playerid][gSlot5_ammo]);
		GetPlayerWeaponData(playerid, 6, GunInfo[playerid][gSlot6_gun], GunInfo[playerid][gSlot6_ammo]);
		GetPlayerWeaponData(playerid, 7, GunInfo[playerid][gSlot7_gun], GunInfo[playerid][gSlot7_ammo]);
		GetPlayerWeaponData(playerid, 8, GunInfo[playerid][gSlot8_gun], GunInfo[playerid][gSlot8_ammo]);
		GetPlayerWeaponData(playerid, 9, GunInfo[playerid][gSlot9_gun], GunInfo[playerid][gSlot9_ammo]);
		GetPlayerWeaponData(playerid, 10, GunInfo[playerid][gSlot10_gun], GunInfo[playerid][gSlot10_ammo]);
		GetPlayerWeaponData(playerid, 11, GunInfo[playerid][gSlot11_gun], GunInfo[playerid][gSlot11_ammo]);
		GetPlayerWeaponData(playerid, 12, GunInfo[playerid][gSlot12_gun], GunInfo[playerid][gSlot12_ammo]);

		new INI:file = INI_Open(GunPath(playerid));
	    INI_WriteInt(file, "gSlot0_gun", GunInfo[playerid][gSlot0_gun]);
	    INI_WriteInt(file, "gSlot0_ammo", GunInfo[playerid][gSlot0_ammo]);
	    INI_WriteInt(file, "gSlot1_gun", GunInfo[playerid][gSlot1_gun]);
	    INI_WriteInt(file, "gSlot1_ammo", GunInfo[playerid][gSlot1_ammo]);
	    INI_WriteInt(file, "gSlot2_gun", GunInfo[playerid][gSlot2_gun]);
	    INI_WriteInt(file, "gSlot2_ammo", GunInfo[playerid][gSlot2_ammo]);
	    INI_WriteInt(file, "gSlot3_gun", GunInfo[playerid][gSlot3_gun]);
	    INI_WriteInt(file, "gSlot3_ammo", GunInfo[playerid][gSlot3_ammo]);
	    INI_WriteInt(file, "gSlot4_gun", GunInfo[playerid][gSlot4_gun]);
	    INI_WriteInt(file, "gSlot4_ammo", GunInfo[playerid][gSlot4_ammo]);
	    INI_WriteInt(file, "gSlot5_gun", GunInfo[playerid][gSlot5_gun]);
	    INI_WriteInt(file, "gSlot5_ammo", GunInfo[playerid][gSlot5_ammo]);
	    INI_WriteInt(file, "gSlot6_gun", GunInfo[playerid][gSlot6_gun]);
	    INI_WriteInt(file, "gSlot6_ammo", GunInfo[playerid][gSlot6_ammo]);
	    INI_WriteInt(file, "gSlot7_gun", GunInfo[playerid][gSlot7_gun]);
	    INI_WriteInt(file, "gSlot7_ammo", GunInfo[playerid][gSlot7_ammo]);
	    INI_WriteInt(file, "gSlot8_gun", GunInfo[playerid][gSlot8_gun]);
	    INI_WriteInt(file, "gSlot8_ammo", GunInfo[playerid][gSlot8_ammo]);
	    INI_WriteInt(file, "gSlot9_gun", GunInfo[playerid][gSlot9_gun]);
	    INI_WriteInt(file, "gSlot9_ammo", GunInfo[playerid][gSlot9_ammo]);
	    INI_WriteInt(file, "gSlot10_gun", GunInfo[playerid][gSlot10_gun]);
	    INI_WriteInt(file, "gSlot10_ammo", GunInfo[playerid][gSlot10_ammo]);
	    INI_WriteInt(file, "gSlot11_gun", GunInfo[playerid][gSlot11_gun]);
	    INI_WriteInt(file, "gSlot11_ammo", GunInfo[playerid][gSlot11_ammo]);
	    INI_WriteInt(file, "gSlot12_gun", GunInfo[playerid][gSlot12_gun]);
	    INI_WriteInt(file, "gSlot12_ammo", GunInfo[playerid][gSlot12_ammo]);
	    INI_Close(file);
	}
	return 1;
}

stock SavePosStats(playerid)
{
	if(IsLoggedIn{playerid} == 1 && HasSpawned{playerid} == true)
	{
		new Float:x, Float:y, Float:z, Float:a, interior, world;
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, a);
		interior = GetPlayerInterior(playerid);
		world = GetPlayerVirtualWorld(playerid);
		if(fexist(PosPath(playerid)))
		{
			new INI:file = INI_Open(PosPath(playerid));
		    INI_WriteFloat(file, "rPos_X", x);
		    INI_WriteFloat(file, "rPos_Y", y);
		    INI_WriteFloat(file, "rPos_Z", z);
		    INI_WriteFloat(file, "rPos_A", a);
		    INI_WriteInt(file, "rInterior", interior);
		    INI_WriteInt(file, "rWorld", world);
		    INI_Close(file);
		
			PosInfo[playerid][rPos_X] = x;
			PosInfo[playerid][rPos_Y] = y;
			PosInfo[playerid][rPos_Z] = z;
			PosInfo[playerid][rPos_A] = a;
			PosInfo[playerid][rInterior] = interior;
			PosInfo[playerid][rWorld] = world;
			
/*			if(ACNR_DEBUG == 1)
			{
			new dbstr[300];
			printf("DEBUG: SavePosStats(%d,%f,%f,%f);",playerid, PosInfo[playerid][rPos_X], PosInfo[playerid][rPos_Y], PosInfo[playerid][rPos_Z]);		
			format(dbstr, sizeof(dbstr), "DEBUG: SavePosStats(%d,%f,%f,%f);",playerid, PosInfo[playerid][rPos_X], PosInfo[playerid][rPos_Y], PosInfo[playerid][rPos_Z]);
			SendClientMessage(playerid, RED, dbstr);
			}*/
		}
	}
	return 1;
}

stock RemoveOwnedVehs(playerid)
{
	new count = 0;
	for(new v = 0; v < MAX_SHOP_VEHICLES; v++)
	{
		if(IsShopVehicle[v] != -1)
		{
	    	if(!strcmp(GetName(playerid), VehicleInfo[IsShopVehicle[v]][vOwner], false))
	        {
	            new file[40];
				format(file, sizeof(file), VEH_FILE, IsShopVehicle[v]);
				if(fexist(file))
				{
					fremove(file);
					count++;
		            if(count == MAX_VIP_VEHS)
		            {
		                break;
		            }
		            else continue;
				}
	        }
		}
	}
	return 1;
}

stock SellBiz(bizid)
{
	new file[40], bowner[24], bname[50];
	format(file, sizeof(file), BIZ_FILE, bizid);
	format(bname, sizeof(bname), "For-Sale");
	format(bowner, sizeof(bowner), "%s", DEFAULT_BIZ_OWNER_NAME);
	Update3DTextLabelText(bLabel[bizid], YELLOW, bname);
	BizInfo[bizid][bOwner] = bowner;
	BizInfo[bizid][bName] = bname;
	BizInfo[bizid][bEarnings] = 0;
	SaveBizStats(bizid);
	return 1;
}

stock SellHouse(houseid)
{
	new gname[40], gowner[24];
	format(gowner,sizeof(gowner), "Nobody");
	format(gname,sizeof(gname), "For-Sale");
	HouseInfo[houseid][hOwner] = gowner;
	HouseInfo[houseid][hName] = gname;
	new stringg[24];
	format(stringg, sizeof(stringg), "Empty");
	HouseInfo[houseid][hKeyOwner1] = stringg;
	HouseInfo[houseid][hKeyOwner2] = stringg;
	HouseInfo[houseid][hKeyOwner3] = stringg;
	HouseInfo[houseid][hKeyOwner4] = stringg;
	HouseInfo[houseid][hKeyOwner5] = stringg;
	HouseInfo[houseid][hKeyOwner6] = stringg;
	HouseInfo[houseid][hKeyOwner7] = stringg;
	HouseInfo[houseid][hKeyOwner8] = stringg;
	HouseInfo[houseid][hKeyOwner9] = stringg;
	HouseInfo[houseid][hKeyOwner10] = stringg;
	Update3DTextLabelText(HouseLabel[houseid], YELLOW, gname);
	/*Loop(h2, MAX_HOUSES)
	{
		if(IsHouseInRangeOfHouse(houseid, h2, VALUE_RANGE_BETWEEN_HOUSES) && h2 != houseid)
		{
			format(file2, sizeof(file2), HOUSE_FILE, h2);
			HouseInfo[h2][hValue] = HouseInfo[h2][hValue] - ReturnPercent(GetHouseValue(h2), HOUSE_SELLING_PERCENT_RETURN);
			SaveHouseStats(h2);
		}
	}*/
	SaveHouseStats(houseid);
	return 1;
}

stock PreloadAnimationLibrary(playerid, animlib[])
{
    return ApplyAnimation(playerid, animlib, "null", 0.0, 0, 0, 0, 0, 0);
}

stock PropertySet(name[],value[])//
{
  setproperty(0, "", dprop_PRIVATE_hash(name), value);
}

dprop_PRIVATE_hash(buf[])//
{
    new length=strlen(buf);
    new s1 = 1;
    new s2 = 0;
    new n;
    for (n=0; n<length; n++)
    {
       s1 = (s1 + buf[n]) % 65521;
       s2 = (s2 + s1)     % 65521;
    }
    return (s2 << 16) + s1;
}

main()
{
    print("|--------------------------------------------|");
	print("|---------- Gamemode: ACNR v2.2.2 -----------|");
	print("|-------- Owner/Developer: Abolfazl ---------|");
	print("|----- Copyright: Abolfazl 2015 - 2018 ------|");
	print("|-------- Copyright: Abolfazl  2024 ---------|");
	print("|--------- Just-SaMp.RozBlog.COM ------------|");
    print("|--------------------------------------------|");
	WasteDeAMXersTime();//
}

public OnGameModeInit()
{
    print("|-------------------------Loading Gamemode (ACNR)-------------------------|");
    
//------------------------------------------------------------------------------//
    SendRconCommand("maxnpc 20");
	SendRconCommand("hostname .::Cops and Robbers:(>NIGHT(__()__)LIFE<)::Dozd va Police::.");
	SendRconCommand("mapname Night Life City");
    SetGameModeText("NightLifeDOZDvaPOLICE(CnR)V2.2.2");
    SendRconCommand("rcon_password 174");
    SendRconCommand("weburl just-samp.rozblog.com");
    SendRconCommand("maxplayers 51");
    SendRconCommand("lanmode 1");
    SendRconCommand("announce 1");
    SendRconCommand("query 1");
    SendRconCommand("language Persian");
//------------------------------------------------------------------------------//
	if (fcreatedir("ACNR") == true)
	{
    	printf("The directory \"ACNR\" created successfully.");
	}
	else
	{
   	 print("Failed to create the directory \"ACNR\"");
	}

	if (fcreatedir("ACNR/Guns"))
	{
    	printf("The directory \"ACNR/Guns\" created successfully.");
	}
	else
	{
    	print("Failed to create the directory \"ACNR/Guns\"");
	}

	if (fcreatedir("ACNR/Positions"))
	{
    	printf("The directory \"ACNR/Positions\" created successfully.");
	}
	else
	{
    	print("Failed to create the directory \"ACNR/Positions\"");
	}

	if (fcreatedir("ACNR/Degrees"))
	{
    	printf("The directory \"ACNR/Degrees\" created successfully.");
	}
	else
	{
    	print("Failed to create the directory \"ACNR/Degrees\"");
	}

	if (fcreatedir("ACNR/Styles")) { printf("The directory \"ACNR/Styles\" created successfully."); }
	else { print("Failed to create the directory \"ACNR/Styles\""); }

	if (fcreatedir("ACNR/Bank")) { printf("The directory \"ACNR/Bank\" created successfully."); }
	else { print("Failed to create the directory \"ACNR/Bank\""); }

	if (fcreatedir("ACNR/Users")) { printf("The directory \"ACNR/Users\" created successfully."); }
	else { print("Failed to create the directory \"ACNR/Users\""); }

	if (fcreatedir("ACNR/Vehicles")) { printf("The directory \"ACNR/Vehicles\" created successfully."); }
	else { print("Failed to create the directory \"ACNR/Vehicles\""); }

	if (fcreatedir("ACNR/Houses")) { printf("The directory \"ACNR/Houses\" created successfully."); }
	else { print("Failed to create the directory \"ACNR/Houses\""); }

	if (fcreatedir("ACNR/Businesses")) { printf("The directory \"ACNR/Businesses\" created successfully."); }
	else { print("Failed to create the directory \"ACNR/Businesses\""); }

    txtTimeDisp = TextDrawCreate(630.0, 25.0,"00:00:00");
	TextDrawUseBox(txtTimeDisp, 0);
	TextDrawFont(txtTimeDisp, 3);
	TextDrawSetShadow(txtTimeDisp,0); // no shadow
    TextDrawSetOutline(txtTimeDisp,2); // thickness 1
    TextDrawBackgroundColor(txtTimeDisp,0x000000FF);
    TextDrawColour(txtTimeDisp,0xFFFFFFFF);
    TextDrawAlignment(txtTimeDisp,3);
	TextDrawLetterSize(txtTimeDisp,0.5,1.5);
	
	txtDateDisp = TextDrawCreate(610.0, 5.0,"00/00/00");
	TextDrawUseBox(txtDateDisp, 0);
	TextDrawFont(txtDateDisp, 3);
	TextDrawSetShadow(txtDateDisp,0); // no shadow
    TextDrawSetOutline(txtDateDisp,2); // thickness 1
    TextDrawBackgroundColor(txtDateDisp,0x000000FF);
    TextDrawColour(txtDateDisp,0xFFFFFFFF);
    TextDrawAlignment(txtDateDisp,3);
	TextDrawLetterSize(txtDateDisp,0.5,1.5);
	
	LOADSCS[0] = TextDrawCreate(0.0, 0.0, "loadsc0:loadsc0");
    TextDrawFont(LOADSCS[0], 4);
    TextDrawUseBox(LOADSCS[0], 1);
    TextDrawTextSize(LOADSCS[0], 640.0, 448.0);

    LOADSCS[1] = TextDrawCreate(0.0, 0.0, "loadsc1:loadsc1");
    TextDrawFont(LOADSCS[1], 4);
    TextDrawUseBox(LOADSCS[1], 1);
    TextDrawTextSize(LOADSCS[1], 640.0, 448.0);

    LOADSCS[2] = TextDrawCreate(0.0, 0.0, "loadsc2:loadsc2");
    TextDrawFont(LOADSCS[2], 4);
    TextDrawUseBox(LOADSCS[2], 1);
    TextDrawTextSize(LOADSCS[2], 640.0, 448.0);

    LOADSCS[3] = TextDrawCreate(0.0, 0.0, "loadsc3:loadsc3");
    TextDrawFont(LOADSCS[3], 4);
    TextDrawUseBox(LOADSCS[3], 1);
    TextDrawTextSize(LOADSCS[3], 640.0, 448.0);

    LOADSCS[4] = TextDrawCreate(0.0, 0.0, "loadsc4:loadsc4");
    TextDrawFont(LOADSCS[4], 4);
    TextDrawUseBox(LOADSCS[4], 1);
    TextDrawTextSize(LOADSCS[4], 640.0, 448.0);

    LOADSCS[5] = TextDrawCreate(0.0, 0.0, "loadsc5:loadsc5");
    TextDrawFont(LOADSCS[5], 4);
    TextDrawUseBox(LOADSCS[5], 1);
    TextDrawTextSize(LOADSCS[5], 640.0, 448.0);

    LOADSCS[6] = TextDrawCreate(0.0, 0.0, "loadsc6:loadsc6");
    TextDrawFont(LOADSCS[6], 4);
    TextDrawUseBox(LOADSCS[6], 1);
    TextDrawTextSize(LOADSCS[6], 640.0, 448.0);

    LOADSCS[7] = TextDrawCreate(0.0, 0.0, "loadsc7:loadsc7");
    TextDrawFont(LOADSCS[7], 4);
    TextDrawUseBox(LOADSCS[7], 1);
    TextDrawTextSize(LOADSCS[7], 640.0, 448.0);

    LOADSCS[8] = TextDrawCreate(0.0, 0.0, "loadsc8:loadsc8");
    TextDrawFont(LOADSCS[8], 4);
    TextDrawUseBox(LOADSCS[8], 1);
    TextDrawTextSize(LOADSCS[8], 640.0, 448.0);

    LOADSCS[9] = TextDrawCreate(0.0, 0.0, "loadsc9:loadsc9");
    TextDrawFont(LOADSCS[9], 4);
    TextDrawUseBox(LOADSCS[9], 1);
    TextDrawTextSize(LOADSCS[9], 640.0, 448.0);

    LOADSCS[10] = TextDrawCreate(0.0, 0.0, "loadsc10:loadsc10");
    TextDrawFont(LOADSCS[10], 4);
    TextDrawUseBox(LOADSCS[10], 1);
    TextDrawTextSize(LOADSCS[10], 640.0, 448.0);

    LOADSCS[11] = TextDrawCreate(0.0, 0.0, "loadsc11:loadsc11");
    TextDrawFont(LOADSCS[11], 4);
    TextDrawUseBox(LOADSCS[11], 1);
    TextDrawTextSize(LOADSCS[11], 640.0, 448.0);

    LOADSCS[12] = TextDrawCreate(0.0, 0.0, "loadsc12:loadsc12");
    TextDrawFont(LOADSCS[12], 4);
    TextDrawUseBox(LOADSCS[12], 1);
    TextDrawTextSize(LOADSCS[12], 640.0, 448.0);

    LOADSCS[13] = TextDrawCreate(0.0, 0.0, "loadsc13:loadsc13");
    TextDrawFont(LOADSCS[13], 4);
    TextDrawUseBox(LOADSCS[13], 1);
    TextDrawTextSize(LOADSCS[13], 640.0, 448.0);

    LOADSCS[14] = TextDrawCreate(0.0, 0.0, "loadsc14:loadsc14");
    TextDrawFont(LOADSCS[14], 4);
    TextDrawUseBox(LOADSCS[14], 1);
    TextDrawTextSize(LOADSCS[14], 640.0, 448.0);
    
    MULTITD = TextDrawCreate(322.778076, 261.555450, "MULTIPLAYER");
    TextDrawLetterSize(MULTITD, 0.959445, 5.805204);
    TextDrawAlignment(MULTITD, 2);
    TextDrawColour(MULTITD, -7601921);
    TextDrawSetShadow(MULTITD, 0);
    TextDrawSetOutline(MULTITD, 2);
    TextDrawBackgroundColor(MULTITD, -1);
    TextDrawFont(MULTITD, 1);
    TextDrawSetProportional(MULTITD, 1);
    TextDrawSetShadow(MULTITD, 0);

	MULTIPLAYER = TextDrawCreate(141.666961, 385.444274, "MULTIPLAYER");
    TextDrawLetterSize(MULTIPLAYER, 0.708333, 4.591880);
    TextDrawAlignment(MULTIPLAYER, 2);
    TextDrawColour(MULTIPLAYER, -7601921);
    TextDrawSetShadow(MULTIPLAYER, 0);
    TextDrawSetOutline(MULTIPLAYER, 2);
    TextDrawBackgroundColor(MULTIPLAYER, -1);
    TextDrawFont(MULTIPLAYER, 1);
    TextDrawSetProportional(MULTIPLAYER, 1);
    TextDrawSetShadow(MULTIPLAYER, 0);

	//--- ACNR Actors Compleatly by abolfazl ;)
    new gun0 = CreateActor(179,295.600982,-82.528480,1001.515625,358.474029 );
	SetActorVirtualWorld(gun0,0);
	//
	new gun1 = CreateActor(179,295.600982,-82.528480,1001.515625,358.474029 );
	SetActorVirtualWorld(gun1,1);
	//
	new gun2 = CreateActor(179,295.600982,-82.528480,1001.515625,358.474029 );
	SetActorVirtualWorld(gun2,2);
	//
	new gun3 = CreateActor(179,295.600982,-82.528480,1001.515625,358.474029 );
	SetActorVirtualWorld(gun3,3);
	//
	new gun4 = CreateActor(179,295.600982,-82.528480,1001.515625,358.474029 );
	SetActorVirtualWorld(gun4,4);
	//
	new gun5 = CreateActor(179,295.600982,-82.528480,1001.515625,358.474029 );
	SetActorVirtualWorld(gun5,5);
	//
	new gun6 = CreateActor(179,295.600982,-82.528480,1001.515625,358.474029 );
	SetActorVirtualWorld(gun6,6);
	//
	new gun7 = CreateActor(179,295.600982,-82.528480,1001.515625,358.474029 );
	SetActorVirtualWorld(gun7,7);
	//--
	new bar = CreateActor(11, 496.540069,-77.690093,998.765075,1.526236  );
	SetActorVirtualWorld(bar,0);
	//--
	new club = CreateActor(172,501.734191,-20.511922,1000.679687,93.438293);
	SetActorVirtualWorld(club,0);
	//--
	new gard1 = CreateActor(163,2364.264160,2374.246826,10.820312,92.207115);
	SetActorVirtualWorld(gard1,0);
	//
	new gard2 = CreateActor(163,2364.286132,2381.138183,10.820312,88.530639);
	SetActorVirtualWorld(gard2,0);
	//
	//new gard3 = CreateActor(164, 2311.246337,2322.784667,10.820312, 275.337371);
	//SetActorVirtualWorld(gard3,0);
	//--
	new casino1 = CreateActor(171,1141.161865,-5.236854,1000.671875,91.921867);
	SetActorVirtualWorld(casino1,1);
	//
	new casino2 = CreateActor(171,1141.164062,-3.148595,1000.671875  ,96.923652);
	SetActorVirtualWorld(casino2,3);
	//--
	new gym = CreateActor(80,765.653869,-58.378597,1000.656250,224.292129 );
	SetActorVirtualWorld(gym,0);
	//--
	new burg1 = CreateActor(205,376.464141,-65.834091,1001.507812,181.290451 );
	SetActorVirtualWorld(burg1,1);
	//
	new burg0 = CreateActor(205,376.464141,-65.834091,1001.507812,181.290451 );
	SetActorVirtualWorld(burg0,0);
	//
	new burg2 = CreateActor(205,376.464141,-65.834091,1001.507812,181.290451 );
	SetActorVirtualWorld(burg2,2);
	//
	new burg3 = CreateActor(205,376.464141,-65.834091,1001.507812,181.290451 );
	SetActorVirtualWorld(burg3,3);
	//
	new burg4 = CreateActor(205,376.464141,-65.834091,1001.507812,181.290451 );
	SetActorVirtualWorld(burg4,4);
	//
	new burg5 = CreateActor(205,376.464141,-65.834091,1001.507812,181.290451 );
	SetActorVirtualWorld(burg5,5);
	//--
	new pizza0 = CreateActor(155,374.663909,-117.261978,1001.492187,181.275039  );
	SetActorVirtualWorld(pizza0,0);
	//--
	new cluck1 = CreateActor(167,370.973632,-4.491292,1001.858886,185.756332 );
	SetActorVirtualWorld(cluck1,1);
	//
	new cluck0 = CreateActor(167,370.973632,-4.491292,1001.858886,185.756332 );
	SetActorVirtualWorld(cluck0,0);
	//
	new cluck2 = CreateActor(167,370.973632,-4.491292,1001.858886,185.756332 );
	SetActorVirtualWorld(cluck2,2);
	//
	new cluck3 = CreateActor(167,370.973632,-4.491292,1001.858886,185.756332 );
	SetActorVirtualWorld(cluck3,3);
	//--
	new casino3 = CreateActor(171, 1141.321411,-4.089776,1000.671875 ,96.653755  );
	SetActorVirtualWorld(casino3,2);
	//--
	new store0 = CreateActor(194, -10.466575,-179.954940,1003.546875,359.867309  );
	SetActorVirtualWorld(store0,0);
	//
	new store1 = CreateActor(194, -10.466575,-179.954940,1003.546875,359.867309  );
	SetActorVirtualWorld(store1,1);
	//
	new store2 = CreateActor(194, -10.466575,-179.954940,1003.546875,359.867309  );
	SetActorVirtualWorld(store2,2);
	//
	new store3 = CreateActor(194, -10.466575,-179.954940,1003.546875,359.867309  );
	SetActorVirtualWorld(store3,3);
	//
	new store4 = CreateActor(194, -10.466575,-179.954940,1003.546875,359.867309  );
	SetActorVirtualWorld(store4,4);
	/*
	//-- clag buge | nabashe behtare :|
	new clag = CreateActor(166, 2155.032470,1599.828125,1006.166015 ,271.163360   );
	SetActorVirtualWorld(clag,0);
	//-- drag buge | nabashe behtare :|
	new drag = CreateActor(189, 1953.793945,1017.987487,992.468750 ,268.587127   );
	SetActorVirtualWorld(drag,0);
	*/
	//--
	new hall = CreateActor(147,359.706329,173.593750,1008.389343 ,269.790008   );
	SetActorVirtualWorld(hall,0);
	//--
	new cia = CreateActor(165,246.487792,120.392517,1003.265014 ,180.720108  );
	SetActorVirtualWorld(cia,0);
	//--
	new fbi = CreateActor(71,251.259384,69.695549,1003.640625 ,98.488189   );
	SetActorVirtualWorld(fbi,0);
	//--
	new uni = CreateActor(50,-2034.687622,-118.221527,1035.171875,291.860992  );
	SetActorVirtualWorld(uni,0);
	//--- ACNR Actors Compleatly by abolfazl ;)

    if(fexist(ACNR_ACCS))
	{
        INI_ParseFile(ACNR_ACCS, "loadaccs", .bExtra = false);
    }
	else
	{
		new INI:file = INI_Open(ACNR_ACCS);
        INI_WriteInt(file, "accs", 1);
        INI_WriteInt(file, "vorods", 0);
        INI_WriteInt(file, "kicks", 0);
        INI_WriteInt(file, "bans", 0);
        INI_WriteString(file, "nem", newestname);
		tedadeacc = 1;
		INI_Close(file);
	}
	
    ConnectNPC("Elvis", "elvis");

	Loop(h, MAX_HOUSES)
	{
	    new file[40], labeltext[40];
		format(file, sizeof(file), HOUSE_FILE, h);
	    if(fexist(file))
    	{
        	INI_ParseFile(file, "LoadHouse_data", .bExtra = true, .extra = h);
        	HouseCPOut[h] = CreateDynamicCP(HouseInfo[h][hCPOutX], HouseInfo[h][hCPOutY], HouseInfo[h][hCPOutZ], 1.0, HouseInfo[h][hWorld], HouseInfo[h][hSpawnInterior], -1, 4.0);
			CreateCorrectHouseExitCP(h);
			format(labeltext, sizeof(labeltext), "%s", GetHouseName(h));
			HouseLabel[h] = Create3DTextLabel(labeltext, YELLOW, HouseInfo[h][hCPOutX], HouseInfo[h][hCPOutY], HouseInfo[h][hCPOutZ] + 0.5, 30.0, HouseInfo[h][hWorld], 1);
		}
	}

	Loop(i, MAX_BUSINESSES)
	{
	    new file[40];
		format(file, sizeof(file), BIZ_FILE, i);
		if(fexist(file))
		{
    		INI_ParseFile(file, "LoadBiz_data", .bExtra = true, .extra = i);

			bizentercp[i] = CreateDynamicCP(BizInfo[i][bExtX], BizInfo[i][bExtY], BizInfo[i][bExtZ], 1.0, 0, 0, -1, 4.0);
			bizexitcp[i] = CreateDynamicCP(BizInfo[i][bIntX], BizInfo[i][bIntY], BizInfo[i][bIntZ], 1.0, BizInfo[i][bVWorld], BizInfo[i][bInterior], -1, 4.0);
			bizrobberycp[i] = CreateDynamicCP(BizInfo[i][bRobX], BizInfo[i][bRobY], BizInfo[i][bRobZ], 1.0, BizInfo[i][bVWorld], BizInfo[i][bInterior], -1, 4.0);
			
			format(bizlabel, sizeof(bizlabel), "%s", BizInfo[i][bName]);
			bLabel[i] = Create3DTextLabel(bizlabel, YELLOW, BizInfo[i][bExtX], BizInfo[i][bExtY], BizInfo[i][bExtZ]+0.5, 30.0, 0, 1);
		}
	}
// moved to OnPlayerConnect
	Loop(r, MAX_PLAYERS) // add theme to OnPlayerConnect
	{
	    pGroupInfo[r][gid] = -1;
		pGroupInfo[r][order] = -1;
		pGroupInfo[r][invited] = -1;
		pGroupInfo[r][attemptjoin] = -1;

		is3don[r] = 0;		
		
		KillTimer(biztimer{r});
    	KillTimer(attimer{r});
    	KillTimer(isletimer{r});
		KillTimer(vegastimer{r});
		KillTimer(redsandstimer{r});
		KillTimer(calgtimer{r});
		KillTimer(dragtimer{r});
		KillTimer(banktimer{r});
		KillTimer(nvpdtimer{r});
		KillTimer(halltimer{r});
		KillTimer(bartimer{r});
		KillTimer(ammutimer{r});
		KillTimer(kelisatimer{r});
		KillTimer(shottimer{r});
		KillTimer(clucktimer{r});
		KillTimer(storetimer{r});
		KillTimer(pizzatimer{r});
		KillTimer(clubtimer{r});
		KillTimer(gymtimer{r});
		KillTimer(fbitimer{r});
		KillTimer(unitimer{r});
		KillTimer(ciatimer{r});
		KillTimer(ZoneTimer[r]);
		KillTimer(JailTimer[r]);
		KillTimer(CageTimer[r]);

		ZoneTimer[r] = SetTimerEx("Update_Zones", 1000, true, "d", r);
    	ZoneUpdates[r] = 1;
		Player_Zone[r] = -1;

		IsPlayersFirstSpawn{r} = false;

		HasDied{r} = false;
    	HasSpawned{r} = false;
        HasConnectedSpawned{r} = false;
    	IsPlayerUsingTuneMenu{r} = false;
    	HasBeenArrested{r} = false;
    	IsNewbieMutted{r} = false;
    	HasShieldAttached{r} = false;
    	HasBandanaAttached{r} = false;
    	HasBeenTied{r} = false;
    	HasBeenCuffed{r} = false;
    	IsCaged{r} = false;
    	IsInCellCP{r} = false;
    	IsInCellCP1{r} = false;
    	IsInCellCP2{r} = false;
    	IsInCellCP3{r} = false;
    	IsInCellCP4{r} = false;
    	IsInCellCP5{r} = false;
    	IsInCellCP6{r} = false;
    	CanESC{r} = true;
    	GoToJail{r} = false;
		IsJailed{r} = false;
    	HasSavedPos{r} = false;
    	IsPlayerEditingObject{r} = false;
    	IsPlayerAttachingObject{r} = false;
    	IsPlayerRobbingBiz{r} = false;
    	IsPlayerSetBuilder{r} = false;
		IsPlayerRobbingHouse{r} = false;
		IsPlayerInArena{r} = false;
		IsPlayerGettingMatsNV{r} = false;
		IsPlayerGettingMatsBS{r} = false;
    	IsRobbingIsle{r} = false;
    	IsRobbingVegas{r} = false;
    	IsRobbingRedsands{r} = false;
    	IsRobbingCalg{r} = false;
    	IsRobbingDrag{r} = false;
    	IsRobbingNVPD{r} = false;
    	IsRobbingClub{r} = false;
    	IsRobbingGym{r} = false;
    	IsRobbingBank1{r} = false;
    	IsRobbingBank2{r} = false;
    	IsRobbingBank3{r} = false;
    	IsRobbingBank4{r} = false;
    	IsRobbingNVPD{r} = false;
    	IsRobbingHall{r} = false;
    	IsRobbingBar{r} = false;
    	IsRobbingFBI{r} = false;
    	IsRobbingUNI{r} = false;
    	IsRobbingCIA{r} = false;
    	IsRobbingAmmu1{r} = false;
    	IsRobbingAmmu2{r} = false;
    	IsRobbingAmmu3{r} = false;
    	IsRobbingAmmu4{r} = false;
    	IsRobbingAmmu5{r} = false;
    	IsRobbingAmmu6{r} = false;
    	IsRobbingShot1{r} = false;
    	IsRobbingShot2{r} = false;
    	IsRobbingShot3{r} = false;
    	IsRobbingShot4{r} = false;
    	IsRobbingShot5{r} = false;
    	IsRobbingCluck1{r} = false;
    	IsRobbingCluck2{r} = false;
    	IsRobbingCluck3{r} = false;
    	IsRobbingStore1{r} = false;
    	IsRobbingStore2{r} = false;
    	IsRobbingStore3{r} = false;
    	IsRobbingStore4{r} = false;
    	IsRobbingPizza{r} = false;
    	HasBeenIssuedTicket{r} = false;
    	IsVIPInColorMode{r} = false;
    	HasChangedSkin{r} = false;
    	IsPlayerUsingAnim{r} = false;
    	HasPlayerDiedInJail{r} = false;
    	HasPlayerDiedInCage{r} = false;
		HasBandanaAttached{r} = false;
		HasShieldAttached{r} = false;
		IsAdminUnderCover{r} = false;

 		RemovePlayerAttachedObject(r, 0);
		RemovePlayerAttachedObject(r, 1);

    	SpecInfo[r][IsSpectating] = -1;
    	IsAdminSpectating{r} = false;
    	IsPlayerBeingSpectated{r} = false;
    	PlayerBeingSpectatedBy[r] = -1;

		hasenteredtower{r} = 0;

    	IsInCell{r} = 0;
    	InMateID[r] = 0;

    	BizRobCP[r] = -1;
    	BizID[r] = -1;

    	HasHit[r] = 0;
		HasPlacedHit[r] = -1;
		BomberStage{r} = 0;

    	IsLoggedIn{r} = 0;
    	BribeTo[r] = -1;
		Bribe[r] = -1;
		BribeFrom[r] = -1;
    	IsInGod{r} = 0;
    	IsOnduty{r} = 0;
    	IsInGodCar{r} = 0;
    	IsMuted{r} = 0;
    	IsIgnoringPMs{r} = 0;
    	HasLotteryTicket{r} = 0;
    	HasMadeEvent{r} = 0;
		IsAtEvent{r} = 0;
		HasAdminStoppedJoins = 0;
		text_line_count{r} = 0;
    	HasSetCheckpoint{r} = 0;
    	lastx[r] = 0.0;
		lasty[r] = 0.0;
		lastz[r] = 0.0;
		chattingwith[r] = -1;
		shotsfired[r] = 0;

		pGroupInfo[r][gid] = -1;
		pGroupInfo[r][invited] = -1;
		pGroupInfo[r][attemptjoin] = -1;

    	verifydestroycar{r} = 0;

    	for(new o = 0; o < MAX_SET_OBJECTS; o++)
    	{
    		GetSetObjects[r][o] = -1;
    	}
		GetSetObjectsCount[r] = 0;

    	SetPlayerColor(r, GREY);
	}

	Loop(v, MAX_VEHICLES)
	{
	    IsShopVehicle[v] = -1;

	    VehicleBombOwner[v] = INVALID_PLAYER_ID;//bomb system

	    GetVehicleCurrentHealth[v] = 1000.0;
	    GetVehicleHealth(v, GetVehicleCurrentHealth[v]);

	    GetVehicleFuel[v] = 75 + random(25);
	}

	NVPD_pickup_gun = CreatePickup(356, 1, 2293.1216,2455.5334,10.8203, -1);
	NVPD_pickup_arm = CreatePickup(1242, 1, 2293.1194,2447.1709,10.8203, -1);

	FBI_pickup_gun = CreatePickup(356, 1, 2493.1833,2394.5808,10.8203, -1);
	FBI_pickup_arm = CreatePickup(1242, 1, 2493.1838,2400.7966,10.8203, -1);

	CIA_pickup_gun = CreatePickup(356, 1, 946.9702,1730.2723,8.8516, -1);
	CIA_pickup_arm = CreatePickup(1242, 1, 946.9492,1736.2869,8.8516, -1);

	Create3DTextLabel("CIA HQ\n\ncommands: /robcia", YELLOW, 246.4467,118.5374,1003.2188 + 0.5, 100.0, 0, 1);
	Create3DTextLabel("University\n\ncommands: /robuni", YELLOW, -2032.79, -117.39, 1034.80 + 0.5, 100.0, 0, 1);
	Create3DTextLabel("FBI HQ\n\ncommands: /robfbi", YELLOW, 250.0561,69.4203,1003.6406 + 0.5, 100.0, 0, 1);
	Create3DTextLabel("Gym\n\ncommands: /robgym", YELLOW, 766.7718, -59.7159, 1000.6563 + 0.5, 100.0, 0, 1);
	Create3DTextLabel("Night Club\n\ncommands: /robclub", YELLOW, 499.9675, -20.6944, 1000.6797 + 0.5, 100.0, 0, 1);
	Create3DTextLabel("Well Stacked Pizzas\n\ncommands: /robpizza", YELLOW, 374.7570, -118.8264, 1001.4995 + 0.5, 100.0, 0, 1);
	Create3DTextLabel("The Emerald Isle Casino\n\ncommands: /robisle", YELLOW, 1139.7198, -4.0644, 1000.6719 + 0.5, 100.0, 1, 1);
	Create3DTextLabel("Casino\n\ncommands: /robvegas", YELLOW, 1139.7198, -4.0644, 1000.6719 + 0.5, 100.0, 2, 1);
	Create3DTextLabel("Redsands Casino\n\ncommands: /robred", YELLOW, 1139.7198, -4.0644, 1000.6719 + 0.5, 100.0, 3, 1);
	Create3DTextLabel("Caligulas Casino\n\ncommands: /robcalg", YELLOW, 2156.6917, 1599.5377, 1006.1797 + 0.5, 100.0, 0, 1);
	Create3DTextLabel("4 Dragons Casino\n\ncommands: /robdrag", YELLOW, 1955.3691, 1018.0455, 992.4688 + 0.5, 100.0, 0, 1);
	Create3DTextLabel("PD Lobby\n\ncommands: /robpd", YELLOW, 230.0261, 165.0891, 1003.0234 + 0.5, 100.0, 0, 1);
	Create3DTextLabel("City Hall\n\ncommands: /robhall", YELLOW, 361.8299, 173.7282, 1008.3828 + 0.5, 100.0, 0, 1);

	Create3DTextLabel("Bank\nShobe Meydan asli\n\ncommands: /robbank , /bankhelp", YELLOW, 2316.6169, -7.3947, 26.7422 + 0.5, 100.0, 1, 1);
	Create3DTextLabel("Bank\nShobe El Quebrados\n\ncommands: /robbank , /bankhelp", YELLOW, 2316.6169, -7.3947, 26.7422 + 0.5, 100.0, 2, 1);
	Create3DTextLabel("Bank\nShobe Fort Carson\n\ncommands: /robbank , /bankhelp", YELLOW, 2316.6169, -7.3947, 26.7422 + 0.5, 100.0, 3, 1);
	Create3DTextLabel("Bank\nShobe Tierra Robada\n\ncommands: /robbank , /bankhelp", YELLOW, 2316.6169, -7.3947, 26.7422 + 0.5, 100.0, 4, 1);

	Create3DTextLabel("24/7 Store\n\ncommands: /robstore", YELLOW, -10.6035, -178.2635, 1003.5469 + 0.5, 100.0, 1, 1);
	Create3DTextLabel("24/7 Store\n\ncommands: /robstore", YELLOW, -10.6035, -178.2635, 1003.5469 + 0.5, 100.0, 2, 1);
	Create3DTextLabel("24/7 Store\n\ncommands: /robstore", YELLOW, -10.6035, -178.2635, 1003.5469 + 0.5, 100.0, 3, 1);
	Create3DTextLabel("24/7 Store\n\ncommands: /robstore", YELLOW, -10.6035, -178.2635, 1003.5469 + 0.5, 100.0, 4, 1);

	Create3DTextLabel("Cluck'n Bell\n\ncommands: /robcluck", YELLOW, 371.5888, -6.0188, 1001.8589 + 0.5, 100.0, 1, 1);
	Create3DTextLabel("Cluck'n Bell\n\ncommands: /robcluck", YELLOW, 371.5888, -6.0188, 1001.8589 + 0.5, 100.0, 2, 1);
	Create3DTextLabel("Cluck'n Bell\n\ncommands: /robcluck", YELLOW, 371.5888, -6.0188, 1001.8589 + 0.5, 100.0, 3, 1);

	Create3DTextLabel("Burger Shot\n\ncommands: /robshot", YELLOW, 376.5498, -67.4389, 1001.5078 + 0.5, 100.0, 1, 1);
	Create3DTextLabel("Burger Shot\n\ncommands: /robshot", YELLOW, 376.5498, -67.4389, 1001.5078 + 0.5, 100.0, 2, 1);
	Create3DTextLabel("Burger Shot\n\ncommands: /robshot", YELLOW, 376.5498, -67.4389, 1001.5078 + 0.5, 100.0, 3, 1);
	Create3DTextLabel("Burger Shot\n\ncommands: /robshot", YELLOW, 376.5498, -67.4389, 1001.5078 + 0.5, 100.0, 4, 1);
	Create3DTextLabel("Burger Shot\n\ncommands: /robshot", YELLOW, 376.5498, -67.4389, 1001.5078 + 0.5, 100.0, 5, 1);

	Create3DTextLabel("Ammunation\n\ncommands: /robammu", YELLOW, 295.5833, -80.8050, 1001.5156 + 0.5, 100.0, 1, 1);
	Create3DTextLabel("Ammunation\n\ncommands: /robammu", YELLOW, 295.5833, -80.8050, 1001.5156 + 0.5, 100.0, 2, 1);
	Create3DTextLabel("Ammunation\n\ncommands: /robammu", YELLOW, 295.5833, -80.8050, 1001.5156 + 0.5, 100.0, 3, 1);
	Create3DTextLabel("Ammunation\n\ncommands: /robammu", YELLOW, 295.5833, -80.8050, 1001.5156 + 0.5, 100.0, 4, 1);
	Create3DTextLabel("Ammunation\n\ncommands: /robammu", YELLOW, 295.5833, -80.8050, 1001.5156 + 0.5, 100.0, 5, 1);
	Create3DTextLabel("Ammunation\n\ncommands: /robammu", YELLOW, 295.5833, -80.8050, 1001.5156 + 0.5, 100.0, 6, 1);

    Create3DTextLabel("Kelisa", YELLOW, 2518.687744,2033.389160,11.171875 + 0.5, 50.0, 0, 1);
	Create3DTextLabel("Kelisa", YELLOW, 2438.194091,1293.454223,10.820312 + 0.5, 50.0, 0, 1);
	Create3DTextLabel("Kelisa", YELLOW, 2489.595947,918.606994,11.023437 + 0.5, 50.0, 0, 1);
	Create3DTextLabel("Kelisa", YELLOW, 1454.011962,750.880249,11.023437 + 0.5, 50.0, 0, 1);
	Create3DTextLabel("Kelisa", YELLOW, 2225.102783,2522.551513,11.022218 + 0.5, 50.0, 0, 1);
	Create3DTextLabel("Kelisa", YELLOW, -2482.276611,2406.506591,17.109375 + 0.5, 50.0, 0, 1);

	Create3DTextLabel("Bar\n\ncommands: /robbar", YELLOW, 496.4771, -76.0378, 998.7578 + 0.5, 100.0, 0, 1);

	Create3DTextLabel("Admin Tower Entrance\n\nAccess: Admin/VIP/Head Helper ONLY", YELLOW, 2147.0127, 2425.3252, 65.2773 + 0.5, 5.0, 0, 1);

    Create3DTextLabel("Materials Factory\n\ncommands: /getmats", YELLOW, 966.2469, 2160.6836, 10.8203 + 0.5, 150.0, 0, 1);
    Create3DTextLabel("Materials Factory\n\ncommands: /getmats", YELLOW, -2488.5205, 2295.3135, 4.9844 + 0.5, 150.0, 0, 1);

	Create3DTextLabel("PD Cell 1\n\ncommands: /celllist /bail /break", YELLOW, 197.0638, 177.4871, 1003.0234 + 0.5, 50.0, 0, 1);
	Create3DTextLabel("PD Cell 2\n\ncommands: /celllist /bail /break", YELLOW, 192.7801, 177.4865, 1003.1533 + 0.5, 50.0, 0, 1);
	Create3DTextLabel("PD Cell 3\n\ncommands: /celllist /bail /break", YELLOW, 188.5325, 177.4865, 1003.1533 + 0.5, 50.0, 0, 1);
	Create3DTextLabel("PD Cell 4\n\ncommands: /celllist /bail /break", YELLOW, 196.9326, 159.8857, 1003.1533 + 0.5, 50.0, 0, 1);
	Create3DTextLabel("PD Cell 5\n\ncommands: /celllist /bail /break", YELLOW, 192.6790, 159.8863, 1003.1533 + 0.5, 50.0, 0, 1);
	Create3DTextLabel("PD Cell 6\n\ncommands: /celllist /bail /break", YELLOW, 188.4444, 159.8862, 1003.1533 + 0.5, 50.0, 0, 1);

	Create3DTextLabel("FBI HQ Car Park\n\nAccess: FBI ONLY", YELLOW, 242.2486,66.3108,1003.6406 + 0.5, 30.0, 0, 1);

	Create3DTextLabel("PD\n\nBuilding Elevator", YELLOW, 2297.1174, 2451.5051, 10.8203 + 0.5, 30.0, 0, 1);
	Create3DTextLabel("PD\n\nBuilding Elevator", YELLOW, 2296.0713, 2458.1235, 38.6875 + 0.5, 30.0, 0, 1);
	Create3DTextLabel("PD\n\nBuilding Elevator", YELLOW, 2268.0745, 2449.2795, 3.5313 + 0.5, 30.0, 0, 1);
	Create3DTextLabel("PD\n\nBuilding Elevator", YELLOW, 2268.0991, 2449.2891, -7.1953 + 0.5, 30.0, 0, 1);
	Create3DTextLabel("PD\n\nBuilding Elevator", YELLOW, 196.6970, 168.1543, 1003.1533 + 0.5, 30.0, 0, 1);

    Create3DTextLabel("Admin Tower Hanger\n\ncommands: /openhanger /closehanger", YELLOW, 2159.2090, 2414.2146, 65.2773 + 0.5, 30.0, 0, 1);

	Create3DTextLabel("Arena\n\nCommands: /enterarena /exitarena", YELLOW, 1099.5729, 1601.4722, 12.5469 + 0.5, 30.0, 0, 1);

    Create3DTextLabel("Service Station\n\ncommands: /service", YELLOW, 2114.8848, 920.2251, 10.8203 + 0.5, 50.0, 0, 1);
    Create3DTextLabel("Service Station\n\ncommands: /service", YELLOW, 2639.7700, 1106.1627, 10.8203 + 0.5, 50.0, 0, 1);
    Create3DTextLabel("Service Station\n\ncommands: /service", YELLOW, 2202.4160, 2474.7686, 10.8203 + 0.5, 50.0, 0, 1);
    Create3DTextLabel("Service Station\n\ncommands: /service", YELLOW, 2147.2354, 2747.9351, 10.8203 + 0.5, 50.0, 0, 1);
    Create3DTextLabel("Service Station\n\ncommands: /service", YELLOW, 1596.1118, 2198.9944, 10.8203 + 0.5, 50.0, 0, 1);
    Create3DTextLabel("Service Station\n\ncommands: /service", YELLOW, 612.0298, 1695.0731, 6.9922 + 0.5, 50.0, 0, 1);
    Create3DTextLabel("Service Station\n\ncommands: /service", YELLOW, -1328.3317, 2677.4412, 50.0625 + 0.5, 50.0, 0, 1);
    Create3DTextLabel("Service Station\n\ncommands: /service", YELLOW, -1471.3004, 1864.1031, 32.6328 + 0.5, 50.0, 0, 1);

    Create3DTextLabel("Airport Service Station\n\ncommands: /service", YELLOW, 1602.5015,1615.4475,10.8203 + 2.0, 150.0, 0, 1);
    Create3DTextLabel("Bayside Marina Service Station\n\ncommands: /service", YELLOW, -2322.4451,2298.0378,-0.5677 + 2.0, 150.0, 0, 1);

    Create3DTextLabel("PD\nWeapon Pickup Point\n\ncommands: /pickup", YELLOW, 2293.1216,2455.5334,10.8203 + 0.5, 25.0, 0, 1);
    Create3DTextLabel("FBI HQ\nWeapon Pickup Point\n\ncommands: /pickup", YELLOW, 2493.1833,2394.5808,10.8203 + 0.5, 25.0, 0, 1);
    Create3DTextLabel("CIA HQ\nWeapon Pickup Point\n\ncommands: /pickup", YELLOW, 946.9702,1730.2723,8.8516 + 0.5, 25.0, 0, 1);

    Create3DTextLabel("PD\nArmour Pickup Point\n\ncommands: /pickup", YELLOW, 2293.1194,2447.1709,10.8203 + 0.5, 25.0, 0, 1);
    Create3DTextLabel("FBI HQ\nArmour Pickup Point\n\ncommands: /pickup", YELLOW, 2493.1838,2400.7966,10.8203 + 0.5, 25.0, 0, 1);
    Create3DTextLabel("CIA HQ\nArmour Pickup Point\n\ncommands: /pickup", YELLOW, 946.9492,1736.2869,8.8516 + 0.5, 25.0, 0, 1);

    Create3DTextLabel("/climbsign", YELLOW, 2304.0759, 2382.6260, 14.9083, 5.0, 0, 1);

    Create3DTextLabel("PD", YELLOW, 2287.0400,2432.3660,10.8203 + 0.5, 25.0, 0, 1);//1
	Create3DTextLabel("PD", YELLOW, 2337.1648,2459.3130,14.9742 + 0.5, 25.0, 0, 1);//2
	Create3DTextLabel("PD", YELLOW, 2296.0713,2458.1235,38.6875 + 0.5, 25.0, 0, 1);//Roof

	Create3DTextLabel("FBI HQ", YELLOW, 2447.6692,2376.2556,12.1635 + 0.5, 25.0, 0, 1);//front
	Create3DTextLabel("FBI HQ", YELLOW, 2487.7542,2397.2356,10.8203 + 0.5, 25.0, 0, 1);//back
	Create3DTextLabel("CIA HQ", YELLOW, 937.0844,1733.2168,8.8516 + 0.5, 25.0, 0, 1);//

	Create3DTextLabel("Bank\nShobe Square", YELLOW, 2270.9761,2293.8179,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Bank\nShobe El Quebrados", YELLOW, -1457.9816,2589.9771,55.9957 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Bank\nShobe Fort Carson", YELLOW, -179.1975,1133.1324,19.7422 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Bank\nShobe Tierra Robada", YELLOW, -828.1474,1504.5988,19.8529 + 0.5, 25.0, 0, 1);//

	Create3DTextLabel("City Hall", YELLOW, 2412.5039,1123.8190,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Hospital", YELLOW, 1607.3329,1816.7660,10.8203 + 0.5, 150.0, 0, 1);//
	Create3DTextLabel("Night Club", YELLOW, 2311.2742,2324.2349,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Gym", YELLOW, 1968.7693,2295.8730,16.4559 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("University", YELLOW, 2375.5786,2306.3044,8.1406 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Airport", YELLOW, 1672.5485,1447.8712,10.7881 + 0.5, 150.0, 0, 1);//
	Create3DTextLabel("Car Shop", YELLOW, 1735.7432, 1866.1516, 10.8203 + 0.5, 150.0, 0, 1);
	Create3DTextLabel("Apartments", YELLOW, 2364.8955,2377.6169,10.8203 + 0.5, 25.0, 0, 1);

	Create3DTextLabel("The Emerald Isle Casino", YELLOW, 2127.5869,2379.6211,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Casino", YELLOW, 2016.9768,1916.4065,12.3424 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Caligulas Casino", YELLOW, 2196.9570,1677.1637,12.3672 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("4 Dragons Casino", YELLOW, 2019.3196,1007.7487,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Redsands Casino", YELLOW, 1658.4960,2250.0437,11.0701 + 0.5, 25.0, 0, 1);//

	Create3DTextLabel("Ammunation", YELLOW, 2159.5405,943.1776,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Ammunation", YELLOW, 2319.3486,2391.8047,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Ammunation", YELLOW, 776.7208,1871.4360,4.9068 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Ammunation", YELLOW, -316.1609,829.8887,14.2422 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Ammunation", YELLOW, -1508.8851,2610.7004,55.8359 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Ammunation", YELLOW, 2556.9512,2065.3730,11.0995 + 0.5, 25.0, 0, 1);//

	Create3DTextLabel("Burger Shot", YELLOW, 2367.0552,2071.0693,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Burger Shot", YELLOW, 2472.8655,2034.1702,11.0625 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Burger Shot", YELLOW, 1157.9246,2072.2874,11.0625 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Burger Shot", YELLOW, 2169.4143,2795.9263,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Burger Shot", YELLOW, 1872.2554,2071.8850,11.0625 + 0.5, 25.0, 0, 1);//

	Create3DTextLabel("Cluck'n Bell", YELLOW, 2393.2737,2041.5657,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Cluck'n Bell", YELLOW, 173.0402,1177.1461,14.7578 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("Cluck'n Bell", YELLOW, -1213.8292,1830.3749,41.9297 + 0.5, 25.0, 0, 1);//

	Create3DTextLabel("24/7 Store", YELLOW, 2452.5308,2065.1902,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("24/7 Store", YELLOW, 2546.5271,1972.6571,10.8203 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("24/7 Store", YELLOW, 2194.9390,1990.9948,12.2969 + 0.5, 25.0, 0, 1);//
	Create3DTextLabel("24/7 Store", YELLOW, 2247.6702,2396.1687,10.8203 + 0.5, 25.0, 0, 1);//

	Create3DTextLabel("Well Stacked Pizzas", YELLOW, 2351.8555,2533.6199,10.8203 + 0.5, 25.0, 0, 1);//

	Create3DTextLabel("Bar", YELLOW,2308.9287, 2378.9575, 11.2208 + 0.5, 25.0, 0, 1);//

	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1728.4685,-1671.1666,27.1953 + 0.5, 100.0, 1, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1728.4685,-1671.1666,27.1953 + 0.5, 100.0, 2, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1728.4685,-1671.1666,27.1953 + 0.5, 100.0, 3, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1728.4685,-1671.1666,27.1953 + 0.5, 100.0, 4, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1728.4685,-1671.1666,27.1953 + 0.5, 100.0, 5, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1728.4685,-1671.1666,27.1953 + 0.5, 100.0, 6, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1728.4685,-1671.1666,27.1953 + 0.5, 100.0, 7, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1728.4685,-1671.1666,27.1953 + 0.5, 100.0, 8, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1728.4685,-1671.1666,27.1953 + 0.5, 100.0, 9, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1728.4685,-1671.1666,27.1953 + 0.5, 100.0, 10, 1);//

	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1731.1501,-1668.5820,27.1953 + 0.5, 100.0, 1, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1731.1501,-1668.5820,27.1953 + 0.5, 100.0, 2, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1731.1501,-1668.5820,27.1953 + 0.5, 100.0, 3, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1731.1501,-1668.5820,27.1953 + 0.5, 100.0, 4, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1731.1501,-1668.5820,27.1953 + 0.5, 100.0, 5, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1731.1501,-1668.5820,27.1953 + 0.5, 100.0, 6, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1731.1501,-1668.5820,27.1953 + 0.5, 100.0, 7, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1731.1501,-1668.5820,27.1953 + 0.5, 100.0, 8, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1731.1501,-1668.5820,27.1953 + 0.5, 100.0, 9, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1731.1501,-1668.5820,27.1953 + 0.5, 100.0, 10, 1);//

	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.7915,-1643.9325,27.2035 + 0.5, 100.0, 1, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.7915,-1643.9325,27.2035 + 0.5, 100.0, 2, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.7915,-1643.9325,27.2035 + 0.5, 100.0, 3, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.7915,-1643.9325,27.2035 + 0.5, 100.0, 4, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.7915,-1643.9325,27.2035 + 0.5, 100.0, 5, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.7915,-1643.9325,27.2035 + 0.5, 100.0, 6, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.7915,-1643.9325,27.2035 + 0.5, 100.0, 7, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.7915,-1643.9325,27.2035 + 0.5, 100.0, 8, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.7915,-1643.9325,27.2035 + 0.5, 100.0, 9, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.7915,-1643.9325,27.2035 + 0.5, 100.0, 10, 1);//

	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5035,-1641.3409,27.2124 + 0.5, 100.0, 1, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5035,-1641.3409,27.2124 + 0.5, 100.0, 2, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5035,-1641.3409,27.2124 + 0.5, 100.0, 3, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5035,-1641.3409,27.2124 + 0.5, 100.0, 4, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5035,-1641.3409,27.2124 + 0.5, 100.0, 5, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5035,-1641.3409,27.2124 + 0.5, 100.0, 6, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5035,-1641.3409,27.2124 + 0.5, 100.0, 7, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5035,-1641.3409,27.2124 + 0.5, 100.0, 8, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5035,-1641.3409,27.2124 + 0.5, 100.0, 9, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5035,-1641.3409,27.2124 + 0.5, 100.0, 10, 1);//

	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.8021,-1643.9214,23.6797 + 0.5, 100.0, 1, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.8021,-1643.9214,23.6797 + 0.5, 100.0, 2, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.8021,-1643.9214,23.6797 + 0.5, 100.0, 3, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.8021,-1643.9214,23.6797 + 0.5, 100.0, 4, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.8021,-1643.9214,23.6797 + 0.5, 100.0, 5, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.8021,-1643.9214,23.6797 + 0.5, 100.0, 6, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.8021,-1643.9214,23.6797 + 0.5, 100.0, 7, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.8021,-1643.9214,23.6797 + 0.5, 100.0, 8, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.8021,-1643.9214,23.6797 + 0.5, 100.0, 9, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1710.8021,-1643.9214,23.6797 + 0.5, 100.0, 10, 1);//

	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5140,-1641.3318,23.6797 + 0.5, 100.0, 1, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5140,-1641.3318,23.6797 + 0.5, 100.0, 2, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5140,-1641.3318,23.6797 + 0.5, 100.0, 3, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5140,-1641.3318,23.6797 + 0.5, 100.0, 4, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5140,-1641.3318,23.6797 + 0.5, 100.0, 5, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5140,-1641.3318,23.6797 + 0.5, 100.0, 6, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5140,-1641.3318,23.6797 + 0.5, 100.0, 7, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5140,-1641.3318,23.6797 + 0.5, 100.0, 8, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5140,-1641.3318,23.6797 + 0.5, 100.0, 9, 1);//
	Create3DTextLabel("Elevator\n\ncommands: /elevator", YELLOW, 1713.5140,-1641.3318,23.6797 + 0.5, 100.0, 10, 1);//

	Create3DTextLabel("Asansor\n\ncommands: /floor", YELLOW, 1964.68, 2363.74, 11.29 + 0.25, 100.0, 0, 1);

    CantJoinEvent = 0;
	HasEventStarted = 0;
	eventvehsused = 0;

	CountStatus = 0;

    EnableStuntBonusForAll(false);
    ShowPlayerMarkers(PLAYER_MARKERS_MODE_GLOBAL);
    ShowNameTags(true);
    DisableInteriorEnterExits();
    AllowInteriorWeapons(true);
    SetWorldTime(0);
    UsePlayerPedAnims(); // use CJ Animations

//  Medics
    AddPlayerClassEx(0,274,1346.2122,-1756.6079,13.5078,344.6872,5,1,0,0,0,0);//0
    AddPlayerClassEx(0,275,1346.2122,-1756.6079,13.5078,344.6872,5,1,0,0,0,0);//1
    AddPlayerClassEx(0,276,1346.2122,-1756.6079,13.5078,344.6872,5,1,0,0,0,0);//2
    AddPlayerClassEx(0,70,1346.2122,-1756.6079,13.5078,344.6872,5,1,0,0,0,0);//3
//  CIA
	AddPlayerClassEx(2,163,1568.6379,-1695.5450,5.8906,179.4654,3,1,26,200,31,400); //4
	AddPlayerClassEx(2,164,1568.6379,-1695.5450,5.8906,179.4654,3,1,26,200,31,400); //5
	AddPlayerClassEx(2,165,1568.6379,-1695.5450,5.8906,179.4654,3,1,26,200,31,400); //6
	AddPlayerClassEx(2,166,1568.6379,-1695.5450,5.8906,179.4654,3,1,26,200,31,400); //7
//  Cops
	AddPlayerClassEx(3,280,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //8
	AddPlayerClassEx(3,281,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //9
	AddPlayerClassEx(3,282,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //10
	AddPlayerClassEx(3,283,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); // 11
	AddPlayerClassEx(3,288,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //12
	AddPlayerClassEx(3,284,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //13
	AddPlayerClassEx(3,285,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); // 14
	AddPlayerClassEx(3,71,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //15
	AddPlayerClassEx(3,265,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //16
	AddPlayerClassEx(3,266,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); // 17
	AddPlayerClassEx(3,267,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //18
	AddPlayerClassEx(3,311,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //19
	AddPlayerClassEx(3,310,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //20
	AddPlayerClassEx(3,309,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //21
	AddPlayerClassEx(3,306,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //22
	AddPlayerClassEx(3,302,1568.6379,-1695.5450,5.8906,179.4654,3,1,27,200,31,400); //23
//  Army
	AddPlayerClassEx(4,287,1568.6379,-1695.5450,5.8906,179.4654,24,99999,26,99999,31,99999); //24
//  FBI
	AddPlayerClassEx(5,286,1568.6379,-1695.5450,5.8906,179.4654,3,1,26,200,31,400);//25
//  Civ
	AddPlayerClassEx(1,26,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,400);//26
	AddPlayerClassEx(1,29,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//27
	AddPlayerClassEx(1,121,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//28 gangs -----------------
	AddPlayerClassEx(1,122,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//29
	AddPlayerClassEx(1,123,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//30
	AddPlayerClassEx(1,173,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,174,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,175,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,117,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,118,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,120,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,247,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,248,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,254,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,105,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,106,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,107,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,102,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,103,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,104,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,114,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,115,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,116,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,108,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,109,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,110,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,111,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,112,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,113,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,124,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,125,-1328.2207,-291.2531,14.1484,358.5105,5,1,26,50,31,200);//
	AddPlayerClassEx(1,126,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,127,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//45 gangs -------------------
	AddPlayerClassEx(1,21,-1328.2207,-291.2531,14.1484,358.5105,5,1,26,50,31,200);//
	AddPlayerClassEx(1,22,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,223,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,227,-1328.2207,-291.2531,14.1484,358.5105,5,1,26,50,31,200);//49 ----
	AddPlayerClassEx(1,228,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,24,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,240,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,28,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,40,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,101,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//55 -----
	AddPlayerClassEx(1,143,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//56 ---------------
	AddPlayerClassEx(1,17,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,170,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,180,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,186,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,185,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,19,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,268,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,269,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,270,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//65 -----------------
	AddPlayerClassEx(1,271,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//66 -------------------
	AddPlayerClassEx(1,147,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,167,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,68,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,171,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//70 ------------------
	AddPlayerClassEx(1,179,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//71 -------------------
	AddPlayerClassEx(1,187,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,189,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,217,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,211,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//75 -------------------
	AddPlayerClassEx(1,264,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//76 beach ----------------
	AddPlayerClassEx(1,134,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,135,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//78 beach ------------------
	AddPlayerClassEx(1,137,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//79 -----------------
	AddPlayerClassEx(1,181,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,213,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,212,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,230,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,239,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//84  -----------------
    AddPlayerClassEx(1,249,-1328.2207,-291.2531,14.1484,358.5105,5,1,26,50,31,200);//  ----------------------
    AddPlayerClassEx(1,241,-1328.2207,-291.2531,14.1484,358.5105,5,1,26,50,31,200);//
	AddPlayerClassEx(1,242,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,252,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,278,-1328.2207,-291.2531,14.1484,358.5105,5,1,26,50,31,200);//49 ----
	AddPlayerClassEx(1,30,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,50,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,57,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,62,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,66,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,73,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//55 -----
	AddPlayerClassEx(1,78,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//56 ---------------
	AddPlayerClassEx(1,79,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,82,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,83,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,84,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,35,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,37,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,46,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,48,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,47,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//65 -----------------
	AddPlayerClassEx(1,59,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//66 -------------------
	AddPlayerClassEx(1,60,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,67,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,7,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,72,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//70 ------------------
	AddPlayerClassEx(1,98,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//71 -------------------
	AddPlayerClassEx(1,206,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,95,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,90,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,11,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//75 -------------------
	AddPlayerClassEx(1,141,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//76 beach ----------------
	AddPlayerClassEx(1,148,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,150,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//78 beach ------------------
	AddPlayerClassEx(1,172,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//79 -----------------
	AddPlayerClassEx(1,219,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,224,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,69,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,93,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
    AddPlayerClassEx(1,233,-1328.2207,-291.2531,14.1484,358.5105,5,1,26,50,31,200);//
	AddPlayerClassEx(1,55,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,56,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,214,-1328.2207,-291.2531,14.1484,358.5105,5,1,26,50,31,200);//49 ----
	AddPlayerClassEx(1,225,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,76,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,12,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,13,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,151,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,169,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//55 -----
	AddPlayerClassEx(1,263,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//56 ---------------
	AddPlayerClassEx(1,216,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,91,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,195,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,190,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,191,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,192,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,193,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,194,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,20001,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,20002,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
/*	AddPlayerClassEx(1,0,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,85,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
	AddPlayerClassEx(1,92,1346.2122,-1756.6079,13.5078,344.6872,5,1,26,50,31,200);//
*/
    new bloodbanger1 = AddStaticVehicleEx(504,-1338.50000000,935.90002441,1036.30004883,20.00000000,20,1,300); //Bloodring Banger
	new bloodbanger2 = AddStaticVehicleEx(504,-1341.90002441,935.20001221,1036.30004883,19.99511719,6,1,300); //Bloodring Banger
	new bloodbanger3 = AddStaticVehicleEx(504,-1345.30004883,934.09997559,1036.30004883,20.00000000,3,1,300); //Bloodring Banger
	new bloodbanger4 = AddStaticVehicleEx(504,-1332.00000000,938.20001221,1036.30004883,19.99511719,7,1,300); //Bloodring Banger
	new bloodbanger5 = AddStaticVehicleEx(504,-1335.30004883,937.00000000,1036.30004883,19.99511719,7,1,300); //Bloodring Banger
	new bloodbanger6 = AddStaticVehicleEx(504,-1328.30004883,939.40002441,1036.30004883,19.99511719,101,1,300); //Bloodring Banger
	new bloodbanger7 = AddStaticVehicleEx(504,-1318.40002441,943.00000000,1036.40002441,19.99511719,31,1,300); //Bloodring Banger
	new bloodbanger8 = AddStaticVehicleEx(504,-1324.89941406,940.59960938,1036.40002441,19.99511719,86,1,300); //Bloodring Banger
	new bloodbanger9 = AddStaticVehicleEx(504,-1321.69995117,941.79998779,1036.40002441,19.99511719,8,1,300); //Bloodring Banger
	LinkVehicleToInterior(bloodbanger1, 15);
	LinkVehicleToInterior(bloodbanger2, 15);
	LinkVehicleToInterior(bloodbanger3, 15);
	LinkVehicleToInterior(bloodbanger4, 15);
	LinkVehicleToInterior(bloodbanger5, 15);
	LinkVehicleToInterior(bloodbanger6, 15);
	LinkVehicleToInterior(bloodbanger7, 15);
	LinkVehicleToInterior(bloodbanger8, 15);
	LinkVehicleToInterior(bloodbanger9, 15);

    AddStaticVehicleEx(487,2386.6675,2380.3911,151.1142,90.7906,-1,-1,300); //Apartments heli

    AddStaticVehicleEx(601,2229.78881836,2454.39843750,-7.52291632,270.00000000,-1,-1,300); //S.W.A.T. Van
    AddStaticVehicleEx(601,2229.69580078,2461.11425781,-7.51733255,270.00000000,-1,-1,300); //S.W.A.T. Van
    AddStaticVehicleEx(598,2250.80590820,2431.73681641,-7.58312511,0.00000000,102,1,300); //Police Car (LVPD)
    AddStaticVehicleEx(599,2268.30102539,2431.63208008,-7.06799841,0.00000000,102,1,300); //Police Ranger
    AddStaticVehicleEx(427,2290.28149414,2431.29931641,-7.20512486,0.00000000,102,1,300); //Enforcer
    AddStaticVehicleEx(523,2281.57739258,2431.32495117,-7.79274750,45.00000000,-1,-1,300); //HPV1000
    AddStaticVehicleEx(523,2281.51879883,2428.92333984,-7.79274750,45.00000000,-1,-1,300); //HPV1000
    AddStaticVehicleEx(523,2281.58984375,2433.67163086,-7.79274750,45.00000000,-1,-1,300); //HPV1000
    AddStaticVehicleEx(598,2255.12255859,2431.78442383,-7.58312511,0.00000000,102,1,300); //Police Car (LVPD)
    AddStaticVehicleEx(523,2281.21508789,2433.46191406,2.93381500,45.00000000,-1,-1,300); //HPV1000
    AddStaticVehicleEx(523,2281.24877930,2431.22412109,2.93381500,45.00000000,-1,-1,300); //HPV1000
    AddStaticVehicleEx(523,2281.22314453,2428.67846680,2.93381500,45.00000000,-1,-1,300); //HPV1000
    AddStaticVehicleEx(599,2263.90527344,2431.22998047,3.65856409,0.00000000,102,1,300); //Police Ranger
    AddStaticVehicleEx(598,2246.55859375,2431.70385742,3.14343715,0.00000000,102,1,300); //Police Car (LVPD)
    AddStaticVehicleEx(427,2290.14892578,2431.18847656,3.52143764,0.00000000,102,1,300); //Enforcer
    AddStaticVehicleEx(598,2255.83911133,2460.04199219,10.69031239,180.00000000,102,1,300); //Police Car (LVPD)
    AddStaticVehicleEx(599,2273.36547852,2476.71118164,11.20543861,180.00000000,102,1,300); //Police Ranger
    AddStaticVehicleEx(497,2293.42675781,2439.86254883,47.24252319,90.00000000,102,1,300); //Police Maverick
    AddStaticVehicleEx(497,2268.22314453,2439.59570312,47.24156189,270.00000000,102,1,300); //Police Maverick
    AddStaticVehicleEx(497,2279.82421875,2451.24121094,47.24252319,270.00000000,102,1,300); //Police Maverick
    AddStaticVehicleEx(487,2093.25683594,2414.27172852,74.84359741,0.00000000,-1,1,300); //Maverick
    AddStaticVehicleEx(487,2268.08789062,1595.83630371,101.61640930,0.00000000,-1,1,300); //Maverick
    AddStaticVehicleEx(487,2268.05664062,1698.86047363,101.62446594,180.00000000,-1,1,300); //Maverick
    AddStaticVehicleEx(593,1289.76147461,1324.05639648,11.37049484,270.00000000,-1,-1,300); //Dodo
    AddStaticVehicleEx(593,1289.93322754,1361.41540527,11.37049484,270.00000000,-1,-1,300); //Dodo
    AddStaticVehicleEx(487,1314.97460938,1399.87854004,11.08531284,180.00000000,-1,1,300); //Maverick
    AddStaticVehicleEx(487,1345.94714355,1399.96972656,11.07797909,180.00000000,-1,1,300); //Maverick
    AddStaticVehicleEx(487,1299.49316406,1399.91845703,11.08531284,180.00000000,-1,1,300); //Maverick
    AddStaticVehicleEx(487,1330.33923340,1399.92419434,11.08531284,180.00000000,-1,1,300); //Maverick
    AddStaticVehicleEx(513,1447.54748535,1211.20214844,11.60506916,0.00000000,-1,1,300); //Stunt
    AddStaticVehicleEx(513,1435.86621094,1211.45214844,11.60506916,0.00000000,-1,1,300); //Stunt
    AddStaticVehicleEx(513,1423.86303711,1211.59655762,11.60506916,0.00000000,-1,1,300); //Stunt
    AddStaticVehicleEx(513,1411.95837402,1211.67211914,11.60506916,0.00000000,-1,1,300); //Stunt
    AddStaticVehicleEx(577, 1585.5671, 1188.4814, 9.8125, 180.00000000, -1, 1, 300); //AT-400
    AddStaticVehicleEx(592,1567.93286133,1448.33728027,12.32543945,90.00000000,-1,1,300); //Andromada
    AddStaticVehicleEx(519,1340.08496094,1606.63916016,11.74180031,270.00000000,-1,-1,300); //Shamal
    AddStaticVehicleEx(519,1338.94812012,1578.35620117,11.82038498,270.00000000,-1,-1,300); //Shamal
    AddStaticVehicleEx(469,1377.64538574,1769.98901367,10.92031288,270.00000000,-1,-1,300); //Sparrow
    AddStaticVehicleEx(469,1400.39770508,1770.06188965,10.92031288,90.00000000,-1,-1,300); //Sparrow
    AddStaticVehicleEx(487,1644.93859863,1539.56042480,11.04898930,45.00000000,-1,1,300); //Maverick
    AddStaticVehicleEx(487,1623.79907227,1536.78015137,11.06519222,315.00000000,-1,1,300); //Maverick
    AddStaticVehicleEx(476,282.51660156,2023.79333496,18.81077766,270.00000000,-1,1,300); //Rustler
    AddStaticVehicleEx(476,283.11029053,1989.45153809,18.81077766,270.00000000,-1,1,300); //Rustler
    AddStaticVehicleEx(476,283.06112671,1955.96276855,18.81077766,270.00000000,-1,1,300); //Rustler
    AddStaticVehicleEx(470,291.35003662,2045.06323242,17.75063705,270.00000000,-1,-1,300); //Patriot
    AddStaticVehicleEx(470,291.39349365,2051.12524414,17.75063705,270.00000000,-1,-1,300); //Patriot
    AddStaticVehicleEx(470,291.29373169,2056.90551758,17.75063705,270.00000000,-1,-1,300); //Patriot
    AddStaticVehicleEx(470,300.10961914,2063.94848633,17.75063705,180.00000000,-1,-1,300); //Patriot
    AddStaticVehicleEx(470,308.25936890,2063.83593750,17.75063705,180.00000000,-1,-1,300); //Patriot
    AddStaticVehicleEx(470,316.24908447,2063.54687500,17.75063705,180.00000000,-1,-1,300); //Patriot
    AddStaticVehicleEx(470,324.86636353,2044.06591797,17.75063705,90.00000000,-1,-1,300); //Patriot
    AddStaticVehicleEx(470,325.01782227,2050.29907227,17.75063705,90.00000000,-1,-1,300); //Patriot
    AddStaticVehicleEx(470,325.30059814,2056.43432617,17.75063705,90.00000000,-1,-1,300); //Patriot
    AddStaticVehicleEx(469,365.24517822,2535.73510742,16.76532173,0.00000000,-1,-1,300); //Sparrow
    AddStaticVehicleEx(487,-2227.63159180,2326.37792969,7.81187534,0.00000000,-1,1,300); //Maverick
    AddStaticVehicleEx(411,-2251.29003906,2326.91723633,4.61249971,90.00000000,3,1,300); //Infernus
    AddStaticVehicleEx(460,-2406.76049805,2313.23510742,2.12892199,270.00000000,1,1,300); //Skimmer
    AddStaticVehicleEx(452,-2222.77465820,2397.70947266,0.00000000,45.00000000,3,1,300); //Speeder
    AddStaticVehicleEx(453,-2254.27197266,2429.91479492,0.00000000,225.00000000,-1,-1,300); //Reefer
    AddStaticVehicleEx(493,-2235.58959961,2451.06787109,0.00000000,225.00000000,-1,1,300); //Jetmax
    AddStaticVehicleEx(454,-2201.74487305,2418.69653320,0.00000000,45.00000000,1,1,300); //Tropic
    AddStaticVehicleEx(473,-2324.94873047,2332.78295898,0.00000000,180.00000000,1,1,300); //Dinghy
    AddStaticVehicleEx(431,-2273.57153320,2293.19946289,5.07021332,0.00000000,1,1,300); //Bus
    AddStaticVehicleEx(560,-2273.11401367,2315.35571289,4.62518835,270.00000000,86,1,300); //Sultan
    AddStaticVehicleEx(468,-2514.27246094,2353.29272461,4.74370813,90.00000000,3,1,300); //Sanchez
    AddStaticVehicleEx(495,-2467.75024414,2223.47241211,5.40382385,0.00000000,2,1,300); //Sandking
    AddStaticVehicleEx(521,-2479.52734375,2242.99121094,4.50412750,0.00000000,3,1,300); //FCR-900
    AddStaticVehicleEx(475,-2443.77807617,2242.57495117,4.74375010,0.00000000,6,1,300); //Sabre
    AddStaticVehicleEx(559,-1934.03100586,2377.33959961,49.25401306,110.00000000,1,1,300); //Jester
    AddStaticVehicleEx(522,-1213.44140625,1841.45678711,41.37912750,0.00000000,3,1,300); //NRG-500
    AddStaticVehicleEx(489,-865.62023926,1560.31738281,24.66424179,90.00000000,117,1,300); //Rancher
    AddStaticVehicleEx(424,-866.35522461,1541.32458496,22.53878021,270.00000000,-1,1,300); //BF Injection
    AddStaticVehicleEx(557,-304.71380615,1582.72509766,75.35937500,134.99987793,-1,-1,300); //Monster B
    AddStaticVehicleEx(579,-1259.12316895,2715.86108398,50.16113663,30.00000000,3,1,300); //Huntley
    AddStaticVehicleEx(468,-1512.54760742,2612.92163086,55.54172134,180.00000000,20,1,300); //Sanchez
    AddStaticVehicleEx(489,-1482.81018066,2570.31494141,56.19606400,90.00000000,3,1,300); //Rancher
    AddStaticVehicleEx(541,-766.46319580,2759.93261719,45.47343826,0.00000000,-1,1,300); //Bullet
    AddStaticVehicleEx(422,-222.77868652,2595.31323242,62.78312683,180.00000000,1,1,300); //Bobcat
    AddStaticVehicleEx(468,-274.24240112,2655.67846680,62.38910294,90.00000000,3,1,300); //Sanchez
    AddStaticVehicleEx(489,-338.66711426,1161.68615723,20.10231400,180.00000000,3,1,300); //Rancher
    AddStaticVehicleEx(468,-177.46932983,1127.12792969,19.50218773,90.00000000,6,1,300); //Sanchez
    AddStaticVehicleEx(475,-89.42066956,1220.83496094,19.64218712,0.00000000,3,1,300); //Sabre
    AddStaticVehicleEx(545,-84.00588226,1077.33190918,19.69218826,0.00000000,1,1,300); //Hustler
    AddStaticVehicleEx(522,1115.65563965,2069.68969727,10.48069000,0.00000000,-1,1,300); //NRG-500
    AddStaticVehicleEx(560,1116.78125000,2217.04199219,16.52372551,0.00000000,3,1,300); //Sultan
    AddStaticVehicleEx(429,1100.05981445,2228.45825195,16.46875000,0.00000000,6,1,300); //Banshee
    AddStaticVehicleEx(402,701.44372559,1947.57971191,5.47906208,0.00000000,3,1,300); //Buffalo
    AddStaticVehicleEx(468,773.77392578,1885.53930664,4.75634766,0.00000000,6,1,300); //Sanchez
    AddStaticVehicleEx(451,1026.12036133,1785.55529785,10.58468437,270.00000000,86,1,300); //Turismo
    AddStaticVehicleEx(480,1089.69335938,1795.37634277,10.67031288,0.00000000,-1,-1,300); //Comet
    AddStaticVehicleEx(522,2117.70043945,960.04205322,10.47336578,270.00000000,-1,1,300); //NRG-500
    AddStaticVehicleEx(535,2135.22509766,988.01055908,10.66031265,0.00000000,3,1,300); //Slamvan
    AddStaticVehicleEx(562,2133.00390625,1022.46417236,10.57386208,90.00000000,2,1,300); //Elegy
    AddStaticVehicleEx(506,2141.75830078,1009.62872314,10.61242580,270.00000000,115,1,300); //Super GT
    AddStaticVehicleEx(415,2171.89990234,1019.23492432,10.66983414,90.00000000,1,1,300); //Cheetah
    AddStaticVehicleEx(411,2039.03405762,1030.31945801,10.47187519,180.00000000,86,1,300); //Infernus
    AddStaticVehicleEx(477,2107.00097656,1397.68432617,10.67031288,0.00000000,3,1,300); //ZR-350
    AddStaticVehicleEx(429,2145.66918945,1398.09729004,10.56251717,0.00000000,-1,1,300); //Banshee
    AddStaticVehicleEx(541,2136.08740234,1409.24865723,10.52031231,0.00000000,6,1,300); //Bullet
    AddStaticVehicleEx(559,2129.80517578,1409.55688477,10.57437611,0.00000000,115,1,300); //Jester
    AddStaticVehicleEx(522,2148.73242188,1408.14440918,10.48069000,0.00000000,1,1,300); //NRG-500
    AddStaticVehicleEx(521,2185.83496094,1662.69750977,10.75563145,90.00000000,3,1,300); //FCR-900
    AddStaticVehicleEx(439,2165.10327148,1787.39440918,10.82031250,0.00000000,1,1,300); //Stallion
    AddStaticVehicleEx(603,2171.76562500,1799.99951172,10.82298756,180.00000000,3,1,300); //Phoenix
    AddStaticVehicleEx(565,2224.94677734,1787.08947754,10.51224327,0.00000000,-1,1,300); //Flash
    AddStaticVehicleEx(562,2198.90502930,1810.25964355,10.57386208,0.00000000,3,1,300); //Elegy
    AddStaticVehicleEx(560,2191.30517578,1810.27026367,10.62528801,0.00000000,85,1,300); //Sultan
    AddStaticVehicleEx(522,2199.53027344,1856.31079102,10.48069000,0.00000000,6,1,300); //NRG-500
    AddStaticVehicleEx(463,2179.84863281,1879.42346191,10.43731213,180.00000000,-1,1,300); //Freeway
    AddStaticVehicleEx(463,2191.47265625,1879.29748535,10.43731213,180.00000000,-1,1,300); //Freeway
    AddStaticVehicleEx(463,2183.66113281,1879.40124512,10.43731213,180.00000000,-1,1,300); //Freeway
    AddStaticVehicleEx(463,2187.55761719,1879.31213379,10.43731213,180.00000000,-1,1,300); //Freeway
    AddStaticVehicleEx(579,2177.34448242,1856.72790527,10.91895008,0.00000000,-1,1,300); //Huntley
    AddStaticVehicleEx(420,2046.48571777,1895.78637695,11.85387039,5.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(420,2045.93444824,1903.73925781,11.97865391,0.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(420,2045.77050781,1911.48376465,11.98437214,0.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(420,2045.64416504,1919.67199707,11.98511314,0.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(420,2045.87878418,1927.46923828,11.98647594,0.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(420,2046.26257324,1935.61694336,11.85957050,350.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(420,2161.03320312,1674.22619629,10.66251469,345.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(420,2162.17602539,1680.93017578,10.67031193,0.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(411,2171.18115234,1989.04492188,10.62031269,90.00000000,3,1,300); //Infernus
    AddStaticVehicleEx(429,2186.30102539,1983.43725586,10.57031250,270.00000000,-1,1,300); //Banshee
    AddStaticVehicleEx(522,2186.43310547,2004.16809082,10.48069000,90.00000000,6,1,300); //NRG-500
    AddStaticVehicleEx(461,2104.08984375,2089.20288086,10.49481392,90.00000000,2,1,300); //PCJ-600
    AddStaticVehicleEx(560,2103.08789062,2072.80834961,10.62528801,270.00000000,1,1,300); //Sultan
    AddStaticVehicleEx(559,2105.50512695,2206.56079102,10.57437611,0.00000000,-1,-1,300); //Jester
    AddStaticVehicleEx(468,2208.61816406,2326.35327148,10.58031273,90.00000000,3,-1,300); //Sanchez
    AddStaticVehicleEx(431,2129.46875000,2338.28051758,10.92187500,90.00000000,-1,1,300); //Bus
    AddStaticVehicleEx(420,2121.06591797,2357.96728516,10.52187443,90.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(420,2127.75634766,2358.04516602,10.52187443,90.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(420,2134.43115234,2358.12719727,10.52187443,90.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(560,2104.39428711,2396.01049805,27.82841301,90.00000000,2,1,300); //Sultan
    AddStaticVehicleEx(522,2068.94946289,2419.54589844,49.18381500,270.00000000,1,-1,300); //NRG-500
    AddStaticVehicleEx(562,2274.15112305,2336.77661133,10.57386208,270.00000000,6,-1,300); //Elegy
    AddStaticVehicleEx(522,2300.51416016,2373.04174805,10.48069000,180.00000000,6,1,300); //NRG-500
    AddStaticVehicleEx(560,2263.97680664,2407.86303711,10.62528801,90.00000000,3,1,300); //Sultan
    AddStaticVehicleEx(559,2426.56323242,2547.62866211,21.62906265,0.00000000,1,1,300); //Jester
    AddStaticVehicleEx(480,2454.65380859,2529.47216797,21.72500038,0.00000000,6,1,300); //Comet
    AddStaticVehicleEx(420,2632.92065430,2348.93579102,10.52187443,110.00000000,6,1,300); //Taxi
    AddStaticVehicleEx(506,2584.90649414,2250.13891602,10.61242580,0.00000000,3,1,300); //Super GT
    AddStaticVehicleEx(429,2594.00268555,2249.94384766,10.57031250,0.00000000,6,1,300); //Banshee
    AddStaticVehicleEx(522,2591.93383789,2278.92529297,10.48069000,270.00000000,-1,1,300); //NRG-500
    AddStaticVehicleEx(562,2449.60131836,1991.10913086,10.57386208,0.00000000,86,1,300); //Elegy
    AddStaticVehicleEx(415,2392.37158203,1667.78137207,10.66983414,0.00000000,2,1,300); //Cheetah
    AddStaticVehicleEx(411,2399.58227539,1629.46289062,10.62031269,0.00000000,-1,1,300); //Infernus
    AddStaticVehicleEx(496,2285.72387695,1518.85534668,42.60803986,0.00000000,3,1,300); //Blista Compact
    AddStaticVehicleEx(562,2301.70434570,1448.04711914,42.57386017,90.00000000,1,1,300); //Elegy
    AddStaticVehicleEx(559,2352.88354492,1430.04406738,42.56966019,90.00000000,5,1,300); //Jester
    AddStaticVehicleEx(522,2301.93969727,1429.63879395,10.48379135,90.00000000,86,1,300); //NRG-500
    AddStaticVehicleEx(522,1024.61157227,1727.02075195,10.48069000,0.00000000,-1,1,300); //NRG-500
    AddStaticVehicleEx(541,1479.69152832,2839.66967773,10.52031231,180.00000000,6,1,300); //Bullet
    AddStaticVehicleEx(522,1473.59729004,2879.38159180,10.48069000,0.00000000,2,1,300); //NRG-500
    AddStaticVehicleEx(579,2199.94921875,2787.44921875,10.91895008,0.00000000,-1,1,300); //Huntley
    AddStaticVehicleEx(493,577.76812744,2881.34008789,0.00000000,0.00000000,6,1,300); //Jetmax
    AddStaticVehicleEx(473,254.27734375,2926.64599609,0.00000000,0.00000000,1,1,300); //Dinghy
    AddStaticVehicleEx(539,-912.83636475,2697.13916016,42.01718903,134.99987793,3,1,300); //Vortex
    AddStaticVehicleEx(539,-910.45239258,2694.65112305,42.01718903,134.99450684,3,1,300); //Vortex
    AddStaticVehicleEx(460,-945.37951660,2646.10864258,42.91524124,90.00000000,6,1,300); //Skimmer
    AddStaticVehicleEx(473,-803.52404785,2236.03491211,41.06027985,90.00000000,1,1,300); //Dinghy
    AddStaticVehicleEx(493,-646.49047852,875.76416016,0.00000000,230.00000000,3,1,300); //Jetmax
    AddStaticVehicleEx(471,-673.39166260,962.12573242,11.70781231,0.00000000,-1,1,300); //Quad
    AddStaticVehicleEx(471,-675.72509766,962.16168213,11.70781231,0.00000000,-1,1,300); //Quad
    AddStaticVehicleEx(460,163.86344910,633.84851074,1.93145168,180.00000000,6,1,300); //Skimmer
    AddStaticVehicleEx(493,1628.54968262,571.55743408,0.00000000,90.00000000,3,1,300); //Jetmax
    AddStaticVehicleEx(473,2293.29101562,519.01049805,0.00000000,90.00000000,1,1,300); //Dinghy
    AddStaticVehicleEx(493,2356.85913086,518.14135742,0.00000000,270.00000000,-1,1,300); //Jetmax
    AddStaticVehicleEx(416,1614.75854492,1840.48767090,11.11988831,0.00000000,1,3,300); //Ambulance
    AddStaticVehicleEx(416,1608.58483887,1840.30639648,11.11988831,0.00000000,1,3,300); //Ambulance
    AddStaticVehicleEx(416,1602.26782227,1840.23645020,11.11988831,0.00000000,1,3,300); //Ambulance
    AddStaticVehicleEx(416,1595.85021973,1840.08825684,11.11988831,0.00000000,1,3,300); //Ambulance
    AddStaticVehicleEx(416,1623.98181152,1819.74584961,11.11988831,0.00000000,1,3,300); //Ambulance
    AddStaticVehicleEx(416,1591.49658203,1819.29321289,11.11988831,0.00000000,1,3,300); //Ambulance
    AddStaticVehicleEx(416,1589.22814941,1849.05664062,11.11988831,180.00000000,1,3,300); //Ambulance
    AddStaticVehicleEx(416,1625.69116211,1849.47875977,11.11988831,180.00000000,1,3,300); //Ambulance
    AddStaticVehicleEx(560,1684.52404785,2244.39331055,10.62528801,0.00000000,-1,1,300); //Sultan
    AddStaticVehicleEx(522,1613.95471191,2217.19140625,10.48069000,90.00000000,3,1,300); //NRG-500
    AddStaticVehicleEx(461,1515.77978516,2268.51245117,10.49481392,0.00000000,1,1,300); //PCJ-600
    AddStaticVehicleEx(409,1482.22167969,2255.97924805,10.95406723,45.00000000,1,1,300); //Stretch
    AddStaticVehicleEx(535,1498.96081543,2291.08325195,10.66031265,0.00000000,6,1,300); //Slamvan
    AddStaticVehicleEx(535,1916.14086914,708.81341553,10.66031265,0.00000000,2,1,300); //Slamvan
    AddStaticVehicleEx(567,1925.85815430,709.18566895,10.79865456,0.00000000,86,1,300); //Savanna
    AddStaticVehicleEx(468,2260.54785156,2295.81884766,10.58031273,0.00000000,3,1,300); //Sanchez
    AddStaticVehicleEx(481,2239.24755859,2225.61132812,10.42908859,0.00000000,-1,-1,300); //BMX
    AddStaticVehicleEx(534,2520.92602539,936.03967285,10.65087605,0.00000000,5,1,300); //Remington
    AddStaticVehicleEx(536,2775.31591797,1294.84533691,10.60000038,0.00000000,86,1,300); //Blade
    AddStaticVehicleEx(567,2781.75512695,1294.62072754,10.72834206,0.00000000,86,1,300); //Savanna
    AddStaticVehicleEx(576,2610.56689453,1684.46972656,10.57031250,90.00000000,6,1,300); //Tornado
    AddStaticVehicleEx(567,2853.19165039,2352.82470703,10.79865456,90.00000000,3,1,300); //Savanna
    AddStaticVehicleEx(576,1494.45263672,2848.07836914,10.57031250,0.00000000,1,1,300); //Tornado
    AddStaticVehicleEx(567,1102.38000488,1793.87976074,10.79865456,0.00000000,2,1,300); //Savanna
    AddStaticVehicleEx(534,1527.46179199,2203.48535156,10.64318943,0.00000000,2,1,300); //Remington

    //CIA Vehicles
    AddStaticVehicleEx(421,981.87567139,1727.72729492,8.65487671,90.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,981.92291260,1733.13476562,8.64843750,90.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,982.10382080,1739.11267090,8.64843750,90.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,981.96887207,1722.03112793,8.65487671,90.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,982.11962891,1744.82702637,8.64843750,90.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,952.82800293,1758.88232422,8.64843750,270.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,967.95336914,1758.88122559,8.64843750,270.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,960.39080811,1758.89721680,8.64843750,270.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,968.71392822,1707.53161621,8.64843750,270.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,960.54913330,1707.50305176,8.64843750,270.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,952.30004883,1707.43127441,8.64843750,270.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,952.64489746,1740.43103027,8.64843750,270.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,952.60534668,1744.72705078,8.64843750,270.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,952.71447754,1749.06091309,8.64843750,270.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,952.09326172,1725.85156250,8.64843750,270.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,952.05175781,1721.60876465,8.64843750,270.00000000,0,0,300); //Washington
    AddStaticVehicleEx(421,952.09997559,1717.15429688,8.64843750,270.00000000,0,0,300); //Washington

    //FBI Vehicles
    AddStaticVehicleEx(487,2491.46948242,2337.66503906,11.08531284,0.00000000, 0, 0,300); //Maverick
    AddStaticVehicleEx(601,2463.59033203,2346.21704102,10.75052166,270.00000000, 0, 0,300); //S.W.A.T. Van
    AddStaticVehicleEx(528,2481.59350586,2336.77392578,11.00531197,0.00000000, 0, 0,300); //FBI Truck
    AddStaticVehicleEx(490,2510.83154297,2398.87768555,11.14043903,90.00000000, 0, 0,300); //FBI Rancher
    AddStaticVehicleEx(490,2515.72851562,2396.82592773,4.53106403,180.00000000, 0, 0,300); //FBI Rancher
    AddStaticVehicleEx(490,2524.35351562,2397.42065430,4.45640326,180.00000000, 0, 0,300); //FBI Rancher
    AddStaticVehicleEx(490,2514.46801758,2377.18920898,4.53106403,90.00000000, 0, 0,300); //FBI Rancher
    AddStaticVehicleEx(490,2514.56591797,2368.14208984,4.53802586,90.00000000, 0, 0,300); //FBI Rancher
    AddStaticVehicleEx(490,2541.06689453,2381.67871094,4.53106403,90.00000000, 0, 0,300); //FBI Rancher
    AddStaticVehicleEx(490,2541.36254883,2367.53491211,4.53106403,90.00000000, 0, 0,300); //FBI Rancher
    AddStaticVehicleEx(601,2484.07910156,2356.71264648,4.14114618,270.00000000, 0, 0,300); //S.W.A.T. Van
    AddStaticVehicleEx(490,2510.86840820,2394.19018555,11.14043903,90.00000000, 0, 0,300); //FBI Rancher

    //Admin Tower sea sparrow
	AddStaticVehicleEx(447,2166.42070000,2416.29420000,65.28900000,89.50180000,9,100,300); //Seasparrow

	//Army Vehicles
	AddStaticVehicleEx(520,334.01202393,1988.92614746,18.56019974,90.00000000,-1,-1,300); //Hydra
	AddStaticVehicleEx(425,334.01202393,1956.67578125,18.56019974,90.00000000,-1,-1,300); //Hunter
	AddStaticVehicleEx(520,334.01202393,1973.26062012,18.49162483,90.00000000,-1,-1,300); //Hydra

	//FBI Objects
    CreateObject(972,2492.00805664,2331.20654297,7.90011835,0.00000000,0.00000000,270.00000000); //object(tunnelentrance) (1)
    CreateObject(3934,2491.52368164,2338.38452148,9.82031250,0.00000000,0.00000000,90.00000000); //object(helipad01) (1)

	//NVPD Roof/NVS + hospital objects + Admin Tower objects + New Vegas Barriers
	CreateObject(984,2300.52246094,2437.31665039,46.61420441,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(1)
	CreateObject(984,2300.49609375,2450.07958984,46.61420441,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(2)
	CreateObject(983,2300.49853516,2454.53735352,46.66107941,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(1)
	CreateObject(982,2277.75073242,2457.66870117,46.66011810,0.00000000,0.00000000,90.00000000); //object(fenceshit)(1)
	CreateObject(984,2265.80664062,2457.66088867,46.61324310,0.00000000,0.00000000,90.00000000); //object(fenceshit2)(3)
	CreateObject(983,2297.34619141,2457.67749023,46.66107941,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(2)
	CreateObject(984,2259.40991211,2451.21093750,46.61324310,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(4)
	CreateObject(984,2259.39257812,2441.17846680,46.61324310,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(5)
	CreateObject(984,2265.58593750,2433.10205078,46.61324310,0.00000000,0.00000000,75.00000000); //object(fenceshit2)(6)
	CreateObject(8613,2295.49487305,2461.85791016,42.05892181,0.00000000,0.00000000,180.00000000); //object(vgssstairs03_lvs)(1)
	CreateObject(1690,2291.99487305,2460.57324219,38.37448502,0.00000000,0.00000000,90.00000000); //object(gen_roofbit4)(1)
	CreateObject(1693,2286.33886719,2466.18115234,39.20254135,0.00000000,0.00000000,90.00000000); //object(roofstuff12)(1)
	CreateObject(983,2288.90771484,2458.89306641,38.37105560,0.00000000,0.00000000,0.00000000); //object(fenceshit3)(4)
	CreateObject(3109,2296.87646484,2457.74243164,38.87907410,0.00000000,0.00000000,90.00000000); //object(imy_la_door)(1)
	CreateObject(984,2295.27465820,2470.78662109,38.32418060,0.00000000,0.00000000,90.00000000); //object(fenceshit2)(7)
	CreateObject(982,2301.67333984,2458.06445312,38.37105560,0.00000000,0.00000000,0.00000000); //object(fenceshit)(2)
	CreateObject(983,2298.52709961,2445.28295898,38.37105560,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(6)
	CreateObject(984,2278.17675781,2431.20874023,46.61324310,0.00000000,0.00000000,88.00000000); //object(fenceshit2)(8)
	CreateObject(984,2290.93701172,2430.98437500,46.61420441,0.00000000,0.00000000,90.00000000); //object(fenceshit2)(9)
	CreateObject(983,2297.33227539,2430.99536133,46.66107941,0.00000000,0.00000000,90.00000000); //object(fenceshit3)(7)
	CreateObject(3934,2280.88476562,2451.21606445,45.97752380,0.00000000,0.00000000,0.00000000); //object(helipad01)(1)
	CreateObject(3934,2269.08178711,2439.58300781,45.97656250,0.00000000,0.00000000,0.00000000); //object(helipad01)(2)
	CreateObject(3934,2292.60107422,2439.83813477,45.97752380,0.00000000,0.00000000,0.00000000); //object(helipad01)(3)
	CreateObject(988,2176.52929688,2411.84863281,72.93386078,0.00000000,0.00000000,179.99450684); //object(ws_apgate)(1)
	CreateObject(988,2179.17456055,2409.19018555,72.93386078,0.00000000,0.00000000,87.99499512); //object(ws_apgate)(2)
	CreateObject(988,2176.53002930,2406.43090820,72.93386078,0.00000000,0.00000000,0.00000000); //object(ws_apgate)(3)
	CreateObject(988,2173.80566406,2409.08984375,72.93386078,0.00000000,0.00000000,270.00000000); //object(ws_apgate)(4)
	CreateObject(10631,2329.07617188,2392.76171875,14.16549015,0.00000000,0.00000000,90.00000000); //object(ammunation_sfs)(1)
	CreateObject(4018,2307.38134766,2327.16772461,9.82031250,0.00000000,0.00000000,90.00000000); //object(newbuildsm02)(1)
	CreateObject(4022,2325.13159180,2322.71118164,12.90466309,0.00000000,0.00000000,270.00000000); //object(foodmart1_lan)(1)
	CreateObject(5140,2333.61816406,2374.35839844,12.06770134,0.00000000,0.00000000,0.00000000); //object(snpedtatshp)(1)
	CreateObject(5392,2324.89672852,2291.85522461,13.09587669,0.00000000,0.00000000,113.00000000); //object(laestripmall1)(1)
	CreateObject(5727,2309.49121094,2280.29199219,14.51833725,0.00000000,0.00000000,90.00000000); //object(holbuild10_law)(1)
	CreateObject(9302,2328.83276367,2264.32299805,17.16249084,0.00000000,0.00000000,270.00000000); //object(sfn_town01)(1)
	CreateObject(3934,1399.06689453,1770.04882812,9.82030869,0.00000000,0.00000000,0.00000000); //object(helipad01)(4)
	CreateObject(3934,1378.40234375,1770.02819824,9.82031250,0.00000000,0.00000000,0.00000000); //object(helipad01)(5)
	CreateObject(3109,2328.00000000,2375.10009766,11.10000038,0.00000000,0.00000000,0.00000000); //object(imy_la_door)(1)
	CreateObject(7073,2304.80834961,2380.43041992,32.17508698,0.00000000,0.00000000,0.00000000); //object(vegascowboy1)(1)
	CreateObject(7392,2298.59155273,2315.93530273,32.03757858,0.00000000,0.00000000,0.00000000); //object(vegcandysign1)(1)
	CreateObject(3109,2320.20654297,2321.08593750,11.01188850,0.00000000,0.00000000,0.00000000); //object(imy_la_door)(2)
	CreateObject(1337,2328.49316406,2311.21899414,10.46953773,0.00000000,0.00000000,0.00000000); //object(binnt07_la)(2)
	CreateObject(1337,2329.54736328,2311.23217773,10.46953773,0.00000000,0.00000000,0.00000000); //object(binnt07_la)(3)
	CreateObject(1338,2329.69628906,2308.84912109,10.53162193,0.00000000,0.00000000,45.00000000); //object(binnt08_la)(1)
	CreateObject(1265,2328.52246094,2310.10595703,10.28935623,0.00000000,0.00000000,0.00000000); //object(blackbag2)(1)
	CreateObject(971,2178.24218750,2406.22167969,74.90959930,0.00000000,0.00000000,0.00000000); //object(subwaygate)(1)
	CreateObject(971,2187.07031250,2406.22167969,74.90959930,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(971,2169.48046875,2406.22167969,67.79814911,0.00000000,0.00000000,0.00000000); //object(subwaygate)(3)
	CreateObject(971,2160.73437500,2406.22167969,67.79814911,0.00000000,0.00000000,0.00000000); //object(subwaygate)(4)
	CreateObject(971,2169.48046875,2406.22167969,74.90959930,0.00000000,0.00000000,0.00000000); //object(subwaygate)(5)
	CreateObject(971,2151.90332031,2406.22167969,67.79814911,0.00000000,0.00000000,0.00000000); //object(subwaygate)(4)
	CreateObject(971,2147.45410156,2410.61230469,67.79814911,0.00000000,0.00000000,270.00000000); //object(subwaygate)(4)
	CreateObject(971,2147.45410156,2419.33789062,67.79814911,0.00000000,0.00000000,270.00000000); //object(subwaygate)(4)
	CreateObject(2933,2147.45458984,2425.33593750,67.00295258,0.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(1)
	CreateObject(3279,2176.35937500,2422.17675781,72.03385925,0.00000000,0.00000000,0.00000000); //object(a51_spottower)(1)
	CreateObject(971,2191.39257812,2410.61230469,74.90959930,0.00000000,0.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2191.39257812,2419.41210938,74.90959930,0.00000000,0.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(4729,2262.64355469,2429.61596680,31.06085968,0.00000000,0.00000000,290.00000000); //object(billbrdlan2_01)(1)
	CreateObject(970,2173.96386719,2413.98437500,72.58534241,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2173.96435547,2418.09667969,72.58534241,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(2)
	CreateObject(2985,2173.96826172,2407.05761719,89.16670990,0.00000000,0.00000000,270.00000000); //object(minigun_base)(1)
	CreateObject(971,2187.07031250,2427.06005859,74.90959930,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(971,2178.24121094,2427.05957031,74.90959930,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(971,2160.73437500,2427.06005859,67.79814911,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(971,2151.90405273,2427.06005859,67.79814911,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(971,2169.48046875,2427.05957031,67.79814911,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(971,2169.64086914,2427.05957031,74.90959930,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(2933,2151.86035156,2425.33691406,78.44499207,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(3)
	CreateObject(2933,2160.56933594,2425.33691406,78.44499207,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(4)
	CreateObject(2949,2147.41748047,2426.06250000,64.27732849,0.00000000,0.00000000,0.00000000); //object(kmb_lockeddoor)(1)
	CreateObject(971,2186.94921875,2417.00878906,78.48342896,90.00000000,90.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2186.94921875,2409.79785156,78.48342896,90.00000000,90.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(2933,2147.45458984,2425.33740234,74.20119476,0.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(5)
	CreateObject(2933,2187.01367188,2425.33691406,78.44499207,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(6)
	CreateObject(971,2160.73437500,2427.05957031,74.90959930,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(971,2151.90332031,2427.05957031,74.90959930,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(2933,2165.02343750,2425.33691406,82.80363464,0.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(7)
	CreateObject(2933,2187.01440430,2425.33740234,71.93672180,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(9)
	CreateObject(2933,2187.01440430,2407.93920898,71.93672180,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(10)
	CreateObject(971,2169.48046875,2427.05957031,81.99254608,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(2933,2187.01440430,2422.18725586,78.43632507,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(11)
	CreateObject(971,2174.45214844,2427.24291992,6.62782478,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(2933,2151.86035156,2422.18652344,78.44499207,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(12)
	CreateObject(2933,2160.56933594,2422.18725586,78.44499207,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(13)
	CreateObject(971,2178.24218750,2406.22167969,81.99254608,0.00000000,0.00000000,0.00000000); //object(subwaygate)(1)
	CreateObject(2933,2182.63867188,2425.33691406,82.80363464,0.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(15)
	CreateObject(3934,2153.37353516,2414.46386719,64.27732849,0.00000000,0.00000000,0.00000000); //object(helipad01)(1)
	CreateObject(971,2169.48046875,2406.22167969,81.99254608,0.00000000,0.00000000,0.00000000); //object(subwaygate)(5)
	CreateObject(971,2182.63867188,2410.61230469,81.99254608,0.00000000,0.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2160.73437500,2406.22167969,74.90959930,0.00000000,0.00000000,0.00000000); //object(subwaygate)(5)
	CreateObject(971,2151.90332031,2406.22167969,74.90959930,0.00000000,0.00000000,0.00000000); //object(subwaygate)(4)
	CreateObject(971,2182.63867188,2419.41210938,81.99254608,0.00000000,0.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2147.45410156,2419.33789062,74.90959930,0.00000000,0.00000000,270.00000000); //object(subwaygate)(4)
	CreateObject(971,2147.45410156,2410.61230469,74.90959930,0.00000000,0.00000000,270.00000000); //object(subwaygate)(4)
	CreateObject(971,2165.20507812,2419.41210938,81.99254608,0.00000000,0.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2165.11914062,2410.61230469,81.99254608,0.00000000,0.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2178.27734375,2416.76953125,92.68190002,90.00000000,90.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2169.45214844,2416.76953125,92.68190002,90.00000000,90.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2178.24218750,2409.79785156,88.98333740,90.00000000,90.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2178.24218750,2415.56640625,88.98333740,90.00000000,90.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2169.48046875,2415.56689453,88.98333740,90.00000000,90.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2169.48046875,2409.79785156,88.98333740,90.00000000,90.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(2933,2169.45214844,2425.36547852,92.68190002,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(4)
	CreateObject(2933,2178.27734375,2425.36547852,92.68190002,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(4)
	CreateObject(2933,2169.45214844,2421.99291992,92.68190002,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(4)
	CreateObject(2933,2178.27734375,2421.99291992,92.68190002,90.00000000,90.00000000,90.00000000); //object(pol_comp_gate)(4)
	CreateObject(971,2169.48046875,2409.79785156,92.68190002,90.00000000,90.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(971,2178.24218750,2409.79785156,92.68190002,90.00000000,90.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(2933,2164.98193359,2422.63671875,87.28232574,0.00000000,0.00000000,90.00000000); //object(pol_comp_gate)(7)
	CreateObject(2933,2164.98193359,2414.02270508,87.28232574,0.00000000,0.00000000,90.00000000); //object(pol_comp_gate)(7)
	CreateObject(2933,2164.98193359,2410.69384766,87.28232574,0.00000000,0.00000000,90.00000000); //object(pol_comp_gate)(7)
	CreateObject(2933,2169.39501953,2427.00292969,87.27803040,0.00000000,0.00000000,0.00000000); //object(pol_comp_gate)(7)
	CreateObject(2933,2178.20434570,2427.00292969,87.27803040,0.00000000,0.00000000,0.00000000); //object(pol_comp_gate)(7)
	CreateObject(2933,2182.63867188,2422.63671875,87.28232574,0.00000000,0.00000000,90.00000000); //object(pol_comp_gate)(7)
	CreateObject(2933,2182.63867188,2414.02270508,87.28232574,0.00000000,0.00000000,90.00000000); //object(pol_comp_gate)(7)
	CreateObject(2933,2182.63867188,2410.69384766,87.28232574,0.00000000,0.00000000,90.00000000); //object(pol_comp_gate)(7)
	CreateObject(971,2191.39306641,2422.63256836,74.90959930,0.00000000,0.00000000,90.00000000); //object(subwaygate)(4)
	CreateObject(2933,2169.45825195,2406.32177734,87.28232574,0.00000000,0.00000000,0.00000000); //object(pol_comp_gate)(7)
	CreateObject(2933,2178.24218750,2406.32177734,87.28232574,0.00000000,0.00000000,0.00000000); //object(pol_comp_gate)(7)
	CreateObject(970,2164.99462891,2424.94775391,89.49114990,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(971,2178.24121094,2427.05957031,81.99254608,0.00000000,0.00000000,0.00000000); //object(subwaygate)(2)
	CreateObject(970,2164.99462891,2420.80664062,89.49114990,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2164.99462891,2416.65112305,89.49114990,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2164.99462891,2412.54125977,89.49114990,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2164.99414062,2408.40820312,89.49114990,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2182.60546875,2408.35058594,89.51819611,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2182.60595703,2412.45458984,89.51819611,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2182.60595703,2416.58105469,89.51819611,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2182.60595703,2420.75756836,89.51819611,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2182.60546875,2424.89062500,89.51819611,0.00000000,0.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2180.54687500,2426.97949219,89.51819611,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2176.42065430,2426.98022461,89.51819611,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2172.29882812,2426.98022461,89.51819611,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2168.15844727,2426.98022461,89.51819611,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2167.10058594,2426.97949219,89.51819611,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2167.10058594,2406.32812500,89.49114990,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2180.52343750,2406.32812500,89.49114990,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2176.24047852,2406.32812500,89.49114990,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2172.12695312,2406.32812500,89.49114990,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2168.02026367,2406.32812500,89.49114990,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2167.10058594,2419.14379883,89.49114990,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2171.25903320,2419.14379883,89.49114990,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2180.56127930,2419.14379883,89.49114990,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2172.20507812,2419.14379883,89.49114990,0.00000000,0.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(16101,2182.55517578,2406.33813477,89.00520325,0.00000000,0.00000000,0.00000000); //object(des_windsockpole)(1)
	CreateObject(16101,2165.03027344,2406.33813477,89.00520325,0.00000000,0.00000000,0.00000000); //object(des_windsockpole)(2)
	CreateObject(16101,2165.00000000,2427.00073242,89.00520325,0.00000000,0.00000000,0.00000000); //object(des_windsockpole)(3)
	CreateObject(16101,2182.55517578,2427.00024414,88.79048920,0.00000000,0.00000000,0.00000000); //object(des_windsockpole)(4)
	CreateObject(1710,2184.82373047,2418.41992188,72.03385925,0.00000000,0.00000000,0.00000000); //object(kb_couch07)(1)
	CreateObject(1710,2188.55639648,2414.58178711,72.03125000,0.00000000,0.00000000,180.00000000); //object(kb_couch07)(2)
	CreateObject(2235,2186.17822266,2416.01757812,72.00386047,0.00000000,0.00000000,0.00000000); //object(coffee_med_6)(1)
	CreateObject(970,2180.46264648,2406.32812500,92.09720612,0.00000000,180.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2176.34912109,2406.32812500,92.09720612,0.00000000,179.99450684,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2172.21362305,2406.32812500,92.09720612,0.00000000,180.00000000,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2168.11083984,2406.32812500,92.09720612,0.00000000,179.99450684,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2167.12377930,2406.32812500,92.09720612,0.00000000,179.99450684,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2167.09033203,2426.97949219,92.09720612,0.00000000,179.99450684,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2180.53247070,2426.97949219,92.09720612,0.00000000,179.99450684,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2176.41674805,2426.97949219,92.09720612,0.00000000,179.99450684,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2172.29199219,2426.97949219,92.09720612,0.00000000,179.99450684,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2168.16381836,2426.97949219,92.09720612,0.00000000,179.99450684,0.00000000); //object(fencesmallb)(1)
	CreateObject(970,2182.60546875,2424.89575195,92.09720612,0.00000000,180.00000000,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2182.60546875,2408.45166016,92.09720612,0.00000000,179.99450684,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2182.60546875,2412.55786133,92.09720612,0.00000000,179.99450684,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2182.60546875,2416.71826172,92.09720612,0.00000000,179.99450684,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2182.60546875,2420.81420898,92.09720612,0.00000000,179.99450684,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2164.99414062,2408.43823242,92.09720612,0.00000000,179.99450684,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2164.99414062,2412.70947266,92.09720612,0.00000000,179.99450684,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2164.99414062,2416.79956055,92.09720612,0.00000000,179.99450684,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2164.99414062,2420.93750000,92.09720612,0.00000000,179.99450684,90.00000000); //object(fencesmallb)(1)
	CreateObject(970,2164.99414062,2424.99414062,92.09720612,0.00000000,179.99450684,90.00000000); //object(fencesmallb)(1)
	CreateObject(994,2306.57958984,2325.51416016,9.82031250,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier2)(1)
	CreateObject(994,2312.81787109,2319.29150391,9.82031250,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2)(2)
	CreateObject(994,2312.81787109,2313.16552734,9.82031250,0.00000000,0.00000000,90.00000000); //object(lhouse_barrier2)(3)
	CreateObject(3109,2320.19995117,2392.60009766,11.39999962,0.00000000,0.00000000,0.00000000); //object(imy_la_door)(1)
	CreateObject(4602,2384.50000000,2377.69921875,80.00000000,0.00000000,0.00000000,0.00000000); //object(laskyscrap4_lan) (1)
	CreateObject(1696,2391.29980469,2371.09960938,150.89999390,0.00000000,0.00000000,0.00000000); //object(roofstuff15) (1)
	CreateObject(1697,2377.19921875,2370.29980469,151.50000000,0.00000000,0.00000000,90.00000000); //object(roofstuff16) (1)
	CreateObject(1689,2384.19921875,2369.29980469,151.10000610,0.00000000,0.00000000,0.00000000); //object(gen_roofbit3) (1)
	CreateObject(1689,2304.05004883,2379.39990234,14.80000019,0.00000000,0.00000000,0.00000000); //object(gen_roofbit3) (2)
	CreateObject(2964,2303.80004883,2387.69995117,13.60000038,0.00000000,0.00000000,0.00000000); //object(k_pooltablesm) (1)
	CreateObject(1723,2302.69995117,2394.19995117,13.60000038,0.00000000,0.00000000,0.00000000); //object(mrk_seating1) (1)
	CreateObject(1724,2300.89990234,2393.19995117,13.60000038,0.00000000,0.00000000,45.00000000); //object(mrk_seating1b) (1)
	CreateObject(1723,2304.69995117,2390.89990234,13.60000038,0.00000000,0.00000000,180.00000000); //object(mrk_seating1) (2)
	CreateObject(1822,2303.19995117,2392.00000000,13.60000038,0.00000000,0.00000000,0.00000000); //object(coffee_swank_6) (1)
	CreateObject(14467,2307.50000000,2393.30004883,16.39999962,0.00000000,0.00000000,0.00000000); //object(carter_statue) (1)
	CreateObject(2693,2308.60009766,2387.50000000,14.30000019,0.00000000,0.00000000,225.00000000); //object(cj_banner11) (1)
	CreateObject(2692,2299.60009766,2387.30004883,14.39999962,0.00000000,0.00000000,135.00000000); //object(cj_banner10) (1)
	CreateObject(2930,2294.60009766,2494.50000000,4.90000010,0.00000000,0.00000000,0.00000000); //object(chinatgate) (1)
	CreateObject(8615,2341.00000000,2376.60009766,12.27999973,0.00000000,0.00000000,90.00000000); //object(vgssstairs04_lvs) (1)
	CreateObject(8615,2336.00000000,2381.60009766,16.70000076,0.00000000,0.00000000,0.00000000); //object(vgssstairs04_lvs) (2)
	CreateObject(3934,2334.00000000,2370.00000000,14.00000000,0.00000000,0.00000000,0.00000000); //object(helipad01) (1)
	CreateObject(3934,2325.60009766,2387.69995117,18.50000000,0.00000000,0.00000000,0.00000000); //object(helipad01) (2)
	CreateObject(3934,2335.00000000,2397.89990234,18.50000000,0.00000000,0.00000000,0.00000000); //object(helipad01) (3)
	CreateObject(17037,2344.39990234,2398.30004883,12.30000019,0.00000000,0.00000000,0.00000000); //object(cuntw_carport2_) (1)
	CreateObject(17037,2350.69995117,2398.30004883,12.30000019,0.00000000,0.00000000,0.00000000); //object(cuntw_carport2_) (2)
	CreateObject(997,2363.30004883,2375.39990234,9.80000019,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier3) (1)
	CreateObject(997,2363.30004883,2379.80004883,9.80000019,0.00000000,0.00000000,0.00000000); //object(lhouse_barrier3) (2)

    hanger1 = CreateObject(971,2151.81958008,2409.79785156,78.44499207,90.00000000,0.00000000,0.00000000); //object(subwaygate) (6)//Hanger gate 1 a
    hanger2 = CreateObject(971,2160.73437500,2409.79785156,78.44499207,90.00000000,0.00000000,0.00000000); //object(subwaygate) (7)//Hanger gate 2 b
    hanger3 = CreateObject(971,2151.81958008,2417.00878906,78.44499207,90.00000000,0.00000000,0.00000000); //object(subwaygate) (8)//Hanger gate 3 a
    hanger4 = CreateObject(971,2160.73437500,2417.00878906,78.44499207,90.00000000,0.00000000,0.00000000); //object(subwaygate) (9)//Hanger gate 4 b

	FBIGate = CreateAutomaticGate(971, 2517.08227539, 2346.28271484, 13.30023003, 0.00000000, 0.00000000, 90.000000000, 2517.08227500, 2346.28271400, 05.30023000, 0.00000000, 0.00000000, 90.00000000, 2517.2830, 2346.2686, 10.2335, 20 , 4.0 , 1);
	PDGate1 = CreateAutomaticGate(971, 2335.01538086, 2444.08398438, 7.299247740, 0.00000000, 0.00000000, 60.000000000, 2335.01538086, 2444.08398438, -1.29924774, 0.00000000, 0.00000000, 60.00000000, 2334.7754, 2443.3240, 4.60810, 20 , 4.0 , 1);
	PDGate2 = CreateAutomaticGate(971, 2293.96020508, 2499.41804688, 5.588595390, 0.00000000, 0.00000000, 270.00000000, 2293.96020508, 2499.24804688, 13.58859539, 0.00000000, 0.00000000, 270.0000000, 2293.9705, 2498.5266, 2.34050, 20 , 4.0 , 1);

    //NVPD (Inside) Elevator door/jail cell map bug fix/es
    CreateObject(18758,193.92813110,168.20587158,1003.91552734,0.00000000,0.00000000,180.00000000); //object(thebolla04) (1)
	CreateObject(18756,197.69393921,168.27279663,1003.98919678,0.00000000,0.00000000,0.00000000); //object(thebowl12) (1)
	CreateObject(18757,197.70196533,168.30268860,1003.98437500,0.00000000,0.00000000,0.00000000); //object(thebowl10) (1)
	CreateObject(971,187.82812500,163.59570312,1001.96997070,90.00000000,0.00000000,0.00000000); //object(subwaygate) (10)
	CreateObject(971,187.82812500,173.83906555,1001.96997070,90.00000000,0.00000000,0.00000000); //object(subwaygate) (11)
	CreateObject(971,187.82812500,172.48437500,1005.52325439,0.00000000,0.00000000,0.00000000); //object(subwaygate) (12)
	CreateObject(971,187.82812500,163.98730469,1005.52325439,0.00000000,0.00000000,179.99450684); //object(subwaygate) (13)
	CreateObject(971,191.68965149,165.70367432,1005.52325439,0.00000000,0.00000000,90.00000000); //object(subwaygate) (14)
	CreateObject(971,191.68965149,171.70838928,1005.52325439,0.00000000,0.00000000,90.00000000); //object(subwaygate) (15)
	CreateObject(971,187.77001953,165.70367432,1005.52325439,0.00000000,0.00000000,270.00000000); //object(subwaygate) (14)
	CreateObject(971,187.77001953,171.70838928,1005.52325439,0.00000000,0.00000000,270.00000000); //object(subwaygate) (14)
	CreateObject(971,193.60169983,163.98730469,1005.52325439,0.00000000,0.00000000,179.99450684); //object(subwaygate) (13)
	CreateObject(971,195.85380554,165.70367432,1005.52325439,0.00000000,0.00000000,270.00000000); //object(subwaygate) (14)
	CreateObject(971,193.82131958,163.59570312,1001.96997070,90.00000000,0.00000000,0.00000000); //object(subwaygate) (10)

	//Threshold's Map (DONATOR) - 79 objects
	CreateObject(7885, 2082, 2819.1999511719, 9.6999998092651, 0, 0, 123.99996948242);
	CreateObject(3475, 2068.2998046875, 2752.69921875, 12.199999809265, 0, 0, 90);
	CreateObject(3475, 2071.3000488281, 2752.6999511719, 12.199999809265, 0, 0, 90);
	CreateObject(3475, 2074.2998046875, 2752.69921875, 12.199999809265, 0, 0, 90);
	CreateObject(3475, 2077.1000976563, 2755.3999023438, 12.199999809265, 0, 0, 180);
	CreateObject(3475, 2077.1000976563, 2761.3999023438, 12.199999809265, 0, 0, 179.99450683594);
	CreateObject(3475, 2077.6999511719, 2767.1999511719, 12.199999809265, 0, 0, 169.99450683594);
	CreateObject(3475, 2079.8000488281, 2772.6999511719, 12.199999809265, 0, 0, 147.99145507813);
	CreateObject(3475, 2083.69921875, 2777.19921875, 12.199999809265, 0, 0, 131.98974609375);
	CreateObject(3749, 2095.3994140625, 2782.099609375, 15.699999809265, 0, 0, 7.998046875);
	CreateObject(3475, 2065.5, 2755.3000488281, 12, 0, 0, 0);
	CreateObject(3475, 2065.6000976563, 2761.1000976563, 12, 0, 0, 0);
	CreateObject(3475, 2065.6000976563, 2766.8999023438, 12, 0, 0, 0);
	CreateObject(3475, 2065.6000976563, 2772.8000488281, 12, 0, 0, 0);
	CreateObject(3475, 2065.6000976563, 2778.6999511719, 12, 0, 0, 0);
	CreateObject(3475, 2065.6000976563, 2783.1000976563, 12, 0, 0, 0);
	CreateObject(3475, 2062.6000976563, 2786.3400878906, 12, 0, 0, 90);
	CreateObject(3475, 2056.8999023438, 2786.3999023438, 12, 0, 0, 90);
	CreateObject(3475, 2051, 2786.3999023438, 12, 0, 0, 90);
	CreateObject(3475, 2045.1999511719, 2786.3999023438, 12, 0, 0, 90);
	CreateObject(3475, 2040.6999511719, 2788.6000976563, 12, 0, 0, 36);
	CreateObject(3475, 2037.1999511719, 2793.3999023438, 12, 0, 0, 35.996704101563);
	CreateObject(3475, 2033.8000488281, 2798.1000976563, 12, 0, 0, 35.996704101563);
	CreateObject(3475, 2030.3000488281, 2802.8999023438, 12, 0, 0, 35.996704101563);
	CreateObject(3475, 2028.5, 2808, 12, 0, 0, 1.9967041015625);
	CreateObject(3475, 2028.3000488281, 2813.6999511719, 12, 0, 0, 1.9940185546875);
	CreateObject(3475, 2028.0999755859, 2819.5, 12, 0, 0, 1.9940185546875);
	CreateObject(3475, 2027.9000244141, 2825.3999023438, 12, 0, 0, 1.9940185546875);
	CreateObject(3475, 2030.0999755859, 2829.8000488281, 12.300000190735, 0, 0, 303.99401855469);
	CreateObject(3475, 2035, 2833.1000976563, 12.39999961853, 0, 0, 303.99169921875);
	CreateObject(3475, 2107.8999023438, 2783.3000488281, 12.199999809265, 0, 0, 269.98974609375);
	CreateObject(3475, 2113.8999023438, 2783.3000488281, 12.199999809265, 0, 0, 269.98901367188);
	CreateObject(3475, 2117.1799316406, 2786.3000488281, 12.199999809265, 0, 0, 0);
	CreateObject(3475, 2117.1999511719, 2792.1000976563, 12.199999809265, 0, 0, 0);
	CreateObject(3475, 2117.1999511719, 2798, 12.199999809265, 0, 0, 0);
	CreateObject(3475, 2117.1999511719, 2803.6999511719, 12.199999809265, 0, 0, 0);
	CreateObject(3475, 2117.3000488281, 2809.5, 12.199999809265, 0, 0, 0);
	CreateObject(3475, 2117.3000488281, 2815.5, 12.199999809265, 0, 0, 0);
	CreateObject(3475, 2117.3000488281, 2821.3000488281, 12.199999809265, 0, 0, 0);
	CreateObject(3475, 2117.3000488281, 2827.1000976563, 12.199999809265, 0, 0, 0);
	CreateObject(3475, 2117.2998046875, 2827.099609375, 12.199999809265, 0, 0, 0);
	CreateObject(3475, 2117.3000488281, 2833, 12.199999809265, 0, 0, 0);
	CreateObject(3475, 2117.3000488281, 2838.8999023438, 12.199999809265, 0, 0, 0);
	CreateObject(3475, 2117.3999023438, 2844.8000488281, 12.199999809265, 0, 0, 0);
	CreateObject(3749, 2126.6000976563, 2849.8000488281, 15.699999809265, 0, 0, 4);
	CreateObject(3475, 2039.9000244141, 2836.3000488281, 12.5, 0, 0, 303.99169921875);
	CreateObject(3475, 2044.6999511719, 2839.6000976563, 12.60000038147, 0, 0, 303.99169921875);
	CreateObject(3475, 2049.8999023438, 2842.1999511719, 12.699999809265, 0, 0, 289.99169921875);
	CreateObject(3475, 2055.3999023438, 2844.1999511719, 13.10000038147, 0, 0, 289.98962402344);
	CreateObject(3475, 2060.6999511719, 2846.6999511719, 13.300000190735, 0, 0, 302);
	CreateObject(3475, 2065.6999511719, 2849.8000488281, 13.300000190735, 0, 0, 301.99768066406);
	CreateObject(3475, 2070.6000976563, 2852.8999023438, 13.300000190735, 0, 0, 301.99768066406);
	CreateObject(3475, 2075.6999511719, 2856.1000976563, 13.300000190735, 0, 0, 301.99768066406);
	CreateObject(3475, 2080.6999511719, 2859.1999511719, 13.300000190735, 0, 0, 301.99768066406);
	CreateObject(3475, 2085.8000488281, 2862.3000488281, 13.300000190735, 0, 0, 302);
	CreateObject(3475, 2090.8000488281, 2865.3999023438, 13.300000190735, 0, 0, 301.99768066406);
	CreateObject(3475, 2095.6000976563, 2868.8999023438, 13.300000190735, 0, 0, 309.99768066406);
	CreateObject(3475, 2100.1000976563, 2872.6999511719, 13.300000190735, 0, 0, 309.99572753906);
	CreateObject(3475, 2104.6000976563, 2876.5, 13.300000190735, 0, 0, 309.99572753906);
	CreateObject(3475, 2109.1999511719, 2880.1999511719, 12.800000190735, 0, 0, 309.99572753906);
	CreateObject(3475, 2114.1000976563, 2882.8999023438, 12.10000038147, 0, 0, 287.99572753906);
	CreateObject(3475, 2119.6999511719, 2883.3999023438, 12.10000038147, 0, 0, 261.99560546875);
	CreateObject(3475, 2124.6999511719, 2881.1000976563, 12.10000038147, 0, 0, 227.99096679688);
	CreateObject(3475, 2129.1000976563, 2877.1000976563, 12.10000038147, 0, 0, 227.98828125);
	CreateObject(3475, 2132.6000976563, 2872.5, 12.10000038147, 0, 0, 205.98826599121);
	CreateObject(3475, 2134.1000976563, 2867.1000976563, 12.10000038147, 0, 0, 183.98815917969);
	CreateObject(3475, 2134.5, 2861.1999511719, 12.10000038147, 0, 0, 183.98803710938);
	CreateObject(3475, 2134.8999023438, 2855.3000488281, 12.10000038147, 0, 0, 183.98803710938);
	CreateObject(7917, 2082, 2819.1999511719, 9.6999998092651, 0, 0, 123.99996948242);
	CreateObject(683, 2110.1999511719, 2812.8000488281, 9.8000001907349, 0, 0, 0);
	CreateObject(683, 2072.6000976563, 2764.1999511719, 9.8000001907349, 0, 0, 0);
	CreateObject(683, 2071.6999511719, 2792.3000488281, 9.8000001907349, 0, 0, 0);
	CreateObject(683, 2034, 2823, 9.8000001907349, 0, 0, 0);
	CreateObject(683, 2095.5, 2865.5, 9.8000001907349, 0, 0, 0);
	CreateObject(3472, 2113.1999511719, 2791.6000976563, 9.8000001907349, 0, 0, 0);
	CreateObject(3472, 2074.1999511719, 2775.1999511719, 10, 0, 0, 0);
	CreateObject(9833, 2124.3999023438, 2866.8999023438, 13, 0, 0, 0);
	CreateObject(14637, 2096, 2779.3000488281, 16.799999237061, 0, 0, 278);

    CreateObject(6391, 1972.53, 2360.98, 49.80,   0.00, 0.00, -175.21);
    CreateObject(19597, 1972.53, 2360.98, 49.80,     0.00, 0.00, -175.21);
    ele = CreateObject(18755, 1964.68, 2363.74, 11.29,   0.00, 0.00, 265.20);
    CreateObject(7315, 1987.09, 2332.47, 6.43,   13.68, -88.92, 22.50);
    CreateObject(6972, 1961.61, 2372.74, 46.48,   0.00, 0.00, 175.00);

	////----------// my objects //
	
	CreateDynamicObject(18750, 1939.85925, 1627.85168, 125.41434,   90.00000, 0.00000, 90.00000);
    CreateDynamicObject(19338, 1961.57288, 1512.87061, 70.03186,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18846, 1961.03674, 1745.57861, 72.08812,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3524, 2032.46313, 1618.22205, 12.23438,   3.14159, 0.00000, 1.57080);
    CreateDynamicObject(3524, 2028.47412, 1603.06372, 12.23438,   3.14159, 0.00000, 1.57080);
    CreateDynamicObject(3524, 2032.39697, 1628.12781, 12.23438,   3.14159, 0.00000, 1.57080);
    CreateDynamicObject(3524, 2028.50061, 1643.38770, 12.23438,   3.14159, 0.00000, 1.57080);
    CreateDynamicObject(3524, 2028.41943, 1683.25549, 12.23438,   3.14159, 0.00000, 1.57080);
    CreateDynamicObject(3524, 2028.52991, 1582.96399, 12.23438,   3.14159, 0.00000, 1.57080);
    CreateDynamicObject(3524, 1998.19385, 1618.24268, 12.23438,   3.14159, 0.00000, 1.57080);
    CreateDynamicObject(3524, 1998.10059, 1628.22681, 12.23438,   3.14159, 0.00000, 1.57080);
	
	//my fire truck
    CreateVehicle(544, 1773.3342, 2073.2014, 10.9719, 160.8000, -1, -1, 100);
    CreateVehicle(544, 1769.5974, 2072.7700, 10.9719, 160.8000, -1, -1, 100);
    CreateVehicle(544, 1765.6965, 2072.7161, 10.9719, 160.8000, -1, -1, 100);
    CreateVehicle(407, 1759.9020, 2073.4409, 10.9719, 187.0200, -1, -1, 100);
    CreateVehicle(407, 1755.7765, 2072.7256, 10.9719, 191.9400, -1, -1, 100);
    CreateVehicle(407, 1751.4137, 2072.0454, 10.9719, 199.1399, -1, -1, 100);
    
    CreateObject(3306, 955.57, 1876.42, 11.24,   0.00, 0.00, -90.00);
    CreateObject(3310, 929.88, 1875.68, 11.96,   0.00, 0.00, 90.00);
    CreateObject(3312, 929.77, 1900.68, 12.87,   0.00, 0.00, 0.00);
    CreateObject(3308, 930.17, 1976.52, 11.13,   0.00, 0.00, -180.00);
    CreateObject(3317, 978.73, 2240.61, 13.11,   0.00, 0.00, 90.00);
    CreateObject(3308, 984.76, 2214.86, 11.08,   0.00, 0.00, 0.00);
    CreateObject(3307, 927.12, 2244.92, 10.92,   0.00, 0.00, -180.00);
    CreateObject(3308, 927.08, 2221.28, 10.92,   0.00, 0.00, -180.00);
    CreateObject(3309, 954.05, 2315.88, 11.22,   0.00, 0.00, -90.00);
    CreateObject(3306, 985.04, 2370.10, 11.13,   0.00, 0.00, 0.00);
    CreateObject(3310, 929.36, 2371.19, 11.89,   0.00, 0.00, 0.00);
    CreateObject(3311, 929.37, 2346.13, 12.82,   0.00, 0.00, -90.00);
    CreateObject(3313, 929.70, 2320.59, 12.76,   0.00, 0.00, 0.00);
    CreateObject(3306, 954.02, 2349.32, 10.92,   0.00, 0.00, 90.00);
    CreateObject(3306, 956.35, 2211.48, 9.71,   0.00, 0.00, -90.0);
    CreateObject(3310, 884.98, 2023.05, 12.02,   0.00, 0.00, -180.00);
    CreateObject(3312, 884.88, 1956.54, 12.03,   0.00, 0.00, 180.00);
    CreateObject(3308, 890.67, 1930.68, 10.10,   0.00, 0.00, 0.00);
    CreateObject(3317, 885.82, 1906.46, 11.76,   0.00, 0.00, 90.00);
    CreateObject(3308, 885.12, 1880.61, 10.82,   0.00, 0.00, 0.00);
    CreateObject(3307, 889.52, 2076.65, 9.81,   0.00, 0.00, 0.00);
    CreateObject(3307, 887.47, 2101.74, 10.71,   0.00, 0.00, 0.00);
    CreateObject(3308, 887.05, 2125.60, 10.81,   0.00, 0.00, 0.00);
    CreateObject(3309, 890.86, 2150.87, 9.91,   0.00, 0.00, 0.00);
    CreateObject(3306, 887.01, 2177.11, 10.80,   0.00, 0.00, 0.00);
    CreateObject(3308, 891.19, 2276.86, 10.00,   0.00, 0.00, 0.00);
    CreateObject(3308, 884.37, 2327.98, 11.16,   0.00, 0.00, 0.00);
    CreateObject(3307, 883.50, 2354.76, 11.22,   0.00, 0.00, 0.00);
    CreateObject(3308, 890.22, 2378.80, 9.53,   0.00, 0.00, 0.00);
    CreateObject(3310, 884.70, 2201.53, 11.31,   0.00, 0.00, -180.0);
    CreateObject(3313, 885.01, 2226.54, 12.02,   0.00, 0.00, 90.0);
    CreateObject(3312, 885.18, 2251.54, 12.12,   0.00, 0.00, -180.0);
    CreateObject(3317, 878.34, 2302.97, 13.15,   0.00, 0.00, 90.0);
    CreateObject(3307, 927.01, 2269.85, 10.91,   0.00, 0.00, -180.0);

	CreateObject(17579, 2311.02, 2387.28, 16.33,   0.00, 0.00, 90.00);
    CreateObject(17577, 2305.48, 2386.61, 14.41,   0.00, 0.00, 90.00);
    CreateObject(17578, 2311.02, 2387.28, 16.33,   0.00, 0.00, 90.00);
    CreateObject(1498, 2308.14, 2378.96, 9.97,   0.00, 0.00, 45.13);
	
    CreateObject(1370, 2307.81, 2391.60, 14.13,   0.00, 0.00, 0.00);
    CreateObject(918, 2306.81, 2391.62, 14.02,   0.00, 0.00, 0.00);
    CreateObject(2045, 2303.58, 2391.87, 13.91,   58.26, -107.94, 0.00);
    CreateObject(2044, 2303.91, 2392.49, 14.08,   0.00, 0.00, 0.00);
    CreateObject(2034, 2303.90, 2392.74, 14.06,   0.00, 0.00, 0.00);
    CreateObject(2035, 2303.52, 2392.57, 14.08,   0.00, 0.00, -106.08);
    CreateObject(2036, 2303.01, 2392.60, 13.94,   8.28, -31.68, 0.00);
    CreateObject(1550, 2300.62744, 2395.52686, 13.92000,   5.40000, -18.30000, 0.00000);
    CreateObject(1829, 2299.94385, 2395.12085, 14.13000,   0.00000, 0.00000, 0.00000);

    CreateObject(4825, 957.76, 2464.68, 7.34,   0.00, 0.00, -90.46);
    CreateObject(4826, 958.06, 2507.71, 19.57,   0.00, 0.00, 269.54);
    CreateObject(4986, 957.90, 2430.76, 7.58,   0.00, 0.00, -90.00);

    CreateObject(2990, 1024.98, -1029.25, 31.80,   0.00, 0.00, 0.00);
    CreateObject(2990, 488.21, -1735.44, 10.76,   361.50, 360.24, 172.52);
    CreateObject(2990, -1421.05, 2591.01, 55.50,   0.00, 0.00, 177.88);
    CreateObject(2990, -1904.48, 277.86, 40.75,   0.00, 0.00, -0.48);
    CreateObject(2990, -2426.06, 1027.96, 50.09,   0.00, 0.00, 180.00);
    CreateObject(2990, 1968.97, 2162.56, 10.63,   0.00, 0.00, 270.00);
    CreateObject(2990, 2071.46, -1831.31, 13.15,   0.00, 0.00, 90.00);
    CreateObject(2990, -99.43, 1111.48, 19.38,   0.00, 0.00, 359.49);
    CreateObject(2990, 720.60, -462.35, 13.11,   0.00, 90.00, 0.00);
    CreateObject(2990, 2393.82, 1483.56, 10.44,   0.00, 0.00, 0.00);
    CreateDynamicObject(2990, 1043.24, -1025.71, 31.74,   0.00, 0.00, 0.00);
    CreateDynamicObject(2990, 2645.25, -2039.58, 10.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(2990, -1935.95, 239.25, 33.95,   0.00, 0.00, 0.00);
    CreateDynamicObject(2990, -2716.25, 217.51, 4.08,   0.00, 0.00, 90.00);
    CreateDynamicObject(2990, 2386.82, 1043.92, 10.50,   0.00, 0.00, 0.00);

    CreateDynamicObject(2780, 2163.07, 2470.07, 9.04,   0.00, 0.00, 0.00);
    CreateDynamicObject(2780, 2163.02, 2476.47, 9.05,   0.00, 0.00, 0.00);
    CreateDynamicObject(3515, 2158.91, 2470.11, 7.80,   -19.08, 26.94, -37.56);
    CreateDynamicObject(3515, 2159.06, 2476.86, 7.85,   2.94, 22.98, 0.00);
    CreateDynamicObject(3515, 2166.41, 2473.36, 7.98,   7.74, -26.64, 0.00);
    CreateDynamicObject(19604, 2163.20, 2473.44, 9.84,   0.00, 0.00, 0.00);
    CreateDynamicObject(2714, 2157.62, 2463.17, 11.94,   0.00, 0.00, 0.00);
    CreateDynamicObject(2714, 2168.57, 2463.17, 11.94,   0.00, 0.00, 0.00);
    CreateDynamicObject(18749, 2163.50, 2463.20, 12.84,   0.00, 0.00, 0.00);
    CreateDynamicObject(16778, 2164.21, 2464.20, 14.58,   0.00, 0.00, 0.00);

	//soratgir
    CreateDynamicObject(19425, 2289.98, 2401.92, 9.67,   0.00, 0.00, 0.00);
    CreateDynamicObject(19425, 2285.06, 2401.97, 9.66,   0.00, 0.00, 0.00);
    CreateDynamicObject(19425, 2275.62, 2411.16, 9.66,   0.00, 0.00, 90.00);
    CreateDynamicObject(19425, 2275.32, 2415.76, 9.66,   0.00, 0.00, 90.00);
    CreateDynamicObject(19425, 2297.82, 2410.66, 9.67,   0.00, 0.00, 90.00);
    CreateDynamicObject(19425, 2298.01, 2415.43, 9.65,   0.00, 0.00, 90.00);
    //soratgir
    CreateDynamicObject(19425, 2297.11, 2351.35, 9.81,   0.00, 0.00, 90.00);
    CreateDynamicObject(19425, 2297.10, 2354.65, 9.81,   0.00, 0.00, 90.00);
    CreateDynamicObject(19425, 2315.05, 2403.50, 9.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19425, 2318.25, 2403.50, 9.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19425, 2359.90, 2403.54, 9.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19425, 2363.17, 2403.54, 9.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(19425, 2417.66, 2392.42, 9.82,   0.00, 0.00, 90.00);
    CreateDynamicObject(19425, 2417.57, 2354.61, 9.82,   0.00, 0.00, 90.00);
    CreateDynamicObject(6969, 2391.20, 2326.89, 11.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(19425, 2417.58, 2351.93, 9.82,   0.00, 0.00, 90.00);
    CreateDynamicObject(19425, 2417.69, 2339.53, 9.82,   0.00, 0.00, 90.00);
    CreateDynamicObject(19425, 2315.18, 2242.99, 9.81,   0.00, 0.00, 0.00);
    CreateDynamicObject(19425, 2318.47, 2242.98, 9.82,   0.00, 0.00, 0.00);

    CreateObject(11692, 199.34, 1943.79, 18.20,   0.00, 0.00, 0.00);
    CreateObject(19312, 191.14, 1870.04, 21.48,   0.00, 0.00, 0.00);
    CreateObject(19905, 206.80, 1931.64, 16.45,   0.00, 0.00, 0.00);
    CreateObject(19905, 188.21, 1835.03, 16.45,   0.00, 0.00, 0.00);
    CreateObject(19905, 230.38, 1835.03, 16.45,   0.00, 0.00, 0.00);
    CreateObject(19907, 142.01, 1902.54, 17.63,   0.00, 0.00, 270.00);
    CreateObject(19907, 146.85, 1846.01, 16.53,   0.00, 0.00, 0.00);
    CreateObject(19909, 137.90, 1875.02, 16.84,   0.00, 0.00, 270.00);
    CreateObject(19909, 118.17, 1875.18, 16.85,   0.00, 0.00, 0.00);
    CreateDynamicObject(19313, 121.545074, 1941.527709, 21.691408, 0, 0, 180);
    CreateDynamicObject(19313, 286.008666, 1833.744628, 20.010623, 0, 0, 90);
    
    CreateDynamicObject(1247, 2287.12, 2431.52, 10.82,   0.00, 0.00, 0.00);
    
    CreateDynamicObject(7388, 2336.41, 2336.37, 9.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(2035, 2186.63, 2416.53, 72.49,   0.00, 0.00, 0.00);
    CreateDynamicObject(2297, 2191.10, 2417.38, 72.03,   0.00, 0.00, 225.22);
    
    CreateObject(7657, 2147.46, 2425.3301, 68.53,   0.00, 90.00, 90.00);
    
    CreateDynamicObject(8049, 1677.39063, 843.22662, 3.23560,   0.00000, 3.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(8518, 1877.39063, 843.19531, 3.24440,   0.00000, -5.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(8054, 1795.20776, 843.15253, 0.31130,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.72375, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.72632, 832.12762, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.72803, 830.56683, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.72583, 829.02576, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.72192, 827.46521, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.71851, 825.90442, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.71606, 824.36359, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.71899, 822.96277, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.24292, 824.47009, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.24597, 823.00720, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1928.87305, 823.26746, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.67126, 823.28137, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1928.82605, 824.77014, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.27209, 826.00848, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1928.81824, 826.25134, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.30811, 827.58826, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1928.82983, 827.58075, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1928.81091, 829.15033, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.27234, 829.16882, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.24097, 830.71826, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.27136, 832.33069, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.30176, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1928.81689, 830.62677, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1928.82971, 832.18671, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1928.82263, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.38306, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.38977, 832.17090, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.39722, 830.63055, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.40479, 829.15070, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.38367, 827.56976, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.38220, 825.98822, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.38123, 824.40710, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1922.37915, 822.86163, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1921.96045, 824.43890, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1921.96082, 822.89795, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1921.97937, 825.95923, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1921.97974, 827.50067, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1921.99182, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1921.98193, 832.14105, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1921.99194, 830.56104, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1921.98230, 829.06110, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1918.56409, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1915.16846, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1911.70203, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1908.24792, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1918.74658, 823.14764, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1915.38843, 823.17120, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1912.08032, 823.15869, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1915.31641, 824.56256, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1915.28296, 826.06763, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1918.62866, 826.06879, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1918.76331, 824.74048, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1918.60144, 827.59143, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1918.61157, 829.10278, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1918.62146, 830.61444, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1918.63745, 832.20813, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1915.28699, 827.56006, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1915.29700, 829.07159, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1915.33276, 830.59595, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1915.34900, 832.18976, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1908.67883, 823.11395, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1908.71143, 824.57373, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1908.70520, 826.09430, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1908.75867, 827.61346, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1908.79041, 829.03345, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1908.74426, 830.57477, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1908.71899, 832.13586, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1912.06567, 826.08014, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1911.99304, 824.60138, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1912.11743, 827.49945, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1912.00977, 828.98206, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1912.13806, 830.57825, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1912.08057, 832.16162, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1904.88452, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1901.48169, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1898.03442, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1894.55530, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.07007, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1887.59644, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1884.37097, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1880.93152, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.44421, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1873.94971, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1870.46094, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1866.97339, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.51453, 833.53967, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13855, 833.54681, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.45862, 833.54608, 9.14190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
    CreateDynamicObject(19435, 1825.92029, 833.55017, 8.83990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.18604, 833.54761, 8.55390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.44714, 833.54871, 8.26790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1835.71692, 833.54871, 7.98290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.02478, 833.54712, 7.69290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1842.48499, 833.53802, 7.39290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1845.94226, 833.53821, 7.08290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1849.39563, 833.53851, 6.77990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1852.87024, 833.53857, 6.47290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1856.34485, 833.53821, 6.16990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1859.79761, 833.53839, 5.86790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.04285, 833.53967, 5.58390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1905.27234, 831.98901, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1895.07605, 829.01898, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1895.05347, 830.45905, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1895.09241, 832.03925, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1898.56079, 823.18256, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1898.53967, 824.46252, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1898.53748, 825.88257, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1898.53638, 827.42291, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1898.55505, 828.94244, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1898.51416, 830.48218, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1901.94055, 823.19550, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1905.31982, 823.71045, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1901.92798, 824.60272, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1905.30090, 824.59589, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1901.92468, 826.10889, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1901.91785, 827.57556, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1905.28796, 826.00275, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1905.31409, 827.60699, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1901.94507, 828.97876, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1901.96143, 830.48334, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1901.89819, 831.99536, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1905.35583, 828.94855, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1905.33398, 830.47693, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1898.49231, 832.00256, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.19043, 824.48492, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.15454, 832.04523, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.20557, 830.62488, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.26770, 829.16718, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.27710, 827.53540, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.34485, 826.01013, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1888.27429, 823.32343, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1888.55359, 824.46857, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1888.70679, 825.93134, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1888.21887, 827.46265, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.68201, 822.92578, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.61633, 824.38409, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.68762, 825.92603, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.66052, 827.41235, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1888.03674, 831.96655, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1888.28540, 830.44440, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1888.25159, 828.96350, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.59302, 828.94464, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.70898, 830.52771, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.34802, 831.93658, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1895.08313, 822.92725, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1895.07568, 824.46777, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1895.14722, 825.97845, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1895.05310, 827.57233, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1884.82190, 823.10706, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1881.82178, 823.08435, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.75305, 832.08154, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.82861, 830.54980, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.85071, 829.04626, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.91760, 827.54187, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.91309, 826.02966, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.93640, 824.57062, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.98743, 823.16479, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1867.22681, 823.17700, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1870.50134, 823.17047, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1873.80249, 823.17267, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.20056, 823.10114, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1879.48999, 823.07062, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1867.25598, 824.60791, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1867.30322, 825.98462, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1867.32556, 827.48730, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1867.29285, 828.92853, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1867.20642, 830.35291, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1867.15283, 831.62445, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1867.33545, 832.65863, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1870.48242, 832.10876, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1870.70129, 830.59229, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1870.75891, 829.07025, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1870.77917, 827.47729, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1870.80310, 826.06293, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1870.67444, 824.61633, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1874.15393, 824.56976, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1874.18201, 825.91107, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1874.14343, 827.46844, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1874.12354, 829.06128, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1874.10144, 830.56470, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1873.90857, 832.04510, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.29724, 831.95551, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.41345, 830.67365, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.55286, 829.22119, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.56018, 827.86115, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.55676, 826.39374, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.56775, 825.21265, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.65808, 824.39648, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1882.84094, 827.16949, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1882.77380, 825.76379, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1880.49146, 826.12616, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1882.88525, 824.36804, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1880.06775, 824.62231, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.31812, 828.43994, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1882.69348, 828.46381, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1880.33313, 827.62073, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1880.62268, 828.99762, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1880.62488, 830.51965, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1880.69202, 831.92505, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1882.45593, 831.89642, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1882.48645, 830.53632, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1882.62183, 829.46204, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1892.20593, 832.13104, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.89307, 832.08203, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13855, 832.14612, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13855, 830.66650, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13855, 829.10632, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13855, 827.80688, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13855, 826.44720, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13855, 824.92670, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13855, 823.34631, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.45862, 831.96191, 9.14190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.45862, 830.39728, 9.14190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.45862, 828.83917, 9.14190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.45862, 827.27338, 9.14190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.45862, 824.33179, 9.14190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.45862, 825.79272, 9.14190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.45862, 823.48853, 9.14190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1825.92029, 832.01031, 8.83990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1825.92029, 830.44702, 8.83990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1825.92029, 828.88599, 8.83990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1825.92029, 827.38629, 8.83990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1825.92029, 825.92609, 8.83990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1825.92029, 824.40912, 8.83990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1825.92029, 823.34851, 8.83990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.18604, 831.98932, 8.55390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.18604, 830.42761, 8.55390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.18604, 828.82709, 8.55390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.18604, 827.28552, 8.55390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.18604, 825.74579, 8.55390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.18604, 824.32617, 8.55390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.18604, 823.06299, 8.55390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.40259, 831.98810, 8.26790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.40259, 830.46362, 8.26790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.40259, 828.88037, 8.26790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.40259, 827.43701, 8.26790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.40259, 825.89508, 8.26790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.40259, 824.35309, 8.26790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.40259, 823.38489, 8.26790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1835.71692, 832.04688, 7.98290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1835.71692, 830.48590, 7.98290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1835.71692, 829.02441, 7.98290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1835.71692, 827.50629, 7.98290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1835.71692, 826.08337, 7.98290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1835.71692, 824.56262, 7.98290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1835.71692, 823.46082, 7.98290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.02478, 831.98260, 7.69290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.02478, 830.42047, 7.69290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.02478, 828.86462, 7.69290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.02478, 827.35260, 7.69290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.02478, 825.82428, 7.69290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.02478, 824.55042, 7.69290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.02478, 823.04218, 7.69290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1842.48499, 831.93829, 7.39290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1842.48499, 830.34857, 7.39290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1842.48499, 828.75641, 7.39290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1842.48499, 827.25378, 7.39290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1842.48499, 825.70599, 7.39290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1842.48499, 824.20911, 7.39290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1842.48499, 823.22809, 7.39290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1845.94226, 831.93799, 7.08290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1845.94226, 830.35809, 7.08290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1845.94226, 828.85828, 7.08290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1845.94226, 827.41827, 7.08290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1845.94226, 826.05823, 7.08290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1845.94226, 824.69788, 7.08290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1845.94226, 823.25751, 7.08290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1849.39563, 832.03778, 6.77990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1849.39563, 830.43842, 6.77990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1849.39563, 828.85876, 6.77990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1849.39563, 827.35699, 6.77990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1849.39563, 825.89752, 6.77990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1849.39563, 824.41748, 6.77990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1849.39563, 823.55359, 6.77990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1852.87024, 832.16882, 6.47290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1852.87024, 826.13312, 6.47290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1852.87024, 827.60883, 6.47290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1852.87024, 829.13422, 6.47290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1852.87024, 830.67407, 6.47290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1852.87024, 824.71558, 6.47290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1852.87024, 823.89362, 6.47290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1856.34485, 831.92249, 6.16990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1856.34485, 824.53888, 6.16990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1856.34485, 825.87860, 6.16990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1856.34485, 827.35840, 6.16990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1856.34485, 828.83929, 6.16990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1856.34485, 830.30359, 6.16990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1856.34485, 823.35999, 6.16990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1859.79761, 832.07861, 5.86790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1859.79761, 830.55688, 5.86790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1859.79761, 829.11853, 5.86790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1859.79761, 827.73431, 5.86790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1859.79761, 826.37451, 5.86790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1859.79761, 824.79620, 5.86790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1859.79761, 823.55499, 5.86790,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.04285, 825.98743, 5.58390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.04285, 827.28491, 5.58390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.04285, 828.81262, 5.58390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.04285, 830.37152, 5.58390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.04285, 831.93341, 5.58390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.04285, 823.67719, 5.58390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1863.04285, 824.67493, 5.58390,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1882.49475, 832.55658, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1879.47119, 832.72705, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13635, 853.07751, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13635, 859.15668, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13635, 857.67712, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13635, 856.17688, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13635, 854.65723, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13635, 860.67297, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13635, 862.16339, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1819.13635, 863.64111, 9.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.83569, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.39368, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1929.07190, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.75049, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1922.29761, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1918.81934, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1915.35730, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1911.87708, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1908.43616, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1904.97461, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1901.57251, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1898.25195, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1894.90576, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.52271, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1888.10217, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1884.67542, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1881.29968, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.91089, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1874.49548, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1871.11182, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1867.73413, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1864.34326, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1861.00867, 853.07709, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.60132, 853.07739, 9.13190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1826.06250, 853.07751, 8.83190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.52490, 853.07709, 8.53190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.96680, 853.07660, 8.23190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1836.42798, 853.07391, 7.92990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.86829, 853.07361, 7.62990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1843.31885, 853.07037, 7.32990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1846.78052, 853.06958, 7.02990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1850.25195, 853.06927, 6.73190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1853.69385, 853.06842, 6.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1857.11584, 853.06812, 6.13290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1860.55640, 853.06842, 5.83290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1864.01941, 853.06763, 5.53290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.86462, 854.65979, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.92444, 856.17914, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.86145, 857.54016, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.95935, 858.91907, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.93335, 860.01953, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.88245, 861.49866, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.92334, 862.41980, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1935.88794, 863.17944, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.52954, 863.04816, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.74219, 855.77112, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.55164, 857.20746, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.56165, 858.79999, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.46741, 860.18951, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.42542, 861.62970, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1929.11243, 863.16895, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1928.96643, 861.70764, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1929.09546, 860.28992, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1929.21118, 858.71179, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1929.19812, 857.20178, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1929.29504, 855.72955, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1932.55017, 854.43304, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1929.32019, 854.37897, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.96716, 854.43701, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1922.56165, 854.39105, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1919.16858, 854.44647, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1915.75696, 854.48004, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1926.03735, 855.94666, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1922.60938, 855.93884, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1919.31042, 855.90985, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1919.35535, 857.45471, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1919.47449, 858.96326, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1919.52661, 860.44537, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1919.45972, 861.85071, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1919.40283, 863.39697, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1922.50818, 863.28387, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.72119, 863.29077, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.75464, 861.72900, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.81189, 860.18280, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1922.55310, 860.24725, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1922.67212, 861.75586, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1922.75146, 858.69104, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1922.77686, 857.37677, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1925.98535, 857.41931, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1926.05652, 858.84076, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1912.35791, 854.61206, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1908.97253, 854.62860, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1908.88953, 856.06635, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1912.23535, 856.11078, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1916.41907, 856.06775, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1915.07861, 856.00671, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1916.44141, 857.54602, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1916.22266, 859.02216, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1916.23523, 860.52673, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1916.23975, 861.81598, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1916.19116, 863.28223, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1913.35828, 863.16290, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1913.04724, 861.92224, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1912.95996, 860.49463, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1913.09009, 859.01410, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1913.05713, 857.56238, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1909.59937, 857.42816, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1909.60938, 858.99335, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1909.56714, 860.49792, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1909.64380, 862.01385, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1909.88074, 863.44586, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1905.54529, 854.59674, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1905.53027, 856.05536, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1905.53699, 857.55310, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1907.62305, 857.38641, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1907.44226, 858.66174, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1907.20007, 859.99225, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1905.46570, 859.09503, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1903.94226, 860.50562, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1906.59387, 861.39496, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1906.58044, 862.90332, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1903.23547, 862.99615, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1903.24023, 861.81555, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1902.25610, 859.06030, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1900.58069, 860.38159, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1899.01660, 858.96356, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1899.03308, 857.54352, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1898.99060, 856.02289, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1899.00659, 854.62280, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1902.36755, 854.58093, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1902.25110, 856.01990, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1902.21326, 857.57990, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1900.02368, 861.93530, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1899.88721, 863.37384, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1897.24146, 860.36353, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1896.68481, 861.79718, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1896.44983, 863.11444, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1895.65759, 858.86530, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1895.63586, 857.30487, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1895.57397, 855.86792, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1895.74841, 854.54602, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1892.44446, 854.49219, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1889.04297, 854.52155, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1888.92786, 855.92584, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1888.99438, 857.36469, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1888.89771, 858.70874, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1889.06140, 860.06409, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1889.07153, 861.62476, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1889.17651, 863.02228, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1893.32056, 863.06909, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1893.41479, 861.64551, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1893.81287, 860.33179, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1892.24719, 858.94159, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1892.23901, 857.44080, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1892.23071, 855.93988, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.26746, 860.23364, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.15100, 861.59808, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1891.15784, 863.05890, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.72314, 854.57349, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1861.05493, 854.46564, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1864.21924, 854.54602, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1864.32336, 855.95947, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1862.58301, 855.89612, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1862.63757, 857.50140, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1862.58228, 858.74036, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1866.04565, 857.41125, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1867.66650, 855.84314, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1867.58655, 854.42035, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1865.85901, 858.91333, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1865.87756, 860.39447, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1862.49939, 860.25879, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1862.60730, 861.83551, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1865.95532, 863.35303, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1862.58911, 863.27759, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1865.97192, 861.87091, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1869.16016, 861.94952, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1869.22034, 863.39752, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1869.25586, 860.34241, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1870.90649, 854.61292, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1871.04919, 856.06586, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1869.43774, 857.41858, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1869.26477, 858.87488, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.62805, 856.03333, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1876.25610, 857.46143, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1874.34460, 858.84784, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1874.22095, 855.94867, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1874.18359, 854.51764, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1872.45361, 861.60443, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1871.39136, 860.19916, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1871.03748, 858.76764, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1872.77014, 857.33411, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.62805, 856.03333, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.62805, 856.03333, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.61011, 854.60199, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1880.94275, 854.46143, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1883.03870, 854.57428, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1881.07434, 855.97925, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1879.69189, 857.50439, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1877.79712, 858.97961, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1874.82458, 860.21558, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1872.48035, 863.14868, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1875.94116, 863.24982, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1875.81238, 861.69067, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1878.02490, 860.31885, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1879.17261, 861.71252, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1881.28503, 860.22058, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1881.19592, 858.78296, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1884.37915, 858.75116, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1886.25464, 858.75269, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1886.12061, 860.20825, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1884.05554, 860.19482, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1882.56934, 861.68713, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1879.30359, 863.25964, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1882.61658, 863.28021, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.95166, 863.24506, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.87415, 861.72534, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1882.97131, 857.29285, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.85974, 857.45361, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1885.75757, 856.02832, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1883.05664, 855.89081, 5.64790,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1860.55640, 854.50812, 5.83290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1860.55640, 855.80737, 5.83290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1860.55640, 857.21002, 5.83290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1860.55640, 858.62982, 5.83290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1860.55640, 860.05121, 5.83290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1860.55640, 861.57123, 5.83290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1860.55640, 863.05109, 5.83290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1860.55640, 863.81122, 5.83290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1857.11584, 863.55219, 6.13290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1857.11584, 862.01282, 6.13290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1857.11584, 860.53052, 6.13290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1857.11584, 859.14661, 6.13290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1857.11584, 857.65381, 6.13290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1857.11584, 856.08911, 6.13290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1857.11584, 854.54523, 6.13290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.60132, 854.57953, 9.13190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.60132, 856.18579, 9.13190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.60132, 857.70941, 9.13190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.60132, 859.18799, 9.13190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.60132, 860.62659, 9.13190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.60132, 862.20947, 9.13190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1822.60132, 863.64691, 9.13190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1826.06250, 854.57721, 8.83190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1826.06250, 856.07727, 8.83190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1826.06250, 857.49847, 8.83190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1826.06250, 858.98022, 8.83190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1826.06250, 860.47937, 8.83190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1826.06250, 862.09692, 8.83190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1826.06250, 863.47931, 8.83190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.52490, 854.67719, 8.53190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.52490, 856.15698, 8.53190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.52490, 857.69739, 8.53190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.52490, 859.15759, 8.53190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.52490, 860.49738, 8.53190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.52490, 861.93732, 8.53190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1829.52490, 863.31738, 8.53190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.96680, 854.57678, 8.23190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.96680, 856.07672, 8.23190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.96680, 857.63672, 8.23190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.96680, 859.07678, 8.23190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.96680, 860.53699, 8.23190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.96680, 862.09680, 8.23190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1832.96680, 863.43689, 8.23190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1836.42798, 854.50262, 7.92990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1836.42798, 855.98328, 7.92990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1836.42798, 857.41602, 7.92990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1836.42798, 858.89020, 7.92990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1836.42798, 860.41492, 7.92990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1836.42798, 861.97949, 7.92990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1836.42798, 863.50421, 7.92990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.86829, 854.57422, 7.62990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.86829, 856.03271, 7.62990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.86829, 857.46942, 7.62990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.86829, 858.83441, 7.62990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.86829, 860.31378, 7.62990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.86829, 861.71149, 7.62990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1839.86829, 863.17480, 7.62990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1843.31885, 854.58942, 7.32990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1843.31885, 856.08978, 7.32990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1843.31885, 857.46948, 7.32990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1843.31885, 858.90948, 7.32990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1843.31885, 860.24921, 7.32990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1843.31885, 861.75031, 7.32990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1843.31885, 863.19012, 7.32990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1846.78052, 854.48932, 7.02990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1846.78052, 856.08948, 7.02990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1846.78052, 857.53088, 7.02990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1846.78052, 858.94800, 7.02990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1846.78052, 860.43170, 7.02990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1846.78052, 861.81201, 7.02990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1846.78052, 863.29279, 7.02990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1850.25195, 854.56592, 6.73190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1850.25195, 856.00623, 6.73190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1850.25195, 857.56982, 6.73190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1850.25195, 858.95038, 6.73190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1850.25195, 860.30823, 6.73190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1850.25195, 861.48999, 6.73190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1850.25195, 862.83038, 6.73190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1850.25195, 863.45282, 6.73190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1853.69385, 854.42810, 6.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1853.69385, 855.77002, 6.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1853.69385, 857.20502, 6.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1853.69385, 858.43219, 6.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1853.69385, 859.79468, 6.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1853.69385, 861.07318, 6.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1853.69385, 862.43433, 6.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1853.69385, 863.49127, 6.43190,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	//CreateDynamicObject(0, 1932.24512, 858.30768, 4.97000,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1822.02783, 852.28632, 7.53150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1821.72778, 852.28632, 4.13150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1821.42786, 852.28632, 0.75150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1831.56091, 852.28632, 6.69150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1831.26086, 852.28632, 3.27150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1830.98096, 852.28632, -0.16850,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1841.10535, 852.28632, 5.89150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1840.82532, 852.28632, 2.45150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1840.52527, 852.28632, -0.93150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1850.62903, 852.28632, 5.05150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1850.32898, 852.28632, 1.61150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1859.99231, 852.28632, 4.25150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1859.69226, 852.28632, 0.77150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1867.18835, 852.28632, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1876.76807, 852.28632, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1886.18896, 852.28632, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1895.63538, 852.28632, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1905.07996, 852.28632, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1914.56238, 852.28632, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1924.06531, 852.28632, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1933.46777, 852.28632, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1867.18835, 852.28632, 0.71150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1876.76807, 852.28632, 1.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1842.48499, 831.09747, 7.39290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1845.94226, 831.35681, 7.08290,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1856.33545, 831.44263, 6.16990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19435, 1856.27771, 833.15942, 6.16990,   0.00000, 95.00000, 0.00000, .streamdistance=1000.00);
	//CreateDynamicObject(0, 1822.50122, 828.26892, 8.47400,   0.00000, 5.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1934.20557, 834.32654, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1924.65906, 834.32648, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1915.13696, 834.32648, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1905.63440, 834.32648, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1896.11121, 834.32648, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1886.56897, 834.32648, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1877.04712, 834.32648, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1867.56226, 834.32648, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1858.09790, 834.32648, 4.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1877.04712, 834.32648, 1.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1867.56226, 834.32648, 1.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1858.09790, 834.32648, 1.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1821.95251, 834.32648, 7.53150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1831.43652, 834.32648, 6.71150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1841.00195, 834.32648, 5.89150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1850.53870, 834.32648, 5.05150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1860.08057, 834.32648, 4.23150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1850.23865, 834.32648, 1.59150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1840.70203, 834.32648, 2.47150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1831.13647, 834.32648, 3.29150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1821.65247, 834.32648, 4.13150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1840.42200, 834.32648, -0.77150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1830.83655, 834.32648, -0.08850,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1821.35254, 834.32648, 0.69150,   5.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1772.64465, 832.49951, 9.24950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1772.64465, 829.14539, 9.24950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1772.64465, 825.76178, 9.24950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1772.64465, 822.29669, 9.24950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1763.09961, 832.49951, 8.58950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1753.55835, 832.49951, 7.90950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1744.12512, 832.49951, 7.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1734.76782, 832.49951, 6.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1725.26794, 832.49951, 5.95900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1715.70386, 832.49951, 5.29900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1706.18237, 832.49951, 4.61900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1696.66040, 832.49951, 3.93900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1687.13879, 832.49951, 3.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1677.75842, 832.49951, 2.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1668.24426, 832.49951, 1.99900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.00964, 832.49951, 1.31900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.75012, 832.49951, 1.45900,   0.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.38806, 829.20386, 1.45900,   0.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.38379, 825.76367, 1.45900,   0.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.35144, 823.24371, 1.45900,   0.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1668.24426, 829.17932, 1.99900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1668.24426, 825.79413, 1.99900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1668.24426, 822.57452, 1.99900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.00964, 826.15112, 1.31900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.00964, 829.22388, 1.31900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.00964, 823.31879, 1.31900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1677.75842, 829.07892, 2.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1677.75842, 825.75879, 2.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1677.75842, 822.47858, 2.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1687.13879, 829.15350, 3.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1687.13879, 825.90747, 3.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1687.13879, 822.58582, 3.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1696.66040, 829.12439, 3.93900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1696.66040, 825.92828, 3.93900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1696.66040, 822.73431, 3.93900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1706.18237, 829.18213, 4.61900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1706.18237, 825.94153, 4.61900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1706.18237, 822.76788, 4.61900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1763.09961, 829.13757, 8.58950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1763.09961, 825.75513, 8.58950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1763.09961, 822.77478, 8.58950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1753.55835, 829.49683, 7.90950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1753.55835, 826.13599, 7.90950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1753.55835, 822.99530, 7.90950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1744.12512, 829.19592, 7.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1744.12512, 826.01099, 7.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1744.12512, 823.05017, 7.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1734.76782, 829.10931, 6.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1734.76782, 826.33331, 6.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1734.76782, 822.99792, 6.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1725.26794, 829.46448, 5.95900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1725.26794, 826.43817, 5.95900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1725.26794, 823.92792, 5.95900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1715.70386, 823.39221, 5.29900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1715.70386, 826.12579, 5.29900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1715.70386, 829.23657, 5.29900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1772.77539, 834.32648, 7.61810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1773.01538, 834.32648, 4.17810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1773.23535, 834.32648, 0.75810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1763.27539, 834.32648, 6.95810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1763.51538, 834.32648, 3.51810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1763.75537, 834.32648, 0.13810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1753.69543, 834.32648, 6.27810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1753.93542, 834.32648, 2.85810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1754.17542, 834.32648, -0.57810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1744.21545, 834.32648, 5.63810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1744.45544, 834.32648, 2.19810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1744.69543, 834.32648, -1.21810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1734.71545, 834.32648, 4.99810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1734.95544, 834.32648, 1.55810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1735.17542, 834.32648, -1.69810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1725.19556, 834.32648, 4.33810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1725.43555, 834.32648, 0.89810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1715.71558, 834.32648, 3.67810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1715.95544, 834.32648, 0.29810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1706.23560, 834.32648, 3.01810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1706.45557, 834.32648, -0.26190,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1696.73560, 834.32648, 2.35810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1696.97559, 834.32648, -1.01810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1687.21558, 834.32648, 1.69810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1677.71558, 834.32648, 1.03810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1668.17566, 834.32648, 0.37810,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1659.31567, 834.32648, 0.09810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1782.15540, 834.32648, 7.91810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1782.15540, 834.32648, 4.47810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1782.15540, 834.32648, 1.05810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1791.73535, 834.32648, 7.91810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1791.73535, 834.32648, 1.05810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1791.73535, 834.32648, 4.49810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1801.27539, 834.32648, 7.91810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1801.27539, 834.32648, 1.03810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1801.27539, 834.32648, 4.45810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1810.81543, 834.32648, 7.91810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1810.81543, 834.32648, 1.05810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1810.81543, 834.32648, 4.47810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1812.73535, 834.32648, 7.91810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1812.73535, 834.32648, 1.07810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1812.73535, 834.32648, 4.49810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1772.65222, 854.06024, 9.24950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1763.09961, 854.06018, 8.58950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1753.55835, 854.06018, 7.90950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1744.12512, 854.06018, 7.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1734.76782, 854.06018, 6.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1725.26794, 854.06018, 5.95900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1715.70386, 854.06018, 5.29900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1706.18237, 854.06018, 4.61900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1696.66040, 854.06018, 3.93900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1687.13879, 854.06018, 3.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1677.75842, 854.06018, 2.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1668.24426, 854.06018, 1.99900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.75012, 854.06018, 1.45900,   0.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.00964, 854.06018, 1.31900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1772.65222, 857.54181, 9.24950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1772.65222, 861.02173, 9.24950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1772.65222, 862.98187, 9.24950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1763.09961, 857.05682, 8.58950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1763.09961, 860.16211, 8.58950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1763.09961, 862.94537, 8.58950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1753.55835, 857.42938, 7.90950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1753.55835, 860.55890, 7.90950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1753.55835, 863.68298, 7.90950,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1744.12512, 857.36609, 7.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1744.12512, 860.33008, 7.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1744.12512, 863.45520, 7.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1734.76782, 857.35132, 6.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1734.76782, 860.12311, 6.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1734.76782, 863.43250, 6.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1725.26794, 857.18109, 5.95900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1725.26794, 860.38428, 5.95900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1725.26794, 863.02179, 5.95900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1715.70386, 863.64282, 5.29900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1715.70386, 860.28278, 5.29900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1715.70386, 857.12048, 5.29900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1706.18237, 863.82202, 4.61900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1706.18237, 860.50671, 4.61900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1706.18237, 857.22748, 4.61900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1696.66040, 863.56207, 3.93900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1696.66040, 860.28278, 3.93900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1696.66040, 857.09918, 3.93900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1687.13879, 863.76160, 3.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1687.13879, 860.78021, 3.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1687.13879, 857.50702, 3.27900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1677.75842, 863.20062, 2.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1677.75842, 860.32013, 2.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1677.75842, 857.12061, 2.63900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1668.24426, 863.03967, 1.99900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1668.24426, 860.48029, 1.99900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1668.24426, 857.38019, 1.99900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.00964, 863.06512, 1.31900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.00964, 860.54999, 1.31900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.00964, 857.31512, 1.31900,   -4.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.75012, 861.99750, 1.45900,   0.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.75012, 860.63623, 1.45900,   0.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19454, 1659.75012, 857.34332, 1.45900,   0.00000, 90.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1772.75940, 852.28632, 7.61150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1763.21936, 852.28632, 6.95150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1753.73938, 852.28632, 6.29150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1744.23938, 852.28632, 5.63150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1734.71936, 852.28632, 4.97150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1725.19934, 852.28632, 4.31150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1715.69934, 852.28632, 3.65150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1706.19934, 852.28632, 2.99150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1696.65930, 852.28632, 2.33150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1687.17932, 852.28632, 1.67150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1677.67932, 852.28632, 1.01150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1668.19934, 852.28632, 0.35150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1659.35925, 852.28632, 0.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1696.87927, 852.28632, -1.05150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1706.43933, 852.28632, -0.41150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1715.93945, 852.28632, 0.22850,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1725.43933, 852.28632, 0.87150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1734.95935, 852.28632, 1.57150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1744.47937, 852.28632, 2.27150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1753.97937, 852.28632, 2.91150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1763.45935, 852.28632, 3.49150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1772.99939, 852.28632, 4.13150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1773.23938, 852.28632, 0.71150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1763.69934, 852.28632, 0.17150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1754.21936, 852.28632, -0.47150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1735.17944, 852.28632, -1.75150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1744.71936, 852.28632, -1.13150,   -4.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1781.97156, 852.28632, 7.91150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1781.97156, 852.28632, 4.49150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1781.97156, 852.28632, 1.03150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1791.49158, 852.28632, 7.91150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1791.49158, 852.28632, 4.45150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1791.49158, 852.28632, 0.99150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1801.09155, 852.28632, 7.91150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1801.09155, 852.28632, 4.47150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1801.09155, 852.28632, 1.05150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1810.59155, 852.28632, 7.91150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1810.59155, 852.28632, 1.05150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1810.59155, 852.28632, 4.47150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1812.87158, 852.28632, 7.91150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1812.87158, 852.28632, 4.47150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1812.87158, 852.28632, 1.05150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(8650, 1777.47498, 843.11981, 8.52670,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(8650, 1817.67798, 843.33112, 8.48670,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1816.19727, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1816.18689, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1809.49146, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1812.85217, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1799.37390, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1802.64380, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1806.08582, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1789.27209, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1792.64014, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1796.01221, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1785.94080, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1782.59741, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1779.27319, 847.64178, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1812.82324, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1809.43945, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1806.12073, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1802.83179, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1792.88489, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1796.23755, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1799.73523, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1789.61780, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1786.16968, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1782.79309, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19463, 1779.41040, 838.18958, 7.65560,   0.00000, 90.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(3578, 1635.51465, 843.10809, 2.84320,   0.00000, 3.00000, 0.00000, .streamdistance=1000.00);
	//CreateDynamicObject(0, 1625.27380, 843.12091, 3.38010,   0.00000, 3.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(3578, 1599.17871, 843.09741, 4.74710,   0.00000, 3.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(3578, 1609.42358, 843.08478, 4.21000,   0.00000, 3.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(3578, 1617.44617, 843.09778, 3.79000,   0.00000, 3.00000, 0.50000, .streamdistance=1000.00);
	CreateDynamicObject(8292, 1817.97144, 843.33807, 9.48990,   0.00000, 0.00000, 325.17999, .streamdistance=1000.00);
	CreateDynamicObject(7901, 1777.32678, 843.24011, 10.06500,   0.00000, 0.00000, 270.00000, .streamdistance=1000.00);
	CreateDynamicObject(7901, 1777.30676, 843.24011, 10.06500,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1764.52002, 852.28656, 9.46060,   0.00000, -4.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1738.99243, 852.28333, 7.68060,   0.00000, -4.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1713.45911, 852.26923, 5.90060,   0.00000, -4.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1687.91528, 852.26642, 4.12060,   0.00000, -4.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1662.38977, 852.25079, 2.34060,   0.00000, -4.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1764.41003, 834.35303, 9.48060,   0.00000, -4.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1738.88232, 834.35657, 7.72060,   0.00000, -4.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1713.36719, 834.37756, 5.92060,   0.00000, -4.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1687.82202, 834.38098, 4.12060,   0.00000, -4.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1662.30383, 834.36096, 2.34060,   0.00000, -4.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1830.38379, 852.23682, 9.22060,   0.00000, 5.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1855.85767, 852.23969, 6.96060,   0.00000, 5.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1875.07141, 852.26660, 6.38060,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1900.68591, 852.26843, 6.38060,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1926.27014, 852.28375, 6.38060,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1830.36731, 834.32324, 9.12060,   0.00000, 5.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1855.85962, 834.30011, 6.90060,   0.00000, 5.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1873.48975, 834.33899, 6.38060,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1899.11023, 834.31952, 6.38060,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1652, 1924.67114, 834.32092, 6.38060,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(3578, 1626.89148, 843.14789, 3.30320,   0.00000, 3.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1796.97717, 834.49872, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1805.97949, 843.21088, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1797.70007, 852.36829, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1788.29175, 843.10297, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1791.73938, 849.58411, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1804.09131, 849.66052, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1803.70874, 836.80103, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1790.80322, 836.87213, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1789.01343, 839.62012, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1789.70947, 846.60144, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1794.72925, 851.27509, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1801.12671, 851.72784, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1805.21436, 846.75885, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1805.39587, 839.87067, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1800.84937, 834.97913, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(1237, 1793.74402, 835.15466, 9.59710,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1803.97070, 840.59357, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1804.05945, 843.24835, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1799.71289, 842.93005, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1801.50842, 842.22437, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1802.05444, 845.12640, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1804.09387, 845.61255, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1802.88086, 847.80206, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1800.65662, 849.60016, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1797.68384, 850.28070, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1798.14575, 847.12988, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1800.20166, 846.65094, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1798.64026, 844.20990, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1796.00281, 844.67004, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1794.79761, 847.18744, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1794.79028, 849.40521, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1792.21594, 847.39734, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1790.44617, 843.96735, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1793.17395, 844.12823, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1794.68518, 841.67157, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1792.17505, 841.33453, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1790.33716, 841.09729, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1791.59277, 838.64203, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1793.84839, 838.69617, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1793.96069, 837.49927, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1796.04443, 837.02307, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1798.16638, 836.59381, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1800.41968, 837.47266, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1801.99634, 838.56421, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1801.18555, 840.04254, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1799.53210, 839.81042, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1797.54163, 839.54254, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1798.26770, 841.55365, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1796.45544, 840.80682, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(647, 1796.91846, 842.74731, 9.66604,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(617, 1792.47681, 845.59424, 9.63170,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(617, 1798.49011, 841.66766, 9.63170,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(617, 1798.40869, 846.67297, 9.63170,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(617, 1802.24133, 844.00818, 9.63170,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(617, 1802.38574, 839.72247, 9.63170,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(617, 1797.79004, 838.00061, 9.63170,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(617, 1794.39966, 837.41541, 9.63170,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(617, 1790.41162, 842.68762, 9.63170,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1931.97498, 823.26459, 4.67150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1912.95020, 823.26459, 5.35150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1922.44666, 823.26459, 5.01150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1884.39246, 823.26459, 6.37150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1893.84998, 823.26459, 6.03150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1903.37012, 823.26459, 5.69150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1865.32617, 823.26459, 7.03150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1874.84998, 823.26459, 6.71150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1855.84656, 823.26459, 7.37150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1827.60291, 823.26459, 8.23150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1836.95862, 823.26459, 8.05150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1846.40222, 823.26459, 7.71150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1821.38196, 823.26459, 8.23150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(3578, 1817.34399, 828.35059, 8.83420,   20.00000, 2.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(3578, 1817.30872, 858.11499, 8.83420,   20.00000, -2.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1822.13892, 863.23077, 8.23150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1831.68372, 863.23077, 8.23150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1841.14539, 863.23077, 8.07150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1850.62158, 863.23077, 7.73150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1860.23303, 863.23077, 7.39150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1869.75476, 863.23077, 7.05150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1879.29858, 863.23077, 6.71150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1888.85962, 863.23077, 6.37150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1898.38782, 863.23077, 6.03150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1907.97253, 863.23077, 5.69150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1917.53479, 863.23077, 5.35150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1927.03625, 863.23077, 5.01150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1933.21265, 863.25079, 4.79150,   2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1772.85315, 863.18054, 8.23150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1763.38538, 863.18048, 8.23150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1753.83289, 863.18048, 8.23150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1744.36108, 863.18048, 8.23150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1734.96912, 863.18048, 8.23150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1725.45593, 863.18048, 8.23150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1715.92786, 863.18048, 8.23150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1706.45569, 863.18048, 8.05150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1696.94397, 863.18048, 7.71150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1734.96912, 863.18048, 4.77150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1725.45593, 863.18048, 4.77150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1715.92786, 863.18048, 4.77150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1706.57568, 863.18048, 4.57150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1697.06396, 863.18048, 4.27150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1687.42200, 863.18048, 7.39150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1677.85413, 863.18048, 7.07150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1668.33374, 863.18048, 6.75150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1658.80701, 863.18048, 6.43150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1649.33069, 863.18048, 6.11150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1639.88525, 863.18048, 5.79150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1630.33667, 863.18048, 5.47150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1620.91650, 863.18048, 5.15150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1611.49573, 863.18048, 4.83150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1601.99634, 863.18048, 4.51150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1592.55566, 863.18048, 4.35150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1583.15503, 863.18048, 4.35150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1582.01208, 863.20050, 4.35150,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1621.03650, 863.18048, 1.79150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1630.45667, 863.18048, 2.09150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1640.00525, 863.18048, 2.35150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1658.92700, 863.18048, 3.07150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1649.45068, 863.18048, 2.71150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1677.97412, 863.18048, 3.69150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1668.45374, 863.18048, 3.33150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1687.54199, 863.18048, 3.95150,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1772.71741, 823.27087, 7.95810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1763.15881, 823.27087, 7.95810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1753.68628, 823.27087, 7.95810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1744.21497, 823.27087, 7.95810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1734.72424, 823.27087, 7.95810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1725.25793, 823.27087, 7.95810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1715.86804, 823.27087, 7.95810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(1540, 1717.44446, 849.73938, 12.55470,   0.00000, 0.00000, 0.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1706.39905, 823.27087, 7.95810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1696.80273, 823.27087, 7.95810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1687.26306, 823.27087, 7.77810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1677.70264, 823.27087, 7.43810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1668.22595, 823.27087, 7.09810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1658.76135, 823.27087, 6.75810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1649.30725, 823.27087, 6.41810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1639.89233, 823.27087, 6.07810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1630.41260, 823.27087, 5.73810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1620.97217, 823.27087, 5.39810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1611.50854, 823.27087, 5.05810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1602.06873, 823.27087, 4.71810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1592.56775, 823.27087, 4.37810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1583.00806, 823.27087, 4.21810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1582.02759, 823.25092, 4.19810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(3578, 1777.48608, 858.15851, 8.84720,   -20.00000, -1.75000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1725.25793, 823.27087, 4.61810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1715.86804, 823.27087, 4.61810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1696.80273, 823.27087, 4.61810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1706.39905, 823.27087, 4.61810,   0.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1687.38306, 823.27087, 4.41810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1677.82263, 823.27087, 4.07810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1668.34595, 823.27087, 3.65810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1658.88135, 823.27087, 3.35810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1659.00134, 823.27087, -0.02190,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1640.01233, 823.27087, 2.67810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1649.42725, 823.27087, 2.99810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1621.09216, 823.27087, 2.05810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	CreateDynamicObject(19452, 1630.53259, 823.27087, 2.35810,   -2.00000, 0.00000, 90.00000, .streamdistance=1000.00);
	
	CreatePickup(10145,1, -1951.75781, 659.28906, 82.87500,   -1);

    objectcreation();
    
    kenararmy();
	////-------------// my objects //

    CreateCheckpoint(GLOBAL_OWNER_ID, NVPD_BASE_BOTT_CP, 2268.0991,2449.2891,-7.1953, 1.0);
	SetCheckpointInterior(NVPD_BASE_BOTT_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, NVPD_BASE_TOP_CP, 2268.0745,2449.2795,3.5313, 1.0);
	SetCheckpointInterior(NVPD_BASE_BOTT_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, NVPD_ENT_1_CP, 2287.0400,2432.3660,10.8203, 1.0);
	SetCheckpointInterior(NVPD_BASE_BOTT_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, NVPD_ENT_2_CP, 2337.1648,2459.3130,14.9742, 1.0);
	SetCheckpointInterior(NVPD_BASE_BOTT_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, NVPD_TOP_CPARK_CP, 2297.1174,2451.5051,10.8203, 1.0);
	SetCheckpointInterior(NVPD_BASE_BOTT_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, NVPD_ROOF_CP, 2296.0713,2458.1235,38.6875, 1.0);
	SetCheckpointInterior(NVPD_ROOF_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, NV_BANK_CP, 2270.9761,2293.8179,10.8203, 1.0);
	SetCheckpointInterior(NV_BANK_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, ISLE_CP, 2127.5869,2379.6211,10.8203, 1.0);
	SetCheckpointInterior(ISLE_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, VEGAS_CP, 2016.9768,1916.4065,12.3424, 1.0);
	SetCheckpointInterior(VEGAS_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CALG_CP, 2196.9570,1677.1637,12.3672, 1.0);
	SetCheckpointInterior(CALG_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, DRAG_CP, 2019.3196,1007.7487,10.8203, 1.0);
	SetCheckpointInterior(DRAG_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU1_CP, 2159.5405,943.1776,10.8203, 1.0);
	SetCheckpointInterior(AMMU1_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU6_CP, 2319.3486,2391.8047,10.8203, 1.0);
	SetCheckpointInterior(AMMU1_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURGER1_CP, 2367.0552,2071.0693,10.8203, 1.0);
	SetCheckpointInterior(BURGER1_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CLUCK1_CP, 2393.2737,2041.5657,10.8203, 1.0);
	SetCheckpointInterior(CLUCK1_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURGER2_CP, 2472.8655,2034.1702,11.0625, 1.0);
	SetCheckpointInterior(BURGER2_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, SHOP_24_1_CP, 2452.5308,2065.1902,10.8203, 1.0);
	SetCheckpointInterior(SHOP_24_1_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, SHOP_24_2_CP, 2546.5271,1972.6571,10.8203, 1.0);
	SetCheckpointInterior(SHOP_24_2_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, SHOP_24_3_CP, 2194.9390,1990.9948,12.2969, 1.0);
	SetCheckpointInterior(SHOP_24_3_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CITYHALL_CP, 2412.5039,1123.8190,10.8203, 1.0);
	SetCheckpointInterior(CITYHALL_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, SHOP_24_4_CP, 2247.6702,2396.1687,10.8203, 1.0);
	SetCheckpointInterior(SHOP_24_4_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, REDSANDS_CP, 1658.4960,2250.0437,11.0701, 1.0);
	SetCheckpointInterior(REDSANDS_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURGER3_CP, 1157.9246,2072.2874,11.0625, 1.0);
	SetCheckpointInterior(BURGER3_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU2_CP, 776.7208,1871.4360,4.9068, 1.0);
	SetCheckpointInterior(AMMU2_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CLUCK2_CP, 173.0402,1177.1461,14.7578, 1.0);
	SetCheckpointInterior(CLUCK2_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CLUCK3_CP, -1213.8292,1830.3749,41.9297, 1.0);
	SetCheckpointInterior(CLUCK3_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU3_CP, -316.1609,829.8887,14.2422, 1.0);
	SetCheckpointInterior(AMMU3_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU4_CP, -1508.8851,2610.7004,55.8359, 1.0);
	SetCheckpointInterior(AMMU4_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU5_CP, 2556.9512,2065.3730,11.0995, 1.0);
	SetCheckpointInterior(AMMU5_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURGER4_CP, 2169.4143,2795.9263,10.8203, 1.0);
	SetCheckpointInterior(BURGER4_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURGER5_CP, 1872.2554,2071.8850,11.0625, 1.0);
	SetCheckpointInterior(BURGER5_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, ELQ_BANK_CP, -1457.9816,2589.9771,55.9957, 1.0);
	SetCheckpointInterior(ELQ_BANK_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, FORT_BANK_CP, -179.1975,1133.1324,19.7422, 1.0);
	SetCheckpointInterior(FORT_BANK_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, BARA_BANK_CP, -828.1474,1504.5988,19.8529, 1.0);
	SetCheckpointInterior(BARA_BANK_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, PIZZA_CP, 2351.8555,2533.6199,10.8203, 1.0);
	SetCheckpointInterior(PIZZA_CP, 0);
    CreateCheckpoint(GLOBAL_OWNER_ID, NV_BANK_ROB, 2316.6169,-7.3947,26.7422, 1.0);
	SetCheckpointInterior(NV_BANK_ROB, 0);
	SetCheckpointVirtualWorld(NV_BANK_ROB, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, NVPD_ROB, 230.0261,165.0891,1003.0234, 1.0);
	SetCheckpointInterior(NVPD_ROB, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, ISLE_ROB, 1139.7198,-4.0644,1000.6719, 1.0);
	SetCheckpointInterior(ISLE_ROB, 12);
	SetCheckpointVirtualWorld(ISLE_ROB, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, VEGAS_ROB, 1139.7198,-4.0644,1000.6719, 1.0);
	SetCheckpointInterior(VEGAS_ROB, 12);
	SetCheckpointVirtualWorld(VEGAS_ROB, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, REDSANDS_ROB, 1139.7198,-4.0644,1000.6719, 1.0);
	SetCheckpointInterior(REDSANDS_ROB, 12);
	SetCheckpointVirtualWorld(REDSANDS_ROB, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, CALG_ROB, 2156.6917,1599.5377,1006.1797, 1.0);
	SetCheckpointInterior(CALG_ROB, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, DRAG_ROB, 1955.3691,1018.0455,992.4688, 1.0);
	SetCheckpointInterior(DRAG_ROB, 10);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU1_ROB, 295.5833,-80.8050,1001.5156, 1.0);
	SetCheckpointInterior(AMMU1_ROB, 4);
	SetCheckpointVirtualWorld(AMMU1_ROB, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU2_ROB, 295.5833,-80.8050,1001.5156, 1.0);
	SetCheckpointInterior(AMMU2_ROB, 4);
	SetCheckpointVirtualWorld(AMMU2_ROB, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU3_ROB, 295.5833,-80.8050,1001.5156, 1.0);
	SetCheckpointInterior(AMMU3_ROB, 4);
	SetCheckpointVirtualWorld(AMMU3_ROB, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU4_ROB, 295.5833,-80.8050,1001.5156, 1.0);
	SetCheckpointInterior(AMMU4_ROB, 4);
	SetCheckpointVirtualWorld(AMMU4_ROB, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU5_ROB, 295.5833,-80.8050,1001.5156, 1.0);
	SetCheckpointInterior(AMMU5_ROB, 4);
	SetCheckpointVirtualWorld(AMMU5_ROB, 5);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU6_ROB, 295.5833,-80.8050,1001.5156, 1.0);
	SetCheckpointInterior(AMMU6_ROB, 4);
	SetCheckpointVirtualWorld(AMMU6_ROB, 6);
	CreateCheckpoint(GLOBAL_OWNER_ID, CITYHALL_ROB, 361.8299,173.7282,1008.3828, 1.0);
	SetCheckpointInterior(CITYHALL_ROB, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURG1_ROB, 376.5498,-67.4389,1001.5078, 1.0);
	SetCheckpointInterior(BURG1_ROB, 10);
	SetCheckpointVirtualWorld(BURG1_ROB, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURG2_ROB, 376.5498,-67.4389,1001.5078, 1.0);
	SetCheckpointInterior(BURG2_ROB, 10);
	SetCheckpointVirtualWorld(BURG2_ROB, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURG3_ROB, 376.5498,-67.4389,1001.5078, 1.0);
	SetCheckpointInterior(BURG3_ROB, 10);
	SetCheckpointVirtualWorld(BURG3_ROB, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, CLUCK1_ROB, 371.5888,-6.0188,1001.8589, 1.0);
	SetCheckpointInterior(CLUCK1_ROB, 9);
	SetCheckpointVirtualWorld(CLUCK1_ROB, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, CLUCK2_ROB, 371.5888,-6.0188,1001.8589, 1.0);
	SetCheckpointInterior(CLUCK2_ROB, 9);
	SetCheckpointVirtualWorld(CLUCK2_ROB, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, CLUCK3_ROB, 371.5888,-6.0188,1001.8589, 1.0);
	SetCheckpointInterior(CLUCK3_ROB, 9);
	SetCheckpointVirtualWorld(CLUCK3_ROB, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURG4_ROB, 376.5498,-67.4389,1001.5078, 1.0);
	SetCheckpointInterior(BURG4_ROB, 10);
	SetCheckpointVirtualWorld(BURG4_ROB, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURG5_ROB, 376.5498,-67.4389,1001.5078, 1.0);
	SetCheckpointInterior(BURG5_ROB, 10);
	SetCheckpointVirtualWorld(BURG5_ROB, 5);
	CreateCheckpoint(GLOBAL_OWNER_ID, ROB_24_1, -10.6035,-178.2635,1003.5469, 1.0);
	SetCheckpointInterior(ROB_24_1, 17);
	SetCheckpointVirtualWorld(ROB_24_1, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, ROB_24_2, -10.6035,-178.2635,1003.5469, 1.0);
	SetCheckpointInterior(ROB_24_2, 17);
	SetCheckpointVirtualWorld(ROB_24_2, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, ROB_24_3, -10.6035,-178.2635,1003.5469, 1.0);
	SetCheckpointInterior(ROB_24_3, 17);
	SetCheckpointVirtualWorld(ROB_24_3, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, ROB_24_4, -10.6035,-178.2635,1003.5469, 1.0);
	SetCheckpointInterior(ROB_24_4, 17);
	SetCheckpointVirtualWorld(ROB_24_4, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, ELQ_BANK_ROB, 2316.6169,-7.3947,26.7422, 1.0);
	SetCheckpointInterior(ELQ_BANK_ROB, 0);
	SetCheckpointVirtualWorld(ELQ_BANK_ROB, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, FORT_BANK_ROB, 2316.6169,-7.3947,26.7422, 1.0);
	SetCheckpointInterior(FORT_BANK_ROB, 0);
	SetCheckpointVirtualWorld(FORT_BANK_ROB, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, BARA_BANK_ROB, 2316.6169,-7.3947,26.7422, 1.0);
	SetCheckpointInterior(BARA_BANK_ROB, 0);
	SetCheckpointVirtualWorld(BARA_BANK_ROB, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, PIZZA_ROB, 374.7570,-118.8264,1001.4995, 1.0);
	SetCheckpointInterior(PIZZA_ROB, 5);
	CreateCheckpoint(GLOBAL_OWNER_ID, NVPD_ELEV_CP, 196.6970,168.1543,1003.1533, 1.0);
	SetCheckpointInterior(NVPD_ELEV_CP, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, NVPD_EXT_1_CP, 288.8626,166.9246,1007.1719, 1.0);
	SetCheckpointInterior(NVPD_EXT_1_CP, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, NVPD_EXT_2_CP, 238.6626,138.6895,1003.0234, 1.0);
	SetCheckpointInterior(NVPD_EXT_2_CP, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, BANK_EXIT1_CP, 2304.6882,-16.0945,26.7422, 1.0);
	SetCheckpointInterior(BANK_EXIT1_CP, 0);
	SetCheckpointVirtualWorld(BANK_EXIT1_CP, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, BANK_EXIT2_CP, 2304.6882,-16.0945,26.7422, 1.0);
	SetCheckpointInterior(BANK_EXIT2_CP, 0);
	SetCheckpointVirtualWorld(BANK_EXIT2_CP, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, BANK_EXIT3_CP, 2304.6882,-16.0945,26.7422, 1.0);
	SetCheckpointInterior(BANK_EXIT3_CP, 0);
	SetCheckpointVirtualWorld(BANK_EXIT3_CP, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, BANK_EXIT4_CP, 2304.6882,-16.0945,26.7422, 1.0);
	SetCheckpointInterior(BANK_EXIT4_CP, 0);
	SetCheckpointVirtualWorld(BANK_EXIT4_CP, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, ISLE_EXIT_CP, 1133.1321,-15.8296,1000.6797, 1.0);
	SetCheckpointInterior(ISLE_EXIT_CP, 12);
	SetCheckpointVirtualWorld(ISLE_EXIT_CP, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, VEGAS_EXIT_CP, 1133.1321,-15.8296,1000.6797, 1.0);
	SetCheckpointInterior(VEGAS_EXIT_CP, 12);
	SetCheckpointVirtualWorld(VEGAS_EXIT_CP, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, REDSANDS_EXIT_CP, 1133.1321,-15.8296,1000.6797, 1.0);
	SetCheckpointInterior(REDSANDS_EXIT_CP, 12);
	SetCheckpointVirtualWorld(REDSANDS_EXIT_CP, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, CALG_EXIT_CP, 2234.0110,1714.6847,1012.3828, 1.0);
	SetCheckpointInterior(CALG_EXIT_CP, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, DRAG_EXIT_CP, 2019.0673,1017.8474,996.8750, 1.0);
	SetCheckpointInterior(DRAG_EXIT_CP, 10);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU_EXIT1_CP, 285.8474,-86.7741,1001.5229, 1.0);
	SetCheckpointInterior(AMMU_EXIT1_CP, 4);
	SetCheckpointVirtualWorld(AMMU_EXIT1_CP, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU_EXIT2_CP, 285.8474,-86.7741,1001.5229, 1.0);
	SetCheckpointInterior(AMMU_EXIT2_CP, 4);
	SetCheckpointVirtualWorld(AMMU_EXIT2_CP, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU_EXIT3_CP, 285.8474,-86.7741,1001.5229, 1.0);
	SetCheckpointInterior(AMMU_EXIT3_CP, 4);
	SetCheckpointVirtualWorld(AMMU_EXIT3_CP, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU_EXIT4_CP, 285.8474,-86.7741,1001.5229, 1.0);
	SetCheckpointInterior(AMMU_EXIT4_CP, 4);
	SetCheckpointVirtualWorld(AMMU_EXIT4_CP, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU_EXIT5_CP, 285.8474,-86.7741,1001.5229, 1.0);
	SetCheckpointInterior(AMMU_EXIT5_CP, 4);
	SetCheckpointVirtualWorld(AMMU_EXIT5_CP, 5);
	CreateCheckpoint(GLOBAL_OWNER_ID, AMMU_EXIT6_CP, 285.8474,-86.7741,1001.5229, 1.0);
	SetCheckpointInterior(AMMU_EXIT6_CP, 4);
	SetCheckpointVirtualWorld(AMMU_EXIT6_CP,6);
	CreateCheckpoint(GLOBAL_OWNER_ID, CITYHALL_EXT_CP, 390.7683,173.7873,1008.3828, 1.0);
	SetCheckpointInterior(CITYHALL_EXT_CP, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURG1_EXT_CP, 362.8733,-75.1687,1001.5078, 1.0);
	SetCheckpointInterior(BURG1_EXT_CP, 10);
	SetCheckpointVirtualWorld(BURG1_EXT_CP, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURG2_EXT_CP, 362.8733,-75.1687,1001.5078, 1.0);
	SetCheckpointInterior(BURG2_EXT_CP, 10);
	SetCheckpointVirtualWorld(BURG2_EXT_CP, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURG3_EXT_CP, 362.8733,-75.1687,1001.5078, 1.0);
	SetCheckpointInterior(BURG3_EXT_CP, 10);
	SetCheckpointVirtualWorld(BURG3_EXT_CP, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, CLUCK1_EXT_CP, 364.9007,-11.7672,1001.8516, 1.0);
	SetCheckpointInterior(CLUCK1_EXT_CP, 9);
	SetCheckpointVirtualWorld(CLUCK1_EXT_CP, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, CLUCK2_EXT_CP, 364.9007,-11.7672,1001.8516, 1.0);
	SetCheckpointInterior(CLUCK2_EXT_CP, 9);
	SetCheckpointVirtualWorld(CLUCK2_EXT_CP, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, CLUCK3_EXT_CP, 364.9007,-11.7672,1001.8516, 1.0);
	SetCheckpointInterior(CLUCK3_EXT_CP, 9);
	SetCheckpointVirtualWorld(CLUCK3_EXT_CP, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURG4_EXT_CP, 362.8733,-75.1687,1001.5078, 1.0);
	SetCheckpointInterior(BURG4_EXT_CP, 10);
	SetCheckpointVirtualWorld(BURG4_EXT_CP, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, BURG5_EXT_CP, 362.8733,-75.1687,1001.5078, 1.0);
	SetCheckpointInterior(BURG5_EXT_CP, 10);
	SetCheckpointVirtualWorld(BURG5_EXT_CP, 5);
	CreateCheckpoint(GLOBAL_OWNER_ID, EXT1_24_CP, -25.8424,-188.2505,1003.5469, 1.0);
	SetCheckpointInterior(EXT1_24_CP, 17);
	SetCheckpointVirtualWorld(EXT1_24_CP, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, EXT2_24_CP, -25.8424,-188.2505,1003.5469, 1.0);
	SetCheckpointInterior(EXT2_24_CP, 17);
	SetCheckpointVirtualWorld(EXT2_24_CP, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, EXT3_24_CP, -25.8424,-188.2505,1003.5469, 1.0);
	SetCheckpointInterior(EXT3_24_CP, 17);
	SetCheckpointVirtualWorld(EXT3_24_CP, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, EXT4_24_CP, -25.8424,-188.2505,1003.5469, 1.0);
	SetCheckpointInterior(EXT4_24_CP, 17);
	SetCheckpointVirtualWorld(EXT4_24_CP, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, PIZZA_EXT_CP, 372.2602,-133.5197,1001.4922, 1.0);
	SetCheckpointInterior(PIZZA_EXT_CP, 5);
    CreateCheckpoint(GLOBAL_OWNER_ID, HOS_CP, 1607.3329,1816.7660,10.8203, 1.0);
	SetCheckpointInterior(HOS_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CELLCP_1, 197.0638,177.4871,1003.0234, 1.0);
	SetCheckpointInterior(CELLCP_1, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, CELLCP_2, 192.7801,177.4865,1003.1533, 1.0);
	SetCheckpointInterior(CELLCP_2, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, CELLCP_3, 188.5325,177.4865,1003.1533, 1.0);
	SetCheckpointInterior(CELLCP_3, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, CELLCP_4, 196.9326,159.8857,1003.1533, 1.0);
	SetCheckpointInterior(CELLCP_4, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, CELLCP_5, 192.6790,159.8863,1003.1533, 1.0);
	SetCheckpointInterior(CELLCP_5, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, CELLCP_6, 188.4444,159.8862,1003.1533, 1.0);
	SetCheckpointInterior(CELLCP_6, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, NIGHT_CLUB_CP, 2311.2742,2324.2349,10.8203, 1.0);
	SetCheckpointInterior(NIGHT_CLUB_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, NIGHT_CLUB_EXIT_CP, 493.3364,-24.8309,1000.6797, 1.0);
	SetCheckpointInterior(NIGHT_CLUB_EXIT_CP, 17);
	CreateCheckpoint(GLOBAL_OWNER_ID, NIGHT_CLUB_ROB, 499.9675,-20.6944,1000.6797, 1.0);
	SetCheckpointInterior(NIGHT_CLUB_ROB, 17);
	CreateCheckpoint(GLOBAL_OWNER_ID, GYM_ENTER_CP, 1968.7693,2295.8730,16.4559, 1.0);
	SetCheckpointInterior(GYM_ENTER_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, GYM_EXIT_CP, 773.8767,-78.8228,1000.6628, 1.0);
	SetCheckpointInterior(GYM_EXIT_CP, 7);
	CreateCheckpoint(GLOBAL_OWNER_ID, GYM_STYLE_CP, 766.7718,-59.7159,1000.6563, 1.0);
	SetCheckpointInterior(GYM_STYLE_CP, 7);
	CreateCheckpoint(GLOBAL_OWNER_ID, GYM_RING_CP, 768.7595,-72.7363,1000.6563, 1.0);
	SetCheckpointInterior(GYM_RING_CP, 7);

	CreateCheckpoint(GLOBAL_OWNER_ID, FBI_ENTER_CP, 2447.6692,2376.2556,12.1635, 1.0);
	SetCheckpointInterior(FBI_ENTER_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, FBI_ELEV_OUT, 2487.7542,2397.2356,10.8203, 1.0);
	SetCheckpointInterior(FBI_ELEV_OUT, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, FBI_EXIT_CP, 246.8062,62.3228,1003.6406, 1.0);
	SetCheckpointInterior(FBI_EXIT_CP, 6);
	CreateCheckpoint(GLOBAL_OWNER_ID, FBI_ROB, 250.0561,69.4203,1003.6406, 1.0);
	SetCheckpointInterior(FBI_ROB, 6);
	CreateCheckpoint(GLOBAL_OWNER_ID, FBI_ELEV_IN, 242.2486,66.3108,1003.6406, 1.0);
	SetCheckpointInterior(FBI_ELEV_IN, 6);

	CreateCheckpoint(GLOBAL_OWNER_ID, CAR_SHOP, 1735.7432,1866.1516,10.8203, 1.0);
	CreateCheckpoint(GLOBAL_OWNER_ID, MATS_CP_LV, 966.2469,2160.6836,10.8203, 1.0);
	CreateCheckpoint(GLOBAL_OWNER_ID, MATS_CP_BS, -2488.5205,2295.3135,4.9844, 1.0);

	CreateCheckpoint(GLOBAL_OWNER_ID, NV_UNI_CP, 2375.5786,2306.3044,8.1406, 1.0);

	CreateCheckpoint(GLOBAL_OWNER_ID, NV_UNI_CP2, -2027.00, -104.10, 1034.80, 1.0);
	SetCheckpointInterior(NV_UNI_CP2, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, NV_UNI_CP3, -2032.79, -117.39, 1034.80, 1.0);
	SetCheckpointInterior(NV_UNI_CP3, 3);

	CreateCheckpoint(GLOBAL_OWNER_ID, TOWER_CP, 2147.0127,2425.3252,65.2773, 1.0);

	CreateCheckpoint(GLOBAL_OWNER_ID, AIRPORT_CP, 1672.5485,1447.8712,10.7881, 1.0);

	CreateCheckpoint(GLOBAL_OWNER_ID, CIA_CP, 937.0844,1733.2168,8.8516, 1.0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CIA_CP2, 246.4175,107.2983,1003.2188, 1.0);
	SetCheckpointInterior(CIA_CP2, 10);
	CreateCheckpoint(GLOBAL_OWNER_ID, CIA_CP3, 246.4467,118.5374,1003.2188, 1.0);
	SetCheckpointInterior(CIA_CP3, 10);

	CreateCheckpoint(GLOBAL_OWNER_ID, BAR_CP, 2308.9287, 2378.9575, 11.2208, 1.0);
	SetCheckpointInterior(BAR_CP, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, BAR_EXIT_CP, 501.9536,-67.5649,998.7578, 1.0);
	SetCheckpointInterior(BAR_EXIT_CP, 11);
	CreateCheckpoint(GLOBAL_OWNER_ID, BAR_ROB_CP, 496.4771,-76.0378,998.7578, 1.0);
	SetCheckpointInterior(BAR_ROB_CP, 11);

	CreateCheckpoint(GLOBAL_OWNER_ID, APARTMENTS_CP, 2364.8955,2377.6169,10.8203, 1.0);
	SetCheckpointInterior(APARTMENTS_CP, 0);
	//
	CreateCheckpoint(GLOBAL_OWNER_ID, V1, 301.747436,-76.544372,1001.515625, 1.0);
	SetCheckpointInterior(V1, 4);
	SetCheckpointVirtualWorld(V1, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, V2, 301.747436,-76.544372,1001.515625, 1.0);
	SetCheckpointInterior(V2, 4);
	SetCheckpointVirtualWorld(V2, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, V3, 301.747436,-76.544372,1001.515625, 1.0);
	SetCheckpointInterior(V3, 4);
	SetCheckpointVirtualWorld(V3, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, V4, 301.747436,-76.544372,1001.515625, 1.0);
	SetCheckpointInterior(V4, 4);
	SetCheckpointVirtualWorld(V4, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, V5, 301.747436,-76.544372,1001.515625, 1.0);
	SetCheckpointInterior(V5, 4);
	SetCheckpointVirtualWorld(V5, 5);
	CreateCheckpoint(GLOBAL_OWNER_ID, V6, 301.747436,-76.544372,1001.515625, 1.0);
	SetCheckpointInterior(V6, 4);
	SetCheckpointVirtualWorld(V6, 6);
	CreateCheckpoint(GLOBAL_OWNER_ID, V11, 303.264282,-57.716457,1001.515625, 1.0);
	SetCheckpointInterior(V11, 4);
	SetCheckpointVirtualWorld(V11, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, V12, 303.264282,-57.716457,1001.515625, 1.0);
	SetCheckpointInterior(V12, 4);
	SetCheckpointVirtualWorld(V12, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, V13, 303.264282,-57.716457,1001.515625, 1.0);
	SetCheckpointInterior(V13, 4);
	SetCheckpointVirtualWorld(V13, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, V14, 303.264282,-57.716457,1001.515625, 1.0);
	SetCheckpointInterior(V14, 4);
	SetCheckpointVirtualWorld(V14, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, V15, 303.264282,-57.716457,1001.515625, 1.0);
	SetCheckpointInterior(V15, 4);
	SetCheckpointVirtualWorld(V15, 5);
	CreateCheckpoint(GLOBAL_OWNER_ID, V16, 303.264282,-57.716457,1001.515625, 1.0);
	SetCheckpointInterior(V16, 4);
	SetCheckpointVirtualWorld(V16, 6);
	CreateCheckpoint(GLOBAL_OWNER_ID, K1, 301.720184,-75.669998,1001.515625, 1.0);
	SetCheckpointInterior(K1, 4);
	SetCheckpointVirtualWorld(K1, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, K2, 301.720184,-75.669998,1001.515625, 1.0);
	SetCheckpointInterior(K2, 4);
	SetCheckpointVirtualWorld(K2, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, K3, 301.720184,-75.669998,1001.515625, 1.0);
	SetCheckpointInterior(K3, 4);
	SetCheckpointVirtualWorld(K3, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, K4, 301.720184,-75.669998,1001.515625, 1.0);
	SetCheckpointInterior(K4, 4);
	SetCheckpointVirtualWorld(K4, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, K5, 301.720184,-75.669998,1001.515625, 1.0);
	SetCheckpointInterior(K5, 4);
	SetCheckpointVirtualWorld(K5, 5);
	CreateCheckpoint(GLOBAL_OWNER_ID, K6, 301.720184,-75.669998,1001.515625, 1.0);
	SetCheckpointInterior(K6, 4);
	SetCheckpointVirtualWorld(K6, 6);
	CreateCheckpoint(GLOBAL_OWNER_ID, K11, 304.046875,-57.642402,1001.515625, 1.0);
	SetCheckpointInterior(K11, 4);
	SetCheckpointVirtualWorld(K11, 1);
	CreateCheckpoint(GLOBAL_OWNER_ID, K12, 304.046875,-57.642402,1001.515625, 1.0);
	SetCheckpointInterior(K12, 4);
	SetCheckpointVirtualWorld(K12, 2);
	CreateCheckpoint(GLOBAL_OWNER_ID, K13, 304.046875,-57.642402,1001.515625, 1.0);
	SetCheckpointInterior(K13, 4);
	SetCheckpointVirtualWorld(K13, 3);
	CreateCheckpoint(GLOBAL_OWNER_ID, K14, 304.046875,-57.642402,1001.515625, 1.0);
	SetCheckpointInterior(K14, 4);
	SetCheckpointVirtualWorld(K14, 4);
	CreateCheckpoint(GLOBAL_OWNER_ID, K15, 304.046875,-57.642402,1001.515625, 1.0);
	SetCheckpointInterior(K15, 4);
	SetCheckpointVirtualWorld(K15, 5);
	CreateCheckpoint(GLOBAL_OWNER_ID, K16, 304.046875,-57.642402,1001.515625, 1.0);
	SetCheckpointInterior(K16, 4);
	SetCheckpointVirtualWorld(K16, 6);
	CreateCheckpoint(GLOBAL_OWNER_ID, CP1, 2518.687744,2033.389160,11.171875, 1.0);
	SetCheckpointInterior(CP1, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CP2, 2438.194091,1293.454223,10.820312, 1.0);
	SetCheckpointInterior(CP2, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CP3, 2489.595947,918.606994,11.023437, 1.0);
	SetCheckpointInterior(CP3, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CP4, 1454.011962,750.880249,11.023437, 1.0);
	SetCheckpointInterior(CP4, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CP5, 2225.102783,2522.551513,11.022218, 1.0);
	SetCheckpointInterior(CP5, 0);
	CreateCheckpoint(GLOBAL_OWNER_ID, CP6, -2482.276611,2406.506591,17.109375, 1.0);
	SetCheckpointInterior(CP6, 0);

	StartCheckpointSeeking();
		
	print("|--------------------------Gamemode (ACNR) Loaded--------------------------|");
	return 1;
}

public OnGameModeExit()
{
	print("|--------------------------Gamemode Exit (ACNR)--------------------------|");

    DestroyPickup(NVPD_pickup_gun);
    DestroyPickup(NVPD_pickup_arm);

    DestroyPickup(FBI_pickup_gun);
    DestroyPickup(FBI_pickup_arm);

    DestroyPickup(CIA_pickup_gun);
    DestroyPickup(CIA_pickup_arm);

	Loop(h, MAX_HOUSES)
	{
    	SaveHouseStats(h);
    }

    for(new b = 0; b < MAX_BUSINESSES; b++)
    {
        SaveBizStats(b);
    }

    foreach(new p : Player)
    {
    	if(IsPlayerConnected(p) && IsLoggedIn{p} == 1)
		{
			SaveBankStats(p);
			SaveFightStats(p);
    		SaveUserStats(p);
    		SaveDegreeStats(p);
 		}
 	}

    new hfile[40], tmp;
	foreach(new i : Player)
	{
	    tmp = LastHouseCP[i];
		format(hfile, sizeof(hfile), HOUSE_FILE, tmp);
		if(!strcmp(GetHouseOwner(tmp), pNick(i), false) && IsInHouse[i] == 1 && fexist(hfile))
		{
			HouseInfo[i][hQuit] = 1;
		}
	}
    UnloadHouses();
    UnloadBusinesses();
    
    accssave();
    
    TextDrawDestroy(txtTimeDisp);
    TextDrawDestroy(txtDateDisp);
    TextDrawDestroy(LOADSCS[0]);
    TextDrawDestroy(LOADSCS[1]);
    TextDrawDestroy(LOADSCS[2]);
    TextDrawDestroy(LOADSCS[3]);
    TextDrawDestroy(LOADSCS[4]);
    TextDrawDestroy(LOADSCS[5]);
    TextDrawDestroy(LOADSCS[6]);
    TextDrawDestroy(LOADSCS[7]);
    TextDrawDestroy(LOADSCS[8]);
    TextDrawDestroy(LOADSCS[9]);
    TextDrawDestroy(LOADSCS[10]);
    TextDrawDestroy(LOADSCS[11]);
    TextDrawDestroy(LOADSCS[12]);
    TextDrawDestroy(LOADSCS[13]);
    TextDrawDestroy(LOADSCS[14]);
    TextDrawDestroy(MULTITD);
    TextDrawDestroy(MULTIPLAYER);
    
	foreach(new p : Player)
    {
    TextDrawDestroy(ACNRInfo[p]);
    TextDrawDestroy(FPS[p]);
    TextDrawDestroy(esmmashin[p]);
    TextDrawDestroy(UnderPPWtd[p]);
    TextDrawDestroy(playerwanted[p]);
    }
    
    foreach(new x : Player)
	{
		if(noclipdata[x][cameramode] == CAMERA_MODE_FLY) CancelFlyMode(x);
	}
	
	print("|--------------------------Gamemode (ACNR) Exited--------------------------|");

	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    if(IsPlayerNPC(playerid)) return 1;
    HasSpawned{playerid} = false;
    SetPlayerTeamFromClass(playerid, classid);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
    SetPlayerPos(playerid, 2116.0205, 2143.3225, 10.8203);
    SetPlayerFacingAngle(playerid, 89.6528);
    SetPlayerCameraLookAt(playerid, 2116.0205, 2143.3225, 10.8203);
    SetPlayerCameraPos(playerid, 2116.0205 + (5 * floatsin(-89.6528, degrees)), 2143.3225 + (5 * floatcos(-89.6528, degrees)), 10.8203);

    TextDrawHideForPlayer(playerid,LOADSCS[0]);
	TextDrawHideForPlayer(playerid,LOADSCS[1]);
	TextDrawHideForPlayer(playerid,LOADSCS[2]);
	TextDrawHideForPlayer(playerid,LOADSCS[3]);
	TextDrawHideForPlayer(playerid,LOADSCS[4]);
	TextDrawHideForPlayer(playerid,LOADSCS[5]);
	TextDrawHideForPlayer(playerid,LOADSCS[6]);
	TextDrawHideForPlayer(playerid,LOADSCS[7]);
	TextDrawHideForPlayer(playerid,LOADSCS[8]);
	TextDrawHideForPlayer(playerid,LOADSCS[9]);
	TextDrawHideForPlayer(playerid,LOADSCS[10]);
	TextDrawHideForPlayer(playerid,LOADSCS[11]);
	TextDrawHideForPlayer(playerid,LOADSCS[12]);
	TextDrawHideForPlayer(playerid,LOADSCS[13]);
	TextDrawHideForPlayer(playerid,LOADSCS[14]);
    TextDrawHideForPlayer(playerid,MULTITD);
    TextDrawHideForPlayer(playerid,MULTIPLAYER);
    TextDrawHideForPlayer(playerid,esmmashin[playerid]);
	return 1;
}

new const BadWords[][] =
{
"fuck"
};
/* //disabled anti bad words
new const BadWords[][] =
{
"fuck",
"f u c k",
"0.",
".0",
"1.",
".1",
"2.",
".2",
"3.",
".3",
"4.",
".4",
"5.",
".5",
"6.",
".6",
"7.",
".7",
"8.",
".8",
"9.",
".9",
"suck",
"kir",
"kos",
"f.u.c.k",
"bk",
"b k",
"kiram",
"b.k",
"kose nanat",
"kire",
"kose",
":7777",
":7778",
":7776",
"sex",
"jende",
"ip",
"persgame",
"pers game",
"samp-scripter.ir",
"www.",
"game",
"lfg",
"pg",
"www",
".com",
"com",
"net",
".net",
"blogfa",
"rozblog",
"loxblog",
"hax",
"cheat",
"hack",
".ir",
"noob",
"fu.ck",
".tk",
".hk",
".org",
"1:",
"2:",
"3:",
"4:",
"5:",
"6:",
"7:",
"8:",
"9:",
",1",
",2",
",3",
",4",
",5",
",6",
",7",
",8",
",9",
"1 .",
"2 .",
"3 .",
"4 .",
"5 .",
"6 .",
"7 .",
"8 .",
"9 .",
"1,",
"2,",
"3,",
"4,",
"5,",
"6,",
"7,",
"8,",
"9,",
". 1",
". 2",
". 3",
". 4",
". 5",
". 6",
". 7",
". 8",
". 9",
"7777",
"7788",
"7778",
"7776",
"game-hack.ir",
"rzb",
"par30",
"nois",
"famous",
"server",
"kire khar",
"kose nanat",
"games4online.ir",
"be kiram",
"bkiram",
"bekiram",
"b kiram",
"noob",
"namosan",
"namusan",
"()",
"fuck",
"f u c k",
"0.",
".0",
"1.",
".1",
"2.",
".2",
"3.",
".3",
"4.",
".4",
"5.",
".5",
"6.",
".6",
"7.",
".7",
"8.",
".8",
"9.",
".9",
"suck",
"kir",
"kos",
"f.u.c.k",
"bk",
"b k",
"kiram",
"b.k",
"kose nanat",
"kire",
"kose",
":7777",
":7778",
":7776",
"sex",
"jende",
"ip",
"persgame",
"pers game",
"samp-scripter.ir",
"www.",
"game",
"lfg",
"pg",
"www",
".com",
"com",
"net",
".net",
"blogfa",
"rozblog",
"loxblog",
"hax",
"cheat",
"hack",
".ir",
"noob",
"fu.ck",
".tk",
".hk",
".org",
"1:",
"2:",
"3:",
"4:",
"5:",
"6:",
"7:",
"8:",
"9:",
",1",
",2",
",3",
",4",
",5",
",6",
",7",
",8",
",9",
"1 .",
"2 .",
"3 .",
"4 .",
"5 .",
"6 .",
"7 .",
"8 .",
"9 .",
"1,",
"2,",
"3,",
"4,",
"5,",
"6,",
"7,",
"8,",
"9,",
". 1",
". 2",
". 3",
". 4",
". 5",
". 6",
". 7",
". 8",
". 9",
"7777",
"7788",
"7778",
"7776",
"game-hack.ir",
"rzb",
"par30",
"nois",
"famous",
"server",
"kire khar",
"kose nanat",
"games4online.ir",
"be kiram",
"bkiram",
"bekiram",
"b kiram",
"noob",
"namosan",
"namusan",
"()",
"fuck",
"f u c k",
"0.",
".0",
"1.",
".1",
"2.",
".2",
"3.",
".3",
"4.",
".4",
"5.",
".5",
"6.",
".6",
"7.",
".7",
"8.",
".8",
"9.",
".9",
"suck",
"kir",
"kos",
"f.u.c.k",
"bk",
"b k",
"kiram",
"b.k",
"kose nanat",
"kire",
"kose",
":7777",
":7778",
":7776",
"sex",
"jende",
"ip",
"persgame",
"pers game",
"samp-scripter.ir",
"www.",
"game",
"lfg",
"pg",
"www",
".com",
"com",
"net",
".net",
"blogfa",
"rozblog",
"loxblog",
"hax",
"cheat",
"hack",
".ir",
"noob",
"fu.ck",
".tk",
".hk",
".org",
"1:",
"2:",
"3:",
"4:",
"5:",
"6:",
"7:",
"8:",
"9:",
",1",
",2",
",3",
",4",
",5",
",6",
",7",
",8",
",9",
"1 .",
"2 .",
"3 .",
"4 .",
"5 .",
"6 .",
"7 .",
"8 .",
"9 .",
"1,",
"2,",
"3,",
"4,",
"5,",
"6,",
"7,",
"8,",
"9,",
". 1",
". 2",
". 3",
". 4",
". 5",
". 6",
". 7",
". 8",
". 9",
"7777",
"7788",
"7778",
"7776",
"game-hack.ir",
"rzb",
"par30",
"nois",
"famous",
"server",
"kire khar",
"kose nanat",
"games4online.ir",
"be kiram",
"bkiram",
"bekiram",
"b kiram",
"noob",
"namosan",
"namusan",
"()",
"fuck",
"f u c k",
"0.",
".0",
"1.",
".1",
"2.",
".2",
"3.",
".3",
"4.",
".4",
"5.",
".5",
"6.",
".6",
"7.",
".7",
"8.",
".8",
"9.",
".9",
"suck",
"kir",
"kos",
"f.u.c.k",
"bk",
"b k",
"kiram",
"b.k",
"kose nanat",
"kire",
"kose",
":7777",
":7778",
":7776",
"sex",
"jende",
"ip",
"persgame",
"pers game",
"samp-scripter.ir",
"www.",
"game",
"lfg",
"pg",
"www",
".com",
"com",
"net",
".net",
"blogfa",
"rozblog",
"loxblog",
"hax",
"cheat",
"hack",
".ir",
"noob",
"fu.ck",
".tk",
".hk",
".org",
"1:",
"2:",
"3:",
"4:",
"5:",
"6:",
"7:",
"8:",
"9:",
",1",
",2",
",3",
",4",
",5",
",6",
",7",
",8",
",9",
"1 .",
"2 .",
"3 .",
"4 .",
"5 .",
"6 .",
"7 .",
"8 .",
"9 .",
"1,",
"2,",
"3,",
"4,",
"5,",
"6,",
"7,",
"8,",
"9,",
". 1",
". 2",
". 3",
". 4",
". 5",
". 6",
". 7",
". 8",
". 9",
"7777",
"7788",
"7778",
"7776",
"game-hack.ir",
"rzb",
"par30",
"nois",
"famous",
"server",
"kire khar",
"kose nanat",
"games4online.ir",
"be kiram",
"bkiram",
"bekiram",
"b kiram",
"noob",
"namosan",
"namusan",
"()",
"fuck",
"f u c k",
"0.",
".0",
"1.",
".1",
"2.",
".2",
"3.",
".3",
"4.",
".4",
"5.",
".5",
"6.",
".6",
"7.",
".7",
"8.",
".8",
"9.",
".9",
"suck",
"kir",
"kos",
"f.u.c.k",
"bk",
"b k",
"kiram",
"b.k",
"kose nanat",
"kire",
"kose",
":7777",
":7778",
":7776",
"sex",
"jende",
"ip",
"persgame",
"pers game",
"samp-scripter.ir",
"www.",
"game",
"lfg",
"pg",
"www",
".com",
"com",
"net",
".net",
"blogfa",
"rozblog",
"loxblog",
"hax",
"cheat",
"hack",
".ir",
"noob",
"fu.ck",
".tk",
".hk",
".org",
"1:",
"2:",
"3:",
"4:",
"5:",
"6:",
"7:",
"8:",
"9:",
",1",
",2",
",3",
",4",
",5",
",6",
",7",
",8",
",9",
"1 .",
"2 .",
"3 .",
"4 .",
"5 .",
"6 .",
"7 .",
"8 .",
"9 .",
"1,",
"2,",
"3,",
"4,",
"5,",
"6,",
"7,",
"8,",
"9,",
". 1",
". 2",
". 3",
". 4",
". 5",
". 6",
". 7",
". 8",
". 9",
"7777",
"7788",
"7778",
"7776",
"game-hack.ir",
"rzb",
"par30",
"nois",
"famous",
"server",
"kire khar",
"kose nanat",
"games4online.ir",
"be kiram",
"bkiram",
"bekiram",
"b kiram",
"noob",
"namosan",
"namusan",
"()",
"fuck",
"f u c k",
"0.",
".0",
"1.",
".1",
"2.",
".2",
"3.",
".3",
"4.",
".4",
"5.",
".5",
"6.",
".6",
"7.",
".7",
"8.",
".8",
"9.",
".9",
"suck",
"kir",
"kos",
"f.u.c.k",
"bk",
"b k",
"kiram",
"b.k",
"kose nanat",
"kire",
"kose",
":7777",
":7778",
":7776",
"sex",
"jende",
"ip",
"persgame",
"pers game",
"samp-scripter.ir",
"www.",
"game",
"lfg",
"pg",
"www",
".com",
"com",
"net",
".net",
"blogfa",
"rozblog",
"loxblog",
"hax",
"cheat",
"hack",
".ir",
"noob",
"fu.ck",
".tk",
".hk",
".org",
"1:",
"2:",
"3:",
"4:",
"5:",
"6:",
"7:",
"8:",
"9:",
",1",
",2",
",3",
",4",
",5",
",6",
",7",
",8",
",9",
"1 .",
"2 .",
"3 .",
"4 .",
"5 .",
"6 .",
"7 .",
"8 .",
"9 .",
"1,",
"2,",
"3,",
"4,",
"5,",
"6,",
"7,",
"8,",
"9,",
". 1",
". 2",
". 3",
". 4",
". 5",
". 6",
". 7",
". 8",
". 9",
"7777",
"7788",
"7778",
"7776",
"game-hack.ir",
"rzb",
"par30",
"nois",
"famous",
"server",
"kire khar",
"kose nanat",
"games4online.ir",
"be kiram",
"bkiram",
"bekiram",
"b kiram",
"noob",
"namosan",
"namusan",
"()",
"game-hack",
"gamehack",
"game hack",
"game-hack",
"gamehack",
"game hack",
"game-hack",
"gamehack",
"game hack",
"game-hack",
"gamehack",
"game hack",
"game-hack",
"gamehack",
"game hack"
};
*/

public OnPlayerText(playerid, text[])
{
   	new placeholder;
	for(new i = 0; i < sizeof(BadWords); i++)
	{
	    placeholder = strfind(text,BadWords[i],true);
        if(placeholder != -1)
	    {
	        for(new x = placeholder; x < placeholder + strlen(BadWords[i]); x++)
	        {
	            text[x] = '*';
	        }
	    }
	}

	if(GetPlayerScore(playerid) < 15)
	{
        SendClientMessage(playerid, RED, "Elvis: score shoma kamtar az 15 ast! Baraye chat dar global az cmd  [ /n ]  ya  [ /new ]  estefade konid.");
        return 0;
    }
	
    if(IsMuted{playerid} == 1)
    {
        SendClientMessage(playerid, RED, "Elvis: shoma mute hastid, alan nemitonid chat konid!");
        SetPlayerChatBubble(playerid, "Man MUTE hastam, alan nemitavanam chat konam.", RED, 50, 5000);
        return 0;
    }

	new groupid = pGroupInfo[playerid][gid];
	new pgnamee[75] = "";
	if (groupid != -1)
	{
		format(pgnamee, sizeof(pgnamee), "%s", GroupInfo[groupid][grname]);
	}

    if(PlayerInfo[playerid][aLevel] == 1 && IsOnduty{playerid} == 1)
    {
        format(fstr, sizeof(fstr), "%s [Trial Admin] %s{FFFFFF} [%d]: %s",pgnamee, GetName(playerid), playerid, text);
        SendMessageToAll(PURPLE, fstr);
        SetPlayerChatBubble(playerid, text, WHITE, 50, 5000);
        return 0;
    }
	else if(PlayerInfo[playerid][aLevel] == 2 && IsOnduty{playerid} == 1)
    {
        format(fstr, sizeof(fstr), "%s [Server Admin] %s{FFFFFF} [%d]: %s",pgnamee, GetName(playerid), playerid, text);
        SendMessageToAll(PURPLE, fstr);
        SetPlayerChatBubble(playerid, text, WHITE, 50, 5000);
        return 0;
    }
    else if(PlayerInfo[playerid][aLevel] == 3 && IsOnduty{playerid} == 1)
    {
        format(fstr, sizeof(fstr), "%s [Head Admin] %s{FFFFFF} [%d]: %s",pgnamee, GetName(playerid), playerid, text);
        SendMessageToAll(PURPLE, fstr);
        SetPlayerChatBubble(playerid, text, WHITE, 50, 5000);
        return 0;
    }
    else if(PlayerInfo[playerid][aLevel] == 4 && IsOnduty{playerid} == 1)
    {
        format(fstr, sizeof(fstr), "%s [Owner] %s{FFFFFF} [%d]: %s",pgnamee, GetName(playerid), playerid, text);
        SendMessageToAll(PURPLE, fstr);
        SetPlayerChatBubble(playerid, text, WHITE, 50, 5000);
        return 0;
    }

    text_line_count{playerid}++;
	SetTimerEx("ResetTextLines", 5000, false, "d", playerid);
	if(text_line_count{playerid} == 5)
	{
		PlayerInfo[playerid][pKicks]++;
        GameTextForPlayer(playerid,"~r~Kicked...~n~kicked..~n~kicked.~n~kicked",9999,2);
		format(fstr2,sizeof(fstr2),"Elvis  %s [%d] ra az server kick kard - DALIL: SPAM [Chat Flood]", GetName(playerid), playerid);
		SendMessageToAll(RED, fstr2);
		KickPlayer(playerid);
		tedadekick++;
		accssave();
		print(fstr2);
		return 0;
	}
	else if(text_line_count{playerid} == 3 || text_line_count{playerid} == 4)
	{
		SendClientMessage(playerid, WHITE, "Elvis: {FF0000}SPAM [Chat Flood] nakon! ya MAN KICKET MIKONAM! [5 SANIE SABR KON...]");
		return 0;
	}

	else
	{
	    new tstr[300];
	    format(tstr, sizeof(tstr), "%s [%s]{FFFFFF} [%d]: %s",pgnamee, GetName(playerid), playerid, text);
        SendMessageToAll(GetPlayerColor(playerid), tstr);
		SetPlayerChatBubble(playerid, text, WHITE, 50, 5000);
    }
	return 0;
}

forward AntiEjectCheck(playerid);
public AntiEjectCheck(playerid)
{
    if(IsPlayerInAnyVehicle(playerid))
	{
	    if(GetPlayerVehicleID(playerid) == PVeh[playerid])
	    {
		    format(fstr, sizeof(fstr), "Elvis %s [%d] ra az ACNR kick kard. - Dalil: Anti-Eject", GetName(playerid), playerid);
 	        SendMessageToAll(RED, fstr);
 	        GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
     	    SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
            PlayerInfo[playerid][pKicks]++;
     	    KickPlayer(playerid);
            tedadekick++;
		    accssave();
		    print(fstr);
		}
	}
	return 1;
}

stock PlayerAzMashinBironKon(playerid)
{
    PVeh[playerid] = GetPlayerVehicleID(playerid);
	RemovePlayerFromVehicle(playerid);
	SetTimerEx("AntiEjectCheck",3000,false,"u",playerid);
	return 1;
}

public OnPlayerSpawn(playerid)
{
    if(IsPlayerNPC(playerid))
	{
		SetPlayerHealth(playerid,100);
	    SetPlayerColor(playerid, WHITE);
		SetPlayerSkin(playerid, 84);
		GetTeam{playerid} = CLASS_CIV;
	}
/*	
	new userfile9[40];
	format(userfile9, sizeof(userfile9), USER_FILE, GetName(playerid));
    INI_ParseFile(userfile9, "LoadUser_data", .bExtra = true, .extra = playerid);

	if(fexist(GunPath(playerid)))
    {
        INI_ParseFile(GunPath(playerid), "LoadGun_data", .bExtra = true, .extra = playerid);
        IsPlayersFirstSpawn{playerid} = true;
    }
    else
    {
        new File:startfile = fopen(GunPath(playerid), io_write);
    	fclose(startfile);
    }

    if(fexist(PosPath(playerid)))
    {
        INI_ParseFile(PosPath(playerid), "LoadPos_data", .bExtra = true, .extra = playerid);
        IsPlayersFirstSpawn{playerid} = true;
    }
    else
    {
        new File:startfile = fopen(PosPath(playerid), io_write);
    	fclose(startfile);
    }
*/
    ResetPlayerWeapons(playerid);

    TextDrawShowForPlayer(playerid,txtTimeDisp);
    TextDrawShowForPlayer(playerid,txtDateDisp);
    TextDrawShowForPlayer(playerid,FPS[playerid]);
    TextDrawShowForPlayer(playerid,UnderPPWtd[playerid]);
    TextDrawShowForPlayer(playerid,playerwanted[playerid]);

    PreloadAnimationLibrary(playerid, "GRAVEYARD");
	PreloadAnimationLibrary(playerid, "RAPPING");
	PreloadAnimationLibrary(playerid, "PED");
	PreloadAnimationLibrary(playerid, "FOOD");
	PreloadAnimationLibrary(playerid, "SWEET");
	PreloadAnimationLibrary(playerid, "ON_LOOKERS");
	PreloadAnimationLibrary(playerid, "DEALER");
	PreloadAnimationLibrary(playerid, "CRACK");
	PreloadAnimationLibrary(playerid, "SMOKING");
	PreloadAnimationLibrary(playerid, "BEACH");
	PreloadAnimationLibrary(playerid, "PARK");
	
    verifydestroycar{playerid} = 0;

    LoadFightStyle(playerid);

    StartCheckpointSeeking();

    HasSpawned{playerid} = true;
    HasConnectedSpawned{playerid} = true;
    HasShieldAttached{playerid} = true;
    HasBandanaAttached{playerid} = false;
    IsPlayerUsingAnim{playerid} = false;

    ClearAnimations(playerid);
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

	IsInGod{playerid} = 0;
	IsInGodCar{playerid} = 0;

    if(IsAdminSpectating{playerid} == true)
	{
	    IsAdminSpectating{playerid} = false;
	    SpecInfo[playerid][IsSpectating] = -1;
	}

    if(HasPlayerDiedInJail{playerid} == true)
    {
        SendPlayerToJail(playerid);
        return 1;
    }

    if(HasPlayerDiedInCage{playerid} == true && CageTime[playerid] > 0)
	{
	    new time = CageTime[playerid];
	    IsPlayersFirstSpawn{playerid} = false;
		ResetPlayerWeapons(playerid);
		SetPlayerWantedLevel(playerid, 0);
		SetPlayerPos(playerid, 2178.3713, 2407.2861, 73.0339);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		IsCaged{playerid} = true;
		SetPlayerArmour(playerid, 0);
		GameTextForPlayer(playerid,"~r~BE GHAFAS ANDAKHTE SHODI!", 5000, 5);
		if(CageTime[playerid] > 0)
		{
			CageTime[playerid] = 0;
		}
		CageTime[playerid] = time;
		KillTimer(JailTimer[playerid]);
		KillTimer(CageTimer[playerid]);
		CageTimer[playerid] = SetTimerEx("AutoUncage", 1000, true, "%d", playerid);
		return 1;
	}

	if(IsPlayersFirstSpawn{playerid} == true)
 	{
		if(PlayerInfo[playerid][cTime] == 0 && PlayerInfo[playerid][jTime] == 0)
		{
		if(PlayerInfo[playerid][pHealth] > 101)
		{
            PlayerInfo[playerid][pHealth] = 100;
		}
		if(PlayerInfo[playerid][pArmour] > 101)
		{
            PlayerInfo[playerid][pArmour] = 100;
		}
		
/*		if(ACNR_DEBUG == 1)
		{
			new dbstr[300];			
			printf("DEBUG: OnPlayerSpawn(%d, %s, %d, %f);",playerid, PlayerInfo[playerid][pPass], PlayerInfo[playerid][aLevel], PlayerInfo[playerid][pHealth]);
			format(dbstr, sizeof(dbstr), "DEBUG: OnPlayerSpawn(%d, %s, %d, %f);",playerid, PlayerInfo[playerid][pPass], PlayerInfo[playerid][aLevel], PlayerInfo[playerid][pHealth]);
			SendClientMessage(playerid, RED, dbstr);
		}*/
		
	    SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
	    SetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);

	    SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWanted]);

	    ResetPlayerWeapons(playerid);

		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot0_gun], GunInfo[playerid][gSlot0_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot1_gun], GunInfo[playerid][gSlot1_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot2_gun], GunInfo[playerid][gSlot2_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot3_gun], GunInfo[playerid][gSlot3_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot4_gun], GunInfo[playerid][gSlot4_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot5_gun], GunInfo[playerid][gSlot5_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot6_gun], GunInfo[playerid][gSlot6_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot7_gun], GunInfo[playerid][gSlot7_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot8_gun], GunInfo[playerid][gSlot8_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot9_gun], GunInfo[playerid][gSlot9_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot10_gun], GunInfo[playerid][gSlot10_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot11_gun], GunInfo[playerid][gSlot11_ammo]);
		GivePlayerWeapon(playerid, GunInfo[playerid][gSlot12_gun], GunInfo[playerid][gSlot12_ammo]);
		 
		SetPlayerPos(playerid, PosInfo[playerid][rPos_X], PosInfo[playerid][rPos_Y], PosInfo[playerid][rPos_Z]);
/*		if(ACNR_DEBUG == 1)
		{
			new dbstr[300];		
			printf("DEBUG: SetPlayerPos(%d,%f,%f,%f);",playerid, PosInfo[playerid][rPos_X], PosInfo[playerid][rPos_Y], PosInfo[playerid][rPos_Z]);	
			format(dbstr, sizeof(dbstr), "DEBUG: SetPlayerPos(%d,%f,%f,%f);",playerid, PosInfo[playerid][rPos_X], PosInfo[playerid][rPos_Y], PosInfo[playerid][rPos_Z]);
			SendClientMessage(playerid, RED, dbstr);
		}*/
		SetPlayerFacingAngle(playerid, PosInfo[playerid][rPos_A]);
		SetPlayerInterior(playerid, PosInfo[playerid][rInterior]);
		SetPlayerVirtualWorld(playerid, PosInfo[playerid][rWorld]);
		return 1;
		}
    	else if(PlayerInfo[playerid][cTime] > 0)
    	{
		    new time = PlayerInfo[playerid][cTime];
		    IsPlayersFirstSpawn{playerid} = false;
			ResetPlayerWeapons(playerid);
			SetPlayerWantedLevel(playerid, 0);
			SetPlayerPos(playerid, 2178.3713, 2407.2861, 73.0339);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			IsCaged{playerid} = true;
			SetPlayerArmour(playerid, 0);
			GameTextForPlayer(playerid,"~r~BE GHAFAS ANDAKHTE SHODID!", 5000, 5);
			if(CageTime[playerid] > 0)
			{
				CageTime[playerid] = 0;
			}
			CageTime[playerid] = time;
			KillTimer(JailTimer[playerid]);
			KillTimer(CageTimer[playerid]);
			CageTimer[playerid] = SetTimerEx("AutoUncage", 1000, true, "%d", playerid);
		    return 1;
	    }
	    else if(PlayerInfo[playerid][jTime] > 0)
	    {
	    IsPlayersFirstSpawn{playerid} = false;
		new cell = random(6);
		if(cell == 0)
		{
	    	new time = PlayerInfo[playerid][jTime];
		    new inmateid = random(100000) + random(123456);
	    	InMateID[playerid] = inmateid;
	    	IsJailed{playerid} = true;
	    	IsInCell{playerid} = 1;//
	    	GoToJail{playerid} = false;
	    	JailTime[playerid] = time;
	    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	    	SetPlayerInterior(playerid, 3);
	    	SetPlayerVirtualWorld(playerid, 0);
	    	SetPlayerHealth(playerid, 100.0);
	    	SetPlayerArmour(playerid, 0.0);
	    	SetPlayerColor(playerid, WHITE);
	    	SetPlayerWantedLevel(playerid, 0);
	    	ResetPlayerWeapons(playerid);
	    	SetPlayerPos(playerid, 198.0651, 176.7253, 1003.0234);//
	    	SetPlayerFacingAngle(playerid, 359.4248);//
	    	TogglePlayerControllable(playerid, true);
	    	HasBeenArrested{playerid} = false;
	    	new string[150];
	    	format(string, sizeof(string), "Welcome to PD jail cell (1), shoma baraye %d sanie zendani shodeid.", time);
	    	SendClientMessage(playerid, RED, string);
	    	SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
			KillTimer(JailTimer[playerid]);
			JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
	    	return 1;
    	}
    	else if(cell == 1)
		{
	    	new time = PlayerInfo[playerid][jTime];
		    new inmateid = random(100000) + random(123456);
	    	InMateID[playerid] = inmateid;
	    	IsJailed{playerid} = true;
	    	IsInCell{playerid} = 2;//
	    	GoToJail{playerid} = false;
	    	JailTime[playerid] = time;
	    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	    	SetPlayerInterior(playerid, 3);
	    	SetPlayerVirtualWorld(playerid, 0);
	    	SetPlayerHealth(playerid, 100.0);
	    	SetPlayerArmour(playerid, 0.0);
	    	SetPlayerColor(playerid, WHITE);
	    	SetPlayerWantedLevel(playerid, 0);
	    	ResetPlayerWeapons(playerid);
	    	SetPlayerPos(playerid, 193.8369, 176.7251, 1003.0234);//
	    	SetPlayerFacingAngle(playerid, 0.6781);//
	    	TogglePlayerControllable(playerid, true);
	    	HasBeenArrested{playerid} = false;
	    	new string[150];
	    	format(string, sizeof(string), "Welcome to PD jail cell (2), shoma baraye %d sanie zendani shodeid.", time);
	    	SendClientMessage(playerid, RED, string);
	    	SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
			KillTimer(JailTimer[playerid]);
			JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
    		return 1;
    	}
    	else if(cell == 2)
		{
	    	new time = PlayerInfo[playerid][jTime];
		    new inmateid = random(100000) + random(123456);
	    	InMateID[playerid] = inmateid;
	    	IsJailed{playerid} = true;
	    	IsInCell{playerid} = 3;//
	    	GoToJail{playerid} = false;
	    	JailTime[playerid] = time;
	    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	    	SetPlayerInterior(playerid, 3);
	    	SetPlayerVirtualWorld(playerid, 0);
	    	SetPlayerHealth(playerid, 100.0);
	    	SetPlayerArmour(playerid, 0.0);
	    	SetPlayerColor(playerid, WHITE);
		    SetPlayerWantedLevel(playerid, 0);
	    	ResetPlayerWeapons(playerid);
    		SetPlayerPos(playerid, 189.5884, 176.7243, 1003.1533);//
    		SetPlayerFacingAngle(playerid, 357.5681);//
    		TogglePlayerControllable(playerid, true);
    		HasBeenArrested{playerid} = false;
    		new string[150];
    		format(string, sizeof(string), "Welcome to PD jail cell (3), shoma baraye %d sanie zendani shodeid.", time);
    		SendClientMessage(playerid, RED, string);
    		SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
			KillTimer(JailTimer[playerid]);
			JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
    		return 1;
    	}
    	else if(cell == 3)
		{
	    	new time = PlayerInfo[playerid][jTime];
	    	new inmateid = random(100000) + random(123456);
    		InMateID[playerid] = inmateid;
    		IsJailed{playerid} = true;
    		IsInCell{playerid} = 4;//
    		GoToJail{playerid} = false;
    		JailTime[playerid] = time;
    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    		SetPlayerInterior(playerid, 3);
    		SetPlayerVirtualWorld(playerid, 0);
    		SetPlayerHealth(playerid, 100.0);
    		SetPlayerArmour(playerid, 0.0);
    		SetPlayerColor(playerid, WHITE);
    		SetPlayerWantedLevel(playerid, 0);
    		ResetPlayerWeapons(playerid);
    		SetPlayerPos(playerid, 198.0573, 160.6476, 1003.1533);//
    		SetPlayerFacingAngle(playerid, 178.6532);//
    		TogglePlayerControllable(playerid, true);
    		HasBeenArrested{playerid} = false;
    		new string[150];
    		format(string, sizeof(string), "Welcome to PD jail cell (4), shoma baraye %d sanie zendani shodeid.", time);
    		SendClientMessage(playerid, RED, string);
    		SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
			KillTimer(JailTimer[playerid]);
			JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
    		return 1;
    	}
    	else if(cell == 4)
		{
	    	new time = PlayerInfo[playerid][jTime];
	    	new inmateid = random(100000) + random(123456);
    		InMateID[playerid] = inmateid;
    		IsJailed{playerid} = true;
    		IsInCell{playerid} = 5;//
    		GoToJail{playerid} = false;
    		JailTime[playerid] = time;
    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    		SetPlayerInterior(playerid, 3);
    		SetPlayerVirtualWorld(playerid, 0);
    		SetPlayerHealth(playerid, 100.0);
    		SetPlayerArmour(playerid, 0.0);
    		SetPlayerColor(playerid, WHITE);
    		SetPlayerWantedLevel(playerid, 0);
    		ResetPlayerWeapons(playerid);
    		SetPlayerPos(playerid, 193.8127, 160.6480, 1003.1533);//
    		SetPlayerFacingAngle(playerid, 178.0266);//
    		TogglePlayerControllable(playerid, true);
    		HasBeenArrested{playerid} = false;
    		new string[150];
    		format(string, sizeof(string), "Welcome to PD jail cell (5), shoma baraye %d sanie zendani shodeid.", time);
    		SendClientMessage(playerid, RED, string);
    		SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
			KillTimer(JailTimer[playerid]);
			JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
    		return 1;
    	}
    	else if(cell == 5)
		{
	    	new time = PlayerInfo[playerid][jTime];
	    	new inmateid = random(100000) + random(123456);
    		InMateID[playerid] = inmateid;
    		IsJailed{playerid} = true;
    		IsInCell{playerid} = 6;//
    		GoToJail{playerid} = false;
    		JailTime[playerid] = time;
    		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    		SetPlayerInterior(playerid, 3);
    		SetPlayerVirtualWorld(playerid, 0);
    		SetPlayerHealth(playerid, 100.0);
    		SetPlayerArmour(playerid, 0.0);
    		SetPlayerColor(playerid, WHITE);
    		SetPlayerWantedLevel(playerid, 0);
    		ResetPlayerWeapons(playerid);
    		SetPlayerPos(playerid, 189.5607, 160.6474, 1003.1533);//
    		SetPlayerFacingAngle(playerid, 180.1966);//
    		TogglePlayerControllable(playerid, true);
    		HasBeenArrested{playerid} = false;
    		new string[150];
    		format(string, sizeof(string), "Welcome to PD jail cell (6), shoma baraye %d sanie zendani shodeid.", time);
    		SendClientMessage(playerid, RED, string);
    		SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
			KillTimer(JailTimer[playerid]);
			JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
    	}
		return 1;
	    }
	}

    if(GoToJail{playerid} == true/* && GetTeam{playerid} == CLASS_CIV*/)
    {
		SendPlayerToJail(playerid);
		SendClientMessage(playerid,RED,"Police shoma ra dastgir kard va shoma zendani shodid.");
		return 1;
	}
	if(HasDied{playerid} == false && GetTeam{playerid} == CLASS_COPS)
	{
	    SetPlayerWantedLevel(playerid, 0);
	    SetPlayerColor(playerid,BLUE);
	    new rand = random(sizeof(CopSpawns));
		SetPlayerPos(playerid, CopSpawns[rand][0], CopSpawns[rand][1], CopSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, CopSpawns[rand][3]);
		if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
		SetPlayerAttachedObject(playerid, 1, 18637, 4, 0.3, 0, 0, 0, 170, 270, 1, 1, 1);
        GivePlayerWeapon(playerid, 3, 1);
        GivePlayerWeapon(playerid, 26, 200);
	    GivePlayerWeapon(playerid, 29, 500);
	    GivePlayerWeapon(playerid, 31, 400);
		SetPlayerArmour(playerid, 100);
	}
	else if(HasDied{playerid} == false && GetTeam{playerid} == CLASS_CIA)
	{
	    SetPlayerWantedLevel(playerid, 0);
        SetPlayerColor(playerid, WHITE);
        new rand = random(sizeof(CIASpawns));
		SetPlayerPos(playerid, CIASpawns[rand][0], CIASpawns[rand][1], CIASpawns[rand][2]);
		SetPlayerFacingAngle(playerid, CIASpawns[rand][3]);
		if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
		SetPlayerAttachedObject(playerid, 1, 18637, 4, 0.3, 0, 0, 0, 170, 270, 1, 1, 1);
        GivePlayerWeapon(playerid, 3, 1);
        GivePlayerWeapon(playerid, 26, 200);
	    GivePlayerWeapon(playerid, 29, 500);
	    GivePlayerWeapon(playerid, 31, 400);
		SetPlayerArmour(playerid, 100);
	}
	else if(HasDied{playerid} == false && GetTeam{playerid} == CLASS_FBI)
	{
	    SetPlayerWantedLevel(playerid, 0);
        SetPlayerColor(playerid, WHITE);
        new rand = random(sizeof(FBISpawns));
		SetPlayerPos(playerid, FBISpawns[rand][0] + 2.0, FBISpawns[rand][1], FBISpawns[rand][2]);
		SetPlayerFacingAngle(playerid, FBISpawns[rand][3]);
		if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
		SetPlayerAttachedObject(playerid, 1, 18637, 4, 0.3, 0, 0, 0, 170, 270, 1, 1, 1);
        GivePlayerWeapon(playerid, 3, 1);
        GivePlayerWeapon(playerid, 26, 200);
	    GivePlayerWeapon(playerid, 29, 500);
	    GivePlayerWeapon(playerid, 31, 400);
		SetPlayerArmour(playerid, 100);
	}
    else if(HasDied{playerid} == false && GetTeam{playerid} == CLASS_CIV)
	{
        SetPlayerColor(playerid,WHITE);
	    new rand = random(sizeof(CivSpawns));
		SetPlayerPos(playerid, CivSpawns[rand][0], CivSpawns[rand][1], CivSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, CivSpawns[rand][3]);
        GivePlayerWeapon(playerid, 5, 1);
	    GivePlayerWeapon(playerid, 26, 50);
	    GivePlayerWeapon(playerid, 31, 200);
	}
    else if(HasDied{playerid} == false && GetTeam{playerid} == CLASS_MEDIC)
	{
        SetPlayerWantedLevel(playerid, 0);
		ResetPlayerWeapons(playerid);
        SetPlayerArmour(playerid, 100);
        SetPlayerColor(playerid,PINK);
		new rand = random(sizeof(MedicSpawns));
		SetPlayerPos(playerid, MedicSpawns[rand][0], MedicSpawns[rand][1], MedicSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, MedicSpawns[rand][3]);
        GivePlayerWeapon(playerid, 4, 1);
	}
    else if(HasDied{playerid} == false && GetTeam{playerid} == CLASS_ARMY)
	{
        SetPlayerWantedLevel(playerid, 0);
        SetPlayerColor(playerid,GREEN);
		new rand = random(sizeof(ArmySpawns));
        SetPlayerPos(playerid, ArmySpawns[rand][0], ArmySpawns[rand][1], ArmySpawns[rand][2]);
		SetPlayerFacingAngle(playerid, ArmySpawns[rand][3]);
		if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
		SetPlayerAttachedObject(playerid, 1 , 18637, 1, 0, -0.1, 0.18, 90, 0, 272, 1, 1, 1);
        GivePlayerWeapon(playerid, 24, 99999);
        GivePlayerWeapon(playerid, 26, 99999);
        GivePlayerWeapon(playerid, 29, 99999);
        GivePlayerWeapon(playerid, 31, 99999);
        SetPlayerArmour(playerid, 100);
	}
	if(HasDied{playerid} == true)
	{
	    new rand = random(sizeof(MedicSpawns));
		SetPlayerPos(playerid, MedicSpawns[rand][0], MedicSpawns[rand][1], MedicSpawns[rand][2]);
		SetPlayerFacingAngle(playerid, MedicSpawns[rand][3]);
	    HasDied{playerid} = false;
	    if(GetTeam{playerid} == CLASS_COPS)
		{
	    	SetPlayerWantedLevel(playerid, 0);
	    	if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			SetPlayerAttachedObject(playerid, 1, 18637, 4, 0.3, 0, 0, 0, 170, 270, 1, 1, 1);
		}
		else if(GetTeam{playerid} == CLASS_CIA)
		{
	    	SetPlayerWantedLevel(playerid, 0);
	    	if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			SetPlayerAttachedObject(playerid, 1, 18637, 4, 0.3, 0, 0, 0, 170, 270, 1, 1, 1);
		}
		else if(GetTeam{playerid} == CLASS_FBI)
		{
	    	SetPlayerWantedLevel(playerid, 0);
	    	if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			SetPlayerAttachedObject(playerid, 1, 18637, 4, 0.3, 0, 0, 0, 170, 270, 1, 1, 1);
		}
    	else if(GetTeam{playerid} == CLASS_ARMY)
		{
        	SetPlayerWantedLevel(playerid, 0);
	    	if(IsPlayerAttachedObjectSlotUsed(playerid,1)) RemovePlayerAttachedObject(playerid,1);
			SetPlayerAttachedObject(playerid, 1, 18637, 4, 0.3, 0, 0, 0, 170, 270, 1, 1, 1);
		}
		else if(GetTeam{playerid} == CLASS_MEDIC)
		{
        	SetPlayerWantedLevel(playerid, 0);
			ResetPlayerWeapons(playerid);
		}
		else if(GetTeam{playerid} == CLASS_CIV)
		{
	    	//SetPlayerWantedLevel(playerid, 0);
	    	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
		}
	}
	if(GetTeam{playerid} == CLASS_COPS)
	{
	    ShowPlayerDialog(playerid, COP_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF} Police",
	"{FFFFFF}shoma yek police hastid,kar shoma dastgirkardan(/ar)\nwanted criminals(/pc) va jarime kardan(/tk) suspect civilians(/pc).\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail out zendani ha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [Cop Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye list cmd ha. az /askadmin baraye adminhelp\naz /n baraye komak gereftan az helper ha estefade konid.", "Ok", "");
	}
	else if(GetTeam{playerid} == CLASS_CIA)
	{
        ShowPlayerDialog(playerid, CIA_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF} CIA",
	"{FFFFFF}shoma mamor makhfi cia hastid, kar shoma kashf va kam kardan\nbishtare wanted criminals(/pc) ba estefade az tarfand haye maherane ast.\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail out zendani ha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [Cop Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye a list cmd haye server. az /askadmin baraye admin help\nya az /n baraye komak gereftan az helper ha estefade konid.", "Ok", "");
	}
	else if(GetTeam{playerid} == CLASS_FBI)
	{
        ShowPlayerDialog(playerid, FBI_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF} FBI",
	"{FFFFFF}shoma mamor makhfi fbi hastid,kar shoma dastgirkardan\nbishtare wanted criminals(/pc) ast.\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail zendaniha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [CopRadio]\n\naz /faqs baraye list soalatmotedavel va /cmds\nbaraye list cmd ha.az /askadmin baraye admin help\naz /n baraye komak gereftan az helper ha estefade konid.", "Ok", "");
	}
    else if(GetTeam{playerid} == CLASS_CIV)
	{
        ShowPlayerDialog(playerid, CIV_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF}Civilian",
	"{FFFFFF}shoma dozd hastid, kar shoma dozdi az bazikonan,casinoha,\nbankha,maghazeha va bissinessha ast darhali ke az dastgir shodan\nfarar mikonid.agar shoma dastgir shavid bemodate\n3-4daghighe zendani mishavid,shoma mitavanid farar konid /escape ya az yek\ndost baraye farari dadan /break ya zemanat kardan /bail shoma estefade konid.\n\naz /faqs baraye list soalatmotedavel va /cmds\nbaraye list cmdha.az /askadmin baraye adminhelp\naz /n baraye komak gereftan az helperha estefade konid.", "Ok", "");
	}
    else if(GetTeam{playerid} == CLASS_MEDIC)
	{
        ShowPlayerDialog(playerid, MEDIC_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF}Medic",
	"{FFFFFF}shoma yek doctor hastid, kar shoma darman kardan bazikonan ast\ninjuries using /medic, they can also /callmedic to call for help.\nUse /m [msg] for [Medic Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye a list cmd haye server. az /askadmin baraye admin help\nya az /n baraye komak gereftan az helper ha estefade konid.", "Ok", "");
	}
    else if(GetTeam{playerid} == CLASS_ARMY)
	{
        ShowPlayerDialog(playerid, ARMY_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF} Army",
	"{FFFFFF}Your a army soldier, your job is to focus on and takedown most\nwanted criminals(/pc) at all costs using army supplied vehicles.\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail out zendani ha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [Cop Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye a list cmd haye server. az /askadmin baraye admin help\nya az /n baraye komak gereftan az helper ha estefade konid.", "Ok", "");
	}

	if(IsUnfairDeath{playerid} == true)
	{
	    IsUnfairDeath{playerid} = false;
		GameTextForPlayer(playerid, "~g~Unfair ~r~Death.",3000,5);
		SendClientMessage(playerid, YELLOW, "Unfair death. Continuing current life...");
    }

	if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	{
		SaveBankStats(playerid);
		SaveFightStats(playerid);
    	SaveUserStats(playerid);
    	SaveDegreeStats(playerid);
 	}
	IsPlayersFirstSpawn{playerid} = false;
	
	IsInGod{playerid} = 1;
	SendClientMessage(playerid,RED,"Anti Spawn-Kill: Shoma ta 15 sanie digar godmode hastid.");
	SetTimerEx("AntiSK",15000,false,"u",playerid);
    return 1;
}

forward AntiSK(pid);
public AntiSK(pid)
{
    IsInGod{pid} = 0;
    SendClientMessage(pid,RED,"Anti Spawn-Kill: Vaghte mohafezat az shoma tamam shod.");
	SetPlayerHealth(pid, 100);
    return 1;
}
/*
public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    if(IsLoggedIn{playerid} == 1 && HasSpawned{playerid} == true)
    {
		new Float:xxx,Float:yyy,Float:zzz;
		GetPlayerPos(playerid,xxx,yyy,zzz);
		if(!IsPlayerInRangeOfPoint(playerid, 10.0, xxx,yyy,zzz))
		{
  			if(IsPlayerInRangeOfPoint(playerid, 10.0, fX, fY, fZ))
	    	{
      			//if(PlayerInfo[playerid][aLevel] >= 1 || IsPlayerAdmin(playerid)) return 1;
	            if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return 1;
                {
                	format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Teleport hacks", GetName(playerid), playerid);
	        		SendMessageToAll(RED, fstr);
        			GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
        			SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
                    PlayerInfo[playerid][pKicks]++;
					KickPlayer(playerid);
					tedadekick++;
		            accssave();
		            print(fstr);
				}
    		}
		}
	}
	return 1;
}
*/
/*
forward Antifakekill(playerid,killerid);
public Antifakekill(playerid,killerid)
{
    //if(PlayerInfo[playerid][aLevel] >= 1 || IsPlayerAdmin(playerid)) return 1;
    if(killerid != INVALID_PLAYER_ID)
    {
        new Float:x, Float:y, Float:z;
        GetPlayerPos(killerid,x,y,z);
        if(!IsPlayerInRangeOfPoint(playerid, 10, x, y, z))
        {
            format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Fake Kill", GetName(playerid), playerid);
            SendMessageToAll(RED, fstr);
            GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
            SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
            PlayerInfo[playerid][pKicks]++;
            KickPlayer(playerid);
            tedadekick++;
	    	accssave();
		    print(fstr);
		}
		return 1;
    }
    if(GetPlayerState(killerid) == PLAYER_STATE_DRIVER)
    {
        if(GetVehicleModel(GetPlayerVehicleID(killerid)) != 425 || GetVehicleModel(GetPlayerVehicleID(killerid)) != 520 || GetVehicleModel(GetPlayerVehicleID(killerid)) != 432)
		{
            format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Drive By / Car Park", GetName(playerid), playerid);
            SendMessageToAll(RED, fstr);
            GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
            SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
            PlayerInfo[playerid][pKicks]++;
            KickPlayer(playerid);
            tedadekick++;
		    accssave();
		    print(fstr);
		}
    }
    return 1;
}
*/
public OnPlayerDeath(playerid, killerid, WEAPON:reason)
{
    TextDrawHideForPlayer(playerid, esmmashin[playerid]);
	
    TextDrawSetString(ACNRInfo[playerid], "~w~A~b~~h~C~w~N~r~R ~r~~h~V~w~2.2.2 - ~g~Forum/site~w~: just-samp.rozblog.com");

    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
    GameTextForPlayer(playerid,"~r~~h~Wasted", 1000, 1);

	IsPlayersFirstSpawn{playerid} = false;

    HasPlayerDiedInCage{playerid} = false;
    if(IsCaged{playerid} == true)
    {
        HasPlayerDiedInCage{playerid} = true;
    }

    HasPlayerDiedInJail{playerid} = false;
    if(IsJailed{playerid} == true)
    {
        HasPlayerDiedInJail{playerid} = true;
    }

    if(IsPlayerBeingSpectated{playerid} == true && PlayerBeingSpectatedBy[playerid] != -1)
	{
	    if(IsAdminSpectating{PlayerBeingSpectatedBy[playerid]} == true && SpecInfo[PlayerBeingSpectatedBy[playerid]][IsSpectating] == playerid)
	    {
    		TogglePlayerSpectating(PlayerBeingSpectatedBy[playerid], false);
	    }
	}

	if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	{
		SaveBankStats(playerid);
		SaveFightStats(playerid);
    	SaveUserStats(playerid);
    	SaveDegreeStats(playerid);
 	}

	if(killerid != INVALID_PLAYER_ID && IsLoggedIn{killerid} == 1)
	{
		SaveBankStats(killerid);
		SaveFightStats(killerid);
    	SaveUserStats(killerid);
    	SaveDegreeStats(killerid);
 	}

    if(IsOnduty{playerid} == 1)
	{
        IsOnduty{playerid} = 0;
		SetPlayerHealth(playerid, 100.0);
		IsInGod{playerid} = 0;
	}

	if(HasChangedSkin{playerid} == true)
	{
	    HasChangedSkin{playerid} = false;
		new string[150];
	  	format(string,sizeof(string),"%s [%d] Khod koshi kard...", GetName(playerid), playerid);
		SendMessageToAll(PINK, string);
		SendDeathMessage(playerid, playerid, reason);
	    return 1;
	}

	if(killerid == INVALID_PLAYER_ID)
	{

		if(HasHit[playerid] != 0)
    	{
    		format(fstr, sizeof(fstr), "[HIT]: The hit on %s [%d] has been cancelled [Died]", GetName(playerid), playerid);
        	SendMessageToAll(RED, fstr);
        	HasHit[playerid] = 0;
        	HasPlacedHit[playerid] = -1;
        	PlayerInfo[playerid][pDeaths] ++;
   		}
        if((reason == 255) || (killerid == 255))
	    {
			SendDeathMessage(INVALID_PLAYER_ID, playerid, reason);
	    	return 1;
		}
	}

	SendDeathMessage(killerid, playerid, reason);//Below this must ONLY be killerid kills(no INVALID_PLAYER_ID's)

//	SetTimerEx("Antifakekill",10,false,"uu",playerid,killerid);

    if(PlayerInfo[playerid][vLevel] < 1)
	{
	    if(CalculateWealth(playerid) < 1000000)//Wealth is less then 1M
	    {
	    	new mstring[150], medfee = random(500) + 9500;//Random 10K fees
	    	GivePlayerCash(playerid, -medfee);
        	format(mstring, sizeof(mstring), "[MED-FEES]: %s [%d] has just paid $%d in medical fees.", GetName(playerid), playerid, medfee);
        	SendMessageToAll(RED, mstring);
        }
        else if(CalculateWealth(playerid) > 1000000 && CalculateWealth(playerid) < 10000000)//Wealth is more then 1M and less then 10M
	    {
	    	new mstring[150], medfee = random(500) + 19500;//Random 20K fees
	    	GivePlayerCash(playerid, -medfee);
        	format(mstring, sizeof(mstring), "[MED-FEES]: %s [%d] has just paid $%d in medical fees.", GetName(playerid), playerid, medfee);
        	SendMessageToAll(RED, mstring);
        }
        else if(CalculateWealth(playerid) > 10000000)//Wealth is more then 10M
	    {
	    	new mstring[150], medfee = random(500) + 39500;//Random 40K fees
	    	GivePlayerCash(playerid, -medfee);
        	format(mstring, sizeof(mstring), "[MED-FEES]: %s [%d] has just paid $%d in medical fees.", GetName(playerid), playerid, medfee);
        	SendMessageToAll(RED, mstring);
        }
	}

 	RemovePlayerAttachedObject(playerid, 0);
	RemovePlayerAttachedObject(playerid, 1);

	ResetPlayerWeapons(playerid);

	HasDied{playerid} = true;

    HasSpawned{playerid} = false;
    SetPlayerColor(playerid, GREY);

    //IsJailed{playerid} = false;

	HasShieldAttached{playerid} = false;
	HasBandanaAttached{playerid} = false;
    IsCaged{playerid} = false;
    IsRobbingIsle{playerid} = false;
    IsRobbingVegas{playerid} = false;
    IsRobbingRedsands{playerid} = false;
    IsRobbingCalg{playerid} = false;
    IsRobbingDrag{playerid} = false;
    IsRobbingNVPD{playerid} = false;
    IsRobbingClub{playerid} = false;
    IsRobbingGym{playerid} = false;
    IsRobbingBank1{playerid} = false;
    IsRobbingBank2{playerid} = false;
    IsRobbingBank3{playerid} = false;
    IsRobbingBank4{playerid} = false;
    IsRobbingNVPD{playerid} = false;
    IsRobbingHall{playerid} = false;
    IsRobbingBar{playerid} = false;
    IsRobbingFBI{playerid} = false;
    IsRobbingUNI{playerid} = false;
    IsRobbingCIA{playerid} = false;
    IsRobbingAmmu1{playerid} = false;
    IsRobbingAmmu2{playerid} = false;
    IsRobbingAmmu3{playerid} = false;
    IsRobbingAmmu4{playerid} = false;
    IsRobbingAmmu5{playerid} = false;
    IsRobbingAmmu6{playerid} = false;
    IsRobbingShot1{playerid} = false;
    IsRobbingShot2{playerid} = false;
    IsRobbingShot3{playerid} = false;
    IsRobbingShot4{playerid} = false;
    IsRobbingShot5{playerid} = false;
    IsRobbingCluck1{playerid} = false;
    IsRobbingCluck2{playerid} = false;
    IsRobbingCluck3{playerid} = false;
    IsRobbingStore1{playerid} = false;
    IsRobbingStore2{playerid} = false;
    IsRobbingStore3{playerid} = false;
    IsRobbingStore4{playerid} = false;
    IsRobbingPizza{playerid} = false;
    HasBeenIssuedTicket{playerid} = false;
    IsVIPInColorMode{playerid} = false;

    IsAtEvent{playerid} = 0;

    IsInGod{playerid} = 0;
	IsInGodCar{playerid} = 0;

    if(reason <= 46 && HasHit[playerid] != 0 && HasPlacedHit[playerid] != killerid)
    {
        format(fstr, sizeof(fstr), "[HIT]: %s [%d] killed %s [%d] and recieved $%d for a completed hit contract.", GetName(killerid), killerid, GetName(playerid), playerid, HasHit[playerid]);
       	SendMessageToAll(RED, fstr);
        new current_zone;
 		current_zone = Player_Zone[killerid];
	    format(fstr, sizeof(fstr), "[DISPATCH]: %s [%d] has just murdered %s [%d] at %s", GetName(killerid), killerid, GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
		CopRadio(BLUE, fstr);
       	GivePlayerCash(HasPlacedHit[playerid], -HasHit[playerid]);
       	GivePlayerCash(killerid, HasHit[playerid]);
     	SetPlayerWantedLevel(killerid, GetPlayerWantedLevel(killerid) + 4);
      	PlayerInfo[killerid][pKills] ++;
     	PlayerInfo[playerid][pDeaths] ++;
      	HasHit[playerid] = 0;
     	HasPlacedHit[playerid] = -1;
    }
    else if(HasPlacedHit[killerid] == playerid && HasHit[killerid] != 0)
    {
        format(fstr, sizeof(fstr), "[HIT]: The hit on %s [%d] has been cancelled [Revenge]", GetName(killerid), killerid);
        SendMessageToAll(RED, fstr);
       	new current_zone;
 		current_zone = Player_Zone[killerid];
	    format(fstr, sizeof(fstr), "[DISPATCH]: %s [%d] has just murdered %s [%d] at %s", GetName(killerid), killerid, GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
		CopRadio(BLUE, fstr);
        HasHit[killerid] = 0;
        HasPlacedHit[killerid] = -1;
        PlayerInfo[killerid][pKills] ++;
        PlayerInfo[playerid][pDeaths] ++;
    }
    else if(HasPlacedHit[playerid] == killerid && HasHit[playerid] != 0)
    {
        format(fstr, sizeof(fstr), "[HIT]: The hit on %s [%d] has been cancelled [Cancelled]", GetName(playerid), playerid);
        SendMessageToAll(RED, fstr);
        new current_zone;
 		current_zone = Player_Zone[killerid];
	    format(fstr, sizeof(fstr), "[DISPATCH]: %s [%d] has just murdered %s [%d] at %s", GetName(killerid), killerid, GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
		CopRadio(BLUE, fstr);
        HasHit[playerid] = 0;
        HasPlacedHit[playerid] = -1;
        PlayerInfo[killerid][pKills] ++;
        PlayerInfo[playerid][pDeaths] ++;
    }
	if(GetTeam{killerid} == CLASS_CIV)
    {
	    SetPlayerWantedLevel(killerid,GetPlayerWantedLevel(killerid) + 4);
	    PlayerInfo[killerid][pKills] ++;
	    PlayerInfo[playerid][pDeaths] ++;
		SendClientMessage(killerid, RED, "You have commited murder. [WANTED LEVEL INCREASED]");
		return 1;
    }
    if(GetTeam{playerid} == CLASS_CIV && GetTeam{killerid} == CLASS_COPS || GetTeam{killerid} == CLASS_FBI || GetTeam{killerid} == CLASS_CIA || GetTeam{killerid} == CLASS_ARMY)
	{
		if(GetPlayerWantedLevel(playerid) == 0)
		{
			SetPlayerScore(killerid, GetPlayerScore(killerid)-1);
			SendClientMessage(killerid, WHITE, "Elvis: bazikonan bigonah ra NAKOSHID! /pc! /rules!");
			GivePlayerCash(killerid, -10000);
			PlayerInfo[killerid][pKills] ++;
			PlayerInfo[playerid][pDeaths] ++;
			SetPlayerScore(killerid, GetPlayerScore(killerid)-1);
			IsUnfairDeath{playerid} = true;
			SetPlayerHealth(killerid, 0.0);
			return 1;
		}
		else if(GetPlayerWantedLevel(playerid) <= 3 && GetPlayerWantedLevel(playerid) >= 1)
		{
			SendClientMessage(killerid, WHITE, "Elvis: DONT KILL innocent suspects! /pc! Ticket them! /tk!");
			SetPlayerScore(killerid, GetPlayerScore(killerid)-1);
			PlayerInfo[killerid][pKills] ++;
			PlayerInfo[playerid][pDeaths] ++;
			GivePlayerCash(killerid, -10000);
			IsUnfairDeath{playerid} = true;
			SetPlayerHealth(killerid, 0.0);
			return 1;
		}
		else if(GetPlayerWantedLevel(playerid) >= 4)
		{
			if(GetTeam{killerid} == CLASS_COPS)
			{
				SetPlayerScore(killerid, GetPlayerScore(killerid)+1);
				SetPlayerScore(playerid, GetPlayerScore(playerid)-1);
				format(fstr2, sizeof(fstr2), "Suspect %s [%d] has been taken down by Officer %s [%d]",GetName(playerid),playerid,GetName(killerid),killerid);
				SendMessageToAll(RED,fstr2);
				GoToJail{playerid} = true;
				GivePlayerCash(killerid, 10000);
				PlayerInfo[killerid][pKills] ++;
				PlayerInfo[playerid][pDeaths] ++;
				SetPlayerWantedLevel(playerid, 0);
				return 1;
			}
			else if(GetTeam{killerid} == CLASS_CIA)
			{
				SetPlayerScore(killerid, GetPlayerScore(killerid)+1);
    			SetPlayerScore(playerid, GetPlayerScore(playerid)-1);
				format(fstr2, sizeof(fstr2), "Suspect %s [%d] has been taken down by a Undercover CIA Agent",GetName(playerid),playerid);
			    SendMessageToAll(RED,fstr2);
				SendClientMessage(killerid, YELLOW," Good Job! You killed a wanted criminal.");
				GivePlayerCash(killerid, 10000);
				GoToJail{playerid} = true;
				PlayerInfo[killerid][pKills] ++;
	            PlayerInfo[playerid][pDeaths] ++;
				SetPlayerWantedLevel(playerid, 0);
				return 1;
			}
			else if(GetTeam{killerid} == CLASS_FBI)
			{
				SetPlayerScore(killerid, GetPlayerScore(killerid)+1);
				SetPlayerScore(playerid, GetPlayerScore(playerid)-1);
				format(fstr2, sizeof(fstr2), "Suspect %s [%d] has been taken down by a  FBI Agent.",GetName(playerid),playerid);
				SendMessageToAll(RED,fstr2);
				SendClientMessage(killerid, YELLOW," Good Job! You killed a wanted criminal.");
				GivePlayerCash(killerid, 10000);
				GoToJail{playerid} = true;
				PlayerInfo[killerid][pKills] ++;
				PlayerInfo[playerid][pDeaths] ++;
				SetPlayerWantedLevel(playerid, 0);
				return 1;
			}
			else if(GetTeam{killerid} == CLASS_ARMY)
			{
				SetPlayerScore(killerid, GetPlayerScore(killerid)+1);
				SetPlayerScore(playerid, GetPlayerScore(playerid)-1);
				format(fstr2, sizeof(fstr2), "Suspect %s [%d] has been taken down by a  Army Soldier",GetName(playerid),playerid);
				SendMessageToAll(RED,fstr2);
				SendClientMessage(killerid, YELLOW," Good Job! You killed a wanted criminal.");
				GoToJail{playerid} = true;
				GivePlayerCash(killerid, 10000);
				PlayerInfo[killerid][pKills] ++;
				PlayerInfo[playerid][pDeaths] ++;
				SetPlayerWantedLevel(playerid, 0);
				return 1;
			}
		}
		else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_ARMY && GetTeam{killerid} == CLASS_COPS || GetTeam{killerid} == CLASS_FBI || GetTeam{killerid} == CLASS_CIA || GetTeam{killerid} == CLASS_ARMY)
		{
			SetPlayerScore(killerid, GetPlayerScore(killerid)-1);
			PlayerInfo[killerid][pKills] ++;
			PlayerInfo[playerid][pDeaths] ++;
			SendClientMessage(killerid, WHITE, "Elvis: Ham Timi khod ra NAKOSHID! /pc! /rules!");
			GivePlayerCash(killerid, -10000);
			IsUnfairDeath{playerid} = true;
			SetPlayerHealth(killerid, 0.0);
			return 1;
		}
	}
    return 1;
}

public OnPlayerUpdate(playerid)
{
    //pool bejaye score by abol :|
//	SetPlayerScore(playerid,GetPlayerCash(playerid));
    //
	if(IsPlayerNPC(playerid)) return 1;
    if(HasSpawned{playerid} == true && GetPlayerState(playerid) != PLAYER_STATE_NONE)
	{
		new string[3000];
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new veh = GetPlayerVehicleID(playerid);
/*
            new Float:speed_x, Float:speed_y, Float:speed_z, Float:temp_speed, final_speed;
			GetVehicleVelocity(veh, speed_x,speed_y, speed_z);
			temp_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+(speed_z*speed_z)) * 136.666667;
			final_speed = floatround(temp_speed, floatround_round);
*/
            GetVehicleHealth(veh, GetVehicleCurrentHealth[veh]);
            GetVehicleCurrentHealth[veh] = GetVehicleCurrentHealth[veh]/10;

			Update3DSpeedometer(playerid, GetPlayerSpeed(playerid), GetVehicleFuel[veh], GetVehicleCurrentHealth[veh]);
 
			if(GetVehicleFuel[veh] < 1)
			{
				GetVehicleFuel[veh] = 0;
 			    GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, vcondition);
				SetVehicleParamsEx(veh, OFF, lights, ON, doors, ON, ON, vcondition);
				GameTextForPlayer(playerid, "~r~Benzin tamam kard!", 5000, 5);
				//return 1;
			}
  	        new current_zone;
            current_zone = Player_Zone[playerid];
		    new zone[50];
            GetPlayerCity(playerid, zone, sizeof(zone));
		  	format(string, sizeof(string), "~w~A~b~~h~C~w~N~r~R ~r~~h~V~w~2.2.2 - ~g~Forum/site~w~: just-samp.rozblog.com - ~y~Speed~w~: ~r~%.0f~b~Km/h ~w~- ~b~~h~~h~Benzin~w~: ~r~%d~w~%%% ~w~- ~p~health~w~: ~r~%.0f~w~%%% ~w~- ~g~Location~w~: ~r~~h~%s ~w~- ~g~~h~City~w~: ~r~~h~%s", GetPlayerSpeed(playerid), GetVehicleFuel[veh], GetVehicleCurrentHealth[veh], ZoneNames[current_zone][zone_name], zone);
		    TextDrawSetString(ACNRInfo[playerid], string);
		}
		else
		{
    		new current_zone, Float:health, Float:armour;
    		GetPlayerArmour(playerid,armour);
	    	GetPlayerHealth(playerid,health);
	
//			if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n armour: %f \n pArmour: %f \n pHealth: %f",health, armour, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

		    new zone[50];
            GetPlayerCity(playerid, zone, sizeof(zone));
           	current_zone = Player_Zone[playerid];
	    	format(string, sizeof(string), "~w~A~b~~h~C~w~N~r~R ~r~~h~V~w~2.2.2 - ~g~Forum/site~w~: just-samp.rozblog.com - ~y~Armour~w~: ~r~%.0f~w~%%% ~w~- ~p~Health~w~: ~r~%.0f~w~%%% ~w~- ~g~Location~w~: ~r~~h~%s ~w~- ~g~~h~City~w~: ~r~~h~%s",armour,health,ZoneNames[current_zone][zone_name], zone);
	    	TextDrawSetString(ACNRInfo[playerid], string);
		}
	}

	//Drunk Code
	new drunk2 = GetPlayerDrunkLevel(playerid);
	if(drunk2 < 100)
	{
	    SetPlayerDrunkLevel(playerid,2000);
	}
	else
	{
	    if(DLlast[playerid] != drunk2)
	    {
	        new fps = DLlast[playerid] - drunk2;

	        if((fps > 0) && (fps < 200))
			FPS2[playerid] = fps;
			DLlast[playerid] = drunk2;
		}
	}

    if(cambug{playerid} == 1)
	{
        if(IsPlayerInAnyVehicle(playerid))
	    {
            SetCameraBehindPlayer(playerid);
	    }
	}
	
	if(IsInGod{playerid} == 1)
	{
		SetPlayerHealth(playerid, 99999);
	}
	if(IsInGodCar{playerid} == 1)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
		    RepairVehicle(GetPlayerVehicleID(playerid));
	    }
	}

	if(IsAccseptSong[playerid] == 1)
	{
    	if(GetPlayerInterior(playerid) == 17)
    	{
    	    if(IsPlayerInRangeOfPoint(playerid,70.0,489.5824,-14.7563,1000.6797))
    		{
    		    if(!GetPVarInt(playerid,"alhambra"))
   			    {
	        	    SetPVarInt(playerid,"alhambra",1);
    	    	    PlayAudioStreamForPlayer(playerid, "https://musicsweb.musicmelnet.com/musics/03/02/PSY%20-%20GANGNAM%20STYLE%20%20-%20320.mp3",480.9575,-3.5402,1002.0781,40.0,true);
                }
	    	}
    	}
    	else
    	{
    		if(GetPVarInt(playerid,"alhambra"))
    		{
	     		DeletePVar(playerid,"alhambra");
	    		StopAudioStreamForPlayer(playerid);
	    	}
    	}
	}
	else if(IsAccseptSong[playerid] == 0)
	{
		StopAudioStreamForPlayer(playerid);
	}
	
	if(noclipdata[playerid][cameramode] == CAMERA_MODE_FLY)
	{
		new keys,ud,lr;
		GetPlayerKeys(playerid,keys,ud,lr);

		if(noclipdata[playerid][mode] && (GetTickCount() - noclipdata[playerid][lastmove] > 100))
		{
		    // If the last move was > 100ms ago, process moving the object the players camera is attached to
		    MoveCamera(playerid);
		}

		// Is the players current key state different than their last keystate?
		if(noclipdata[playerid][udold] != ud || noclipdata[playerid][lrold] != lr)
		{
			if((noclipdata[playerid][udold] != 0 || noclipdata[playerid][lrold] != 0) && ud == 0 && lr == 0)
			{   // All keys have been released, stop the object the camera is attached to and reset the acceleration multiplier
				StopPlayerObject(playerid, noclipdata[playerid][flyobject]);
				noclipdata[playerid][mode]      = 0;
				noclipdata[playerid][accelmul]  = 0.0;
			}
			else
			{   // Indicates a new key has been pressed

			    // Get the direction the player wants to move as indicated by the keys
				noclipdata[playerid][mode] = GetMoveDirectionFromKeys(ud, lr);

				// Process moving the object the players camera is attached to
				MoveCamera(playerid);
			}
		}
		noclipdata[playerid][udold] = ud; noclipdata[playerid][lrold] = lr; // Store current keys pressed for comparison next update
		return 0;
	}
	return 1;
}

stock GetMoveDirectionFromKeys(ud, lr)
{
	new direction = 0;

    if(lr < 0)
	{
		if(ud < 0) 		direction = MOVE_FORWARD_LEFT; 	// Up & Left key pressed
		else if(ud > 0) direction = MOVE_BACK_LEFT; 	// Back & Left key pressed
		else            direction = MOVE_LEFT;          // Left key pressed
	}
	else if(lr > 0) 	// Right pressed
	{
		if(ud < 0)      direction = MOVE_FORWARD_RIGHT;  // Up & Right key pressed
		else if(ud > 0) direction = MOVE_BACK_RIGHT;     // Back & Right key pressed
		else			direction = MOVE_RIGHT;          // Right key pressed
	}
	else if(ud < 0) 	direction = MOVE_FORWARD; 	// Up key pressed
	else if(ud > 0) 	direction = MOVE_BACK;		// Down key pressed

	return direction;
}

stock MoveCamera(playerid)
{
	new Float:FV[3], Float:CP[3];
	GetPlayerCameraPos(playerid, CP[0], CP[1], CP[2]);          // 	Cameras position in space
    GetPlayerCameraFrontVector(playerid, FV[0], FV[1], FV[2]);  //  Where the camera is looking at

	// Increases the acceleration multiplier the longer the key is held
	if(noclipdata[playerid][accelmul] <= 1) noclipdata[playerid][accelmul] += ACCEL_RATE;

	// Determine the speed to move the camera based on the acceleration multiplier
	new Float:speed = MOVE_SPEED * noclipdata[playerid][accelmul];

	// Calculate the cameras next position based on their current position and the direction their camera is facing
	new Float:X, Float:Y, Float:Z;
	GetNextCameraPosition(noclipdata[playerid][mode], CP, FV, X, Y, Z);
	MovePlayerObject(playerid, noclipdata[playerid][flyobject], X, Y, Z, speed);

	// Store the last time the camera was moved as now
	noclipdata[playerid][lastmove] = GetTickCount();
	return 1;
}

stock GetNextCameraPosition(move_mode, Float:CP[3], Float:FV[3], &Float:X, &Float:Y, &Float:Z)
{
    // Calculate the cameras next position based on their current position and the direction their camera is facing
    #define OFFSET_X (FV[0]*6000.0)
	#define OFFSET_Y (FV[1]*6000.0)
	#define OFFSET_Z (FV[2]*6000.0)
	switch(move_mode)
	{
		case MOVE_FORWARD:
		{
			X = CP[0]+OFFSET_X;
			Y = CP[1]+OFFSET_Y;
			Z = CP[2]+OFFSET_Z;
		}
		case MOVE_BACK:
		{
			X = CP[0]-OFFSET_X;
			Y = CP[1]-OFFSET_Y;
			Z = CP[2]-OFFSET_Z;
		}
		case MOVE_LEFT:
		{
			X = CP[0]-OFFSET_Y;
			Y = CP[1]+OFFSET_X;
			Z = CP[2];
		}
		case MOVE_RIGHT:
		{
			X = CP[0]+OFFSET_Y;
			Y = CP[1]-OFFSET_X;
			Z = CP[2];
		}
		case MOVE_BACK_LEFT:
		{
			X = CP[0]+(-OFFSET_X - OFFSET_Y);
 			Y = CP[1]+(-OFFSET_Y + OFFSET_X);
		 	Z = CP[2]-OFFSET_Z;
		}
		case MOVE_BACK_RIGHT:
		{
			X = CP[0]+(-OFFSET_X + OFFSET_Y);
 			Y = CP[1]+(-OFFSET_Y - OFFSET_X);
		 	Z = CP[2]-OFFSET_Z;
		}
		case MOVE_FORWARD_LEFT:
		{
			X = CP[0]+(OFFSET_X  - OFFSET_Y);
			Y = CP[1]+(OFFSET_Y  + OFFSET_X);
			Z = CP[2]+OFFSET_Z;
		}
		case MOVE_FORWARD_RIGHT:
		{
			X = CP[0]+(OFFSET_X  + OFFSET_Y);
			Y = CP[1]+(OFFSET_Y  - OFFSET_X);
			Z = CP[2]+OFFSET_Z;
		}
	}
}

stock CancelFlyMode(playerid)
{
	DeletePVar(playerid, "FlyMode");
	CancelEdit(playerid);
	TogglePlayerSpectating(playerid, false);

	DestroyPlayerObject(playerid, noclipdata[playerid][flyobject]);
	noclipdata[playerid][cameramode] = CAMERA_MODE_NONE;
	return 1;
}

stock FlyMode(playerid)
{
	// Create an invisible object for the players camera to be attached to
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	noclipdata[playerid][flyobject] = CreatePlayerObject(playerid, 19300, X, Y, Z, 0.0, 0.0, 0.0);

	// Place the player in spectating mode so objects will be streamed based on camera location
	TogglePlayerSpectating(playerid, true);
	// Attach the players camera to the created object
	AttachCameraToPlayerObject(playerid, noclipdata[playerid][flyobject]);

	SetPVarInt(playerid, "FlyMode", 1);
	noclipdata[playerid][cameramode] = CAMERA_MODE_FLY;
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{	
	printf("|--------------------------Player Disconnecting (%d) (ACNR)--------------------------|", playerid);

	if(tds_Player[playerid][Status] != INVALID_OBJECT_ID)
	{
		DestroyDynamicObject(tds_Player[playerid][Namev]);
		DestroyDynamicObject(tds_Player[playerid][Status]);
		DestroyDynamicObject(tds_Player[playerid][Speedr]);
	}
		
	if(HasEventStarted == 1 && HasMadeEvent{playerid} == 1)
    {
    foreach(new i : Player)
    {
    if(IsAtEvent{i} == 1)
    {
    SetPlayerPos(i, pPos[evX], pPos[evY], pPos[evZ]);
    SetPlayerFacingAngle(i, pPos[evA]);
    foreach(new v : Vehicle)
	{
	    if(eventvehs[v] == 1)
		{
            DestroyVehicle(v);
            eventvehs[v] = 0;
        }
    }
    eventvehsused = 0;
//	SetPlayerVirtualWorld(i, 0);
    ResetPlayerWeapons(i);
    TogglePlayerControllable(i,true);
    IsAtEvent{i} = 0;
    }
    }
    SendMessageToAll(WHITE, "Elvis: The event is now over.");
    GameTextForAll("~r~Event Over", 5000, 5);
    HasEventStarted = 0;
    CantJoinEvent = 0;
    HasAdminStoppedJoins = 0;
    HasMadeEvent{playerid} = 0;
    SendMessageToAll(RED,"Event Organizer left ther server");
    }

    SavePosStats(playerid);

    KillTimer(biztimer{playerid});
    KillTimer(attimer{playerid});
    KillTimer(isletimer{playerid});
	KillTimer(vegastimer{playerid});
	KillTimer(redsandstimer{playerid});
	KillTimer(calgtimer{playerid});
	KillTimer(dragtimer{playerid});
	KillTimer(banktimer{playerid});
	KillTimer(nvpdtimer{playerid});
	KillTimer(halltimer{playerid});
	KillTimer(bartimer{playerid});
	KillTimer(ammutimer{playerid});
	KillTimer(kelisatimer{playerid});
	KillTimer(shottimer{playerid});
	KillTimer(clucktimer{playerid});
	KillTimer(storetimer{playerid});
	KillTimer(pizzatimer{playerid});
	KillTimer(clubtimer{playerid});
	KillTimer(gymtimer{playerid});
	KillTimer(fbitimer{playerid});
	KillTimer(unitimer{playerid});
	KillTimer(ciatimer{playerid});
	KillTimer(ZoneTimer[playerid]);
	KillTimer(JailTimer[playerid]);
	KillTimer(CageTimer[playerid]);
    KillTimer(FPSTimer[playerid]);

	Inactive[playerid] = false;

	TextDrawDestroy(FPS[playerid]);
    TextDrawDestroy(esmmashin[playerid]);
    TextDrawDestroy(ACNRInfo[playerid]);
    TextDrawDestroy(UnderPPWtd[playerid]);
    TextDrawDestroy(playerwanted[playerid]);

	SaveGunStats(playerid);

 	RemovePlayerAttachedObject(playerid, 0);
	RemovePlayerAttachedObject(playerid, 1);

    if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	{
	    //
	    if(JailTime[playerid] > 0)
	    {
	        PlayerInfo[playerid][jTime] = JailTime[playerid];
	    }
	    if(CageTime[playerid] > 0)
	    {
	        PlayerInfo[playerid][cTime] = CageTime[playerid];
	    }
	    //

		SaveBankStats(playerid);
    	SaveFightStats(playerid);
    	SaveUserStats(playerid);
    	SaveDegreeStats(playerid);
    }

    HasDied{playerid} = false;
    HasSpawned{playerid} = false;
    HasConnectedSpawned{playerid} = false;
    IsPlayerUsingTuneMenu{playerid} = false;
    HasBeenArrested{playerid} = false;
    IsNewbieMutted{playerid} = false;
    HasBeenTied{playerid} = false;
    HasBeenCuffed{playerid} = false;
    IsCaged{playerid} = false;
    IsInCellCP{playerid} = false;
    IsInCellCP1{playerid} = false;
    IsInCellCP2{playerid} = false;
    IsInCellCP3{playerid} = false;
    IsInCellCP4{playerid} = false;
    IsInCellCP5{playerid} = false;
    IsInCellCP6{playerid} = false;
    CanESC{playerid} = true;
    GoToJail{playerid} = false;
	IsJailed{playerid} = false;
    HasSavedPos{playerid} = false;
    IsPlayerEditingObject{playerid} = false;
    IsPlayerAttachingObject{playerid} = false;
    IsPlayerRobbingBiz{playerid} = false;
    IsPlayerSetBuilder{playerid} = false;
	IsPlayerRobbingHouse{playerid} = false;
	IsPlayerInArena{playerid} = false;
	IsPlayerGettingMatsNV{playerid} = false;
	IsPlayerGettingMatsBS{playerid} = false;
    IsRobbingIsle{playerid} = false;
    IsRobbingVegas{playerid} = false;
    IsRobbingRedsands{playerid} = false;
    IsRobbingCalg{playerid} = false;
    IsRobbingDrag{playerid} = false;
    IsRobbingNVPD{playerid} = false;
    IsRobbingClub{playerid} = false;
    IsRobbingGym{playerid} = false;
    IsRobbingBank1{playerid} = false;
    IsRobbingBank2{playerid} = false;
    IsRobbingBank3{playerid} = false;
    IsRobbingBank4{playerid} = false;
    IsRobbingNVPD{playerid} = false;
    IsRobbingHall{playerid} = false;
    IsRobbingBar{playerid} = false;
    IsRobbingFBI{playerid} = false;
    IsRobbingUNI{playerid} = false;
    IsRobbingCIA{playerid} = false;
    IsRobbingAmmu1{playerid} = false;
    IsRobbingAmmu2{playerid} = false;
    IsRobbingAmmu3{playerid} = false;
    IsRobbingAmmu4{playerid} = false;
    IsRobbingAmmu5{playerid} = false;
    IsRobbingAmmu6{playerid} = false;
    IsRobbingShot1{playerid} = false;
    IsRobbingShot2{playerid} = false;
    IsRobbingShot3{playerid} = false;
    IsRobbingShot4{playerid} = false;
    IsRobbingShot5{playerid} = false;
    IsRobbingCluck1{playerid} = false;
    IsRobbingCluck2{playerid} = false;
    IsRobbingCluck3{playerid} = false;
    IsRobbingStore1{playerid} = false;
    IsRobbingStore2{playerid} = false;
    IsRobbingStore3{playerid} = false;
    IsRobbingStore4{playerid} = false;
    IsRobbingPizza{playerid} = false;
    HasBeenIssuedTicket{playerid} = false;
    IsVIPInColorMode{playerid} = false;
    HasChangedSkin{playerid} = false;
    HasPlayerDiedInJail{playerid} = false;
    HasPlayerDiedInCage{playerid} = false;
	HasBandanaAttached{playerid} = false;
	HasShieldAttached{playerid} = false;
	IsAdminUnderCover{playerid} = false;
	IsPlayersFirstSpawn{playerid} = false;

    if(IsPlayerBeingSpectated{playerid} == true && PlayerBeingSpectatedBy[playerid] != -1)
	{
	    if(IsAdminSpectating{PlayerBeingSpectatedBy[playerid]} == true && SpecInfo[PlayerBeingSpectatedBy[playerid]][IsSpectating] == playerid)
	    {
    		TogglePlayerSpectating(PlayerBeingSpectatedBy[playerid], false);
	    }
	}
	SpecInfo[playerid][IsSpectating] = -1;
    IsAdminSpectating{playerid} = false;
    IsPlayerBeingSpectated{playerid} = false;
    PlayerBeingSpectatedBy[playerid] = -1;

    GetPlayerLastVehicleID[playerid] = -1;

    hasenteredtower{playerid} = 0;
    
    PVeh[playerid] = -1;

    IsLoggedIn{playerid} = 0;
    BomberStage{playerid} = 0;
    BribeTo[playerid] = -1;
	Bribe[playerid] = -1;
	BribeFrom[playerid] = -1;
    IsInGod{playerid} = 0;
    IsOnduty{playerid} = 0;
    IsInGodCar{playerid} = 0;
    IsMuted{playerid} = 0;
    IsIgnoringPMs{playerid} = 0;
    HasLotteryTicket{playerid} = 0;
    HasMadeEvent{playerid} = 0;
	IsAtEvent{playerid} = 0;
	HasAdminStoppedJoins = 0;
	text_line_count{playerid} = 0;
    HasSetCheckpoint{playerid} = 0;
    lastx[playerid] = 0.0;
	lasty[playerid] = 0.0;
	lastz[playerid] = 0.0;
	chattingwith[playerid] = -1;
	shotsfired[playerid] = 0;
	
	cambug{playerid} = 0;
	IsAnopmOn{playerid} = 0;
	mohlatincpass{playerid} = 0;
	
    Voted[playerid] = -1;

	switch(reason)
    {
    	case 0:
    	{
        	format(fstr2,sizeof(fstr2), "[PART]: %s [%d] has left the server [Timeout/Crash]",GetName(playerid),playerid);
        	SendMessageToAll(GREY, fstr2);
    	}
    	case 1:
    	{
        	format(fstr2,sizeof(fstr2), "[PART]: %s [%d] has left the server [Quit/Khoroj]",GetName(playerid),playerid);
        	SendMessageToAll(GREY, fstr2);
    	}
    	case 2:
    	{
        	format(fstr2,sizeof(fstr2), "[PART]: %s [%d] has left the server [Kick/Ban]",GetName(playerid),playerid);
        	SendMessageToAll(GREY, fstr2);
    	}
    	case 3:
    	{
        	format(fstr2,sizeof(fstr2), "[PART]: %s [%d] has left the server [Custom]",GetName(playerid),playerid);
        	SendMessageToAll(GREY, fstr2);
    	}
    	case 4:
    	{
        	format(fstr2,sizeof(fstr2), "[PART]: %s [%d] has left the server [Mode End]",GetName(playerid),playerid);
        	SendMessageToAll(GREY, fstr2);
    	}
    }

   	if(HasHit[playerid] > 0)
	{
	    new string[150];
		format(string, sizeof(string), "[HIT]: The hit on %s [%d] has been cancelled [Disconnected]", GetName(playerid), playerid);
		SendMessageToAll(RED, string);
		HasHit[playerid] = 0;
		HasPlacedHit[playerid] = -1;
	}

    UnloadPlayerVehicles(playerid);

    LeaveGroup(playerid, 2);

    new hfile[40];
	format(hfile, sizeof(hfile), HOUSE_FILE, LastHouseCP[playerid]);
    if(!strcmp(GetHouseOwner(LastHouseCP[playerid]), pNick(playerid), false) && IsInHouse[playerid] == 1 && fexist(hfile))
	{
	    HouseInfo[playerid][hQuit] = 1;
	}
	foreach(new i : Vehicle)
	{
	    if(VehicleBombOwner[i] == playerid)
	    {
	        VehicleBombOwner[i] = INVALID_PLAYER_ID;
		}
	}
	for(new o = 0; o < MAX_SET_OBJECTS; o++)
	{
	    if(GetSetObjects[playerid][o] == -1) continue;
    	DestroyObject(GetSetObjects[playerid][o]);
    	GetSetObjects[playerid][o] = -1;
    	GetSetObjectsCount[playerid]--;
    }

	printf("|--------------------------Player Disconnected (%d) (ACNR)--------------------------|", playerid);
	return 1;
}
//

#define MAX_IP_CONNECTS 5//Anti-BOT Attack ()
stock GetIPCount(ip[])//Anti-BOT Attack ()
{
    new ip_check[50], ip_count;
    foreach(new i : Player)
	{
        if(IsPlayerConnected(i))
        {
		    GetPlayerIp(i, ip_check, sizeof(ip_check));
		    if(!strcmp(ip_check, ip)) ip_count++;
	    }
    }
    return ip_count;
}
//

public OnIncomingConnection(playerid, ip_address[], port)
{
    new incom[200];
    format(incom,sizeof(incom),"Player darhale etesal be server: [ID :  %i] , [IP:Port :  %s:%i]",playerid,ip_address,port);
    SendAdminMessage(GREY,incom);
    return 1;
}

public OnPlayerConnect(playerid)
{
	printf("|--------------------------Player Connecting (%d) (ACNR)--------------------------|", playerid);
    
	SendClientMessage(playerid, PURPLE, "|--------------------------------------------------------------------------------------------------------------------------------------------|");

//	SetPlayerHealth(playerid, 100);
	
	for (new i = 0; i < _:SpeedometerComponents-1; i++)
	{
		tds_Player[playerid][SpeedometerComponents:i] = INVALID_OBJECT_ID;
	}
	tds_Player[playerid][Enabled] = 0;
	is3don[playerid] = 0;

/*    {
	    pGroupInfo[playerid][gid] = -1;
		pGroupInfo[playerid][order] = -1;
		pGroupInfo[playerid][invited] = -1;
		pGroupInfo[playerid][attemptjoin] = -1;

		KillTimer(biztimer{playerid});
    	KillTimer(attimer{playerid});
    	KillTimer(isletimer{playerid});
		KillTimer(vegastimer{playerid});
		KillTimer(redsandstimer{playerid});
		KillTimer(calgtimer{playerid});
		KillTimer(dragtimer{playerid});
		KillTimer(banktimer{playerid});
		KillTimer(nvpdtimer{playerid});
		KillTimer(halltimer{playerid});
		KillTimer(bartimer{playerid});
		KillTimer(ammutimer{playerid});
		KillTimer(kelisatimer{playerid});
		KillTimer(shottimer{playerid});
		KillTimer(clucktimer{playerid});
		KillTimer(storetimer{playerid});
		KillTimer(pizzatimer{playerid});
		KillTimer(clubtimer{playerid});
		KillTimer(gymtimer{playerid});
		KillTimer(fbitimer{playerid});
		KillTimer(unitimer{playerid});
		KillTimer(ciatimer{playerid});
		KillTimer(ZoneTimer[playerid]);
		KillTimer(JailTimer[playerid]);
		KillTimer(CageTimer[playerid]);

		ZoneTimer[playerid] = SetTimerEx("Update_Zones", 1000, true, "d", playerid);
    	ZoneUpdates[playerid] = 1;
		Player_Zone[playerid] = -1;

		IsPlayersFirstSpawn{playerid} = false;

		HasDied{playerid} = false;
    	HasSpawned{playerid} = false;
        HasConnectedSpawned{playerid} = false;
    	IsPlayerUsingTuneMenu{playerid} = false;
    	HasBeenArrested{playerid} = false;
    	IsNewbieMutted{playerid} = false;
    	HasShieldAttached{playerid} = false;
    	HasBandanaAttached{playerid} = false;
    	HasBeenTied{playerid} = false;
    	HasBeenCuffed{playerid} = false;
    	IsCaged{playerid} = false;
    	IsInCellCP{playerid} = false;
    	IsInCellCP1{playerid} = false;
    	IsInCellCP2{playerid} = false;
    	IsInCellCP3{playerid} = false;
    	IsInCellCP4{playerid} = false;
    	IsInCellCP5{playerid} = false;
    	IsInCellCP6{playerid} = false;
    	CanESC{playerid} = true;
    	GoToJail{playerid} = false;
		IsJailed{playerid} = false;
    	HasSavedPos{playerid} = false;
    	IsPlayerEditingObject{playerid} = false;
    	IsPlayerAttachingObject{playerid} = false;
    	IsPlayerRobbingBiz{playerid} = false;
    	IsPlayerSetBuilder{playerid} = false;
		IsPlayerRobbingHouse{playerid} = false;
		IsPlayerInArena{playerid} = false;
		IsPlayerGettingMatsNV{playerid} = false;
		IsPlayerGettingMatsBS{playerid} = false;
    	IsRobbingIsle{playerid} = false;
    	IsRobbingVegas{playerid} = false;
    	IsRobbingRedsands{playerid} = false;
    	IsRobbingCalg{playerid} = false;
    	IsRobbingDrag{playerid} = false;
    	IsRobbingNVPD{playerid} = false;
    	IsRobbingClub{playerid} = false;
    	IsRobbingGym{playerid} = false;
    	IsRobbingBank1{playerid} = false;
    	IsRobbingBank2{playerid} = false;
    	IsRobbingBank3{playerid} = false;
    	IsRobbingBank4{playerid} = false;
    	IsRobbingNVPD{playerid} = false;
    	IsRobbingHall{playerid} = false;
    	IsRobbingBar{playerid} = false;
    	IsRobbingFBI{playerid} = false;
    	IsRobbingUNI{playerid} = false;
    	IsRobbingCIA{playerid} = false;
    	IsRobbingAmmu1{playerid} = false;
    	IsRobbingAmmu2{playerid} = false;
    	IsRobbingAmmu3{playerid} = false;
    	IsRobbingAmmu4{playerid} = false;
    	IsRobbingAmmu5{playerid} = false;
    	IsRobbingAmmu6{playerid} = false;
    	IsRobbingShot1{playerid} = false;
    	IsRobbingShot2{playerid} = false;
    	IsRobbingShot3{playerid} = false;
    	IsRobbingShot4{playerid} = false;
    	IsRobbingShot5{playerid} = false;
    	IsRobbingCluck1{playerid} = false;
    	IsRobbingCluck2{playerid} = false;
    	IsRobbingCluck3{playerid} = false;
    	IsRobbingStore1{playerid} = false;
    	IsRobbingStore2{playerid} = false;
    	IsRobbingStore3{playerid} = false;
    	IsRobbingStore4{playerid} = false;
    	IsRobbingPizza{playerid} = false;
    	HasBeenIssuedTicket{playerid} = false;
    	IsVIPInColorMode{playerid} = false;
    	HasChangedSkin{playerid} = false;
    	IsPlayerUsingAnim{playerid} = false;
    	HasPlayerDiedInJail{playerid} = false;
    	HasPlayerDiedInCage{playerid} = false;
		HasBandanaAttached{playerid} = false;
		HasShieldAttached{playerid} = false;
		IsAdminUnderCover{playerid} = false;

 		RemovePlayerAttachedObject(playerid, 0);
		RemovePlayerAttachedObject(playerid, 1);

    	SpecInfo[playerid][IsSpectating] = -1;
    	IsAdminSpectating{playerid} = false;
    	IsPlayerBeingSpectated{playerid} = false;
    	PlayerBeingSpectatedBy[playerid] = -1;

		hasenteredtower{playerid} = 0;

    	IsInCell{playerid} = 0;
    	InMateID[playerid] = 0;

    	BizRobCP[playerid] = -1;
    	BizID[playerid] = -1;

    	HasHit[playerid] = 0;
		HasPlacedHit[playerid] = -1;
		BomberStage{playerid} = 0;

    	IsLoggedIn{playerid} = 0;
    	BribeTo[playerid] = -1;
		Bribe[playerid] = -1;
		BribeFrom[playerid] = -1;
    	IsInGod{playerid} = 0;
    	IsOnduty{playerid} = 0;
    	IsInGodCar{playerid} = 0;
    	IsMuted{playerid} = 0;
    	IsIgnoringPMs{playerid} = 0;
    	HasLotteryTicket{playerid} = 0;
    	HasMadeEvent{playerid} = 0;
		IsAtEvent{playerid} = 0;
		HasAdminStoppedJoins = 0;
		text_line_count{playerid} = 0;
    	HasSetCheckpoint{playerid} = 0;
    	lastx[playerid] = 0.0;
		lasty[playerid] = 0.0;
		lastz[playerid] = 0.0;
		chattingwith[playerid] = -1;
		shotsfired[playerid] = 0;

		pGroupInfo[playerid][gid] = -1;
		pGroupInfo[playerid][invited] = -1;
		pGroupInfo[playerid][attemptjoin] = -1;

    	verifydestroycar{playerid} = 0;

    	Loop(o, MAX_SET_OBJECTS)
    	{
    		GetSetObjects[playerid][o] = -1;
    	}
		GetSetObjectsCount[playerid] = 0;

    	SetPlayerColor(playerid, GREY);
	}*/
	new badname[50];
	badname = GetName(playerid);
   	new placeholder;
	for(new i = 0; i < sizeof(BadWords); i++)
	{
	    placeholder = strfind(badname,BadWords[i],true);
	    if(placeholder != -1)
	    {
	        for(new x = placeholder; x < placeholder + strlen(BadWords[i]); x++)
	        {
	            badname[x] = 'x';
	            SetPlayerName(playerid,badname);
	        }
	    }
	}
	
    tedadvoro++;
    accssave();

    kenararmyremove(playerid);
    
	RemoveBuildingForPlayer(playerid, 10145, -1951.7578, 659.2891, 82.8750, 0.25);
	
	RemoveBuildingForPlayer(playerid, 7705, 1973.0078, 2358.1641, 9.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 7488, 1973.0078, 2358.1641, 9.8203, 0.25);
    RemoveBuildingForPlayer(playerid, 16590, 199.3438, 1943.7891, 18.2031, 0.25);
    RemoveBuildingForPlayer(playerid, 16619, 199.3359, 1943.8750, 18.2031, 0.25);
    RemoveBuildingForPlayer(playerid, 1697, 220.3828, 1835.3438, 23.2344, 0.25);
    RemoveBuildingForPlayer(playerid, 1697, 228.7969, 1835.3438, 23.2344, 0.25);
    RemoveBuildingForPlayer(playerid, 1697, 236.9922, 1835.3438, 23.2344, 0.25);
    RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
    RemoveBuildingForPlayer(playerid, 16203, 199.3438, 1943.7891, 18.2031, 0.25);
    RemoveBuildingForPlayer(playerid, 16323, 199.3359, 1943.8750, 18.2031, 0.25);
    RemoveBuildingForPlayer(playerid, 8229, 1142.0313, 1362.5000, 12.4844, 0.25);
    RemoveBuildingForPlayer(playerid, 8026, 1677.3906, 843.2266, 8.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 8049, 1677.3906, 843.2266, 8.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1261, 1625.0078, 819.6875, 21.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1261, 1776.3359, 887.1406, 24.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 8310, 1624.7891, 818.9609, 27.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1267, 1625.0078, 819.6875, 21.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 736, 1679.3828, 804.3359, 18.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 736, 1689.2344, 804.3359, 19.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1657.0547, 843.0938, 11.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 736, 1706.6719, 804.3359, 20.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 736, 1698.3984, 804.3359, 19.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 736, 1713.6719, 804.3359, 19.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1540, 1717.5313, 849.9375, 12.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 654, 1728.7578, 791.2969, 9.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 736, 1732.2500, 804.3359, 20.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 736, 1726.1797, 804.3359, 20.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 736, 1719.4219, 804.3359, 20.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 654, 1742.8516, 799.3594, 9.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 763, 1745.2813, 812.1719, 9.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 763, 1766.6250, 737.6250, 9.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 654, 1767.0391, 759.5938, 8.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 654, 1758.0313, 799.3594, 8.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 736, 1769.7422, 790.6484, 20.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 3516, 1776.9922, 828.9688, 12.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3516, 1811.7422, 822.9297, 12.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3516, 1783.5391, 863.4375, 12.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 3516, 1817.5469, 857.6797, 13.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1267, 1776.3359, 887.1406, 24.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 8293, 1775.7500, 887.6250, 29.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 8518, 1877.3906, 843.1953, 8.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 8896, 1877.3906, 843.1953, 8.4844, 0.25);
	buildingremoveformap(playerid);

    ACNRInfo[playerid] = TextDrawCreate(5.000000, 430.000000, "~w~A~b~~h~C~w~N~r~R ~r~~h~V~w~2.2.2 - ~g~Forum/site~w~: just-samp.rozblog.com");
    TextDrawAlignment(ACNRInfo[playerid], 0);
    TextDrawBackgroundColor(ACNRInfo[playerid], 0x000000ff);
    TextDrawFont(ACNRInfo[playerid], 2);
    TextDrawLetterSize(ACNRInfo[playerid], 0.199999, 0.899999);
    TextDrawColour(ACNRInfo[playerid], 0xffffffff);
    TextDrawSetOutline(ACNRInfo[playerid], 1);
    TextDrawSetProportional(ACNRInfo[playerid], 1);
    TextDrawSetShadow(ACNRInfo[playerid], 1);

	FPS[playerid] = TextDrawCreate(555.199462, 53.000000, "FPS : 30");
	TextDrawLetterSize(FPS[playerid], 0.312799, 1.351110);
	TextDrawAlignment(FPS[playerid], 1);
	TextDrawColour(FPS[playerid], WHITE);
	TextDrawSetShadow(FPS[playerid], 0);
	TextDrawSetOutline(FPS[playerid], 1);
	TextDrawBackgroundColor(FPS[playerid], 51);
	TextDrawFont(FPS[playerid], 3);
	TextDrawSetProportional(FPS[playerid], 1);
	FPSTimer[playerid] = SetTimerEx("FPSUP",1000,true,"u",playerid);

    esmmashin[playerid] = TextDrawCreate(500.000000, 350.00000, "VehicleName");
	TextDrawAlignment(esmmashin[playerid], 2);
	TextDrawBackgroundColor(esmmashin[playerid], 255);
	TextDrawFont(esmmashin[playerid], 3);
	TextDrawLetterSize(esmmashin[playerid], 1.0, 2.5);
	TextDrawTextSize(esmmashin[playerid], 375.0, 150.0);
	TextDrawColour(esmmashin[playerid], GREEN);
	TextDrawSetOutline(esmmashin[playerid], 0);
	TextDrawSetProportional(esmmashin[playerid], 1);
	TextDrawSetShadow(esmmashin[playerid], 1);
	TextDrawSetSelectable(esmmashin[playerid], 0);

    UnderPPWtd[playerid] = TextDrawCreate(550.666564, 78.873992, "          ~n~     ");
    TextDrawLetterSize(UnderPPWtd[playerid], 0.608330, 5.001471);
    TextDrawTextSize(UnderPPWtd[playerid], 0.000000, 210.000000);
    TextDrawAlignment(UnderPPWtd[playerid], 2);
    TextDrawColour(UnderPPWtd[playerid], -1);
    TextDrawUseBox(UnderPPWtd[playerid], 1);
    TextDrawBoxColor(UnderPPWtd[playerid], -1);
    TextDrawSetShadow(UnderPPWtd[playerid], 0);
    TextDrawSetOutline(UnderPPWtd[playerid], 0);
    TextDrawBackgroundColor(UnderPPWtd[playerid], 255);
    TextDrawFont(UnderPPWtd[playerid], 3);
    TextDrawSetProportional(UnderPPWtd[playerid], 0);
    TextDrawSetShadow(UnderPPWtd[playerid], 0);
    
    playerwanted[playerid] = TextDrawCreate(630.7,82.5,"");
	TextDrawFont(playerwanted[playerid], 2);
	TextDrawSetShadow(playerwanted[playerid],1);
    TextDrawSetOutline(playerwanted[playerid],1);
    TextDrawBackgroundColor(playerwanted[playerid],0x000000FF);
    TextDrawColour(playerwanted[playerid],WHITE);
    TextDrawAlignment(playerwanted[playerid],3);
	TextDrawLetterSize(playerwanted[playerid],0.6,2.2);
	TextDrawTextSize(playerwanted[playerid], 10.000000, 42.000000);
    TextDrawSetProportional(playerwanted[playerid], 1);

//------------------------------------------------------------------------------//
    SetGameModeText("NightLifeDOZDvaPOLICE(CnR)V2.2.2");
    SendRconCommand("rcon_password 174");
    SendRconCommand("weburl Just-SaMp.RozBlog.COM");
//------------------------------------------------------------------------------//

	TextDrawHideForPlayer(playerid , txtDateDisp);
	TextDrawHideForPlayer(playerid , txtTimeDisp);
	TextDrawHideForPlayer(playerid , FPS[playerid]);
    TextDrawHideForPlayer(playerid , UnderPPWtd[playerid]);
	TextDrawHideForPlayer(playerid , playerwanted[playerid]);
	TextDrawHideForPlayer(playerid , esmmashin[playerid]);

	new trand = random(sizeof(LOADSCS));
	TextDrawShowForPlayer(playerid, LOADSCS[trand]);
	if(trand == 0)
	{
        TextDrawShowForPlayer(playerid, MULTITD);
	}
	else
	{
        TextDrawShowForPlayer(playerid, MULTIPLAYER);
	}
	
	PlayAudioStreamForPlayer(playerid, "https://dl.prokerala.com/downloads/ringtones/files/mp3/gtasanandreasthemesongfullyoutube360pextaudio-34356.mp3");

	//Anti-BOT Attack ()
	new ip_check[50], ban[64], elvis[150];
    GetPlayerIp(playerid, ip_check, sizeof(ip_check));
    new get_ip_count = GetIPCount(ip_check);
	if(get_ip_count > MAX_IP_CONNECTS)
	{
	    printf("Removing suspected BOT ip: %s...", ip_check);
	    format(elvis, sizeof(elvis), "Elvis has banned %s [%d] from ACNR - Dalil: BOT attack (multi acc > %d)", GetName(playerid), playerid, MAX_IP_CONNECTS);
	   	SendMessageToAll(RED, elvis);
	   	SendClientMessage(playerid, RED, elvis);
	   	print(elvis);
	   	format(ban, sizeof(ban), "banip %s", ip_check);
        SendRconCommand(ban);
        Ban(playerid);
        tedadeban++;
        accssave();
        return 1;
    }
    //

    InitFly(playerid);
    IsFlying[playerid] = false;
    
	Inactive[playerid] = false;
    
    if(fexist(ACNR_ACCS))
	{
        INI_ParseFile(ACNR_ACCS, "loadaccs", .bExtra = false);
    }
	else
	{
		new INI:file = INI_Open(ACNR_ACCS);
        INI_WriteInt(file, "accs", 1);
        INI_WriteInt(file, "vorods", 1);
        INI_WriteInt(file, "kicks", 0);
        INI_WriteInt(file, "bans", 0);
        INI_WriteString(file, "nem", newestname);
		tedadeacc = 1;
		INI_Close(file);
	}
    
    // Reset the data belonging to this player slot
	noclipdata[playerid][cameramode] 	= CAMERA_MODE_NONE;
	noclipdata[playerid][lrold]	   	 	= 0;
	noclipdata[playerid][udold]   		= 0;
	noclipdata[playerid][mode]   		= 0;
	noclipdata[playerid][lastmove]   	= 0;
	noclipdata[playerid][accelmul]   	= 0.0;
    
    mohlatincpass{playerid} = 0;
    cambug{playerid} = 0;
    IsAnopmOn{playerid} = 0;

    Voted[playerid] = -1;
    
    PVeh[playerid] = -1;

    IsAccseptSong[playerid] = 1;

    GetPlayerLastVehicleID[playerid] = -1;

    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);

	if(IsPlayerNPC(playerid)) return 1;

	JailTime[playerid] = 0;
	CageTime[playerid] = 0;

	ZoneTimer[playerid] = SetTimerEx("Update_Zones", 1000, true, "d", playerid);
    ZoneUpdates[playerid] = 1;
	Player_Zone[playerid] = -1;

	IsPlayersFirstSpawn{playerid} = false;

	HasDied{playerid} = false;
    HasSpawned{playerid} = false;
    HasConnectedSpawned{playerid} = false;
    IsPlayerUsingTuneMenu{playerid} = false;
    HasBeenArrested{playerid} = false;
    IsNewbieMutted{playerid} = false;
    HasShieldAttached{playerid} = false;
    HasBandanaAttached{playerid} = false;
    HasBeenTied{playerid} = false;
    HasBeenCuffed{playerid} = false;
    IsCaged{playerid} = false;
    IsInCellCP{playerid} = false;
    IsInCellCP1{playerid} = false;
    IsInCellCP2{playerid} = false;
    IsInCellCP3{playerid} = false;
    IsInCellCP4{playerid} = false;
    IsInCellCP5{playerid} = false;
    IsInCellCP6{playerid} = false;
    CanESC{playerid} = true;
    GoToJail{playerid} = false;
	IsJailed{playerid} = false;
    HasSavedPos{playerid} = false;
    IsPlayerEditingObject{playerid} = false;
    IsPlayerAttachingObject{playerid} = false;
    IsPlayerRobbingBiz{playerid} = false;
    IsPlayerSetBuilder{playerid} = false;
	IsPlayerRobbingHouse{playerid} = false;
	IsPlayerInArena{playerid} = false;
	IsPlayerGettingMatsNV{playerid} = false;
	IsPlayerGettingMatsBS{playerid} = false;
    IsRobbingIsle{playerid} = false;
    IsRobbingVegas{playerid} = false;
    IsRobbingRedsands{playerid} = false;
    IsRobbingCalg{playerid} = false;
    IsRobbingDrag{playerid} = false;
    IsRobbingNVPD{playerid} = false;
    IsRobbingClub{playerid} = false;
    IsRobbingGym{playerid} = false;
    IsRobbingBank1{playerid} = false;
    IsRobbingBank2{playerid} = false;
    IsRobbingBank3{playerid} = false;
    IsRobbingBank4{playerid} = false;
    IsRobbingNVPD{playerid} = false;
    IsRobbingHall{playerid} = false;
    IsRobbingBar{playerid} = false;
    IsRobbingFBI{playerid} = false;
    IsRobbingUNI{playerid} = false;
    IsRobbingCIA{playerid} = false;
    IsRobbingAmmu1{playerid} = false;
    IsRobbingAmmu2{playerid} = false;
    IsRobbingAmmu3{playerid} = false;
    IsRobbingAmmu4{playerid} = false;
    IsRobbingAmmu5{playerid} = false;
    IsRobbingAmmu6{playerid} = false;
    IsRobbingShot1{playerid} = false;
    IsRobbingShot2{playerid} = false;
    IsRobbingShot3{playerid} = false;
    IsRobbingShot4{playerid} = false;
    IsRobbingShot5{playerid} = false;
    IsRobbingCluck1{playerid} = false;
    IsRobbingCluck2{playerid} = false;
    IsRobbingCluck3{playerid} = false;
    IsRobbingStore1{playerid} = false;
    IsRobbingStore2{playerid} = false;
    IsRobbingStore3{playerid} = false;
    IsRobbingStore4{playerid} = false;
    IsRobbingPizza{playerid} = false;
    HasBeenIssuedTicket{playerid} = false;
    IsVIPInColorMode{playerid} = false;
    HasChangedSkin{playerid} = false;
    IsPlayerUsingAnim{playerid} = false;
    HasPlayerDiedInJail{playerid} = false;
    HasPlayerDiedInCage{playerid} = false;
	HasBandanaAttached{playerid} = false;
	HasShieldAttached{playerid} = false;
	IsAdminUnderCover{playerid} = false;

 	RemovePlayerAttachedObject(playerid, 0);
	RemovePlayerAttachedObject(playerid, 1);

    SpecInfo[playerid][IsSpectating] = -1;
    IsAdminSpectating{playerid} = false;
    IsPlayerBeingSpectated{playerid} = false;
    PlayerBeingSpectatedBy[playerid] = -1;

	hasenteredtower{playerid} = 0;

    IsInCell{playerid} = 0;
    InMateID[playerid] = 0;

    BizRobCP[playerid] = -1;
    BizID[playerid] = -1;

    HasHit[playerid] = 0;
	HasPlacedHit[playerid] = -1;
	BomberStage{playerid} = 0;

    IsLoggedIn{playerid} = 0;
    BribeTo[playerid] = -1;
	Bribe[playerid] = -1;
	BribeFrom[playerid] = -1;
    IsInGod{playerid} = 0;
    IsOnduty{playerid} = 0;
    IsInGodCar{playerid} = 0;
    IsMuted{playerid} = 0;
    IsIgnoringPMs{playerid} = 0;
    HasLotteryTicket{playerid} = 0;
    HasMadeEvent{playerid} = 0;
	IsAtEvent{playerid} = 0;
	HasAdminStoppedJoins = 0;
	text_line_count{playerid} = 0;
    HasSetCheckpoint{playerid} = 0;
    lastx[playerid] = 0.0;
	lasty[playerid] = 0.0;
	lastz[playerid] = 0.0;
	chattingwith[playerid] = -1;
	shotsfired[playerid] = 0;

	pGroupInfo[playerid][gid] = -1;
	pGroupInfo[playerid][invited] = -1;
	pGroupInfo[playerid][attemptjoin] = -1;

    verifydestroycar{playerid} = 0;

    for(new o = 0; o < MAX_SET_OBJECTS; o++)
    {
    	GetSetObjects[playerid][o] = -1;
    }
	GetSetObjectsCount[playerid] = 0;

    LoadPlayerVehicles(playerid);

    SetPlayerWantedLevel(playerid, 0);
    ResetPlayerCash(playerid);
    StartCheckpointSeeking();

    SetPlayerColor(playerid, GREY);

 	new asd[1000];
    TextDrawShowForPlayer(playerid, ACNRInfo[playerid]);
 	format(asd,sizeof(asd),"~y~Welcome. ~w~khandane ~b~~h~/pc~w~, ~b~~h~/rules ~w~va ~b~~h~/cmds ~w~ra faramosh nakon.");
 	TextDrawSetString(ACNRInfo[playerid], asd);

    LastHouseCP[playerid] = -1;
	IsInHouse[playerid] = 0;

	if(!IsPlayerNPC(playerid) && !strcmp(GetName(playerid), "Elvis", false) /*|| !strcmp(GetName(playerid), "Abolfazl", false)*/ || !strcmp(GetName(playerid), "Nobody", false) || !strcmp(GetName(playerid), "Empty", false) || !strcmp(GetName(playerid), "For-Sale", false) || !strcmp(GetName(playerid), "for-sale", false))
	{
        GameTextForPlayer(playerid,"~n~~r~Kicked..~n~Change Your Name..",99999,2);
		SendClientMessage(playerid, RED, "{FF0000}Error: {FFFFFF}In Esm  {FF0000}Mojaz Nist. {FFFFFF}Lotfan yek esm digar entekhab konid sepas be server biaid.");
		KickPlayer(playerid);
		tedadekick++;
		accssave();
		return 1;
	}

	if(fexist(GunPath(playerid)))
    {
        INI_ParseFile(GunPath(playerid), "LoadGun_data", .bExtra = true, .extra = playerid);
        IsPlayersFirstSpawn{playerid} = true;
    }
    else
    {
        new File:startfile = fopen(GunPath(playerid), io_write);
    	fclose(startfile);
    }

    if(fexist(PosPath(playerid)))
    {
        INI_ParseFile(PosPath(playerid), "LoadPos_data", .bExtra = true, .extra = playerid);
        IsPlayersFirstSpawn{playerid} = true;
    }
    else
    {
        new File:startfile = fopen(PosPath(playerid), io_write);
    	fclose(startfile);
    }

    new bankfile[40];
	format(bankfile, sizeof(bankfile), BANK_FILE, GetName(playerid));
	if(fexist(bankfile))
	{
		INI_ParseFile(bankfile, "LoadBank_data", .bExtra = true, .extra = playerid);
		if(BankInfo[playerid][Balance] < 0)
		{
		    BankInfo[playerid][Balance] = 0;
		}
		if(BankInfo[playerid][Credit] < 0)
		{
		    BankInfo[playerid][Credit] = 0;
		}
		if(BankInfo[playerid][Debt] < 0)
		{
		    BankInfo[playerid][Debt] = 0;
		}
	}
	else
	{

    	BankInfo[playerid][Balance] = 0;
    	BankInfo[playerid][Credit] = 0;
    	BankInfo[playerid][Debt] = 0;
    	BankInfo[playerid][Fees] = 0;
    	BankInfo[playerid][Transactions] = 0;

		new bFilee[40];
    	format(bFilee, sizeof(bFilee), BANK_FILE, GetName(playerid));
		new INI:file = INI_Open(bFilee);
		INI_WriteInt(file, "Balance", BankInfo[playerid][Balance]);
		INI_WriteInt(file, "Credit", BankInfo[playerid][Credit]);
		INI_WriteInt(file, "Debt", BankInfo[playerid][Debt]);
		INI_WriteInt(file, "Fees", BankInfo[playerid][Fees]);
		INI_WriteInt(file, "Transactions", BankInfo[playerid][Transactions]);
		INI_Close(file);
	}

    FightStyleID{playerid} = 5;
	new stylefile[40];
	format(stylefile, sizeof(stylefile), STYLE_FILE, GetName(playerid));
	if(fexist(stylefile))
	{
		INI_ParseFile(stylefile, "LoadStyle_data", .bExtra = true, .extra = playerid);
	}
	else
	{
		new INI:ffile = INI_Open(stylefile);
		INI_WriteInt(ffile, "FightStyle", 0);
		FightStyleID{playerid} = 0;
		INI_Close(ffile);
	}

	new degreefile[40];
	format(degreefile, sizeof(degreefile), DEGREE_FILE, GetName(playerid));
	if(fexist(degreefile))
	{
		INI_ParseFile(degreefile, "LoadDegree_data", .bExtra = true, .extra = playerid);
	}
	else
	{
	    DegreeInfo[playerid][dReal] = 0;
    	DegreeInfo[playerid][dLaw] = 0;
    	DegreeInfo[playerid][dDefense] = 0;
    	DegreeInfo[playerid][dHealth] = 0;
    	DegreeInfo[playerid][dMechanic] = 0;
    	DegreeInfo[playerid][dDealer] = 0;
    	DegreeInfo[playerid][dWeapons] = 0;


        new INI:dfile = INI_Open(degreefile);
        INI_WriteInt(dfile, "dReal", DegreeInfo[playerid][dReal]);
        INI_WriteInt(dfile, "dLaw", DegreeInfo[playerid][dLaw]);
        INI_WriteInt(dfile, "dDefense", DegreeInfo[playerid][dDefense]);
        INI_WriteInt(dfile, "dHealth", DegreeInfo[playerid][dHealth]);
        INI_WriteInt(dfile, "dMechanic", DegreeInfo[playerid][dMechanic]);
        INI_WriteInt(dfile, "dDealer", DegreeInfo[playerid][dDealer]);
        INI_WriteInt(dfile, "dWeapons", DegreeInfo[playerid][dWeapons]);
		INI_Close(dfile);
	}

	new userfile[40];
	format(userfile, sizeof(userfile), USER_FILE, GetName(playerid));
	if(fexist(userfile))
	{
        INI_ParseFile(userfile, "LoadUser_data", .bExtra = true, .extra = playerid);
        {
			if(PlayerInfo[playerid][Banned] == 1)
            {
				PlayerInfo[playerid][pKicks]++;
                GameTextForPlayer(playerid,"~r~Kicked...~n~kicked..~n~kicked.~n~kicked",9999,2);
                format(fstr2, sizeof(fstr2), "%s [%d] az ACNR kick shod - Dalil: Name banned", GetName(playerid), playerid);
                SendMessageToAll(RED, fstr2);
                SendClientMessage(playerid, RED, fstr2);
                print(fstr2);
                KickPlayer(playerid);
                tedadekick++;
		        accssave();
                return 1;
            }
            else
            {
                format(fstr2,sizeof(fstr2),"{FFFFFF}Khosh Amadi %s [%d].\n\nIn Esm ghablan sabtenam shode.\n\nBaraye vorod ramze obore khod ra vared konid:", GetName(playerid),playerid);
                ShowPlayerDialog(playerid, LOGIN_MENU, DIALOG_STYLE_INPUT, "{FFFFFF}ACNR Account Login", fstr2, "Login", "Ban");
            }
        }
	}
	else
	{
	    PlayerInfo[playerid][aLevel] = 0;
    	PlayerInfo[playerid][vLevel] = 0;
    	PlayerInfo[playerid][pCash] = 10000;
    	PlayerInfo[playerid][pScore] = 0;
    	PlayerInfo[playerid][pKills] = 0;
    	PlayerInfo[playerid][pDeaths] = 0;
    	PlayerInfo[playerid][pHoldups] = 0;
    	PlayerInfo[playerid][pCrimes] = 0;
    	PlayerInfo[playerid][pFined] = 0;
    	PlayerInfo[playerid][pArrests] = 0;
    	PlayerInfo[playerid][pTakedowns] = 0;
    	PlayerInfo[playerid][pTickets] = 0;
    	PlayerInfo[playerid][pRope] = 0;
    	PlayerInfo[playerid][pPaintCan] = 0;
    	PlayerInfo[playerid][pScissors] = 0;
    	PlayerInfo[playerid][pKits] = 0;
    	PlayerInfo[playerid][vLock] = 0;
    	PlayerInfo[playerid][Helper] = 0;
    	PlayerInfo[playerid][hHelper] = 0;
    	PlayerInfo[playerid][pWarns] = 0;
    	PlayerInfo[playerid][pKicks] = 0;
    	PlayerInfo[playerid][pJoins] = 1;
    	PlayerInfo[playerid][pArrests] = 0;
    	PlayerInfo[playerid][pMaterials] = 0;
    	PlayerInfo[playerid][Banned] = 0;
    	PlayerInfo[playerid][jTime] = 0;
    	PlayerInfo[playerid][pWanted] = 0;
    	PlayerInfo[playerid][pArmour] = 0.0;
    	PlayerInfo[playerid][pHealth] = 0.0;
    	PlayerInfo[playerid][cTime] = 0;


    	new INI:ufile = INI_Open(userfile);
        INI_WriteInt(ufile, "aLevel",PlayerInfo[playerid][aLevel]);
        INI_WriteInt(ufile, "vLevel",PlayerInfo[playerid][vLevel]);
        INI_WriteInt(ufile, "pCash", PlayerInfo[playerid][pCash]);
        INI_WriteInt(ufile, "pScore", PlayerInfo[playerid][pScore]);
        INI_WriteInt(ufile, "pKills", PlayerInfo[playerid][pKills]);
        INI_WriteInt(ufile, "pDeaths", PlayerInfo[playerid][pDeaths]);
        INI_WriteInt(ufile, "pHoldups", PlayerInfo[playerid][pHoldups]);
        INI_WriteInt(ufile, "pCrimes", PlayerInfo[playerid][pCrimes]);
        INI_WriteInt(ufile, "pFined", PlayerInfo[playerid][pFined]);
        INI_WriteInt(ufile, "pArrests", PlayerInfo[playerid][pArrests]);
        INI_WriteInt(ufile, "pTakedowns", PlayerInfo[playerid][pTakedowns]);
        INI_WriteInt(ufile, "pTickets", PlayerInfo[playerid][pTickets]);
        INI_WriteInt(ufile, "pRope", PlayerInfo[playerid][pRope]);
        INI_WriteInt(ufile, "pPaintCan", PlayerInfo[playerid][pPaintCan]);
        INI_WriteInt(ufile, "pScissors", PlayerInfo[playerid][pScissors]);
        INI_WriteInt(ufile, "pKits", PlayerInfo[playerid][pKits]);
        INI_WriteInt(ufile, "vLock", PlayerInfo[playerid][vLock]);
        INI_WriteInt(ufile, "Helper", PlayerInfo[playerid][Helper]);
        INI_WriteInt(ufile, "hHelper", PlayerInfo[playerid][hHelper]);
        INI_WriteInt(ufile, "pWarns", PlayerInfo[playerid][pWarns]);
        INI_WriteInt(ufile, "pKicks", PlayerInfo[playerid][pKicks]);
        INI_WriteInt(ufile, "pJoins", PlayerInfo[playerid][pJoins]);
        INI_WriteInt(ufile, "pMaterials", PlayerInfo[playerid][pMaterials]);
        INI_WriteInt(ufile, "Banned", PlayerInfo[playerid][Banned]);
        INI_WriteInt(ufile, "jTime", PlayerInfo[playerid][jTime]);
        INI_WriteInt(ufile, "pWanted", PlayerInfo[playerid][pWanted]);
        INI_WriteFloat(ufile, "pArmour", PlayerInfo[playerid][pArmour]);
        INI_WriteFloat(ufile, "pHealth", PlayerInfo[playerid][pHealth]);
        INI_WriteInt(ufile, "cTime", PlayerInfo[playerid][cTime]);
		INI_Close(ufile);

        format(fstr,sizeof(fstr),"{FFFFFF}Welcome to ACNR %s!\n\nIn esm sabtenam nashode.\n\nYek ramze obor vared kon va on ro faramosh nakon ta sabtenam koni:", GetName(playerid));
		ShowPlayerDialog(playerid, REGISTER_MENU, DIALOG_STYLE_INPUT, "{FFFFFF}ACNR Account Register", fstr, "Register", "Ban");
	}

	SetPlayerMapIcon(playerid, 0, 2296.2930,2461.4600,38.6875, 30, 0, MAPICON_LOCAL);//pd
	SetPlayerMapIcon(playerid, 1, 2270.9761,2293.8179,10.8203, 52, 0, MAPICON_LOCAL);//city bank
	SetPlayerMapIcon(playerid, 2, 2127.5869,2379.6211,10.8203, 44, 0, MAPICON_LOCAL);//isle casino
	SetPlayerMapIcon(playerid, 3, 2016.9768,1916.4065,12.3424, 44, 0, MAPICON_LOCAL);//casino
	SetPlayerMapIcon(playerid, 4, 2196.9570,1677.1637,12.3672, 25, 0, MAPICON_LOCAL);//caligulas casino
	SetPlayerMapIcon(playerid, 5, 2019.3196,1007.7487,10.8203, 43, 0, MAPICON_LOCAL);//4 dragons casino
	SetPlayerMapIcon(playerid, 6, 2159.5405,943.1776,10.8203, 6, 0, MAPICON_LOCAL);//ammu1
	SetPlayerMapIcon(playerid, 7, 2367.0552,2071.0693,10.8203, 10, 0, MAPICON_LOCAL);//burger1
	SetPlayerMapIcon(playerid, 9, 2393.2737,2041.5657,10.8203, 14, 0, MAPICON_LOCAL);//cluck1
	SetPlayerMapIcon(playerid, 10, 2472.8655,2034.1702,11.0625, 10, 0, MAPICON_LOCAL);//burger2
	SetPlayerMapIcon(playerid, 11, 2452.5308,2065.1902,10.8203, 50, 0, MAPICON_LOCAL);//24/1
	SetPlayerMapIcon(playerid, 12, 2546.5271,1972.6571,10.8203, 50, 0, MAPICON_LOCAL);//24/2
	SetPlayerMapIcon(playerid, 13, 2412.5039,1123.8190,10.8203, 16, 0, MAPICON_LOCAL);//cityhall
	SetPlayerMapIcon(playerid, 14, 2194.9390,1990.9948,12.2969, 50, 0, MAPICON_LOCAL);//24/3
	SetPlayerMapIcon(playerid, 15, 1658.4960,2250.0437,11.0701, 43, 0, MAPICON_LOCAL);//redsands casino
	SetPlayerMapIcon(playerid, 16, 1607.3329,1816.7660,10.8203, 22, 0, MAPICON_LOCAL);//hospital
	SetPlayerMapIcon(playerid, 17, 1672.5485,1447.8712,10.7881, 5, 0, MAPICON_LOCAL);//airport
	SetPlayerMapIcon(playerid, 18, 1157.9246,2072.2874,11.0625, 10, 0, MAPICON_LOCAL);//burger3
	SetPlayerMapIcon(playerid, 19, 937.0844,1733.2168,8.8516, 30, 0, MAPICON_LOCAL);//cia
	SetPlayerMapIcon(playerid, 20, 776.7208,1871.4360,4.9068, 6, 0, MAPICON_LOCAL);//ammu2
	SetPlayerMapIcon(playerid, 21, 173.0402,1177.1461,14.7578, 14, 0, MAPICON_LOCAL);//cluck2
	SetPlayerMapIcon(playerid, 22, -316.1609,829.8887,14.2422, 6, 0, MAPICON_LOCAL);//ammu3
	SetPlayerMapIcon(playerid, 23, -1508.8851,2610.7004,55.8359, 6, 0, MAPICON_LOCAL);//ammu4
	SetPlayerMapIcon(playerid, 24, 2169.4143,2795.9263,10.8203, 10, 0, MAPICON_LOCAL);//burger4
	SetPlayerMapIcon(playerid, 25, -1457.9816,2589.9771,55.9957, 52, 0, MAPICON_LOCAL);//el que bank
	SetPlayerMapIcon(playerid, 26, -179.1975,1133.1324,19.7422, 52, 0, MAPICON_LOCAL);//fort bank
	SetPlayerMapIcon(playerid, 27, -828.1474,1504.5988,19.8529, 52, 0, MAPICON_LOCAL);//los barraques bank
	SetPlayerMapIcon(playerid, 28, 2351.8555,2533.6199,10.8203, 29, 0, MAPICON_LOCAL);//pizza1
	SetPlayerMapIcon(playerid, 29, 2556.9512,2065.3730,11.0995, 6, 0, MAPICON_LOCAL);//ammu5
	SetPlayerMapIcon(playerid, 30, 1735.7432,1866.1516,10.8203, 55, 0, MAPICON_LOCAL);//carshop
	SetPlayerMapIcon(playerid, 31, 2114.8848,920.2251,10.8203, 27, 0, MAPICON_LOCAL);//service station
	SetPlayerMapIcon(playerid, 32, 2639.7700,1106.1627,10.8203, 27, 0, MAPICON_LOCAL);//service station
	SetPlayerMapIcon(playerid, 33, 2202.4160,2474.7686,10.8203, 27, 0, MAPICON_LOCAL);//service station
	SetPlayerMapIcon(playerid, 34, 2147.2354,2747.9351,10.8203, 27, 0, MAPICON_LOCAL);//service station
	SetPlayerMapIcon(playerid, 35, 1596.1118,2198.9944,10.8203, 27, 0, MAPICON_LOCAL);//service station
	SetPlayerMapIcon(playerid, 36, 612.0298,1695.0731,6.9922, 27, 0, MAPICON_LOCAL);//service station
	SetPlayerMapIcon(playerid, 37, -1328.3317,2677.4412,50.0625, 27, 0, MAPICON_LOCAL);//service station
	SetPlayerMapIcon(playerid, 38, -1471.3004,1864.1031,32.6328, 27, 0, MAPICON_LOCAL);//service station
	SetPlayerMapIcon(playerid, 39, 2311.2742,2324.2349,10.8203, 48, 0, MAPICON_LOCAL);//night club
	SetPlayerMapIcon(playerid, 40, 2319.3486,2391.8047,10.8203, 6, 0, MAPICON_LOCAL);//ammu6
	SetPlayerMapIcon(playerid, 45, 2247.6702,2396.1687,10.8203, 50, 0, MAPICON_LOCAL);//24/4
	SetPlayerMapIcon(playerid, 46, 1872.2554,2071.8850,11.0625, 10, 0, MAPICON_LOCAL);//burger5
	SetPlayerMapIcon(playerid, 47, -1213.8292,1830.3749,41.9297, 14, 0, MAPICON_LOCAL);//cluck3
	SetPlayerMapIcon(playerid, 48, 2447.6692,2376.2556,12.1635, 30, 0, MAPICON_LOCAL);//FBI HQ
	SetPlayerMapIcon(playerid, 49, 1968.7693,2295.8730,16.4559, 54, 0, MAPICON_LOCAL);//GYM
	SetPlayerMapIcon(playerid, 50, 966.2469,2160.6836,10.8203, 56, 0, MAPICON_LOCAL);//Mats pickup(LV)
	SetPlayerMapIcon(playerid, 51, -2488.5205,2295.3135,4.9844, 56, 0, MAPICON_LOCAL);//Mats pickup(BS)
	SetPlayerMapIcon(playerid, 52, 2375.5786,2306.3044,8.1406, 36, 0, MAPICON_LOCAL);//Uni
	SetPlayerMapIcon(playerid, 53, 1602.5015,1615.4475,10.8203, 27, 0, MAPICON_LOCAL);//Airport service station
	SetPlayerMapIcon(playerid, 54, -2322.4451,2298.0378,-0.5677, 27, 0, MAPICON_LOCAL);//Bayside marina service station
	SetPlayerMapIcon(playerid, 55, 2308.9287, 2378.9575, 11.2208, 49, 0, MAPICON_LOCAL);//Bar
	SetPlayerMapIcon(playerid, 56, 2364.8955,2377.6169,10.8203, 31, 0, MAPICON_LOCAL);//Apartments
	SetPlayerMapIcon(playerid, 57, 1966.950927,2374.816894,11.820312, 31, 0, MAPICON_LOCAL);//Asansor
    SetPlayerMapIcon(playerid, 58, 2518.687744,2033.389160,11.171875, 12, 0, MAPICON_LOCAL);//Church 1
    SetPlayerMapIcon(playerid, 59, 2438.194091,1293.454223,10.820312, 12, 0, MAPICON_LOCAL);//Church 2
    SetPlayerMapIcon(playerid, 60, 2489.595947,918.606994,11.023437, 12, 0, MAPICON_LOCAL);//Church 3
    SetPlayerMapIcon(playerid, 61, 1454.011962,750.880249,11.023437, 12, 0, MAPICON_LOCAL);//Church 4
    SetPlayerMapIcon(playerid, 62, 2225.102783,2522.551513,11.022218, 12, 0, MAPICON_LOCAL);//Church 5
    SetPlayerMapIcon(playerid, 63, -2482.276611,2406.506591,17.109375, 12, 0, MAPICON_LOCAL);//Church 6
    
    format(fstr3, sizeof(fstr3),"[PART]: %s [%d] varede server shod [Vorod]", GetName(playerid), playerid);
	SendMessageToAll(GREY, fstr3);
	new ip[50], stringg[150];
	GetPlayerIp(playerid, ip, sizeof(ip));
	format(stringg, sizeof(stringg),"[IP]: %s [%d] - %s", GetName(playerid), playerid, ip);
	SendAdminMessage(GREY, stringg);

    SendClientMessage(playerid, WHITE, "Elvis: Welcome to ACNR v2.2.2 | Powered by Abolfazl 2015 - 2018 , 2024");
	SendClientMessage(playerid, RED, "in server deathmatch nist, lotfan  [  /rules  ]  ra ghabl az bazi kardan bekhanid!");
	SendClientMessage(playerid, LIGHTBLUE, "Ba estefade az cmd  [  /updates  ]  mitavanid akharin updatehaye server ra bebinid.");
	SendClientMessage(playerid, ORANGE, "az  [  /help  ]  va  [  /faqs  ]  baraye komak gereftan va az  [  /n  ]  va  [  /askadmin  ]  baraye soal porsidan estefade kon.");
	SendClientMessage(playerid, YELLOW, "Baraye gheire faal kardan AudioStream ha az  [  /stopaudio  ]  estefade konid.");
	SendClientMessage(playerid, GREEN, "Baraye estefade az system vote az  [  /votecmds  ]  mitavanid estefade konid.");

	SendClientMessage(playerid, PURPLE, "|--------------------------------------------------------------------------------------------------------------------------------------------|");
	
	printf("|--------------------------Player Connected (%d) (ACNR)--------------------------|", playerid);

	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	if(!success)
	{
        format(fstr,sizeof(fstr),"[ACNR] [WARNING] Player [IP: %s] Is On Rcon Login Attempt: Bad Rcon Password: %s",ip ,password);
        SendOwnerMessage(ORANGE,fstr);
        format(fstr2, sizeof(fstr2), "banip %s",ip);
		SendRconCommand(fstr2);
        BlockIpAddress(ip,0);
        SendRconCommand("reloadbans");
	}
	return 1;
}

forward loadaccs(name[], value[]);

public loadaccs(name[], value[])
{
INI_Int("accs", tedadeacc);
INI_Int("vorods", tedadvoro);
INI_Int("kicks", tedadekick);
INI_Int("bans", tedadeban);
INI_String("nem", newestname, sizeof(newestname));
return 1;
}

public LoadDegree_data(playerid, name[], value[])
{
	INI_Int("dReal", DegreeInfo[playerid][dReal]);
	INI_Int("dLaw", DegreeInfo[playerid][dLaw]);
	INI_Int("dDefense", DegreeInfo[playerid][dDefense]);
	INI_Int("dHealth", DegreeInfo[playerid][dHealth]);
	INI_Int("dMechanic", DegreeInfo[playerid][dMechanic]);
	INI_Int("dDealer", DegreeInfo[playerid][dDealer]);
	INI_Int("dWeapons", DegreeInfo[playerid][dWeapons]);
    return 1;
}

public LoadUser_data(playerid, name[], value[])
{
	INI_String("pPass", PlayerInfo[playerid][pPass], 129);
	INI_Int("aLevel", PlayerInfo[playerid][aLevel]);
	INI_Int("vLevel", PlayerInfo[playerid][vLevel]);
	INI_Int("pCash", PlayerInfo[playerid][pCash]);
	INI_Int("pScore", PlayerInfo[playerid][pScore]);
	INI_Int("pKills", PlayerInfo[playerid][pKills]);
	INI_Int("pDeaths", PlayerInfo[playerid][pDeaths]);
	INI_Int("pHoldups", PlayerInfo[playerid][pHoldups]);
	INI_Int("pCrimes", PlayerInfo[playerid][pCrimes]);
	INI_Int("pFined", PlayerInfo[playerid][pFined]);
	INI_Int("pArrests", PlayerInfo[playerid][pArrests]);
	INI_Int("pTakedowns", PlayerInfo[playerid][pTakedowns]);
	INI_Int("pTickets", PlayerInfo[playerid][pTickets]);
	INI_Int("pRope", PlayerInfo[playerid][pRope]);
	INI_Int("pPaintCan", PlayerInfo[playerid][pPaintCan]);
	INI_Int("pScissors", PlayerInfo[playerid][pScissors]);
	INI_Int("pKits", PlayerInfo[playerid][pKits]);
	INI_Int("vLock", PlayerInfo[playerid][vLock]);
	INI_Int("Helper", PlayerInfo[playerid][Helper]);
	INI_Int("hHelper", PlayerInfo[playerid][hHelper]);
	INI_Int("pJoins", PlayerInfo[playerid][pJoins]);
	INI_Int("pMaterials", PlayerInfo[playerid][pMaterials]);
	INI_Int("pWarns", PlayerInfo[playerid][pWarns]);
	INI_Int("pKicks", PlayerInfo[playerid][pKicks]);
	INI_Int("Banned", PlayerInfo[playerid][Banned]);
	INI_Int("jTime", PlayerInfo[playerid][jTime]);
	INI_Float("pArmour", PlayerInfo[playerid][pArmour]);
	INI_Float("pHealth", PlayerInfo[playerid][pHealth]);
	INI_Int("pWanted", PlayerInfo[playerid][pWanted]);
	INI_Int("cTime", PlayerInfo[playerid][cTime]);
/*	if(ACNR_DEBUG == 1)
		{
			new dbstr[300];	
			printf("DEBUG: LoadUSER_(%d, %s, %d, %f);",playerid, PlayerInfo[playerid][pPass], PlayerInfo[playerid][aLevel], PlayerInfo[playerid][pHealth]);		
			format(dbstr, sizeof(dbstr), "DEBUG: LoadUSER_(%d, %s, %d, %f);",playerid, PlayerInfo[playerid][pPass], PlayerInfo[playerid][aLevel], PlayerInfo[playerid][pHealth]);
			SendClientMessage(playerid, RED, dbstr);
		}*/
    return 1;
}

public LoadStyle_data(playerid, name[], value[])
{
	INI_Int("FightStyle", FightStyleID{playerid});
    return 1;
}

public LoadBank_data(playerid, name[], value[])
{
	INI_Int("Balance", BankInfo[playerid][Balance]);
	INI_Int("Credit", BankInfo[playerid][Credit]);
	INI_Int("Debt", BankInfo[playerid][Debt]);
	INI_Int("Fees", BankInfo[playerid][Fees]);
	INI_Int("Transactions", BankInfo[playerid][Transactions]);
    return 1;
}

public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
    {
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        GetPlayerPos(targetid, posx, posy, posz);
        tempposx = (oldposx -posx);
        tempposy = (oldposy -posy);
        tempposz = (oldposz -posz);
        if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
        {
            return 1;
        }
    }
    return 0;
}
/*
public OnPlayerCheat(playerid, cheatid, source[]) //dont use elec_ac
{
    switch(cheatid)
    {
        case 5://speed
        {
            format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Speed Cheat", GetName(playerid), playerid);
            SendMessageToAll(RED, fstr);
            GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
            SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
            PlayerInfo[playerid][pKicks]++;
            KickPlayer(playerid);
            tedadekick++;
            accssave();
		    print(fstr);
            return 1;
        }
        case 6://
        {
            format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Airbreak/Teleport Cheat", GetName(playerid), playerid);
            SendMessageToAll(RED, fstr);
            GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
            SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
            PlayerInfo[playerid][pKicks]++;
            KickPlayer(playerid);
            tedadekick++;
            accssave();
		    print(fstr);
            return 1;
        }
        case 9://
        {
            format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Vehicle Spawn Cheat", GetName(playerid), playerid);
            SendMessageToAll(RED, fstr);
            GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
            SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
            PlayerInfo[playerid][pKicks]++;
            KickPlayer(playerid);
            tedadekick++;
            accssave();
		    print(fstr);
            return 1;
        }
        case 10://
        {
            format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Vehicle Crasher", GetName(playerid), playerid);
            SendMessageToAll(RED, fstr);
            GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
            SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
            PlayerInfo[playerid][pKicks]++;
            KickPlayer(playerid);
            tedadekick++;
            accssave();
		    print(fstr);
            return 1;
        }
        *//*case 2://ammo
        {
			ResetPlayerWeapons(playerid);
            format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Weapon Cheat ( %s )", GetName(playerid), playerid, source);
            SendMessageToAll(RED, fstr);
            GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
            SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
            ResetPlayerWeapons(playerid);
            PlayerInfo[playerid][pKicks]++;
            KickPlayer(playerid);
            tedadekick++;
            accssave();
		    print(fstr);
            return 1;
        }*//*
        case 3://ammo
        {
			ResetPlayerWeapons(playerid);
            format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Ammo Cheat ( %s Bullets )", GetName(playerid), playerid, source);
            SendMessageToAll(RED, fstr);
            GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
            SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
            ResetPlayerWeapons(playerid);
            PlayerInfo[playerid][pKicks]++;
            KickPlayer(playerid);
            tedadekick++;
            accssave();
		    print(fstr);
            return 1;
        }
        case 4://ammo
        {
			ResetPlayerWeapons(playerid);
            format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Ammo Block Cheat", GetName(playerid), playerid);
            SendMessageToAll(RED, fstr);
            GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
            SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
            ResetPlayerWeapons(playerid);
            PlayerInfo[playerid][pKicks]++;
            KickPlayer(playerid);
            tedadekick++;
            accssave();
		    print(fstr);
            return 1;
        }
    }
    return 1;
}
*/
public WaitToTryEscape(playerid)
{
    CanESC{playerid} = true;
    return 1;
}

public SendPlayerToJail(playerid)
{
	new cell = random(6);
	if(cell == 0)
	{
	    new time;
	    if(HasPlayerDiedInJail{playerid} == true)
	    {
	        HasPlayerDiedInJail{playerid} = false;
	        time = JailTime[playerid];
		}
		else
		{
			time = random(120) + 120;//
		}
	    new inmateid = random(100000) + random(123456);
    	InMateID[playerid] = inmateid;
    	IsJailed{playerid} = true;
    	IsCaged{playerid} = false;
		HasBeenCuffed{playerid} = false;
    	IsInCell{playerid} = 1;//
    	GoToJail{playerid} = false;
    	JailTime[playerid] = time;
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    	SetPlayerInterior(playerid, 3);
    	SetPlayerVirtualWorld(playerid, 0);
    	SetPlayerHealth(playerid, 100.0);
    	SetPlayerArmour(playerid, 0.0);
    	SetPlayerColor(playerid, WHITE);
    	SetPlayerWantedLevel(playerid, 0);
    	ResetPlayerWeapons(playerid);
    	SetPlayerPos(playerid, 198.0651, 176.7253, 1003.0234);//
    	SetPlayerFacingAngle(playerid, 359.4248);//
    	TogglePlayerControllable(playerid, true);
    	HasBeenArrested{playerid} = false;
    	new string[150];
    	format(string, sizeof(string), "Welcome to PD jail cell (1), shoma baraye %d sanie zendani shodeid.", time);
    	SendClientMessage(playerid, RED, string);
    	SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
		KillTimer(JailTimer[playerid]);
		JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
    	return 1;
    }
    else if(cell == 1)
	{
	    new time;
	    if(HasPlayerDiedInJail{playerid} == true)
	    {
	        HasPlayerDiedInJail{playerid} = false;
	        time = JailTime[playerid];
		}
		else
		{
			time = random(120) + 120;//
		}
	    new inmateid = random(100000) + random(123456);
    	InMateID[playerid] = inmateid;
    	IsJailed{playerid} = true;
    	IsInCell{playerid} = 2;//
    	GoToJail{playerid} = false;
		HasBeenCuffed{playerid} = false;
    	JailTime[playerid] = time;
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    	SetPlayerInterior(playerid, 3);
    	SetPlayerVirtualWorld(playerid, 0);
    	SetPlayerHealth(playerid, 100.0);
    	SetPlayerArmour(playerid, 0.0);
    	SetPlayerColor(playerid, WHITE);
    	SetPlayerWantedLevel(playerid, 0);
    	ResetPlayerWeapons(playerid);
    	SetPlayerPos(playerid, 193.8369, 176.7251, 1003.0234);//
    	SetPlayerFacingAngle(playerid, 0.6781);//
    	TogglePlayerControllable(playerid, true);
    	HasBeenArrested{playerid} = false;
    	new string[150];
    	format(string, sizeof(string), "Welcome to PD jail cell (2), shoma baraye %d sanie zendani shodeid.", time);
    	SendClientMessage(playerid, RED, string);
    	SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
		KillTimer(JailTimer[playerid]);
		JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
    	return 1;
    }
    else if(cell == 2)
	{
	    new time;
	    if(HasPlayerDiedInJail{playerid} == true)
	    {
	        HasPlayerDiedInJail{playerid} = false;
	        time = JailTime[playerid];
		}
		else
		{
			time = random(120) + 120;//
		}
	    new inmateid = random(100000) + random(123456);
    	InMateID[playerid] = inmateid;
    	IsJailed{playerid} = true;
    	IsInCell{playerid} = 3;//
    	GoToJail{playerid} = false;
		HasBeenCuffed{playerid} = false;
    	JailTime[playerid] = time;
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    	SetPlayerInterior(playerid, 3);
    	SetPlayerVirtualWorld(playerid, 0);
    	SetPlayerHealth(playerid, 100.0);
    	SetPlayerArmour(playerid, 0.0);
    	SetPlayerColor(playerid, WHITE);
    	SetPlayerWantedLevel(playerid, 0);
    	ResetPlayerWeapons(playerid);
    	SetPlayerPos(playerid, 189.5884, 176.7243, 1003.1533);//
    	SetPlayerFacingAngle(playerid, 357.5681);//
    	TogglePlayerControllable(playerid, true);
    	HasBeenArrested{playerid} = false;
    	new string[150];
    	format(string, sizeof(string), "Welcome to PD jail cell (3), shoma baraye %d sanie zendani shodeid.", time);
    	SendClientMessage(playerid, RED, string);
    	SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
		KillTimer(JailTimer[playerid]);
		JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
    	return 1;
    }
    else if(cell == 3)
	{
	    new time;
	    if(HasPlayerDiedInJail{playerid} == true)
	    {
	        HasPlayerDiedInJail{playerid} = false;
	        time = JailTime[playerid];
		}
		else
		{
			time = random(120) + 120;//
		}
	    new inmateid = random(100000) + random(123456);
    	InMateID[playerid] = inmateid;
    	IsJailed{playerid} = true;
		HasBeenCuffed{playerid} = false;
    	IsInCell{playerid} = 4;//
    	GoToJail{playerid} = false;
    	JailTime[playerid] = time;
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    	SetPlayerInterior(playerid, 3);
    	SetPlayerVirtualWorld(playerid, 0);
    	SetPlayerHealth(playerid, 100.0);
    	SetPlayerArmour(playerid, 0.0);
    	SetPlayerColor(playerid, WHITE);
    	SetPlayerWantedLevel(playerid, 0);
    	ResetPlayerWeapons(playerid);
    	SetPlayerPos(playerid, 198.0573, 160.6476, 1003.1533);//
    	SetPlayerFacingAngle(playerid, 178.6532);//
    	TogglePlayerControllable(playerid, true);
    	HasBeenArrested{playerid} = false;
    	new string[150];
    	format(string, sizeof(string), "Welcome to PD jail cell (4), shoma baraye %d sanie zendani shodeid.", time);
    	SendClientMessage(playerid, RED, string);
    	SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
		KillTimer(JailTimer[playerid]);
		JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
    	return 1;
    }
    else if(cell == 4)
	{
	    new time;
	    if(HasPlayerDiedInJail{playerid} == true)
	    {
	        HasPlayerDiedInJail{playerid} = false;
	        time = JailTime[playerid];
		}
		else
		{
			time = random(120) + 120;//
		}
	    new inmateid = random(100000) + random(123456);
    	InMateID[playerid] = inmateid;
    	IsJailed{playerid} = true;
    	IsInCell{playerid} = 5;//
    	GoToJail{playerid} = false;
		HasBeenCuffed{playerid} = false;
    	JailTime[playerid] = time;
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    	SetPlayerInterior(playerid, 3);
    	SetPlayerVirtualWorld(playerid, 0);
    	SetPlayerHealth(playerid, 100.0);
    	SetPlayerArmour(playerid, 0.0);
    	SetPlayerColor(playerid, WHITE);
    	SetPlayerWantedLevel(playerid, 0);
    	ResetPlayerWeapons(playerid);
    	SetPlayerPos(playerid, 193.8127, 160.6480, 1003.1533);//
    	SetPlayerFacingAngle(playerid, 178.0266);//
    	TogglePlayerControllable(playerid, true);
    	HasBeenArrested{playerid} = false;
    	new string[150];
    	format(string, sizeof(string), "Welcome to PD jail cell (5), shoma baraye %d sanie zendani shodeid.", time);
    	SendClientMessage(playerid, RED, string);
    	SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
		KillTimer(JailTimer[playerid]);
		JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
    	return 1;
    }
    else if(cell == 5)
	{
	    new time;
	    if(HasPlayerDiedInJail{playerid} == true)
	    {
	        HasPlayerDiedInJail{playerid} = false;
	        time = JailTime[playerid];
		}
		else
		{
			time = random(120) + 120;//
		}
	    new inmateid = random(100000) + random(123456);
    	InMateID[playerid] = inmateid;
    	IsJailed{playerid} = true;
    	IsInCell{playerid} = 6;//
    	GoToJail{playerid} = false;
		HasBeenCuffed{playerid} = false;
    	JailTime[playerid] = time;
    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    	SetPlayerInterior(playerid, 3);
    	SetPlayerVirtualWorld(playerid, 0);
    	SetPlayerHealth(playerid, 100.0);
    	SetPlayerArmour(playerid, 0.0);
    	SetPlayerColor(playerid, WHITE);
    	SetPlayerWantedLevel(playerid, 0);
    	ResetPlayerWeapons(playerid);
    	SetPlayerPos(playerid, 189.5607, 160.6474, 1003.1533);//
    	SetPlayerFacingAngle(playerid, 180.1966);//
    	TogglePlayerControllable(playerid, true);
    	HasBeenArrested{playerid} = false;
    	new string[150];
    	format(string, sizeof(string), "Welcome to PD jail cell (6), shoma baraye %d sanie zendani shodeid.", time);
    	SendClientMessage(playerid, RED, string);
    	SendClientMessage(playerid, WHITE, "emtehan konid /(esc)ape ra ya az kasi baraye /break ya /bail shoma komak begirid | bail=zemanat kardan | break=farari dadan.");
		KillTimer(JailTimer[playerid]);
		JailTimer[playerid] = SetTimerEx("AutoUnjail", 1000, true, "%d", playerid);
    }
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
    VerifyCheckpointe(playerid);
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	VerifyCheckpoint(playerid);
	if(HasSetCheckpoint{playerid} == 1)
	{
     	PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    DisablePlayerCheckpoint(playerid);
	    HasSetCheckpoint{playerid} = 0;
	    SendClientMessage(playerid, RED, "Your currently set checkpoint has been removed.");
	}
	return 1;
}

public OnCheckpointEnter(playerid, checkpointid)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
    switch(checkpointid)
	{
        case CP1:
        {
            ShowPlayerDialog(playerid, KELISA_DIALOG, DIALOG_STYLE_LIST, "{228B22}Welcome to Kelisa", "Doa\nEtraf be gonah\nBakhshidan $50000 pool be Kelisa\nHoly Wine - $294\nSoup - $10\nFree Flowers\nDozdi az Kelisa", "Ok", "Cancel");
        }
        case CP2:
        {
            ShowPlayerDialog(playerid, KELISA_DIALOG1, DIALOG_STYLE_LIST, "{228B22}Welcome to Kelisa", "Doa\nEtraf be gonah\nBakhshidan $50000 pool be Kelisa\nHoly Wine - $294\nSoup - $10\nFree Flowers\nDozdi az Kelisa", "Ok", "Cancel");
        }
        case CP3:
        {
            ShowPlayerDialog(playerid, KELISA_DIALOG2, DIALOG_STYLE_LIST, "{228B22}Welcome to Kelisa", "Doa\nEtraf be gonah\nBakhshidan $50000 pool be Kelisa\nHoly Wine - $294\nSoup - $10\nFree Flowers\nDozdi az Kelisa", "Ok", "Cancel");
        }
        case CP4:
        {
            ShowPlayerDialog(playerid, KELISA_DIALOG3, DIALOG_STYLE_LIST, "{228B22}Welcome to Kelisa", "Doa\nEtraf be gonah\nBakhshidan $50000 pool be Kelisa\nHoly Wine - $294\nSoup - $10\nFree Flowers\nDozdi az Kelisa", "Ok", "Cancel");
        }
        case CP5:
        {
            ShowPlayerDialog(playerid, KELISA_DIALOG4, DIALOG_STYLE_LIST, "{228B22}Welcome to Kelisa", "Doa\nEtraf be gonah\nBakhshidan $50000 pool be Kelisa\nHoly Wine - $294\nSoup - $10\nFree Flowers\nDozdi az Kelisa", "Ok", "Cancel");
        }
        case CP6:
        {
            ShowPlayerDialog(playerid, KELISA_DIALOG5, DIALOG_STYLE_LIST, "{228B22}Welcome to Kelisa", "Doa\nEtraf be gonah\nBakhshidan $50000 pool be Kelisa\nHoly Wine - $294\nSoup - $10\nFree Flowers\nDozdi az Kelisa", "Ok", "Cancel");
        }
	    case V1:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.710418,-73.843322,1001.515625);
		    return 1;
		}
	    case V2:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.710418,-73.843322,1001.515625);
		    return 1;
		}
	    case V3:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.710418,-73.843322,1001.515625);
		    return 1;
		}
	    case V4:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.710418,-73.843322,1001.515625);
		    return 1;
		}
	    case V5:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.710418,-73.843322,1001.515625);
		    return 1;
		}
	    case V6:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.710418,-73.843322,1001.515625);
		    return 1;
		}
		case K1:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.728973,-78.091339,1001.515625);
		    return 1;
		}
		case K2:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.728973,-78.091339,1001.515625);
		    return 1;
		}
		case K3:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.728973,-78.091339,1001.515625);
		    return 1;
		}
		case K4:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.728973,-78.091339,1001.515625);
		    return 1;
		}
		case K5:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.728973,-78.091339,1001.515625);
		    return 1;
		}
		case K6:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,301.728973,-78.091339,1001.515625);
		    return 1;
		}
		case V11:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,307.249725,-58.022029,1001.515625 );
		    return 1;
		}
		case V12:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,307.249725,-58.022029,1001.515625 );
		    return 1;
		}
		case V13:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,307.249725,-58.022029,1001.515625 );
		    return 1;
		}
		case V14:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,307.249725,-58.022029,1001.515625 );
		    return 1;
		}
		case V15:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,307.249725,-58.022029,1001.515625 );
		    return 1;
		}
		case V16:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,307.249725,-58.022029,1001.515625 );
		    return 1;
		}
		case K11:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,300.552429,-57.793170,1001.515625);
		    return 1;
		}
		case K12:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,300.552429,-57.793170,1001.515625);
		    return 1;
		}
		case K13:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,300.552429,-57.793170,1001.515625);
		    return 1;
		}
		case K14:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,300.552429,-57.793170,1001.515625);
		    return 1;
		}
		case K15:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,300.552429,-57.793170,1001.515625);
		    return 1;
		}
		case K16:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerPos(playerid,300.552429,-57.793170,1001.515625);
		    return 1;
		}
	    case AIRPORT_CP:
	    {
	        ShowPlayerDialog(playerid, AIRPORT_DIALOG, DIALOG_STYLE_LIST, "{FFFFFF} Airport", "{FFFFFF}Item: Paracute(x1) - Price: $1K\nService: Skydiving - Price: $5K", "Select", "Cancel");
	    }
	    case TOWER_CP:
	    {
	        if(PlayerInfo[playerid][vLevel] >= 1)
	        {
        		SetPlayerPos(playerid,2150.0178,2425.3809,65.2773);
        		SetPlayerFacingAngle(playerid,265.2805);
        		hasenteredtower{playerid} = 1;
				attimer{playerid} = SetTimerEx("DetectATDeparture", 5000, true, "d", playerid);
				SendClientMessage(playerid, LIGHTGREEN, "Welcome to the Admin Tower, use /(open/close)hanger to toggle the hanger. Use /exitat at anytime.");
			}
			else if(PlayerInfo[playerid][hHelper] == 1)
			{
        		SetPlayerPos(playerid,2150.0178,2425.3809,65.2773);
        		SetPlayerFacingAngle(playerid,265.2805);
        		hasenteredtower{playerid} = 1;
				attimer{playerid} = SetTimerEx("DetectATDeparture", 5000, true, "d", playerid);
				SendClientMessage(playerid, LIGHTGREEN, "Welcome to the Admin Tower, use /(open/close)hanger to toggle the hanger. Use /exitat at anytime.");
			}
			else if(PlayerInfo[playerid][aLevel] >= 1)
	        {
        		SetPlayerPos(playerid,2150.0178,2425.3809,65.2773);
        		SetPlayerFacingAngle(playerid,265.2805);
        		hasenteredtower{playerid} = 1;
				attimer{playerid} = SetTimerEx("DetectATDeparture", 5000, true, "d", playerid);
				SendClientMessage(playerid, LIGHTGREEN, "Welcome to the Admin Tower, use /(open/close)hanger to toggle the hanger. Use /exitat at anytime.");
			}
			else if(IsPlayerAdmin(playerid))
	        {
        		SetPlayerPos(playerid,2150.0178,2425.3809,65.2773);
        		SetPlayerFacingAngle(playerid,265.2805);
        		hasenteredtower{playerid} = 1;
				attimer{playerid} = SetTimerEx("DetectATDeparture", 5000, true, "d", playerid);
				SendClientMessage(playerid, LIGHTGREEN, "Welcome to the Admin Tower, use /(open/close)hanger to toggle the hanger. Use /exitat at anytime.");
			}
			return 1;
		}
	    case BAR_CP:
	    {
		    SetPlayerInterior(playerid, 11);
		    SetPlayerPos(playerid, 502.2838, -70.2034, 998.7578);
		    SetPlayerFacingAngle(playerid, 181.8469);//
		    return 1;
		}
	    case APARTMENTS_CP:
	    {
		    ShowPlayerDialog(playerid, APARTMENTS_ELEVATOR, DIALOG_STYLE_LIST, "{FFFFFF} Apartments - Elevator", "{FFFFFF}Ground Level\nLevel 1\nLevel 2\nLevel 3\nLevel 4\nLevel 5\nLevel 6\nLevel 7\nLevel 8\nLevel 9\nLevel 10\nRoof", "Select", "Cancel");
		    return 1;
		}
	    case BAR_EXIT_CP:
	    {
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 2306.1594, 2373.5042, 10.8203);
		    SetPlayerFacingAngle(playerid, 180.6346);//
		    return 1;
		}
	    case BAR_ROB_CP:
	    {
            if(GetTeam{playerid} == CLASS_CIV)
			{
                SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
			}
		    return 1;
	    }
	    case NV_UNI_CP:
	    {
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPos(playerid, -2028.1526,-105.1106,1035.1719);
		    SetPlayerFacingAngle(playerid, 90.5330);//
		    return 1;
		}
	    case NV_UNI_CP2:
	    {
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,2375.5786 + 2,2306.3044 + 2,8.1406);
		    SetPlayerFacingAngle(playerid,174.5346 + 180);
		    return 1;
		}
	    case NV_UNI_CP3:
	    {
            if(GetTeam{playerid} == CLASS_CIV)
			{
                SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
                ShowPlayerDialog(playerid, DEGREE_LIST_DIALOG, DIALOG_STYLE_LIST, "{FFFFFF} University - Master Degrees",
"{FFFFFF}Madrak Real Estate\nMadrak Law\nMadrak Defense\nMadrak Medical\nMadrak Mechanical\nMadrak Dealership\nMadrak Weapons", "Review", "Cancel");
            }
            else
            {
                ShowPlayerDialog(playerid, DEGREE_LIST_DIALOG, DIALOG_STYLE_LIST, "{FFFFFF} University - Master Degrees",
"{FFFFFF}Madrak Real Estate\nMadrak Law\nMadrak Defense\nMadrak Medical\nMadrak Mechanical\nMadrak Dealership\nMadrak Weapons", "Review", "Cancel");
            }
	    }
	    case CAR_SHOP:
	    {
	        if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	        {
	        	ShowPlayerDialog(playerid, NVM_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Car Shop", "{FFFFFF}Sports Cars\nMotor Bikes\nSpecial Vehicles", "Select", "Cancel");
			}
		}
	    case GYM_ENTER_CP:
		{
		    SetPlayerInterior(playerid,7);
		    SetPlayerPos(playerid,774.0471,-76.2140,1000.6542);
		    SetPlayerFacingAngle(playerid,359.5078);
		    return 1;
		}
		case GYM_EXIT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,1966.7211,2294.8142,16.4559);
		    SetPlayerFacingAngle(playerid,88.9527);
		    return 1;
		}
		case GYM_RING_CP:
		{
		    SetPlayerInterior(playerid,7);
		    SetPlayerPos(playerid,768.8473,-70.6679,1001.5692);
		    SetPlayerFacingAngle(playerid,5.2635);
		    return 1;
		}
		case GYM_STYLE_CP:
		{
            if(GetTeam{playerid} == CLASS_CIV)
			{
                SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
                ShowPlayerDialog(playerid, GYM_DIALOG, DIALOG_STYLE_LIST, "{FFFFFF} Gym - Fighting Styles", "{FFFFFF}Elbow Style - $50K\nBoxer Style - $100K\nGrab and Kick Style - $50K\nKnee and Head Style - $50K\nKung Fu Style - $100K\nNormal Style - Free", "Select", "Cancel");
            }
            else
            {
                ShowPlayerDialog(playerid, GYM_DIALOG, DIALOG_STYLE_LIST, "{FFFFFF} Gym - Fighting Styles", "{FFFFFF}Elbow Style - $50K\nBoxer Style - $100K\nGrab and Kick Style - $50K\nKnee and Head Style - $50K\nKung Fu Style - $100K\nNormal Style - Free", "Select", "Cancel");
		    	return 1;
            }
		}
	    case NVPD_BASE_BOTT_CP:
		{
		    SetPlayerInterior(playerid,3);
		    SetPlayerPos(playerid, 197.7797,168.2728,1003.0234);
		    SetPlayerFacingAngle(playerid,271.4453);
		    return 1;
		}
		case CIA_CP:
		{
		    SetPlayerInterior(playerid, 10);
		    SetPlayerPos(playerid, 246.0881,110.8219,1003.2188);
		    SetPlayerFacingAngle(playerid, 358.1136);
		    return 1;
		}
		case FBI_ENTER_CP:
		{
		    SetPlayerInterior(playerid, 6);
		    SetPlayerPos(playerid, 246.5886,65.0507,1003.6406);
		    SetPlayerFacingAngle(playerid, 359.6833);
		    return 1;
		}
		case NVPD_BASE_TOP_CP:
		{
		    SetPlayerInterior(playerid,3);
		    SetPlayerPos(playerid,197.7797,168.2728,1003.0234);
		    SetPlayerFacingAngle(playerid,271.4453);
		    return 1;
		}
		case NVPD_ENT_1_CP:
		{
		    SetPlayerInterior(playerid,3);
		    SetPlayerPos(playerid,238.6027,141.3288,1003.0234);
		    SetPlayerFacingAngle(playerid,0.0568);
		    return 1;
		}
		case NVPD_ENT_2_CP:
		{
		    SetPlayerInterior(playerid,3);
		    SetPlayerPos(playerid,288.9532,169.8294,1007.1794);
		    SetPlayerFacingAngle(playerid,355.9600);
		    return 1;
		}
		case NVPD_TOP_CPARK_CP:
		{
		    SetPlayerInterior(playerid,3);
		    SetPlayerPos(playerid,197.7797,168.2728,1003.0234);
		    SetPlayerFacingAngle(playerid,271.4453);
		    return 1;
		}
		case NVPD_ROOF_CP:
		{
		    SetPlayerInterior(playerid,3);
		    SetPlayerPos(playerid,197.7797,168.2728,1003.0234);
		    SetPlayerFacingAngle(playerid,271.4453);
		    return 1;
		}
		case ISLE_CP:
		{
		    SetPlayerInterior(playerid,12);
		    SetPlayerVirtualWorld(playerid,1);
		    SetPlayerPos(playerid,1133.0824,-12.4341,1000.6797);
		    SetPlayerFacingAngle(playerid,357.0778);
		    return 1;
		}
		case VEGAS_CP:
		{
		    SetPlayerInterior(playerid,12);
		    SetPlayerVirtualWorld(playerid,2);
		    SetPlayerPos(playerid,1133.0824,-12.4341,1000.6797);
		    SetPlayerFacingAngle(playerid,357.0778);
		    return 1;
		}
		case REDSANDS_CP:
		{
		    SetPlayerInterior(playerid,12);
		    SetPlayerVirtualWorld(playerid,3);
		    SetPlayerPos(playerid,1133.0824,-12.4341,1000.6797);
		    SetPlayerFacingAngle(playerid,357.0778);
		    return 1;
		}
		case CALG_CP:
		{
		    SetPlayerInterior(playerid,1);
		    SetPlayerPos(playerid,2234.0032,1711.0713,1011.4044);
		    SetPlayerFacingAngle(playerid,182.8158);
		    return 1;
		}
		case DRAG_CP:
		{
		    SetPlayerInterior(playerid,10);
		    SetPlayerPos(playerid,2015.5421,1017.8916,996.8750);
		    SetPlayerFacingAngle(playerid,88.8009);
		    return 1;
		}
		case AMMU1_CP:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerVirtualWorld(playerid,1);
		    SetPlayerPos(playerid,285.6608,-83.8597,1001.5156);
		    SetPlayerFacingAngle(playerid,359.0891);
		    return 1;
		}
		case AMMU2_CP:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerVirtualWorld(playerid,2);
		    SetPlayerPos(playerid,285.6608,-83.8597,1001.5156);
		    SetPlayerFacingAngle(playerid,359.0891);
		    return 1;
		}
		case AMMU3_CP:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerVirtualWorld(playerid,3);
		    SetPlayerPos(playerid,285.6608,-83.8597,1001.5156);
		    SetPlayerFacingAngle(playerid,359.0891);
		    return 1;
		}
		case AMMU4_CP:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerVirtualWorld(playerid,4);
		    SetPlayerPos(playerid,285.6608,-83.8597,1001.5156);
		    SetPlayerFacingAngle(playerid,359.0891);
		    return 1;
		}
		case AMMU5_CP:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerVirtualWorld(playerid,5);
    		SetPlayerPos(playerid,285.6608,-83.8597,1001.5156);
		    SetPlayerFacingAngle(playerid,359.0891);
		    return 1;
		}
		case AMMU6_CP:
		{
		    SetPlayerInterior(playerid,4);
		    SetPlayerVirtualWorld(playerid,6);
		    SetPlayerPos(playerid,285.6608,-83.8597,1001.5156);
		    SetPlayerFacingAngle(playerid,359.0891);
		    return 1;
		}
		case BURGER1_CP:
		{
		    SetPlayerInterior(playerid,10);
		    SetPlayerVirtualWorld(playerid,1);
		    SetPlayerPos(playerid,365.4156,-73.5571,1001.5078);
		    SetPlayerFacingAngle(playerid,305.7385);
		    return 1;
		}
		case BURGER2_CP:
		{
		    SetPlayerInterior(playerid,10);
		    SetPlayerVirtualWorld(playerid,2);
		    SetPlayerPos(playerid,365.4156,-73.5571,1001.5078);
		    SetPlayerFacingAngle(playerid,305.7385);
		    return 1;
		}
		case BURGER3_CP:
		{
		    SetPlayerInterior(playerid,10);
		    SetPlayerVirtualWorld(playerid,3);
		    SetPlayerPos(playerid,365.4156,-73.5571,1001.5078);
		    SetPlayerFacingAngle(playerid,305.7385);
		    return 1;
		}
		case CLUCK1_CP:
		{
		    SetPlayerInterior(playerid,9);
		    SetPlayerVirtualWorld(playerid,1);
		    SetPlayerPos(playerid,364.9649,-9.4282,1001.8516);
		    SetPlayerFacingAngle(playerid,358.8747);
		    return 1;
		}
		case CLUCK2_CP:
		{
		    SetPlayerInterior(playerid,9);
		    SetPlayerVirtualWorld(playerid,2);
		    SetPlayerPos(playerid,364.9649,-9.4282,1001.8516);
		    SetPlayerFacingAngle(playerid,358.8747);
		    return 1;
		}
		case CLUCK3_CP:
		{
		    SetPlayerInterior(playerid,9);
		    SetPlayerVirtualWorld(playerid,3);
		    SetPlayerPos(playerid,364.9649,-9.4282,1001.8516);
		    SetPlayerFacingAngle(playerid,358.8747);
		    return 1;
		}
		case BURGER4_CP:
		{
		    SetPlayerInterior(playerid,10);
		    SetPlayerVirtualWorld(playerid,4);
		    SetPlayerPos(playerid,365.4156,-73.5571,1001.5078);
		    SetPlayerFacingAngle(playerid,305.7385);
		    return 1;
		}
		case BURGER5_CP:
		{
		    SetPlayerInterior(playerid,10);
		    SetPlayerVirtualWorld(playerid,5);
		    SetPlayerPos(playerid,365.4156,-73.5571,1001.5078);
		    SetPlayerFacingAngle(playerid,305.7385);
		    return 1;
		}
		case SHOP_24_1_CP:
		{
		    SetPlayerInterior(playerid,17);
		    SetPlayerVirtualWorld(playerid,1);
		    SetPlayerPos(playerid,-25.5918,-185.0244,1003.5469);
		    SetPlayerFacingAngle(playerid,358.4055);
		    return 1;
		}
		case SHOP_24_2_CP:
		{
		    SetPlayerInterior(playerid,17);
		    SetPlayerVirtualWorld(playerid,2);
		    SetPlayerPos(playerid,-25.5918,-185.0244,1003.5469);
		    SetPlayerFacingAngle(playerid,358.4055);
		    return 1;
		}
		case SHOP_24_3_CP:
		{
		    SetPlayerInterior(playerid,17);
		    SetPlayerVirtualWorld(playerid,3);
		    SetPlayerPos(playerid,-25.5918,-185.0244,1003.5469);
		    SetPlayerFacingAngle(playerid,358.4055);
		    return 1;
		}
		case SHOP_24_4_CP:
		{
		    SetPlayerInterior(playerid,17);
		    SetPlayerVirtualWorld(playerid,4);
		    SetPlayerPos(playerid,-25.5918,-185.0244,1003.5469);
		    SetPlayerFacingAngle(playerid,358.4055);
		    return 1;
		}
		case NV_BANK_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,1);
            SetPlayerPos(playerid,2307.5640,-15.9402,26.7496);
		    SetPlayerFacingAngle(playerid,273.3910);
		    return 1;
		}
		case ELQ_BANK_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,2);
		    SetPlayerPos(playerid,2307.5640,-15.9402,26.7496);
		    SetPlayerFacingAngle(playerid,273.3910);
		    return 1;
		}
		case FORT_BANK_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,3);
		    SetPlayerPos(playerid,2307.5640,-15.9402,26.7496);
		    SetPlayerFacingAngle(playerid,273.3910);
		    return 1;
		}
		case BARA_BANK_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,4);
		    SetPlayerPos(playerid,2307.5640,-15.9402,26.7496);
		    SetPlayerFacingAngle(playerid,273.3910);
		    return 1;
		}
		case CITYHALL_CP:
		{
		    SetPlayerInterior(playerid,3);
		    SetPlayerPos(playerid,386.7439,173.8342,1008.3828);
		    SetPlayerFacingAngle(playerid,89.9700);
		    return 1;
		}
		case PIZZA_CP:
		{
		    SetPlayerInterior(playerid,5);
		    SetPlayerPos(playerid,372.1255,-131.4364,1001.4922);
		    SetPlayerFacingAngle(playerid,357.6505);
		    return 1;
		}
		case NVPD_ELEV_CP:
		{
			if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
			{
		        ShowPlayerDialog(playerid, NVPD_ELEVATOR_MENU, DIALOG_STYLE_LIST, "{FFFFFF}PD Elevator", "{FFFFFF}Basement(Level 1)\nBasement(Level 2)\nGround Level Carpark\nRoof", "Select", "Cancel");
		    	return 1;
			}
		}
		case FBI_ELEV_OUT:
		{
		    SetPlayerInterior(playerid, 6);
		    SetPlayerPos(playerid, 244.8691, 66.5188, 1003.6406);
		    SetPlayerFacingAngle(playerid, 272.0067);
		}
		case FBI_ELEV_IN:
		{
		    if(GetTeam{playerid} == CLASS_FBI)
		    {
		    	SetPlayerInterior(playerid, 0);
       			new rand = random(sizeof(FBISpawns));
				SetPlayerPos(playerid, FBISpawns[rand][0] + 2.0, FBISpawns[rand][1], FBISpawns[rand][2]);
				SetPlayerFacingAngle(playerid, FBISpawns[rand][3]);
			}
		}
		case NVPD_EXT_1_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,2336.8965,2456.7803,14.9688);
		    SetPlayerFacingAngle(playerid,176.4752);
		    return 1;
		}
		case NVPD_EXT_2_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,2287.0466,2429.0894,10.8203);
		    SetPlayerFacingAngle(playerid,179.9845);
		    return 1;
		}
		case BANK_EXIT1_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2270.8174,2290.9336,10.8203);
		    SetPlayerFacingAngle(playerid,182.8951);
		    return 1;
		}
		case BANK_EXIT2_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,-1457.9921,2593.6372,55.8359);
		    SetPlayerFacingAngle(playerid,358.9392);
		    return 1;
		}
		case BANK_EXIT3_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,-181.6659,1133.0254,19.7422);
		    SetPlayerFacingAngle(playerid,86.8159);
		    return 1;
		}
		case BANK_EXIT4_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,-827.9003,1501.3838,19.4031);
		    SetPlayerFacingAngle(playerid,181.1828);
		    return 1;
		}
		case ISLE_EXIT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2127.5435,2377.2214,10.8203);
		    SetPlayerFacingAngle(playerid,177.8392);
		    return 1;
		}
		case VEGAS_EXIT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2021.1683,1916.6536,12.3404);
		    SetPlayerFacingAngle(playerid,271.1466);
		    return 1;
		}
		case REDSANDS_EXIT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,1658.4574,2252.8269,11.0625);
		    SetPlayerFacingAngle(playerid,0.7234);
		    return 1;
		}
		case CALG_EXIT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,2194.1477,1677.0803,12.3672);
		    SetPlayerFacingAngle(playerid,88.6540);
		    return 1;
		}
		case DRAG_EXIT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,2024.1364,1007.6714,10.8203);
		    SetPlayerFacingAngle(playerid,270.1612);
		    return 1;
		}
		case AMMU_EXIT1_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2154.5859,943.0511,10.8203);
		    SetPlayerFacingAngle(playerid,90.4437);
		    return 1;
		}
		case AMMU_EXIT2_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,779.3199,1871.3744,4.9064);
		    SetPlayerFacingAngle(playerid,264.4852);
		    return 1;
		}
		case AMMU_EXIT3_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,-312.7813,830.2787,14.2422);
		    SetPlayerFacingAngle(playerid,271.5080);
		    return 1;
		}
		case AMMU_EXIT4_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,-1509.0355,2608.0867,55.8359);
		    SetPlayerFacingAngle(playerid,178.6528);
		    return 1;
		}
		case AMMU_EXIT5_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2557.4380,2062.4636,10.8203);
		    SetPlayerFacingAngle(playerid,178.6568);
		    return 1;
		}
		case AMMU_EXIT6_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2317.4482,2391.7974,10.8203);
		    SetPlayerFacingAngle(playerid,92.2769);
		    return 1;
		}
		case CITYHALL_EXT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,2415.1201,1124.0508,10.8203);
		    SetPlayerFacingAngle(playerid,270.8013);
		    return 1;
		}
		case FBI_EXIT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,2443.8662,2376.1130,11.9559);
		    SetPlayerFacingAngle(playerid,91.4198);
		    return 1;
		}
		case CIA_CP2:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,939.8738,1733.1982,8.8516);
		    SetPlayerFacingAngle(playerid,268.1567);
		    return 1;
		}
		case BURG1_EXT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2364.2576,2071.3291,10.8203);
		    SetPlayerFacingAngle(playerid,91.9347);
		    return 1;
		}
		case BURG2_EXT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2470.8298,2034.6128,11.0625);
		    SetPlayerFacingAngle(playerid,89.7456);
		    return 1;
		}
		case BURG3_EXT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,1160.1515,2072.0476,11.0625);
		    SetPlayerFacingAngle(playerid,267.1969);
		    return 1;
		}
		case CLUCK1_EXT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2393.0564,2043.7430,10.8203);
		    SetPlayerFacingAngle(playerid,359.7344);
		    return 1;
		}
		case CLUCK2_EXT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,171.6739,1174.7643,14.7578);
		    SetPlayerFacingAngle(playerid,147.6426);
		    return 1;
		}
		case CLUCK3_EXT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,-1211.7316,1832.2042,41.9297);
		    SetPlayerFacingAngle(playerid,315.3052);
		    return 1;
		}
		case BURG4_EXT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2171.8706,2795.4661,10.8203);
		    SetPlayerFacingAngle(playerid,266.6424);
		    return 1;
		}
		case BURG5_EXT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,1875.1389,2071.7651,11.0625);
		    SetPlayerFacingAngle(playerid,269.0581);
		    return 1;
		}
		case EXT1_24_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2452.7302,2062.1987,10.8203);
		    SetPlayerFacingAngle(playerid,179.9630);
		    return 1;
		}
		case EXT2_24_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2546.2432,1970.2073,10.8203);
		    SetPlayerFacingAngle(playerid,179.1233);
		    return 1;
		}
		case EXT3_24_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2192.7253,1990.9977,12.2969);
		    SetPlayerFacingAngle(playerid,88.6409);
		    return 1;
		}
		case EXT4_24_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerPos(playerid,2247.3997,2399.0303,10.8203);
		    SetPlayerFacingAngle(playerid,2.9991);
		    return 1;
		}
		case PIZZA_EXT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,2352.0244,2530.1313,10.8203);
		    SetPlayerFacingAngle(playerid,178.9439);
		    return 1;
		}
		case NIGHT_CLUB_CP:
		{
		    SetPlayerInterior(playerid,17);
		    SetPlayerPos(playerid,493.0540,-21.6314,1000.6797);
		    SetPlayerFacingAngle(playerid,358.0106);
		    return 1;
		}
		case NIGHT_CLUB_EXIT_CP:
		{
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,2313.5601,2324.2268,10.8203);
		    SetPlayerFacingAngle(playerid,270.3945);
		    return 1;
		}
		case NVPD_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		    	return 1;
		    }
		}
		case CIA_CP3:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		    	return 1;
		    }
		}
		case FBI_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		    	return 1;
		    }
		}
		case ISLE_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		    	return 1;
		    }
		}
		case VEGAS_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		    	return 1;
		    }
		}
		case REDSANDS_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		    	return 1;
		    }
		}
		case CALG_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		    	return 1;
		    }
		}
		case DRAG_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		    	return 1;
		    }
		}
		case NIGHT_CLUB_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, GLOBAL_CLUB_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Night Club Bar", "{FFFFFF}Beverages Menu\nBartender Menu", "Select", "Cancel");
		    	return 1;
		    }
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
		        ShowPlayerDialog(playerid, GLOBAL_CLUB_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Night Club Bar", "{FFFFFF}Beverages Menu\nBartender Menu", "Select", "Cancel");
		    }
			return 1;
		}
		case AMMU1_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    }
		    return 1;
		}
		case AMMU2_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    }
		    return 1;
		}
		case AMMU3_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    }
		    return 1;
		}
		case AMMU4_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    }
		    return 1;
		}
		case AMMU5_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    }
		    return 1;
		}
		case AMMU6_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
		        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		    }
		    return 1;
		}
		case CITYHALL_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		    	return 1;
		    }
		}
		case BURG1_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
			}
			return 1;
		}
		case BURG2_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "Burger Shot", "Food/Drink Menu", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
			}
			return 1;
		}
		case BURG3_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
			}
			return 1;
		}
		case BURG4_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
			}
			return 1;
		}
		case BURG5_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
			}
			return 1;
		}
		case CLUCK1_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, CLUCK_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Cluck'n Bell", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, CLUCK_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Cluck'n Bell", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
			}
			return 1;
		}
		case CLUCK2_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, CLUCK_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Cluck'n Bell", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, CLUCK_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Cluck'n Bell", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
			}
			return 1;
		}
		case CLUCK3_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, CLUCK_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Cluck'n Bell", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, CLUCK_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Cluck'n Bell", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
			}
			return 1;
		}
		case ROB_24_1:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item Menu", "{FFFFFF}Food/Drink Menu\nAbzar Menu\nBelit ghorekeshi", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item Menu", "{FFFFFF}Food/Drink Menu\nAbzar Menu\nBelit ghorekeshi", "Select", "Cancel");
			}
			return 1;
		}
		case ROB_24_2:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item Menu", "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item Menu", "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi", "Select", "Cancel");
			}
			return 1;
		}
		case ROB_24_3:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item Menu", "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item Menu", "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi", "Select", "Cancel");
			}
			return 1;
		}
		case ROB_24_4:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item Menu", "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item Menu", "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi", "Select", "Cancel");
			}
			return 1;
		}
		case NV_BANK_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
		        ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		    }
		    return 1;
		}
		case ELQ_BANK_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
		        ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		    }
		    return 1;
		}
		case FORT_BANK_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
		        ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		    }
		    return 1;
		}
		case BARA_BANK_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		    	return 1;
			}
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
		        ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		    }
		    return 1;
		}
		case PIZZA_ROB:
		{
			if(GetTeam{playerid} == CLASS_CIV)
			{
		        SendClientMessage(playerid,YELLOW,"Baraye shoro dozdi Alt samt chap ra bezanid.");
		        ShowPlayerDialog(playerid, PIZZA_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Well Stacked Pizzas", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
		    	return 1;
		    }
		    else if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC)
		    {
                ShowPlayerDialog(playerid, PIZZA_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Well Stacked Pizzas", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
			}
			return 1;
		}
		case HOS_CP:
		{
			ShowPlayerDialog(playerid, HOS_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Hospital", "{FFFFFF}Change Class(Skin)\nBuy Medikits", "Select", "Cancel");
		    return 1;
		}
		case CELLCP_1:
		{
			IsInCellCP{playerid} = true;
    		IsInCellCP1{playerid} = true;
		}
		case CELLCP_2:
		{
			IsInCellCP{playerid} = true;
    		IsInCellCP2{playerid} = true;
		}
		case CELLCP_3:
		{
			IsInCellCP{playerid} = true;
    		IsInCellCP3{playerid} = true;
		}
		case CELLCP_4:
		{
			IsInCellCP{playerid} = true;
    		IsInCellCP4{playerid} = true;
		}
		case CELLCP_5:
		{
			IsInCellCP{playerid} = true;
    		IsInCellCP5{playerid} = true;
		}
		case CELLCP_6:
		{
			IsInCellCP{playerid} = true;
    		IsInCellCP6{playerid} = true;
		}
	}
	}
	return 1;
}

public OnCheckpointEXIT(playerid, checkpointid)
{
    switch(checkpointid)
	{
        case CP1:
		{
			if(IsRobbingKelisa1{playerid} == true || IsRobbingKelisa2{playerid} == true || IsRobbingKelisa3{playerid} == true || IsRobbingKelisa4{playerid} == true || IsRobbingKelisa5{playerid} == true || IsRobbingKelisa6{playerid} == true)
			{
                KillTimer(kelisatimer{playerid});
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
			}
		}
		case CP2:
		{
			if(IsRobbingKelisa1{playerid} == true || IsRobbingKelisa2{playerid} == true || IsRobbingKelisa3{playerid} == true || IsRobbingKelisa4{playerid} == true || IsRobbingKelisa5{playerid} == true || IsRobbingKelisa6{playerid} == true)
			{
                KillTimer(kelisatimer{playerid});
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
			}
		}
		case CP3:
		{
			if(IsRobbingKelisa1{playerid} == true || IsRobbingKelisa2{playerid} == true || IsRobbingKelisa3{playerid} == true || IsRobbingKelisa4{playerid} == true || IsRobbingKelisa5{playerid} == true || IsRobbingKelisa6{playerid} == true)
			{
                KillTimer(kelisatimer{playerid});
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
			}
		}
		case CP4:
		{
			if(IsRobbingKelisa1{playerid} == true || IsRobbingKelisa2{playerid} == true || IsRobbingKelisa3{playerid} == true || IsRobbingKelisa4{playerid} == true || IsRobbingKelisa5{playerid} == true || IsRobbingKelisa6{playerid} == true)
			{
                KillTimer(kelisatimer{playerid});
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
			}
		}
		case CP5:
		{
			if(IsRobbingKelisa1{playerid} == true || IsRobbingKelisa2{playerid} == true || IsRobbingKelisa3{playerid} == true || IsRobbingKelisa4{playerid} == true || IsRobbingKelisa5{playerid} == true || IsRobbingKelisa6{playerid} == true)
			{
                KillTimer(kelisatimer{playerid});
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
			}
		}
		case CP6:
		{
			if(IsRobbingKelisa1{playerid} == true || IsRobbingKelisa2{playerid} == true || IsRobbingKelisa3{playerid} == true || IsRobbingKelisa4{playerid} == true || IsRobbingKelisa5{playerid} == true || IsRobbingKelisa6{playerid} == true)
			{
                KillTimer(kelisatimer{playerid});
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingKelisa1{playerid} = false;
                IsRobbingKelisa2{playerid} = false;
                IsRobbingKelisa3{playerid} = false;
                IsRobbingKelisa4{playerid} = false;
                IsRobbingKelisa5{playerid} = false;
                IsRobbingKelisa6{playerid} = false;
			}
		}
		case CELLCP_1:
		{
			IsInCellCP{playerid} = false;
    		IsInCellCP1{playerid} = false;
		}
		case CELLCP_2:
		{
			IsInCellCP{playerid} = false;
    		IsInCellCP2{playerid} = false;
		}
		case CELLCP_3:
		{
			IsInCellCP{playerid} = false;
    		IsInCellCP3{playerid} = false;
		}
		case CELLCP_4:
		{
			IsInCellCP{playerid} = false;
    		IsInCellCP4{playerid} = false;
		}
		case CELLCP_5:
		{
			IsInCellCP{playerid} = false;
    		IsInCellCP5{playerid} = false;
		}
		case CELLCP_6:
		{
			IsInCellCP{playerid} = false;
    		IsInCellCP6{playerid} = false;
		}
		case NV_UNI_CP3:
		{
			if(IsRobbingUNI{playerid} == true)
			{
                KillTimer(unitimer{playerid});
                IsRobbingUNI{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingUNI{playerid} = false;
			}
		}
		case FBI_ROB:
		{
			if(IsRobbingFBI{playerid} == true)
			{
                KillTimer(fbitimer{playerid});
                IsRobbingFBI{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingFBI{playerid} = false;
			}
		}

		case CIA_CP3:
		{
			if(IsRobbingCIA{playerid} == true)
			{
                KillTimer(ciatimer{playerid});
                IsRobbingCIA{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingCIA{playerid} = false;
			}
		}
		case NIGHT_CLUB_ROB:
		{
			if(IsRobbingClub{playerid} == true)
			{
                KillTimer(clubtimer{playerid});
                IsRobbingClub{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingClub{playerid} = false;
			}
		}
		case GYM_STYLE_CP:
		{
			if(IsRobbingGym{playerid} == true)
			{
                KillTimer(gymtimer{playerid});
                IsRobbingGym{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingGym{playerid} = false;
			}
		}
        case NVPD_ROB:
		{
			if(IsRobbingNVPD{playerid} == true)
			{
                KillTimer(nvpdtimer{playerid});
                IsRobbingNVPD{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingNVPD{playerid} = false;
			}
		}
		case ISLE_ROB:
		{
			if(IsRobbingIsle{playerid} == true)
			{
                KillTimer(isletimer{playerid});
                IsRobbingIsle{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingIsle{playerid} = false;
			}
		}
		case VEGAS_ROB:
		{
			if(IsRobbingVegas{playerid} == true)
			{
                KillTimer(vegastimer{playerid});
                IsRobbingVegas{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingVegas{playerid} = false;
			}
		}
		case REDSANDS_ROB:
		{
			if(IsRobbingRedsands{playerid} == true)
			{
                KillTimer(redsandstimer{playerid});
                IsRobbingRedsands{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingRedsands{playerid} = false;
			}
		}
		case CALG_ROB:
		{
			if(IsRobbingCalg{playerid} == true)
			{
                KillTimer(calgtimer{playerid});
                IsRobbingCalg{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingCalg{playerid} = false;
			}
		}
		case DRAG_ROB:
		{
			if(IsRobbingDrag{playerid} == true)
			{
                KillTimer(dragtimer{playerid});
                IsRobbingDrag{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingDrag{playerid} = false;
			}
		}
		case AMMU1_ROB:
		{
			if(IsRobbingAmmu1{playerid} == true || IsRobbingAmmu2{playerid} == true || IsRobbingAmmu3{playerid} == true || IsRobbingAmmu4{playerid} == true || IsRobbingAmmu5{playerid} == true || IsRobbingAmmu6{playerid} == true)
			{
                KillTimer(ammutimer{playerid});
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
			}
		}
		case AMMU2_ROB:
		{
			if(IsRobbingAmmu1{playerid} == true || IsRobbingAmmu2{playerid} == true || IsRobbingAmmu3{playerid} == true || IsRobbingAmmu4{playerid} == true || IsRobbingAmmu5{playerid} == true || IsRobbingAmmu6{playerid} == true)
			{
                KillTimer(ammutimer{playerid});
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
			}
		}
		case AMMU3_ROB:
		{
			if(IsRobbingAmmu1{playerid} == true || IsRobbingAmmu2{playerid} == true || IsRobbingAmmu3{playerid} == true || IsRobbingAmmu4{playerid} == true || IsRobbingAmmu5{playerid} == true || IsRobbingAmmu6{playerid} == true)
			{
                KillTimer(ammutimer{playerid});
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
			}
		}
		case AMMU4_ROB:
		{
			if(IsRobbingAmmu1{playerid} == true || IsRobbingAmmu2{playerid} == true || IsRobbingAmmu3{playerid} == true || IsRobbingAmmu4{playerid} == true || IsRobbingAmmu5{playerid} == true || IsRobbingAmmu6{playerid} == true)
			{
                KillTimer(ammutimer{playerid});
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
			}
		}
		case AMMU5_ROB:
		{
			if(IsRobbingAmmu1{playerid} == true || IsRobbingAmmu2{playerid} == true || IsRobbingAmmu3{playerid} == true || IsRobbingAmmu4{playerid} == true || IsRobbingAmmu5{playerid} == true || IsRobbingAmmu6{playerid} == true)
			{
                KillTimer(ammutimer{playerid});
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
               
		    }
		    else
		    {
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
			}
		}
		case AMMU6_ROB:
		{
			if(IsRobbingAmmu1{playerid} == true || IsRobbingAmmu2{playerid} == true || IsRobbingAmmu3{playerid} == true || IsRobbingAmmu4{playerid} == true || IsRobbingAmmu5{playerid} == true || IsRobbingAmmu6{playerid} == true)
			{
                KillTimer(ammutimer{playerid});
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {
                IsRobbingAmmu1{playerid} = false;
                IsRobbingAmmu2{playerid} = false;
                IsRobbingAmmu3{playerid} = false;
                IsRobbingAmmu4{playerid} = false;
                IsRobbingAmmu5{playerid} = false;
                IsRobbingAmmu6{playerid} = false;
			}
		}
		case CITYHALL_ROB:
		{
			if(IsRobbingHall{playerid} == true)
			{
                KillTimer(halltimer{playerid});
                IsRobbingHall{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
       
		    }
		    else
		    {
                IsRobbingHall{playerid} = false;
			}
		}
		case BAR_ROB_CP:
		{
			if(IsRobbingBar{playerid} == true)
			{
                KillTimer(bartimer{playerid});
                IsRobbingBar{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
    
		    }
		    else
		    {
                IsRobbingBar{playerid} = false;
			}
		}
		case BURG1_ROB:
		{
			if(IsRobbingShot1{playerid} == true || IsRobbingShot2{playerid} == true || IsRobbingShot3{playerid} == true || IsRobbingShot4{playerid} == true || IsRobbingShot5{playerid} == true)
			{
                KillTimer(shottimer{playerid});
                IsRobbingShot1{playerid} = false;
                IsRobbingShot2{playerid} = false;
                IsRobbingShot3{playerid} = false;
                IsRobbingShot4{playerid} = false;
                IsRobbingShot5{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
     
		    }
		    else
		    {

                IsRobbingShot1{playerid} = false;
                IsRobbingShot2{playerid} = false;
                IsRobbingShot3{playerid} = false;
                IsRobbingShot4{playerid} = false;
                IsRobbingShot5{playerid} = false;
			}
		}
		case BURG2_ROB:
		{
			if(IsRobbingShot1{playerid} == true || IsRobbingShot2{playerid} == true || IsRobbingShot3{playerid} == true || IsRobbingShot4{playerid} == true || IsRobbingShot5{playerid} == true)
			{
                KillTimer(shottimer{playerid});
                IsRobbingShot1{playerid} = false;
                IsRobbingShot2{playerid} = false;
                IsRobbingShot3{playerid} = false;
                IsRobbingShot4{playerid} = false;
                IsRobbingShot5{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
         
		    }
		    else
		    {

                IsRobbingShot1{playerid} = false;
                IsRobbingShot2{playerid} = false;
                IsRobbingShot3{playerid} = false;
                IsRobbingShot4{playerid} = false;
                IsRobbingShot5{playerid} = false;
			}
		}
		case BURG3_ROB:
		{
			if(IsRobbingShot1{playerid} == true || IsRobbingShot2{playerid} == true || IsRobbingShot3{playerid} == true || IsRobbingShot4{playerid} == true || IsRobbingShot5{playerid} == true)
			{
                KillTimer(shottimer{playerid});
                IsRobbingShot1{playerid} = false;
                IsRobbingShot2{playerid} = false;
                IsRobbingShot3{playerid} = false;
                IsRobbingShot4{playerid} = false;
                IsRobbingShot5{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
             
		    }
		    else
		    {

                IsRobbingShot1{playerid} = false;
                IsRobbingShot2{playerid} = false;
                IsRobbingShot3{playerid} = false;
                IsRobbingShot4{playerid} = false;
                IsRobbingShot5{playerid} = false;
			}
		}
		case BURG4_ROB:
		{
			if(IsRobbingShot1{playerid} == true || IsRobbingShot2{playerid} == true || IsRobbingShot3{playerid} == true || IsRobbingShot4{playerid} == true || IsRobbingShot5{playerid} == true)
			{
                KillTimer(shottimer{playerid});
                IsRobbingShot1{playerid} = false;
                IsRobbingShot2{playerid} = false;
                IsRobbingShot3{playerid} = false;
                IsRobbingShot4{playerid} = false;
                IsRobbingShot5{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
        
		    }
		    else
		    {

                IsRobbingShot1{playerid} = false;
                IsRobbingShot2{playerid} = false;
                IsRobbingShot3{playerid} = false;
                IsRobbingShot4{playerid} = false;
                IsRobbingShot5{playerid} = false;
			}
		}
		case BURG5_ROB:
		{
			if(IsRobbingShot1{playerid} == true || IsRobbingShot2{playerid} == true || IsRobbingShot3{playerid} == true || IsRobbingShot4{playerid} == true || IsRobbingShot5{playerid} == true)
			{
                KillTimer(shottimer{playerid});
                IsRobbingShot1{playerid} = false;
                IsRobbingShot2{playerid} = false;
                IsRobbingShot3{playerid} = false;
                IsRobbingShot4{playerid} = false;
                IsRobbingShot5{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
       
		    }
		    else
		    {

                IsRobbingShot1{playerid} = false;
                IsRobbingShot2{playerid} = false;
                IsRobbingShot3{playerid} = false;
                IsRobbingShot4{playerid} = false;
                IsRobbingShot5{playerid} = false;
			}
		}
		case CLUCK1_ROB:
		{
			if(IsRobbingCluck1{playerid} == true  || IsRobbingCluck2{playerid} == true || IsRobbingCluck3{playerid} == true)
			{
                KillTimer(clucktimer{playerid});
                IsRobbingCluck1{playerid} = false;
                IsRobbingCluck2{playerid} = false;
                IsRobbingCluck3{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
               
		    }
		    else
		    {

                IsRobbingCluck1{playerid} = false;
                IsRobbingCluck2{playerid} = false;
                IsRobbingCluck3{playerid} = false;
			}
		}
		case CLUCK2_ROB:
		{
			if(IsRobbingCluck1{playerid} == true  || IsRobbingCluck2{playerid} == true || IsRobbingCluck3{playerid} == true)
			{
                KillTimer(clucktimer{playerid});
                IsRobbingCluck1{playerid} = false;
                IsRobbingCluck2{playerid} = false;
                IsRobbingCluck3{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
         
		    }
		    else
		    {

                IsRobbingCluck1{playerid} = false;
                IsRobbingCluck2{playerid} = false;
                IsRobbingCluck3{playerid} = false;
			}
		}
		case CLUCK3_ROB:
		{
			if(IsRobbingCluck1{playerid} == true  || IsRobbingCluck2{playerid} == true || IsRobbingCluck3{playerid} == true)
			{
                KillTimer(clucktimer{playerid});
                IsRobbingCluck1{playerid} = false;
                IsRobbingCluck2{playerid} = false;
                IsRobbingCluck3{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
          
		    }
		    else
		    {

                IsRobbingCluck1{playerid} = false;
                IsRobbingCluck2{playerid} = false;
                IsRobbingCluck3{playerid} = false;
			}
		}
		case ROB_24_1:
		{
			if(IsRobbingStore1{playerid} == true || IsRobbingStore2{playerid} == true || IsRobbingStore3{playerid} == true || IsRobbingStore4{playerid} == true)
			{
                KillTimer(storetimer{playerid});
                IsRobbingStore1{playerid} = false;
                IsRobbingStore2{playerid} = false;
                IsRobbingStore3{playerid} = false;
                IsRobbingStore4{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");

		    }
		    else
		    {

                IsRobbingStore1{playerid} = false;
                IsRobbingStore2{playerid} = false;
                IsRobbingStore3{playerid} = false;
                IsRobbingStore4{playerid} = false;
			}
		}
		case ROB_24_2:
		{
			if(IsRobbingStore1{playerid} == true || IsRobbingStore2{playerid} == true || IsRobbingStore3{playerid} == true || IsRobbingStore4{playerid} == true)
			{
                KillTimer(storetimer{playerid});
                IsRobbingStore1{playerid} = false;
                IsRobbingStore2{playerid} = false;
                IsRobbingStore3{playerid} = false;
                IsRobbingStore4{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
             
		    }
		    else
		    {

                IsRobbingStore1{playerid} = false;
                IsRobbingStore2{playerid} = false;
                IsRobbingStore3{playerid} = false;
                IsRobbingStore4{playerid} = false;
			}
		}
		case ROB_24_3:
		{
			if(IsRobbingStore1{playerid} == true || IsRobbingStore2{playerid} == true || IsRobbingStore3{playerid} == true || IsRobbingStore4{playerid} == true)
			{
                KillTimer(storetimer{playerid});
                IsRobbingStore1{playerid} = false;
                IsRobbingStore2{playerid} = false;
                IsRobbingStore3{playerid} = false;
                IsRobbingStore4{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
          
		    }
		    else
		    {

                IsRobbingStore1{playerid} = false;
                IsRobbingStore2{playerid} = false;
                IsRobbingStore3{playerid} = false;
                IsRobbingStore4{playerid} = false;
			}
		}
		case ROB_24_4:
		{
			if(IsRobbingStore1{playerid} == true || IsRobbingStore2{playerid} == true || IsRobbingStore3{playerid} == true || IsRobbingStore4{playerid} == true)
			{
                KillTimer(storetimer{playerid});
                IsRobbingStore1{playerid} = false;
                IsRobbingStore2{playerid} = false;
                IsRobbingStore3{playerid} = false;
                IsRobbingStore4{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
            
		    }
		    else
		    {

                IsRobbingStore1{playerid} = false;
                IsRobbingStore2{playerid} = false;
                IsRobbingStore3{playerid} = false;
                IsRobbingStore4{playerid} = false;
			}
		}
		case NV_BANK_ROB:
		{
			if(IsRobbingBank1{playerid} == true || IsRobbingBank2{playerid} == true || IsRobbingBank3{playerid} == true || IsRobbingBank4{playerid} == true)
			{
                KillTimer(banktimer{playerid});
                IsRobbingBank1{playerid} = false;
                IsRobbingBank2{playerid} = false;
                IsRobbingBank3{playerid} = false;
                IsRobbingBank4{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingBank1{playerid} = false;
                IsRobbingBank2{playerid} = false;
                IsRobbingBank3{playerid} = false;
                IsRobbingBank4{playerid} = false;
			}
		}
		case ELQ_BANK_ROB:
		{
			if(IsRobbingBank1{playerid} == true || IsRobbingBank2{playerid} == true || IsRobbingBank3{playerid} == true || IsRobbingBank4{playerid} == true)
			{
                KillTimer(banktimer{playerid});
                IsRobbingBank1{playerid} = false;
                IsRobbingBank2{playerid} = false;
                IsRobbingBank3{playerid} = false;
                IsRobbingBank4{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingBank1{playerid} = false;
                IsRobbingBank2{playerid} = false;
                IsRobbingBank3{playerid} = false;
                IsRobbingBank4{playerid} = false;
			}
		}
		case FORT_BANK_ROB:
		{
			if(IsRobbingBank1{playerid} == true || IsRobbingBank2{playerid} == true || IsRobbingBank3{playerid} == true || IsRobbingBank4{playerid} == true)
			{
                KillTimer(banktimer{playerid});
                IsRobbingBank1{playerid} = false;
                IsRobbingBank2{playerid} = false;
                IsRobbingBank3{playerid} = false;
                IsRobbingBank4{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingBank1{playerid} = false;
                IsRobbingBank2{playerid} = false;
                IsRobbingBank3{playerid} = false;
                IsRobbingBank4{playerid} = false;
			}
		}
		case BARA_BANK_ROB:
		{
			if(IsRobbingBank1{playerid} == true || IsRobbingBank2{playerid} == true || IsRobbingBank3{playerid} == true || IsRobbingBank4{playerid} == true)
			{
                KillTimer(banktimer{playerid});
                IsRobbingBank1{playerid} = false;
                IsRobbingBank2{playerid} = false;
                IsRobbingBank3{playerid} = false;
                IsRobbingBank4{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
		    }
		    else
		    {
                IsRobbingBank1{playerid} = false;
                IsRobbingBank2{playerid} = false;
                IsRobbingBank3{playerid} = false;
                IsRobbingBank4{playerid} = false;
			}
		}
		case PIZZA_ROB:
		{
			if(IsRobbingPizza{playerid} == true)
			{
                KillTimer(pizzatimer{playerid});
                IsRobbingPizza{playerid} = false;
                GameTextForPlayer(playerid,"~r~Robbery Failed", 3000, 5);
                SendClientMessage(playerid,RED,"You have left the checkpoint and failed the robbery.");
        
		    }
		    else
		    {
                IsRobbingPizza{playerid} = false;
			}
		}
	}
	return 1;
}

public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
   		for(new i = 0; i < MAX_BUSINESSES; i++)
   		{
   	    	if(checkpointid == bizentercp[i])
   	    	{
   	        	new file[40], string[150];
				BizID[playerid] = i;
				format(file, sizeof(file), BIZ_FILE, i);

 				if(strcmp(BizInfo[i][bOwner], DEFAULT_BIZ_OWNER_NAME, false) == 0)
				{
			    	format(string, sizeof(string), "{FFFFFF}ID: %d\nDo you want to buy this 24/7 business for $%d?", i, BizInfo[i][bPrice]);
					ShowPlayerDialog(playerid, BIZ_BUY_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Business For-Sale", string, "Buy", "Dont Buy");
				}
				else
				{
			    	format(string, sizeof(string), "%s - Business ID: %d - Business Owner: %s - Business Value: $%d", BizInfo[i][bName], i, BizInfo[i][bOwner], BizInfo[i][bPrice]);
			    	SendClientMessage(playerid, WHITE, string);
			    	if(GetTeam{playerid} == CLASS_CIV && strcmp(BizInfo[i][bOwner], GetName(playerid), false) != 0)
			    	{
			    		SendClientMessage(playerid, LIGHTGREEN, "Use /robbiz to rob this business.");
			    	}
					if(!strcmp(BizInfo[i][bOwner], GetName(playerid)))
		        	{
		        	   	SendClientMessage(playerid, YELLOW, "Use /bizmenu(/bm) to access the business menu.");
		        	}
			    	SetPlayerPos(playerid, BizInfo[i][bIntSpwnX], BizInfo[i][bIntSpwnY], BizInfo[i][bIntSpwnZ]);
			    	SetPlayerFacingAngle(playerid, BizInfo[i][bIntSpwnA]);
			    	SetPlayerInterior(playerid, BizInfo[i][bInterior]);
			    	SetPlayerVirtualWorld(playerid, BizInfo[i][bVWorld]);
				}
			}
			if(checkpointid == bizexitcp[i])
			{
	    		SetPlayerPos(playerid, BizInfo[i][bExtSpwnX], BizInfo[i][bExtSpwnY], BizInfo[i][bExtSpwnZ]);
	    		SetPlayerFacingAngle(playerid, BizInfo[i][bExtSpwnA]);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
				BizID[playerid] = -1;
	    	}
			if(checkpointid == bizrobberycp[i])
			{
		    	new string[50];
				BizRobCP[playerid] = i;
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[i][bName]);
				ShowPlayerDialog(playerid, BIZ_SHOP_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi\nGun Menu", "Select", "Cancel");
			}
		}
	    for(new h = 0; h < MAX_HOUSES; h++)
		{
		    new file[40], string[256];
		    format(file, sizeof(file), HOUSE_FILE, h);
		    if(checkpointid == HouseCPOut[h])
		    {
		        LastHouseCP[playerid] = h;

		        if(!strcmp(GetHouseOwner(h), pNick(playerid)) ||
				!strcmp(HouseInfo[h][hKeyOwner1], pNick(playerid)) ||
				!strcmp(HouseInfo[h][hKeyOwner2], pNick(playerid)) ||
				!strcmp(HouseInfo[h][hKeyOwner3], pNick(playerid)) ||
				!strcmp(HouseInfo[h][hKeyOwner4], pNick(playerid)) ||
				!strcmp(HouseInfo[h][hKeyOwner5], pNick(playerid)) ||
				!strcmp(HouseInfo[h][hKeyOwner6], pNick(playerid)) ||
				!strcmp(HouseInfo[h][hKeyOwner7], pNick(playerid)) ||
				!strcmp(HouseInfo[h][hKeyOwner8], pNick(playerid)) ||
				!strcmp(HouseInfo[h][hKeyOwner9], pNick(playerid)) ||
				!strcmp(HouseInfo[h][hKeyOwner10], pNick(playerid)))
				{
		        	IsInHouse[playerid] = 1;
		        	SetPlayerHouseInterior(playerid, h);
		        }
				if(strcmp(GetHouseOwner(h), "Nobody") &&
				strcmp(GetHouseOwner(h), pNick(playerid)) &&
				strcmp(HouseInfo[h][hKeyOwner1], pNick(playerid)) ||
				strcmp(HouseInfo[h][hKeyOwner2], pNick(playerid)) ||
				strcmp(HouseInfo[h][hKeyOwner3], pNick(playerid)) ||
				strcmp(HouseInfo[h][hKeyOwner4], pNick(playerid)) ||
				strcmp(HouseInfo[h][hKeyOwner5], pNick(playerid)) ||
				strcmp(HouseInfo[h][hKeyOwner6], pNick(playerid)) ||
				strcmp(HouseInfo[h][hKeyOwner7], pNick(playerid)) ||
				strcmp(HouseInfo[h][hKeyOwner8], pNick(playerid)) ||
				strcmp(HouseInfo[h][hKeyOwner9], pNick(playerid)) ||
				strcmp(HouseInfo[h][hKeyOwner10], pNick(playerid)))
		  		{
		  		    format(string,sizeof(string), "%s - House ID: %d - House Owner: %s - House Value: $%d", HouseInfo[h][hName], h, GetHouseOwner(h), GetHouseValue(h));
		       		SendClientMessage(playerid, WHITE, string);
		       		if(!strcmp(GetHouseOwner(h), pNick(playerid)))
		        	{
		        	   	SendClientMessage(playerid, YELLOW, "Use /housemenu(/hm) to access the house menu.");
		        	}
		  		}
		  		if(!strcmp(GetHouseOwner(h), "Nobody"))
				{
			    	if(HouseInfo[h][hHouseInterior] == 6)
			    	{
						format(string, sizeof(string), "{FFFFFF}ID: %d\nDo you want to buy this one story house for $%d?\n\nUse /viewinterior to view the house interior.", h, GetHouseValue(h));
						ShowPlayerDialog(playerid, HOUSE_MENU+4, DIALOG_STYLE_MSGBOX, "{FFFFFF}House Menu - House Sale", string, "Buy", "Dont Buy");
					}
					else if(HouseInfo[h][hHouseInterior] == 7)
			    	{
						format(string, sizeof(string), "{FFFFFF}ID: %d\nDo you want to buy this apartment for $%d?\n\nUse /viewinterior to view the house interior.", h, GetHouseValue(h));
						ShowPlayerDialog(playerid, HOUSE_MENU+4, DIALOG_STYLE_MSGBOX, "{FFFFFF}House Menu - House Sale", string, "Buy", "Dont Buy");
					}
					else if(HouseInfo[h][hHouseInterior] == 9)
			    	{
						format(string, sizeof(string), "{FFFFFF}ID: %d\nDo you want to buy this two story house for $%d?\n\nUse /viewinterior to view the house interior.", h, GetHouseValue(h));
						ShowPlayerDialog(playerid, HOUSE_MENU+4, DIALOG_STYLE_MSGBOX, "{FFFFFF}House Menu - House Sale", string, "Buy", "Dont Buy");
					}
					else if(HouseInfo[h][hHouseInterior] == 12)
			    	{
						format(string, sizeof(string), "{FFFFFF}ID: %d\nDo you want to buy this small mansion for $%d?\n\nUse /viewinterior to view the house interior.", h, GetHouseValue(h));
						ShowPlayerDialog(playerid, HOUSE_MENU+4, DIALOG_STYLE_MSGBOX, "{FFFFFF}House Menu - House Sale", string, "Buy", "Dont Buy");
					}
					else if(HouseInfo[h][hHouseInterior] == 5)
			    	{
						format(string, sizeof(string), "{FFFFFF}ID: %d\nDo you want to buy this large mansion for $%d?\n\nUse /viewinterior to view the house interior.", h, GetHouseValue(h));
						ShowPlayerDialog(playerid, HOUSE_MENU+4, DIALOG_STYLE_MSGBOX, "{FFFFFF}House Menu - House Sale", string, "Buy", "Dont Buy");
					}
				}
			}
			if(checkpointid == HouseCPInt[h])
			{
		 		IsInHouse[playerid] = 0;
				LastHouseCP[playerid] = -1;
				SetPlayerPosEx(playerid, HouseInfo[h][hSPOutX], HouseInfo[h][hSPOutY], HouseInfo[h][hSPOutZ], HouseInfo[h][hSpawnInterior], HouseInfo[h][hWorld]);
				SetPlayerFacingAngle(playerid, HouseInfo[h][hSPOutA]);
				SetPlayerInterior(playerid, HouseInfo[h][hSpawnInterior]);
	   			SetPlayerVirtualWorld(playerid, HouseInfo[h][hWorld]);
	    	}
		}
	}
	return 1;
}

public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{

	Loop(h, MAX_HOUSES)
	{
		if(checkpointid == HouseCPOut[h] && strcmp(GetHouseOwner(h), pNick(playerid)))
		{
			IsInHouse[playerid] = 0;
			LastHouseCP[playerid] = -1;
			break;
		}
	}

	for(new i = 0; i < MAX_BUSINESSES; i++)
	{
		if(checkpointid == bizrobberycp[i])
		{
		    if(IsPlayerRobbingBiz{playerid} == true)
		    {
		    	KillTimer(biztimer{playerid});
				BizRobCP[playerid] = -1;
				IsPlayerRobbingBiz{playerid} = false;
				GameTextForPlayer(playerid, "~r~Robbery Failed", 3000, 5);
				SendClientMessage(playerid, RED, "You have failed to rob the business, you left the checkpoint.");
				break;
			}
			else
			{
				BizRobCP[playerid] = -1;
				break;
			}
		}
	}
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    if(dialogid == KELISA_DIALOG)
	{
		if(response)
		switch(listitem)
		{
			case 0://Doa
			{
				new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer40]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer40] = gettime();
				if(rand == 0) return SendClientMessage(playerid, RED, "Doa shoma Ghabul nashod.");
				else
				{
                    SendClientMessage(playerid,YELLOW,"Doa shoma ghabul shod.");
					new Float:hel;
					GetPlayerHealth(playerid, hel);
					
//					if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f", hel, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }
					
					if(hel < 85)
					{
						SetPlayerHealth(playerid , 85);
                        SendClientMessage(playerid,YELLOW,"Joon shoma kamtar az 85 bud va khoda shoma ra salem kard.");
					}
				}
			}
			case 1://eteraf
			{
			    new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer41]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer41] = gettime();
			    if(rand == 0) return SendClientMessage(playerid, RED, "Shoma bakhshide nashodid.");
			    else
				{
                    SendClientMessage(playerid,YELLOW,"Shoma bakhshide shodid.");
					new want = GetPlayerWantedLevel(playerid);
					new trand = random(10) + 5;
					if(want > 15)
                    {
	    				SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) - trand);
                        SendClientMessage(playerid,YELLOW,"Wanted shoma bishtar az 15 bud va khoda bakhshi az an ra bakhshid.");
                    }
				}
		    }
		    case 2:
		    {
		        if(GetPlayerCash(playerid) <= 49999)
			    {
	                SendClientMessage(playerid, RED, "POOL KAFI NADARI.");
		        }
                else
                {
				   if((gettime() - 60) < TimerInfo[playerid][CMD_timer42]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                   TimerInfo[playerid][CMD_timer42] = gettime();
                   GivePlayerCash(playerid,-50000);
                   SendClientMessage(playerid,YELLOW,"Mamnon , Shoma $50000 pool be Kelisa bakhshidid - Separ khoda az shoma mohafezat mikonad.");
                   SetPlayerArmour(playerid,100);
                   new string[256], pname[MAX_PLAYER_NAME];
                   GetPlayerName(playerid, pname, sizeof(pname));
                   format(string, sizeof(string), "** %s $50000 pool be Kelisa bakhshid - Khoda hemayatash mikonad.", pname);
                   SendMessageToAll(YELLOW, string);
			   }
		    }
		    case 3:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 60.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer43]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer43] = gettime();
              SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
              SendClientMessage(playerid,GREY,"Press ENTER To Stop Drinking.");
              SendClientMessage(playerid,YELLOW,"Tasty Holy Wine!! For $294.You Have Been Healed To 90 percent.");
              SetPlayerHealth(playerid, 90.0);
              GivePlayerCash(playerid, -294);
              IsPlayerUsingAnim{playerid} = true;
              }
              else
              {
			      SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 60 bashad.");
			  }
		    }
		    case 4:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 40.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer44]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer44] = gettime();
              ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,1,1,1,1,1,1);
              SendClientMessage(playerid,GREY,"Press SHIFT (Jump key) To Stop Animation");
              IsPlayerUsingAnim{playerid} = true;
              SendClientMessage(playerid,YELLOW,"Yumyy!!! Soup ! For $10.You Have Been Healed To 50 percent.");
              SetPlayerHealth(playerid, 50.0);
              GivePlayerCash(playerid, -10);
              }
              else
              {
			  SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 40 bashad.");
			  }
		    }
		    case 5:
		    {
		      GivePlayerWeapon(playerid, 14, 1);
              SendClientMessage(playerid,YELLOW,"Shoma yek daste gol az kelisa hedie gereftid.");
		    }
		    case 6:
		    {
		    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	    	if(IsRobbingKelisa1{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	    	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
	    	if(kelisa1robbed == 1) return SendClientMessage(playerid, RED, "This place has been robbed recently, please wait before robbing it again.");
  	        if((gettime() - 120) < TimerInfo[playerid][CMD_timer45]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 120 sanie sabr kon");
  	        TimerInfo[playerid][CMD_timer45] = gettime();
	    	new chance = random(3);
	    	if(chance == 0)
	    	{
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob Kelisa at Old Strip.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, RED, "You have failed to rob Kelisa.");
            GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 5);
	    	}
	    	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2518.687744,2033.389160,11.171875))
   	        {
 	        if((gettime() - 60) < kelisa1robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 60 sanie sabr kon");
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing Kelisa at Old Strip.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, LIGHTGREEN, "Your robbing Kelisa, DON'T LEAVE THE CHECKPOINT!");
	        GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
            IsRobbingKelisa1{playerid} = true;
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 10);
            kelisatimer{playerid} = SetTimerEx("KelisaRob", 25000, false, "d", playerid);
            ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
            kelisa1robbed = gettime();
	        }
	        else
	        {
            SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	        }
	    	return true;
		    }
		}
	}
    if(dialogid == KELISA_DIALOG1)
	{
		if(response)
		switch(listitem)
		{
			case 0://Doa
			{
				new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer46]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer46] = gettime();
				if(rand == 0) return SendClientMessage(playerid, RED, "Doa shoma Ghabul nashod.");
				else
				{
                    SendClientMessage(playerid,YELLOW,"Doa shoma ghabul shod.");
					new Float:hel;
					GetPlayerHealth(playerid, hel);

//			  		if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",hel, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

					if(hel < 85)
					{
						SetPlayerHealth(playerid , 85);
                        SendClientMessage(playerid,YELLOW,"Joon shoma kamtar az 85 bud va khoda shoma ra salem kard.");
					}
				}
			}
			case 1://eteraf
			{
			    new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer47]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer47] = gettime();
			    if(rand == 0) return SendClientMessage(playerid, RED, "Shoma bakhshide nashodid.");
			    else
				{
                    SendClientMessage(playerid,YELLOW,"Shoma bakhshide shodid.");
					new want = GetPlayerWantedLevel(playerid);
					new trand = random(10) + 5;
					if(want > 15)
                    {
	    				SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) - trand);
                        SendClientMessage(playerid,YELLOW,"Wanted shoma bishtar az 15 bud va khoda bakhshi az an ra bakhshid.");
                    }
				}
		    }
		    case 2:
		    {
		        if(GetPlayerCash(playerid) <= 49999)
			    {
	                SendClientMessage(playerid, RED, "POOL KAFI NADARI.");
		        }
                else
                {
				   if((gettime() - 60) < TimerInfo[playerid][CMD_timer48]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                   TimerInfo[playerid][CMD_timer48] = gettime();
                   GivePlayerCash(playerid,-50000);
                   SendClientMessage(playerid,YELLOW,"Mamnon , Shoma $50000 pool be Kelisa bakhshidid - Separ khoda az shoma mohafezat mikonad.");
                   SetPlayerArmour(playerid,100);
                   new string[256], pname[MAX_PLAYER_NAME];
                   GetPlayerName(playerid, pname, sizeof(pname));
                   format(string, sizeof(string), "** %s $50000 pool be Kelisa bakhshid - Khoda hemayatash mikonad.", pname);
                   SendMessageToAll(YELLOW, string);
			   }
		    }
		    case 3:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 60.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer49]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer49] = gettime();
              SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
              SendClientMessage(playerid,GREY,"Press ENTER To Stop Drinking.");
              SendClientMessage(playerid,YELLOW,"Tasty Holy Wine!! For $294.You Have Been Healed To 90 percent.");
              SetPlayerHealth(playerid, 90.0);
              GivePlayerCash(playerid, -294);
              IsPlayerUsingAnim{playerid} = true;
              }
              else
              {
			      SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 60 bashad.");
			  }
		    }
		    case 4:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 40.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer50]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer50] = gettime();
              ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,1,1,1,1,1,1);
              SendClientMessage(playerid,GREY,"Press SHIFT (Jump key) To Stop Animation");
              IsPlayerUsingAnim{playerid} = true;
              SendClientMessage(playerid,YELLOW,"Yumyy!!! Soup ! For $10.You Have Been Healed To 50 percent.");
              SetPlayerHealth(playerid, 50.0);
              GivePlayerCash(playerid, -10);
              }
              else
              {
			  SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 40 bashad.");
			  }
		    }
		    case 5:
		    {
		      GivePlayerWeapon(playerid, 14, 1);
              SendClientMessage(playerid,YELLOW,"Shoma yek daste gol az kelisa hedie gereftid.");
		    }
		    case 6:
		    {
		    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	    	if(IsRobbingKelisa2{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	    	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
	    	if(kelisa2robbed == 1) return SendClientMessage(playerid, RED, "This place has been robbed recently, please wait before robbing it again.");
  	        if((gettime() - 120) < TimerInfo[playerid][CMD_timer51]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 120 sanie sabr kon");
  	        TimerInfo[playerid][CMD_timer51] = gettime();
	    	new chance = random(3);
	    	if(chance == 0)
	    	{
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob Kelisa at Pilgrim.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, RED, "You have failed to rob Kelisa.");
            GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 5);
	    	}
	    	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2438.194091,1293.454223,10.820312))
   	        {
 	        if((gettime() - 60) < kelisa2robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 60 sanie sabr kon");
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing Kelisa at Pilgrim.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, LIGHTGREEN, "Your robbing Kelisa, DON'T LEAVE THE CHECKPOINT!");
	        GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
            IsRobbingKelisa2{playerid} = true;
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 10);
            kelisatimer{playerid} = SetTimerEx("KelisaRob", 25000, false, "d", playerid);
            ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
            kelisa2robbed = gettime();
	        }
	        else
	        {
            SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	        }
	    	return true;
		    }
		}
	}
    if(dialogid == KELISA_DIALOG2)
	{
		if(response)
		switch(listitem)
		{
			case 0://Doa
			{
				new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer52]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer52] = gettime();
				if(rand == 0) return SendClientMessage(playerid, RED, "Doa shoma Ghabul nashod.");
				else
				{
                    SendClientMessage(playerid,YELLOW,"Doa shoma ghabul shod.");
					new Float:hel;
					GetPlayerHealth(playerid, hel);

//			  		if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f", hel, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

					if(hel < 85)
					{
						SetPlayerHealth(playerid , 85);
                        SendClientMessage(playerid,YELLOW,"Joon shoma kamtar az 85 bud va khoda shoma ra salem kard.");
					}
				}
			}
			case 1://eteraf
			{
			    new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer53]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer53] = gettime();
			    if(rand == 0) return SendClientMessage(playerid, RED, "Shoma bakhshide nashodid.");
			    else
				{
                    SendClientMessage(playerid,YELLOW,"Shoma bakhshide shodid.");
					new want = GetPlayerWantedLevel(playerid);
					new trand = random(10) + 5;
					if(want > 15)
                    {
	    				SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) - trand);
                        SendClientMessage(playerid,YELLOW,"Wanted shoma bishtar az 15 bud va khoda bakhshi az an ra bakhshid.");
                    }
				}
		    }
		    case 2:
		    {
		        if(GetPlayerCash(playerid) <= 49999)
			    {
	                SendClientMessage(playerid, RED, "POOL KAFI NADARI.");
		        }
                else
                {
				   if((gettime() - 60) < TimerInfo[playerid][CMD_timer54]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                   TimerInfo[playerid][CMD_timer54] = gettime();
                   GivePlayerCash(playerid,-50000);
                   SendClientMessage(playerid,YELLOW,"Mamnon , Shoma $50000 pool be Kelisa bakhshidid - Separ khoda az shoma mohafezat mikonad.");
                   SetPlayerArmour(playerid,100);
                   new string[256], pname[MAX_PLAYER_NAME];
                   GetPlayerName(playerid, pname, sizeof(pname));
                   format(string, sizeof(string), "** %s $50000 pool be Kelisa bakhshid - Khoda hemayatash mikonad.", pname);
                   SendMessageToAll(YELLOW, string);
			   }
		    }
		    case 3:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 60.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer55]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer55] = gettime();
              SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
              SendClientMessage(playerid,GREY,"Press ENTER To Stop Drinking.");
              SendClientMessage(playerid,YELLOW,"Tasty Holy Wine!! For $294.You Have Been Healed To 90 percent.");
              SetPlayerHealth(playerid, 90.0);
              GivePlayerCash(playerid, -294);
              IsPlayerUsingAnim{playerid} = true;
              }
              else
              {
			      SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 60 bashad.");
			  }
		    }
		    case 4:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 40.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer56]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer56] = gettime();
              ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,1,1,1,1,1,1);
              SendClientMessage(playerid,GREY,"Press SHIFT (Jump key) To Stop Animation");
              IsPlayerUsingAnim{playerid} = true;
              SendClientMessage(playerid,YELLOW,"Yumyy!!! Soup ! For $10.You Have Been Healed To 50 percent.");
              SetPlayerHealth(playerid, 50.0);
              GivePlayerCash(playerid, -10);
              }
              else
              {
			  SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 40 bashad.");
			  }
		    }
		    case 5:
		    {
		      GivePlayerWeapon(playerid, 14, 1);
              SendClientMessage(playerid,YELLOW,"Shoma yek daste gol az kelisa hedie gereftid.");
		    }
		    case 6:
		    {
		    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	    	if(IsRobbingKelisa3{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	    	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
	    	if(kelisa3robbed == 1) return SendClientMessage(playerid, RED, "This place has been robbed recently, please wait before robbing it again.");
  	        if((gettime() - 120) < TimerInfo[playerid][CMD_timer57]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 120 sanie sabr kon");
  	        TimerInfo[playerid][CMD_timer57] = gettime();
	    	new chance = random(3);
	    	if(chance == 0)
	    	{
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob Kelisa at Pilgrim.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, RED, "You have failed to rob Kelisa.");
            GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 5);
	    	}
	    	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2489.595947,918.606994,11.023437))
   	        {
 	        if((gettime() - 60) < kelisa3robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 60 sanie sabr kon");
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing Kelisa at Pilgrim.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, LIGHTGREEN, "Your robbing Kelisa, DON'T LEAVE THE CHECKPOINT!");
	        GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
            IsRobbingKelisa3{playerid} = true;
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 10);
            kelisatimer{playerid} = SetTimerEx("KelisaRob", 25000, false, "d", playerid);
            ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
            kelisa3robbed = gettime();
	        }
	        else
	        {
            SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	        }
	    	return true;
		    }
		}
	}
    if(dialogid == KELISA_DIALOG3)
	{
		if(response)
		switch(listitem)
		{
			case 0://Doa
			{
				new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer58]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer58] = gettime();
				if(rand == 0) return SendClientMessage(playerid, RED, "Doa shoma Ghabul nashod.");
				else
				{
                    SendClientMessage(playerid,YELLOW,"Doa shoma ghabul shod.");
					new Float:hel;
					GetPlayerHealth(playerid, hel);

//			  		if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f", hel, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

					if(hel < 85)
					{
						SetPlayerHealth(playerid , 85);
                        SendClientMessage(playerid,YELLOW,"Joon shoma kamtar az 85 bud va khoda shoma ra salem kard.");
					}
				}
			}
			case 1://eteraf
			{
			    new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer59]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer59] = gettime();
			    if(rand == 0) return SendClientMessage(playerid, RED, "Shoma bakhshide nashodid.");
			    else
				{
                    SendClientMessage(playerid,YELLOW,"Shoma bakhshide shodid.");
					new want = GetPlayerWantedLevel(playerid);
					new trand = random(10) + 5;
					if(want > 15)
                    {
	    				SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) - trand);
                        SendClientMessage(playerid,YELLOW,"Wanted shoma bishtar az 15 bud va khoda bakhshi az an ra bakhshid.");
                    }
				}
		    }
		    case 2:
		    {
		        if(GetPlayerCash(playerid) <= 49999)
			    {
	                SendClientMessage(playerid, RED, "POOL KAFI NADARI.");
		        }
                else
                {
				   if((gettime() - 60) < TimerInfo[playerid][CMD_timer60]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                   TimerInfo[playerid][CMD_timer60] = gettime();
                   GivePlayerCash(playerid,-50000);
                   SendClientMessage(playerid,YELLOW,"Mamnon , Shoma $50000 pool be Kelisa bakhshidid - Separ khoda az shoma mohafezat mikonad.");
                   SetPlayerArmour(playerid,100);
                   new string[256], pname[MAX_PLAYER_NAME];
                   GetPlayerName(playerid, pname, sizeof(pname));
                   format(string, sizeof(string), "** %s $50000 pool be Kelisa bakhshid - Khoda hemayatash mikonad.", pname);
                   SendMessageToAll(YELLOW, string);
			   }
		    }
		    case 3:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 60.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer61]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer61] = gettime();
              SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
              SendClientMessage(playerid,GREY,"Press ENTER To Stop Drinking.");
              SendClientMessage(playerid,YELLOW,"Tasty Holy Wine!! For $294.You Have Been Healed To 90 percent.");
              SetPlayerHealth(playerid, 90.0);
              GivePlayerCash(playerid, -294);
              IsPlayerUsingAnim{playerid} = true;
              }
              else
              {
			      SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 60 bashad.");
			  }
		    }
		    case 4:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 40.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer62]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer62] = gettime();
              ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,1,1,1,1,1,1);
              SendClientMessage(playerid,GREY,"Press SHIFT (Jump key) To Stop Animation");
              IsPlayerUsingAnim{playerid} = true;
              SendClientMessage(playerid,YELLOW,"Yumyy!!! Soup ! For $10.You Have Been Healed To 50 percent.");
              SetPlayerHealth(playerid, 50.0);
              GivePlayerCash(playerid, -10);
              }
              else
              {
			  SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 40 bashad.");
			  }
		    }
		    case 5:
		    {
		      GivePlayerWeapon(playerid, 14, 1);
              SendClientMessage(playerid,YELLOW,"Shoma yek daste gol az kelisa hedie gereftid.");
		    }
		    case 6:
		    {
		    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	    	if(IsRobbingKelisa4{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	    	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
	    	if(kelisa4robbed == 1) return SendClientMessage(playerid, RED, "This place has been robbed recently, please wait before robbing it again.");
  	        if((gettime() - 120) < TimerInfo[playerid][CMD_timer63]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 120 sanie sabr kon");
  	        TimerInfo[playerid][CMD_timer63] = gettime();
	    	new chance = random(3);
	    	if(chance == 0)
	    	{
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob Kelisa at Blackfield Chaple.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, RED, "You have failed to rob Kelisa.");
            GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 5);
	    	}
	    	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1454.011962,750.880249,11.023437))
   	        {
 	        if((gettime() - 60) < kelisa4robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 60 sanie sabr kon");
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing Kelisa at Blackfield Chaple.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, LIGHTGREEN, "Your robbing Kelisa, DON'T LEAVE THE CHECKPOINT!");
	        GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
            IsRobbingKelisa4{playerid} = true;
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 10);
            kelisatimer{playerid} = SetTimerEx("KelisaRob", 25000, false, "d", playerid);
            ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
            kelisa4robbed = gettime();
	        }
	        else
	        {
            SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	        }
	    	return true;
		    }
		}
	}
    if(dialogid == KELISA_DIALOG4)
	{
		if(response)
		switch(listitem)
		{
			case 0://Doa
			{
				new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer64]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer64] = gettime();
				if(rand == 0) return SendClientMessage(playerid, RED, "Doa shoma Ghabul nashod.");
				else
				{
                    SendClientMessage(playerid,YELLOW,"Doa shoma ghabul shod.");
					new Float:hel;
					GetPlayerHealth(playerid, hel);

//			  		if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f", hel, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

					if(hel < 85)
					{
						SetPlayerHealth(playerid , 85);
                        SendClientMessage(playerid,YELLOW,"Joon shoma kamtar az 85 bud va khoda shoma ra salem kard.");
					}
				}
			}
			case 1://eteraf
			{
			    new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer65]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer65] = gettime();
			    if(rand == 0) return SendClientMessage(playerid, RED, "Shoma bakhshide nashodid.");
			    else
				{
                    SendClientMessage(playerid,YELLOW,"Shoma bakhshide shodid.");
					new want = GetPlayerWantedLevel(playerid);
					new trand = random(10) + 5;
					if(want > 15)
                    {
	    				SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) - trand);
                        SendClientMessage(playerid,YELLOW,"Wanted shoma bishtar az 15 bud va khoda bakhshi az an ra bakhshid.");
                    }
				}
		    }
		    case 2:
		    {
		        if(GetPlayerCash(playerid) <= 49999)
			    {
	                SendClientMessage(playerid, RED, "POOL KAFI NADARI.");
		        }
                else
                {
				   if((gettime() - 60) < TimerInfo[playerid][CMD_timer66]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                   TimerInfo[playerid][CMD_timer66] = gettime();
                   GivePlayerCash(playerid,-50000);
                   SendClientMessage(playerid,YELLOW,"Mamnon , Shoma $50000 pool be Kelisa bakhshidid - Separ khoda az shoma mohafezat mikonad.");
                   SetPlayerArmour(playerid,100);
                   new string[256], pname[MAX_PLAYER_NAME];
                   GetPlayerName(playerid, pname, sizeof(pname));
                   format(string, sizeof(string), "** %s $50000 pool be Kelisa bakhshid - Khoda hemayatash mikonad.", pname);
                   SendMessageToAll(YELLOW, string);
			   }
		    }
		    case 3:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 60.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer67]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer67] = gettime();
              SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
              SendClientMessage(playerid,GREY,"Press ENTER To Stop Drinking.");
              SendClientMessage(playerid,YELLOW,"Tasty Holy Wine!! For $294.You Have Been Healed To 90 percent.");
              SetPlayerHealth(playerid, 90.0);
              GivePlayerCash(playerid, -294);
              IsPlayerUsingAnim{playerid} = true;
              }
              else
              {
			      SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 60 bashad.");
			  }
		    }
		    case 4:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 40.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer68]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer68] = gettime();
              ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,1,1,1,1,1,1);
              SendClientMessage(playerid,GREY,"Press SHIFT (Jump key) To Stop Animation");
              IsPlayerUsingAnim{playerid} = true;
              SendClientMessage(playerid,YELLOW,"Yumyy!!! Soup ! For $10.You Have Been Healed To 50 percent.");
              SetPlayerHealth(playerid, 50.0);
              GivePlayerCash(playerid, -10);
              }
              else
              {
			  SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 40 bashad.");
			  }
		    }
		    case 5:
		    {
		      GivePlayerWeapon(playerid, 14, 1);
              SendClientMessage(playerid,YELLOW,"Shoma yek daste gol az kelisa hedie gereftid.");
		    }
		    case 6:
		    {
		    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	    	if(IsRobbingKelisa5{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	    	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
	    	if(kelisa5robbed == 1) return SendClientMessage(playerid, RED, "This place has been robbed recently, please wait before robbing it again.");
  	        if((gettime() - 120) < TimerInfo[playerid][CMD_timer69]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 120 sanie sabr kon");
  	        TimerInfo[playerid][CMD_timer69] = gettime();
	    	new chance = random(3);
	    	if(chance == 0)
	    	{
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob Kelisa at Meydan asli.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, RED, "You have failed to rob Kelisa.");
            GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 5);
	    	}
	    	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2225.102783,2522.551513,11.022218))
   	        {
 	        if((gettime() - 60) < kelisa5robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 60 sanie sabr kon");
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing Kelisa at Meydan asli.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, LIGHTGREEN, "Your robbing Kelisa, DON'T LEAVE THE CHECKPOINT!");
	        GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
            IsRobbingKelisa5{playerid} = true;
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 10);
            kelisatimer{playerid} = SetTimerEx("KelisaRob", 25000, false, "d", playerid);
            ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
            kelisa5robbed = gettime();
	        }
	        else
	        {
            SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	        }
	    	return true;
		    }
		}
	}
    if(dialogid == KELISA_DIALOG5)
	{
		if(response)
		switch(listitem)
		{
			case 0://Doa
			{
				new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer70]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer70] = gettime();
				if(rand == 0) return SendClientMessage(playerid, RED, "Doa shoma Ghabul nashod.");
				else
				{
                    SendClientMessage(playerid,YELLOW,"Doa shoma ghabul shod.");
					new Float:hel;
					GetPlayerHealth(playerid, hel);

//			  		if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f", hel, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

					if(hel < 85)
					{
						SetPlayerHealth(playerid , 85);
                        SendClientMessage(playerid,YELLOW,"Joon shoma kamtar az 85 bud va khoda shoma ra salem kard.");
					}
				}
			}
			case 1://eteraf
			{
			    new rand = random(2);
				if((gettime() - 60) < TimerInfo[playerid][CMD_timer71]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                TimerInfo[playerid][CMD_timer71] = gettime();
			    if(rand == 0) return SendClientMessage(playerid, RED, "Shoma bakhshide nashodid.");
			    else
				{
                    SendClientMessage(playerid,YELLOW,"Shoma bakhshide shodid.");
					new want = GetPlayerWantedLevel(playerid);
					new trand = random(10) + 5;
					if(want > 15)
                    {
	    				SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) - trand);
                        SendClientMessage(playerid,YELLOW,"Wanted shoma bishtar az 15 bud va khoda bakhshi az an ra bakhshid.");
                    }
				}
		    }
		    case 2:
		    {
		        if(GetPlayerCash(playerid) <= 49999)
			    {
	                SendClientMessage(playerid, RED, "POOL KAFI NADARI.");
		        }
                else
                {
				   if((gettime() - 60) < TimerInfo[playerid][CMD_timer72]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
                   TimerInfo[playerid][CMD_timer72] = gettime();
                   GivePlayerCash(playerid,-50000);
                   SendClientMessage(playerid,YELLOW,"Mamnon , Shoma $50000 pool be Kelisa bakhshidid - Separ khoda az shoma mohafezat mikonad.");
                   SetPlayerArmour(playerid,100);
                   new string[256], pname[MAX_PLAYER_NAME];
                   GetPlayerName(playerid, pname, sizeof(pname));
                   format(string, sizeof(string), "** %s $50000 pool be Kelisa bakhshid - Khoda hemayatash mikonad.", pname);
                   SendMessageToAll(YELLOW, string);
			   }
		    }
		    case 3:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 60.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer73]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer73] = gettime();
              SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
              SendClientMessage(playerid,GREY,"Press ENTER To Stop Drinking.");
              SendClientMessage(playerid,YELLOW,"Tasty Holy Wine!! For $294.You Have Been Healed To 90 percent.");
              SetPlayerHealth(playerid, 90.0);
              GivePlayerCash(playerid, -294);
              IsPlayerUsingAnim{playerid} = true;
              }
              else
              {
			      SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 60 bashad.");
			  }
		    }
		    case 4:
		    {
		      new Float:health;
              GetPlayerHealth(playerid,health);

//			  if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

              if (health < 40.0)
              {
			  if((gettime() - 60) < TimerInfo[playerid][CMD_timer74]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");//2 mins
              TimerInfo[playerid][CMD_timer74] = gettime();
              ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,1,1,1,1,1,1);
              SendClientMessage(playerid,GREY,"Press SHIFT (Jump key) To Stop Animation");
              IsPlayerUsingAnim{playerid} = true;
              SendClientMessage(playerid,YELLOW,"Yumyy!!! Soup ! For $10.You Have Been Healed To 50 percent.");
              SetPlayerHealth(playerid, 50.0);
              GivePlayerCash(playerid, -10);
              }
              else
              {
			  SendClientMessage(playerid,RED,"Error: Joon shoma bayad kamtar az 40 bashad.");
			  }
		    }
		    case 5:
		    {
		      GivePlayerWeapon(playerid, 14, 1);
              SendClientMessage(playerid,YELLOW,"Shoma yek daste gol az kelisa hedie gereftid.");
		    }
		    case 6:
		    {
		    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	    	if(IsRobbingKelisa6{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	    	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
	    	if(kelisa6robbed == 1) return SendClientMessage(playerid, RED, "This place has been robbed recently, please wait before robbing it again.");
  	        if((gettime() - 120) < TimerInfo[playerid][CMD_timer75]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 120 sanie sabr kon");
  	        TimerInfo[playerid][CMD_timer75] = gettime();
	    	new chance = random(3);
	    	if(chance == 0)
	    	{
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob Kelisa at Bayside.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, RED, "You have failed to rob Kelisa.");
            GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 5);
	    	}
	    	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2482.276611,2406.506591,17.109375))
   	        {
 	        if((gettime() - 60) < kelisa6robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 60 sanie sabr kon");
            format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing Kelisa at Bayside.", GetName(playerid), playerid);
            CopRadio(BLUE, fstr);
            SendClientMessage(playerid, LIGHTGREEN, "Your robbing Kelisa, DON'T LEAVE THE CHECKPOINT!");
	        GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
            IsRobbingKelisa6{playerid} = true;
            SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 10);
            kelisatimer{playerid} = SetTimerEx("KelisaRob", 25000, false, "d", playerid);
            ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
            kelisa6robbed = gettime();
	        }
	        else
	        {
            SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	        }
	    	return true;
		    }
		}
	}
	if(dialogid == APARTMENTS_ELEVATOR)
	{
	    if(response)
	    switch(listitem)
	    {
	        case 0://Ground
			{
			    SetPlayerPos(playerid, 2362.4094, 2377.5483, 10.8203);
			    SetPlayerFacingAngle(playerid, 89.0020);
			    SetPlayerInterior(playerid, 0);
			    SetPlayerVirtualWorld(playerid, 0);
			}
			case 1://Level 1
			{
			    SetPlayerPos(playerid, 1727.0803, -1670.0951, 27.1953);
			    SetPlayerFacingAngle(playerid, 52.1279);
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 1);
			}
			case 2://Level 2
			{
			    SetPlayerPos(playerid, 1727.0803, -1670.0951, 27.1953);
			    SetPlayerFacingAngle(playerid, 52.1279);
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 2);
			}
			case 3://Level 3
			{
			    SetPlayerPos(playerid, 1727.0803, -1670.0951, 27.1953);
			    SetPlayerFacingAngle(playerid, 52.1279);
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 3);
			}
			case 4://Level 4
			{
			    SetPlayerPos(playerid, 1727.0803, -1670.0951, 27.1953);
			    SetPlayerFacingAngle(playerid, 52.1279);
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 4);
			}
			case 5://Level 5
			{
			    SetPlayerPos(playerid, 1727.0803, -1670.0951, 27.1953);
			    SetPlayerFacingAngle(playerid, 52.1279);
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 5);
			}
			case 6://Level 6
			{
			    SetPlayerPos(playerid, 1727.0803, -1670.0951, 27.1953);
			    SetPlayerFacingAngle(playerid, 52.1279);
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 6);
			}
			case 7://Level 7
			{
			    SetPlayerPos(playerid, 1727.0803, -1670.0951, 27.1953);
			    SetPlayerFacingAngle(playerid, 52.1279);
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 7);
			}
			case 8://Level 8
			{
			    SetPlayerPos(playerid, 1727.0803, -1670.0951, 27.1953);
			    SetPlayerFacingAngle(playerid, 52.1279);
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 8);
			}
			case 9://Level 9
			{
			    SetPlayerPos(playerid, 1727.0803, -1670.0951, 27.1953);
			    SetPlayerFacingAngle(playerid, 52.1279);
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 9);
			}
			case 10://Level 10
			{
			    SetPlayerPos(playerid, 1727.0803, -1670.0951, 27.1953);
			    SetPlayerFacingAngle(playerid, 52.1279);
			    SetPlayerInterior(playerid, 18);
			    SetPlayerVirtualWorld(playerid, 10);
			}
			case 11://Roof
			{
			    SetPlayerPos(playerid, 2391.6804, 2375.4609, 150.9375);
			    SetPlayerFacingAngle(playerid, 3.6775);
			    SetPlayerInterior(playerid, 0);
			    SetPlayerVirtualWorld(playerid, 0);
				GivePlayerWeapon(playerid, 46, 1);
			}
		}
		return 1;
	}
	if(dialogid == DEGREE_INFO_LIST)
	{
		if(response)
	    switch(listitem)
        {
        	case 0://Real Estate Degree
			{
			    ShowPlayerDialog(playerid, DEGREES_INFO, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Real Estate", "{FFFFFF}Special commands: /sell(house/biz)to [name/id] [price]\nGhabeliat ha: 2 khane va 2 business ezafi mitavanid bekharid (tedad kol har kodom mishe 5 ta)\nPrice: $10M\nStudy time: Instant\nExpiry: Never", "OK", "");
			}
			case 1://Law Degree
			{
			    ShowPlayerDialog(playerid, DEGREES_INFO, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Law", "{FFFFFF}Special commands: N/A\nGhabeliat ha: Dastresi be class CIA va FBI va ghabeliathayeshan.\nPrice: $1M\nStudy time: Instant\nExpiry: Never", "OK", "");
			}
			case 2://Defense Degree
			{
			    ShowPlayerDialog(playerid, DEGREES_INFO, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Defense", "{FFFFFF}Special commands: N/A\nGhabeliat: Dastresi be class ARMY va ghabeliathayash.\nPrice: $3M\nStudy time: Instant\nExpiry: Never", "OK", "");
			}
			case 3://Medical Degree
			{
			    ShowPlayerDialog(playerid, DEGREES_INFO, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Medical", "{FFFFFF}Special commands: /medic [name/id] [price]\nGhabeliat ha: Dastresi be class MEDIC/DOCTOR va ghabeliathayash.\nPrice: $1M\nStudy time: Instant\nExpiry: Never", "OK", "");
			}
			case 4://Mechanical Degree
			{
			    ShowPlayerDialog(playerid, DEGREES_INFO, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Mechanical", "{FFFFFF}Special commands: /(refill/fix) [name/id] [price]\nSpecial features: N/A\nPrice: $2M\nStudy time: Instant\nExpiry: Never", "OK", "");
			}
			case 5://Dealership Degree
			{
			    ShowPlayerDialog(playerid, DEGREES_INFO, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Dealership", "{FFFFFF}Special commands: /sellvehto [name/id] [price]\nGhabeliat ha: kharid 2 mashin ezafi digar(tedad kol mashin haye ghabel kharid mishe 5)\nPrice: $12M\nStudy time: Instant\nExpiry: Never", "OK", "");
			}
			case 6://Weapon Degree
			{
			    ShowPlayerDialog(playerid, DEGREES_INFO, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Weapons", "{FFFFFF}Special commands: /sell(gun/mats) [name/id] [gun/mats] [price] + /getmats\nGhabeliatha: Tavanayii forosh aslahe ba tir namahdud be khodetan va digaran, dar hameja.\nPrice: $3M\nStudy time: Instant\nExpiry: Never", "OK", "");
			}
		}
	}
	if(dialogid == NVM_MENU)
	{
	    if(response)
	    switch(listitem)
	    {
	        case 0://Sports Cars
	        {
	            ShowPlayerDialog(playerid, NVM_CARS, DIALOG_STYLE_LIST, "{FFFFFF} Car Shop - Sports Cars", "{FFFFFF}Vehicle: Infernus - Price: $2M\nVehicle: Bullet - Price: $2M\nVehicle: Banshee - Price: $1M\nVehicle: Super-GT - Price: $1M\nVehicle: Sultan - Price: $800K\nVehicle: Elegy - Price: $800K\nVehicle: Phonix - Price: $1M\nVehicle: Turismo - Price: $1M\nVehicle: ZR-350 - Price: $1M\nVehicle: Jester - Price: $1M\nVehicle: Flash - Price: $1M\nVehicle: Cheetah - Price: $1M", "Buy", "Cancel");
	            return 1;
	        }
	        case 1://Motor Bikes
	        {
	            ShowPlayerDialog(playerid, NVM_BIKES, DIALOG_STYLE_LIST, "{FFFFFF} Car Shop - Motor Bikes", "{FFFFFF}Vehicle: NRG-500 - Price: $2M\nVehicle: FCR-900 - Price: $1M\nVehicle: PCJ-600 - Price: $800K\nVehicle: Sanchez - Price: $500K\nVehicle: FreeWay - Price: $800K", "Buy", "Cancel");
	            return 1;
	        }
	        case 2://Special Vehicles
	        {
	            ShowPlayerDialog(playerid, NVM_SPEC, DIALOG_STYLE_LIST, "{FFFFFF} Car Shop - Special Vehicles", "{FFFFFF}Vehicle: Maverick - Price: $5M\nVehicle: Vortex - Price: $3M\nVehicle: Monster Truck - Price: $2M\nVehicle: Bandito - Price: $1M\nVehicle: Quad Bike - Price: $500K\nVehicle: Slamvan - Price: $800K\nVehicle: Remington - Price: $800K\nVehicle: Blade - Price: $800K\nVehicle: Buffalo - Price: $800K\nVehicle: Stratum - Price: $1M", "Buy", "Cancel");
	        }
	    }
	    return 1;
	}
	if(dialogid == NVM_CARS)
	{
	    if(response)
	    switch(listitem)
	    {
	        case 0://Infernus
	        {
	            if(GetPlayerCash(playerid) < 2000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!.");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 411, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Infernus for $2M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 411, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Infernus for $2M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 411, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Infernus for $2M.");
	            }
	        }
	        case 1://Bullet
	        {
	            if(GetPlayerCash(playerid) < 2000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 541, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Bullet for $2M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 541, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Bullet for $2M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 541, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Bullet for $2M.");
	            }
	        }
	        case 2://Banshee
	        {
	            if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 429, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Banshee for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 429, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Banshee for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 429, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Banshee for $1M.");
	            }
	        }
	        case 3://Super-GT
	        {
	            if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 506, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Super-GT for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 506, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Super-GT for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 506, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Super-GT for $1M.");
	            }
	        }
	        case 4://Sultan
	        {
	            if(GetPlayerCash(playerid) < 800000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 560, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Sultan for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 560, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Sultan for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 560, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Sultan for $800K.");
	            }
	        }
	        case 5://Elegy
	        {
	            if(GetPlayerCash(playerid) < 800000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 562, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Elegy for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 562, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Elegy for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 562, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Elegy for $800K.");
	            }
	        }
	        case 6://Phonix
	        {
	            if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 603, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Phonix for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 603, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Phonix for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 603, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Phonix for $1M.");
	            }
	        }
	        case 7://Turismo
	        {
	            if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 451, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Turismo for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 451, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Turismo for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 451, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Turismo for $1M.");
	            }
	        }
	        case 8://ZR-350
	        {
	            if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 477, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a ZR-350 for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 477, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a ZR-350 for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 477, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a ZR-350 for $1M.");
	            }
	        }
	        case 9://Jester
	        {
	            if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 559, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Jester for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 559, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Jester for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 559, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Jester for $1M.");
	            }
	        }
	        case 10://Flash
	        {
	            if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 565, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Flash for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 565, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Flash for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 565, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Flash for $1M.");
	            }
	        }
	        case 11://Cheetah
	        {
	            if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 415, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Cheetah for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 415, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Cheetah for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 415, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Cheetah for $1M.");
	            }
	        }
		}
		return 1;
	}
	if(dialogid == NVM_BIKES)
	{
	    if(response)
	    switch(listitem)
	    {
	        case 0://NRG-500
	        {
	            if(GetPlayerCash(playerid) < 2000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 522, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a NRG-500 for $2M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 522, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a NRG-500 for $2M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 522, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a NRG-500 for $2M.");
	            }
	        }
	        case 1://FCR-900
	        {
	            if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 521, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a FCR-900 for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 521, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a FCR-900 for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 521, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a FCR-900 for $1M.");
	            }
	        }
	        case 2://PCJ-600
	        {
	            if(GetPlayerCash(playerid) < 800000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 461, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a PCJ-600 for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 461, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a PCJ-600 for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 461, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a PCJ-600 for $800K.");
	            }
	        }
	        case 3://Sanchez
	        {
	            if(GetPlayerCash(playerid) < 500000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 468, 500000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Sanchez for $500K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 468, 500000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Sanchez for $500K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 468, 500000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Sanchez for $500K.");
	            }
	        }
	        case 4://Freeway
	        {
	            if(GetPlayerCash(playerid) < 800000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 463, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Freeway for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 463, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Freeway for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 463, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Freeway for $800K.");
	            }
	        }
		}
		return 1;
	}
	if(dialogid == NVM_SPEC)
	{
	    if(response)
	    switch(listitem)
	    {
	        case 0://Maverick
	        {
	            if(GetPlayerCash(playerid) < 5000000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 487, 5000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Maverick for $5M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 487, 5000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Maverick for $5M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 487, 5000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Maverick for $5M.");
	            }
	        }
	        case 1://Vortex
	        {
	            if(GetPlayerCash(playerid) < 3000000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 539, 3000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Vortex for $3M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 539, 3000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Vortex for $3M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 539, 3000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Vortex for $3M.");
	            }
	        }
	        case 2://Monster Truck
	        {
	            if(GetPlayerCash(playerid) < 2000000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 557, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Monster Truck for $2M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 557, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Monster Truck for $2M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 557, 2000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Monster Truck for $2M.");
	            }
	        }
	        case 3://Bandito
	        {
	            if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 568, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Bandito for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 568, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Bandito for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 568, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Bandito for $1M.");
	            }
	        }
	        case 4://Quad Bike
	        {
	            if(GetPlayerCash(playerid) < 500000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 471, 500000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Quad Bike for $500K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 471, 500000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Quad Bike for $500K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 471, 500000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Quad Bike for $500K.");
	            }
	        }
	        case 5://Slamvan
	        {
	            if(GetPlayerCash(playerid) < 800000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 535, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a SLAMVAN for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 535, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a SLAMVAN for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}


	            	CreateNewPlayerVehicle(playerid, 535, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a SLAMVAN for $800K.");
	            }
	        }
	        case 6://Slamvan
	        {
	            if(GetPlayerCash(playerid) < 800000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 534, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Remington for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 534, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Remington for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}


	            	CreateNewPlayerVehicle(playerid, 534, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Remington for $800K.");
	            }
	        }
	        case 7://Blade
	        {
	            if(GetPlayerCash(playerid) < 800000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 536, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Blade for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 536, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Blade for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}


	            	CreateNewPlayerVehicle(playerid, 536, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Blade for $800K.");
	            }
	        }
	        case 8://Buffalo
	        {
	            if(GetPlayerCash(playerid) < 800000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 402, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Buffalo for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 402, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Buffalo for $800K.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 402, 800000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Buffalo for $800K.");
	            }
	        }
	        case 9://Stratum
		    {
	            if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "Pool kafi nadari!");
	            if(PlayerInfo[playerid][vLevel] >= 1)//VIP
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_VIP_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_VIP_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 561, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Stratum for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] >= 1)//Degree
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_DEGREE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_DEGREE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 561, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Stratum for $1M.");
					return 1;
	            }
                if(PlayerInfo[playerid][vLevel] < 1 && DegreeInfo[playerid][dDealer] < 1)//Player
	            {
	            	if(GetPlayerVehicles{playerid} >= MAX_BUYABLE_VEHS)
	            	{
	            	    new string[150];
	            	    format(string, sizeof(string), "You already own a maximum of %d vehicles, delete/sell one before buying another.", MAX_BUYABLE_VEHS);
	            	    SendClientMessage(playerid, RED, string);
	            	    return 1;
	            	}

	            	CreateNewPlayerVehicle(playerid, 561, 1000000);

					SendClientMessage(playerid, WHITE, "You have successfully purchased a Stratum for $1M.");
	            }
	        }
		}
		return 1;
	}
    if(dialogid == GPS)
	{
	    if(response)
	    switch(listitem)
	    {
	        case 0: // bimarestan
	        {
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, 1607.3329,1816.7660,10.8203, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            SendClientMessage(playerid, YELLOW, "A checkpoint(red dot on minimap) has been set at Hospital / Bimarerstan location.");
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 1: // car shop
	        {
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, 1735.7432, 1866.1516, 10.8203, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            SendClientMessage(playerid, YELLOW, "A checkpoint(red dot on minimap) has been set at Car Shop / Mashin foroshi location.");
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 2: // daneshgah
	        {
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, 2375.5786,2306.3044,8.1406, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            SendClientMessage(playerid, YELLOW, "A checkpoint(red dot on minimap) has been set at Daneshgah location.");
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 3: // meydan asli
	        {
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, 2305.9966,2377.8203,11.2208, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            SendClientMessage(playerid, YELLOW, "A checkpoint(red dot on minimap) has been set at Meydan Asli location.");
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 4: // club
	        {
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, 2311.2742,2324.2349,10.8203, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            SendClientMessage(playerid, YELLOW, "A checkpoint(red dot on minimap) has been set at Night Club location.");
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 5: // bar
	        {
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, 2308.9287, 2378.9575, 11.2208, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            SendClientMessage(playerid, YELLOW, "A checkpoint(red dot on minimap) has been set at Bar location.");
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 6: // forodgah
	        {
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, 1672.5485,1447.8712,10.7881, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            SendClientMessage(playerid, YELLOW, "A checkpoint(red dot on minimap) has been set at Airport / Forodgah location.");
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 7: // ghate 1
	        {
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, 966.2469, 2160.6836, 10.8203, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            SendClientMessage(playerid, YELLOW, "A checkpoint(red dot on minimap) has been set at your REQUEST location.");
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 8: // ghate 2
	        {
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, -2488.5205, 2295.3135, 4.9844, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            SendClientMessage(playerid, YELLOW, "A checkpoint(red dot on minimap) has been set at your REQUEST location.");
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 9: // asansor
	        {
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, 1964.68, 2363.74, 11.29, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            SendClientMessage(playerid, YELLOW, "A checkpoint(red dot on minimap) has been set at Asansor location.");
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 10: // ezafe
	        {
	            SendClientMessage(playerid, WHITE, "Elvis: Shoma mitavanid ba cmd: /bug /report /askadmin ba  admin ha / helper ha  dar ertebat bashid.");
	        }
		}
		return 1;
	}
    if(dialogid == MY_VEHS_MENU)
	{
	    if(response)
	    switch(listitem)
	    {
	        case 0:
	        {
	            new Float:x, Float:y, Float:z, string[150];
	            GetVehiclePos(Vehicle_Data_ID[playerid][0], x, y, z);
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, x, y, z, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            format(string, sizeof(string), "A checkpoint(red dot on minimap) has been set at your %s's location.", GlobalVehicleNames[Vehicle_Data_Model[playerid][0] - 400]);
	            SendClientMessage(playerid, YELLOW, string);
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 1:
	        {
	            new Float:x, Float:y, Float:z, string[150];
	            GetVehiclePos(Vehicle_Data_ID[playerid][1], x, y, z);
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, x, y, z, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            format(string, sizeof(string), "A checkpoint(red dot on minimap) has been set at your %s's location.", GlobalVehicleNames[Vehicle_Data_Model[playerid][1] - 400]);
	            SendClientMessage(playerid, YELLOW, string);
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 2:
	        {
	            new Float:x, Float:y, Float:z, string[150];
	            GetVehiclePos(Vehicle_Data_ID[playerid][2], x, y, z);
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, x, y, z, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            format(string, sizeof(string), "A checkpoint(red dot on minimap) has been set at your %s's location.", GlobalVehicleNames[Vehicle_Data_Model[playerid][2] - 400]);
	            SendClientMessage(playerid, YELLOW, string);
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 3:
	        {
	            new Float:x, Float:y, Float:z, string[150];
	            GetVehiclePos(Vehicle_Data_ID[playerid][3], x, y, z);
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, x, y, z, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            format(string, sizeof(string), "A checkpoint(red dot on minimap) has been set at your %s's location.", GlobalVehicleNames[Vehicle_Data_Model[playerid][3] - 400]);
	            SendClientMessage(playerid, YELLOW, string);
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 4:
	        {
	            new Float:x, Float:y, Float:z, string[150];
	            GetVehiclePos(Vehicle_Data_ID[playerid][4], x, y, z);
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, x, y, z, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            format(string, sizeof(string), "A checkpoint(red dot on minimap) has been set at your %s's location.", GlobalVehicleNames[Vehicle_Data_Model[playerid][4] - 400]);
	            SendClientMessage(playerid, YELLOW, string);
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 5:
	        {
	            new Float:x, Float:y, Float:z, string[150];
	            GetVehiclePos(Vehicle_Data_ID[playerid][5], x, y, z);
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, x, y, z, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            format(string, sizeof(string), "A checkpoint(red dot on minimap) has been set at your %s's location.", GlobalVehicleNames[Vehicle_Data_Model[playerid][5] - 400]);
	            SendClientMessage(playerid, YELLOW, string);
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	            return 1;
	        }
	        case 6:
	        {
	            new Float:x, Float:y, Float:z, string[150];
	            GetVehiclePos(Vehicle_Data_ID[playerid][6], x, y, z);
	            DisablePlayerCheckpoint(playerid);
	            PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
	    		SetPlayerCheckpoint(playerid, x, y, z, 10.0);
				HasSetCheckpoint{playerid} = 1;
	            format(string, sizeof(string), "A checkpoint(red dot on minimap) has been set at your %s's location.", GlobalVehicleNames[Vehicle_Data_Model[playerid][6] - 400]);
	            SendClientMessage(playerid, YELLOW, string);
	            SendClientMessage(playerid, RED, "WARNING: Entering any other checkpoints, will cancel this checkpoint.");
	        }
		}
		return 1;
	}
    if(dialogid == SERVICE_STATION_MENU)
    {
		if(response)
		{
			switch(listitem)
			{
			    case 0:
			    {
			        if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	    			RepairVehicle(GetPlayerVehicleID(playerid));
	    			GivePlayerCash(playerid, -500);
	    			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	    			GameTextForPlayer(playerid,"~w~Vehicle ~g~Repaired~n~~r~Cost: $500", 5000, 5);
	    			SendClientMessage(playerid, YELLOW, "Vehicle repaired.");
	    			ShowPlayerDialog(playerid, SERVICE_STATION_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Service Station - Menu", "{FFFFFF}Service: Repair - Price: $500\nService: Refuel - Price: $500\nService: Vehicle Bomb - Price: $100K\nClick here for Tune Menu", "Buy", "Cancel");
	    			return 1;
			    }
			    case 1:
			    {
			        new vid = GetPlayerVehicleID(playerid);
			        if(GetVehicleFuel[vid] == 100) return SendClientMessage(playerid, RED, "Your vehicles fuel tank is full.");
					if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
					GetVehicleFuel[vid] = 100;
					GivePlayerCash(playerid, - 500);
					TogglePlayerControllable(playerid, true);
 			        GetVehicleParamsEx(vid, engine, lights, alarm, doors, bonnet, boot, vcondition);
				    SetVehicleParamsEx(vid, ON, lights, OFF, doors, OFF, OFF, vcondition);
					GameTextForPlayer(playerid,"~w~Vehicle ~g~Refuelled.~n~~r~Cost: $500", 3000, 5);
					SendClientMessage(playerid, YELLOW, "Vehicle refuelled.");
					ShowPlayerDialog(playerid, SERVICE_STATION_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Service Station - Menu", "{FFFFFF}Service: Repair - Price: $500\nService: Refuel - Price: $500\nService: Vehicle Bomb - Price: $100K\nClick here for Tune Menu", "Buy", "Cancel");
	    			return 1;
			    }
			    case 2:
			    {
			        if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can buy vehicle bombs.");
			        if(BomberStage{playerid} != 0) return SendClientMessage(playerid, RED, "You already have a bomb strapped to a vehicle, use /blowbomb.");
					if(GetPlayerCash(playerid) < 100000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
			        GivePlayerCash(playerid, - 100000);
	            	BomberStage{playerid} = 1;
	            	VehicleBombOwner[GetPlayerVehicleID(playerid)] = playerid;
	            	SendClientMessage(playerid, YELLOW, "Dar mashin alan yek bomb dari mashin ra tark kon va sepas az /blowbomb baraye monfager kardan bomb estefade kon.");
	    			return 1;
			    }
			    case 3:
			    {
			        switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
					{
        				case 562,565,559,561,560,575,534,567,536,535,576,411,579,602,496,518,527,589,597,419,
						533,526,474,545,517,410,600,436,580,439,549,491,445,604,507,585,587,466,492,546,551,516,
						426,547,405,409,550,566,406,540,421,529,431,438,437,420,525,552,416,433,427,490,528,
						407,544,470,598,596,599,601,428,499,609,524,578,486,573,455,588,403,514,423,
						414,443,515,456,422,482,530,418,572,413,440,543,583,478,554,402,542,603,475,568,504,457,
        				483,508,429,541,415,480,434,506,451,555,477,400,404,489,479,442,458,467,558:
						{
            				ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
							IsPlayerUsingTuneMenu{playerid} = true;
						}
						default: return SendClientMessage(playerid, RED, "You cant tune this vehicle.");
					}
			    }
			}
		}
		return 1;
	}
	if(dialogid == AIRPORT_DIALOG)
	{
	    if(response)
	    switch(listitem)
		{
		    case 0:
		    {
	        	if(GetPlayerCash(playerid) < 1000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        	GivePlayerWeapon(playerid, 46, 1);
	        	SendClientMessage(playerid, WHITE, "Paracute purchased.");
            	GivePlayerCash(playerid, - 5000);
		    }
		    case 1:
	    	{
	        	if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        	SetPlayerInterior(playerid, 9);
            	SetPlayerPos(playerid, 315.745086, 984.969299, 1958.919067);
            	GivePlayerWeapon(playerid, 46, 1);
            	skytimer{playerid} = SetTimerEx("SkydiveInteriorChanger", 5000, true, "i", playerid);
            	GivePlayerCash(playerid, - 5000);
	    	}
	    }
	}
	if(dialogid == FAQS_DIALOG)
	{
	    if(response)
	    switch(listitem)
	    {
	        case 0:
	        {
	            ShowPlayerDialog(playerid, FAQS_ANSWER, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR - FAQS - Answer", "{FFFFFF}System Madrak ma torie ka baraye entekhab class haye bishtar ya ghabliat haye bishtar\nbayad be Univercity/Daneshgah beravid va az anja Madrak bekharid", "Ok", "");
	        }
	        case 1:
	        {
	            ShowPlayerDialog(playerid, FAQS_ANSWER, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR - FAQS - Answer", "{FFFFFF}Az Univercity/Daneshgah Madrak bekharid \n(baraye rahat peyda kardan makan ha az /gps mitavanid estefade konid).", "Ok", "");
	        }
	        case 2:
	        {
	            ShowPlayerDialog(playerid, FAQS_ANSWER, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR - FAQS - Answer", "{FFFFFF}In bastegi be class/Madrak shoma darad, dar kol shoma mitavanid\naz makan ha/bazikon ha/business ha dozdi konid,\nmitavanid player haye wanted dar ra dastgir ya jarime konid,\nsell your degree services or apply for a loan from the Bank.", "Ok", "");
	        }
	        case 3:
	        {
	            ShowPlayerDialog(playerid, FAQS_ANSWER, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR - FAQS - Answer", "{FFFFFF}Az Car Shop nazdik Bimarestan mitavanid mashin bekharid (/gps).", "Ok", "");
	        }
	        case 4:
	        {
	            ShowPlayerDialog(playerid, FAQS_ANSWER, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR - FAQS - Answer", "{FFFFFF}Shoma aval donbal yek khane ya biz bedon saheb begard \n age yeki peyda kardi vared checkpoint sho va roye 'Buy' click kon\nAge natonesti peyda koni \n1)Mitoni az player ha khone bekhari\nya\n2)be Owner begi barat ye khone doros kone", "Ok", "");
	        }
			case 5:
	        {
	            ShowPlayerDialog(playerid, FAQS_ANSWER, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR - FAQS - Answer", "{FFFFFF}Ba morajee be anjoman va ovordan tedade ziadi player be server mitavanid vip shavid.\n\nForum: just-samp.rozblog.com", "Ok", "");
	        }
			case 6:
	        {
	            ShowPlayerDialog(playerid, FAQS_ANSWER, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR - FAQS - Answer", "{FFFFFF}For guns we suggest you multiply the actual prices in Ammunations and/or Businesses by (10).\nFor mats we suggest around $50 per material, meaning around $500K for 10K mats.", "Ok", "");
	        }
			case 7:
	        {
	            ShowPlayerDialog(playerid, FAQS_ANSWER, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR - FAQS - Answer", "{FFFFFF}Visit our 'STAFF Applications' section of the forum and apply in FORMAT, also READ all stickied threads BEFORE applying.\n\nForum: just-samp.rozblog.com", "Ok", "");
	        }
	        case 8:
	        {
	            ShowPlayerDialog(playerid, FAQS_ANSWER, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR - FAQS - Answer", "{FFFFFF}Elvis yek Bot hast ke hamishe online va Anti Spam va Anti Cheat Server ham mibashad", "Ok", "");
	        }
			case 9:
	        {
	            ShowPlayerDialog(playerid, FAQS_ANSWER, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR - FAQS - Answer", "{FFFFFF}Dar kharkhaney sakht aslahe (/gps) az /getmats baraye ghate aslahe estefade konid.(Yellow dots on minimap)", "Ok", "");
	        }
		}
	}
	if(dialogid == DEGREE_LIST_REVIEW)
	{
	    if(response)
	    {
	        if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	        {
			    new string[150];
			    if(DegreeInfo[playerid][dReal] == 1) return SendClientMessage(playerid, RED, "Shoma Madrak Real Estate ra darid.");
			    if(GetPlayerCash(playerid) < 10000000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
			    DegreeInfo[playerid][dReal] = 1;
			    GivePlayerCash(playerid, - 10000000);
			    format(string, sizeof(string), "DANESHGAH: %s [%d] madrak Real Estate ra kharid.", GetName(playerid), playerid);
			    SendMessageToAll(LIGHTGREEN, string);
			    SendClientMessage(playerid, YELLOW, "Madrak kharide shod.");
			}
		}
	}
	if(dialogid == DEGREE_LIST_REVIEW1)
	{
	    if(response)
	    {
	        if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	        {
			    new string[150];
			    if(DegreeInfo[playerid][dLaw] == 1) return SendClientMessage(playerid, RED, "shoma madrak Law ra darid.");
			    if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
			    DegreeInfo[playerid][dLaw] = 1;
			    GivePlayerCash(playerid, - 1000000);
			    format(string, sizeof(string), "DANESHGAH: %s [%d] madrak Law ra kharid.", GetName(playerid), playerid);
			    SendMessageToAll(LIGHTGREEN, string);
			    SendClientMessage(playerid, YELLOW, "Madrak kharide shod.");
			}
		}
	}
	if(dialogid == DEGREE_LIST_REVIEW2)
	{
	    if(response)
	    {
	        if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	        {
			    new string[150];
			    if(DegreeInfo[playerid][dDefense] == 1) return SendClientMessage(playerid, RED, "Shoma madrak Defence ra darid.");
			    if(GetPlayerCash(playerid) < 3000000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
			    DegreeInfo[playerid][dDefense] = 1;
			    GivePlayerCash(playerid, - 3000000);
			    format(string, sizeof(string), "DANESHGAH: %s [%d] madrak Defense ra kharid.", GetName(playerid), playerid);
			    SendMessageToAll(LIGHTGREEN, string);
			    SendClientMessage(playerid, YELLOW, "Madrak kharide shod.");
			}
		}
	}
	if(dialogid == DEGREE_LIST_REVIEW3)
	{
	    if(response)
	    {
	        if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	        {
			    new string[150];
			    if(DegreeInfo[playerid][dHealth] == 1) return SendClientMessage(playerid, RED, "Shoma madrak Medical ra darid.");
			    if(GetPlayerCash(playerid) < 1000000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
			    DegreeInfo[playerid][dHealth] = 1;
			    GivePlayerCash(playerid, - 1000000);
			    format(string, sizeof(string), "DANESHGAH: %s [%d] madrak Health ra kharid.", GetName(playerid), playerid);
			    SendMessageToAll(LIGHTGREEN, string);
			    SendClientMessage(playerid, YELLOW, "Madrak kharide shod.");
			}
		}
	}
	if(dialogid == DEGREE_LIST_REVIEW4)
	{
	    if(response)
	    {
	        if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	        {
			    new string[150];
			    if(DegreeInfo[playerid][dMechanic] == 1) return SendClientMessage(playerid, RED, "Shoma madrak Mechanical ra darid.");
			    if(GetPlayerCash(playerid) < 2000000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
			    DegreeInfo[playerid][dMechanic] = 1;
			    GivePlayerCash(playerid, - 2000000);
			    format(string, sizeof(string), "DANESHGAH: %s [%d] madrak Mechanics ra kharid.", GetName(playerid), playerid);
			    SendMessageToAll(LIGHTGREEN, string);
			    SendClientMessage(playerid, YELLOW, "Madrak kharide shod.");
			}
		}
	}
	if(dialogid == DEGREE_LIST_REVIEW5)
	{
	    if(response)
	    {
	        if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	        {
			    new string[150];
			    if(DegreeInfo[playerid][dDealer] == 1) return SendClientMessage(playerid, RED, "Shoma Madrak Dealership ra darid.");
			    if(GetPlayerCash(playerid) < 12000000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
			    DegreeInfo[playerid][dDealer] = 1;
			    GivePlayerCash(playerid, - 12000000);
			    format(string, sizeof(string), "DANESHGAH: %s [%d] Madrak Dealership ra kharid.", GetName(playerid), playerid);
			    SendMessageToAll(LIGHTGREEN, string);
			    SendClientMessage(playerid, YELLOW, "Madrak kharide shod.");
			}
		}
	}
	if(dialogid == DEGREE_LIST_REVIEW6)
	{
	    if(response)
	    {
	        if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	        {
			    new string[150];
			    if(DegreeInfo[playerid][dWeapons] == 1) return SendClientMessage(playerid, RED, "Shoma madrak Weapons ra darid.");
			    if(GetPlayerCash(playerid) < 3000000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
			    DegreeInfo[playerid][dWeapons] = 1;
			    GivePlayerCash(playerid, - 3000000);
			    format(string, sizeof(string), "DANESHGAH: %s [%d] Madrak Weapons ra kharid.", GetName(playerid), playerid);
			    SendMessageToAll(LIGHTGREEN, string);
			    SendClientMessage(playerid, YELLOW, "Madrak kharide shod.");
			}
		}
	}
	if(dialogid == DEGREE_LIST_DIALOG)
	{
		if(response)
	    switch(listitem)
        {
        	case 0://Real Estate Degree
			{
			    ShowPlayerDialog(playerid, DEGREE_LIST_REVIEW, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Real Estate", "{FFFFFF}Special commands: /sell(house/biz)to [name/id] [price]\nGhabeliat ha: Mitavanid 2 khane va business ezafi digar bekharid(5 all up)\nPrice: $10M\nStudy time: Instant\nExpiry: Never", "Buy", "Dont Buy");
			}
			case 1://Law Degree
			{
			    ShowPlayerDialog(playerid, DEGREE_LIST_REVIEW1, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Law", "{FFFFFF}Special commands: N/A\nGhabeliat ha: Dastresi be class CIA va FBI va ghabeliathasin.\nPrice: $1M\nStudy time: Instant\nExpiry: Never", "Buy", "Dont Buy");
			}
			case 2://Defense Degree
			{
			    ShowPlayerDialog(playerid, DEGREE_LIST_REVIEW2, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Defense", "{FFFFFF}Special commands: N/A\nGhabeliat ha: Dastresi be class ARMY va ghabeliathash.\nPrice: $3M\nStudy time: Instant\nExpiry: Never", "Buy", "Dont Buy");
			}
			case 3://Medical Degree
			{
			    ShowPlayerDialog(playerid, DEGREE_LIST_REVIEW3, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Medical", "{FFFFFF}Special commands: /medic [name/id] [price]\nGhabeliat ha: Dastresi be class MEDIC/DOCTOR va ghabeliathash.\nPrice: $1M\nStudy time: Instant\nExpiry: Never", "Buy", "Dont Buy");
			}
			case 4://Mechanical Degree
			{
			    ShowPlayerDialog(playerid, DEGREE_LIST_REVIEW4, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Mechanical", "{FFFFFF}Special commands: /(refill/fix) [name/id] [price]\nSpecial features: N/A\nPrice: $2M\nStudy time: Instant\nExpiry: Never", "Buy", "Dont Buy");
			}
			case 5://Dealership Degree
			{
			    ShowPlayerDialog(playerid, DEGREE_LIST_REVIEW5, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Dealership", "{FFFFFF}Special commands: /sellvehto [name/id] [price]\nGhabeliatha: 2 mashin ezafi digar mitavanid bekharid(5 all up)\nPrice: $12M\nStudy time: Instant\nExpiry: Never", "Buy", "Dont Buy");
			}
			case 6://Weapon Degree
			{
			    ShowPlayerDialog(playerid, DEGREE_LIST_REVIEW6, DIALOG_STYLE_MSGBOX, "{FFFFFF} University - Madrak Weapons", "{FFFFFF}Special commands: /sell(gun/mats) [name/id] [gun/mats] [price] + /getmats\nGhabeliatha: Tavanaii forokhtan aslahe be khod va digaran ba tir namahdud, dar harkoja.\nPrice: $3M\nStudy time: Instant\nExpiry: Never", "Buy", "Dont Buy");
			}
		}
	}
	if(dialogid == BIZ_SHOP_DIALOG)
    {
		if(response)
	    switch(listitem)
        {
        	case 0:
			{
				new string[50];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
            	ShowPlayerDialog(playerid, BIZ_SHOP2_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Item: Sprunk and Chips - Price: $10\nItem: Sprunk and Hotdog - Price: $20", "Select", "Cancel");
        	}
        	case 1:
			{
				new string[50];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
            	ShowPlayerDialog(playerid, BIZ_SHOP3_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Item: Rope - Price: $5000\nItem: Scissors - Price: $20K\nItem: Vehicle Lock - Price: $50K\nItem: 5 Spray Cans - Price: $5K", "Select", "Cancel");
			}
			case 2:
			{
				new string[50];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
            	ShowPlayerDialog(playerid, BIZ_SHOP4_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Item: Daily Lottery Ticket - Price: $500", "Select", "Cancel");
			}
			case 3:
			{
				new string[50];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			    ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
			}
		}
	}
    if(dialogid == BIZ_SHOP5_DIALOG)
    {
		if(response)
	    switch(listitem)
        {
        	case 0:
			{
			    new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
            	ShowPlayerDialog(playerid, BIZ_SHOP6_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Item: 9mm - Price: $200\nItem: Silenced 9mm - Price: $300\nItem: Desert Eagle - Price: $500", "Select", "Cancel");
        	}
        	case 1:
			{
			    new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
            	ShowPlayerDialog(playerid, BIZ_SHOP7_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Item: Shotgun - Price: $600\nItem: Sawnoff Shotgun - Price: $800\nItem: Combat Shotgun - Price: $1000", "Select", "Cancel");
			}
        	case 2:
			{
			    new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
		    	ShowPlayerDialog(playerid, BIZ_SHOP8_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Item: Tec 9 - Price: $600\nItem: Micro SMG - Price: $800 \nItem: MP5 - Price: $1000", "Select", "Cancel");
        	}
			case 3:
			{
			    new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
            	ShowPlayerDialog(playerid, BIZ_SHOP9_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Item: AK47 - Price: $800\nItem: M4 - Price: $1000", "Select", "Cancel");
        	}
        	case 4:
			{
			    new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
            	ShowPlayerDialog(playerid, BIZ_SHOP10_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Item: Body Armour - Price: $500", "Select", "Cancel");
        	}
        }
	}
    if(dialogid == BIZ_SHOP6_DIALOG)
    {
		if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 200) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            GivePlayerCash(playerid, -200);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 200/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
            GivePlayerWeapon(playerid,22,100);
            SendClientMessage(playerid, YELLOW, "You have purchased a 9mm with 100 ammo for $200.");
            ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
   			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
		case 1:
		{
            if(GetPlayerCash(playerid) < 300) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -300);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 300/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
	        GivePlayerWeapon(playerid,23,100);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Silenced 9mm with 100 ammo for $300.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
		case 2:
		{
            if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -500);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 500/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
	        GivePlayerWeapon(playerid,24,100);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Desert Eagle with 100 ammo for $500.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        }
    }
    if(dialogid == BIZ_SHOP7_DIALOG)
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 600) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -600);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 600/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
	        GivePlayerWeapon(playerid,25,100);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Shotgun with 100 ammo for $600.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        case 1:
		{
            if(GetPlayerCash(playerid) < 800) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -800);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 800/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
	        GivePlayerWeapon(playerid,26,100);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Sawn Off Shotgun with 100 ammo for $800.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        case 2:
		{
            if(GetPlayerCash(playerid) < 1000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -1000);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 1000/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
	        GivePlayerWeapon(playerid,27,100);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Combat Shotgun with 100 ammo for $1000");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        }
    }
    if(dialogid == BIZ_SHOP8_DIALOG)
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 600) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -600);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 600/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
	        GivePlayerWeapon(playerid,32,200);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Tec 9 with 200 ammo for $600.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        case 1:
		{
            if(GetPlayerCash(playerid) < 800) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -800);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 800/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
	        GivePlayerWeapon(playerid,28,200);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Micro SMG with 200 ammo for $800.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        case 2:
		{
            if(GetPlayerCash(playerid) < 1000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -1000);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 1000/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
	        GivePlayerWeapon(playerid,29,200);
	        SendClientMessage(playerid, YELLOW, "You have purchased a MP5 with 200 ammo for $1000.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        }
    }
    if(dialogid == BIZ_SHOP9_DIALOG)
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 800) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -800);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 800/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
	        GivePlayerWeapon(playerid,30,200);
	        SendClientMessage(playerid, YELLOW, "You have purchased a AK47 with 200 ammo for $800.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        case 1:
        {
            if(GetPlayerCash(playerid) < 1000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -1000);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 1000/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
	        GivePlayerWeapon(playerid,31,200);
	        SendClientMessage(playerid, YELLOW, "You have purchased a M4 with 200 ammo for $1000.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		}
		}
    }
    if(dialogid == BIZ_SHOP10_DIALOG)
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -500);
	        BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 500/4;//25%
	        BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
			SaveBizStats(BizID[playerid]);
			SetPlayerArmour(playerid, 100);
	        SendClientMessage(playerid, YELLOW, "You have purchased Body Armour for $500.");
			new string[50];
			format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
			ShowPlayerDialog(playerid, BIZ_SHOP5_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        }
    }
	if(dialogid == BIZ_SHOP2_DIALOG)
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 10) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        new Float:health;
	        GetPlayerHealth(playerid, health);

//			if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

			if(health >= 100) return SendClientMessage(playerid, RED, "You cant eat with 100 percent health.");
			{
				GivePlayerCash(playerid, -10);
	        	BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 10/4;//25%
	        	BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
				SaveBizStats(BizID[playerid]);
				if(health + 25 > 100)
				{
			    	SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SetPlayerHealth(playerid, health + 25);
				}
	        	SendClientMessage(playerid, YELLOW, "You have purchased Sprunk and Chips for $10.");
	        	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	        	new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
				ShowPlayerDialog(playerid, BIZ_SHOP_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi\nGun Menu", "Select", "Cancel");
			}
		}
        case 1:
		{
            if(GetPlayerCash(playerid) < 20) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        new Float:health;
	        GetPlayerHealth(playerid,health);

//			if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

			if(health >= 100) return SendClientMessage(playerid, RED, "You cant eat with 100 percent health.");
			{
				GivePlayerCash(playerid, -20);
	        	BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 20/4;//25%
	        	BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
				SaveBizStats(BizID[playerid]);
				if(health + 50 > 100)
				{
			    	SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SetPlayerHealth(playerid, health + 50);
				}
	        	SendClientMessage(playerid, YELLOW, "You have purchased a Sprunk and Hotdog for $20.");
	        	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	        	new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
				ShowPlayerDialog(playerid, BIZ_SHOP_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi\nGun Menu", "Select", "Cancel");
			}
		}
        }
    }
	if(dialogid == BIZ_SHOP3_DIALOG)
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            {
                GivePlayerCash(playerid, -5000);
	            BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 5000/4;//25%
	            BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
				SaveBizStats(BizID[playerid]);
                PlayerInfo[playerid][pRope]+=4;
                SendClientMessage(playerid, YELLOW, "You have purchased 4 Pieces of Rope for $5000.");
	        	new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
				ShowPlayerDialog(playerid, BIZ_SHOP_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi\nGun Menu", "Select", "Cancel");
			}
		}
		case 1:
		{
            if(GetPlayerCash(playerid) < 20000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            if(PlayerInfo[playerid][pScissors] == 1) return SendClientMessage(playerid, RED, "You Already Have A Pair of Scissors.");

			{
                GivePlayerCash(playerid, -20000);
	            BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 20000/4;//25%
	            BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
				SaveBizStats(BizID[playerid]);
                PlayerInfo[playerid][pScissors]++;
                SendClientMessage(playerid, YELLOW, "You have purchased a Pair of Scissors for $20K.");
	        	new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
				ShowPlayerDialog(playerid, BIZ_SHOP_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi\nGun Menu", "Select", "Cancel");
			}
		}
        case 2:
		{
            if(GetPlayerCash(playerid) < 50000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            if(PlayerInfo[playerid][vLock] == 1) return SendClientMessage(playerid, RED, "You already own a vLock.");
            {
	            GivePlayerCash(playerid, -50000);
	            BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 50000/4;//25%
	            BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
				SaveBizStats(BizID[playerid]);
            	PlayerInfo[playerid][vLock]++;
	            SendClientMessage(playerid, YELLOW, "You have purchased a Personel Vehicle Lock for $50K.");
	        	new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
				ShowPlayerDialog(playerid, BIZ_SHOP_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi\nGun Menu", "Select", "Cancel");
			}
		}
		case 3:
		{
            if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            if(PlayerInfo[playerid][pPaintCan] == 1) return SendClientMessage(playerid, RED, "You Already Have Spray Can.");
            {
	            GivePlayerCash(playerid, -5000);
	            BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 5000/4;//25%
	            BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
				SaveBizStats(BizID[playerid]);
	            PlayerInfo[playerid][pPaintCan]+=5;
	            SendClientMessage(playerid, YELLOW, "You have purchased 5 Spray Cans for $5K.");
	        	new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
				ShowPlayerDialog(playerid, BIZ_SHOP_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi\nGun Menu", "Select", "Cancel");
			}
		}
        }
    }
	if(dialogid == BIZ_SHOP4_DIALOG)
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        if(HasLotteryTicket{playerid} == 1) return SendClientMessage(playerid, RED, "You already have a lottery ticket.");
	        {
                new nstring[150];
	            SendClientMessage(playerid, YELLOW, "You have purchased a Lottery Ticket for $500.");
	            BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] + 500/4;//25%
	            BizInfo[BizID[playerid]][bPrice] = BizInfo[BizID[playerid]][bPrice] + random(9000) + 1000;
				SaveBizStats(BizID[playerid]);
		        HasLotteryTicket{playerid} = 1;
	        	GivePlayerCash(playerid, -500);
		        MakePlayersLottoNumbers(playerid);
		        format(nstring, sizeof(nstring), "Your lotto numbers are: %d, %d, %d, %d, %d, %d", PlayersLottoNumbers[0][playerid], PlayersLottoNumbers[1][playerid], PlayersLottoNumbers[2][playerid], PlayersLottoNumbers[3][playerid], PlayersLottoNumbers[4][playerid], PlayersLottoNumbers[5][playerid]);
	    	    SendClientMessage(playerid, YELLOW, nstring);
	        	new string[150];
				format(string, sizeof(string), "{FFFFFF}%s", BizInfo[BizID[playerid]][bName]);
				ShowPlayerDialog(playerid, BIZ_SHOP_DIALOG, DIALOG_STYLE_LIST, string, "{FFFFFF}Food/Drink Menu\nMenu abzarha\nBelit ghorekeshi\nGun Menu", "Select", "Cancel");
			}
		}
		}
    }
	if(dialogid == BIZ_BUY_DIALOG)
	{
		if(response)
		{
		    new hname[50], file[40], string[150], bcount = GetPlayerOwnedBusinesses(playerid);
  			format(file,sizeof(file), BIZ_FILE, BizID[playerid]);
  			if(PlayerInfo[playerid][vLevel] >= 1)
			{
			    if(bcount >= MAX_VIP_BIZ)
			    {
			    	format(string, sizeof(string), "You already own %d businesses, sell one of them to buy another.", MAX_VIP_BIZ);
					SendClientMessage(playerid, RED, string);
					return 1;
				}
				if(BizInfo[BizID[playerid]][bPrice] > GetPlayerCash(playerid)) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
				GivePlayerCash(playerid, - BizInfo[BizID[playerid]][bPrice]);
				format(hname, sizeof(hname), "%s's business", GetName(playerid));
				new INI:bFilee = INI_Open(file);
        		INI_WriteString(bFilee, "bName", hname);
        		INI_WriteString(bFilee, "bOwner", GetName(playerid));
        		INI_Close(bFilee);
				BizInfo[BizID[playerid]][bName] = hname;
				BizInfo[BizID[playerid]][bOwner] = GetName(playerid);
				Update3DTextLabelText(bLabel[BizID[playerid]], YELLOW, hname);
				SendClientMessage(playerid, WHITE, "Business purchased.");
	    	}
	    	if(PlayerInfo[playerid][vLevel] == 0 && DegreeInfo[playerid][dReal] >= 1)
			{
			    if(bcount >= MAX_DEGREE_BIZ)
			    {
			    	format(string, sizeof(string), "You already own %d businesses, sell one of them to buy another.", MAX_DEGREE_BIZ);
					SendClientMessage(playerid, RED, string);
					return 1;
				}
				if(BizInfo[BizID[playerid]][bPrice] > GetPlayerCash(playerid)) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
				GivePlayerCash(playerid, - BizInfo[BizID[playerid]][bPrice]);
				format(hname, sizeof(hname), "%s's business", GetName(playerid));
				new INI:bFilee = INI_Open(file);
        		INI_WriteString(bFilee, "bName", hname);
        		INI_WriteString(bFilee, "bOwner", GetName(playerid));
        		INI_Close(bFilee);
				BizInfo[BizID[playerid]][bName] = hname;
				BizInfo[BizID[playerid]][bOwner] = GetName(playerid);
				Update3DTextLabelText(bLabel[BizID[playerid]], YELLOW, hname);
				SendClientMessage(playerid, WHITE, "Business purchased.");
				return 1;
	    	}
			if(PlayerInfo[playerid][vLevel] == 0 && DegreeInfo[playerid][dReal] == 0)
			{
			    if(bcount >= MAX_PLAYER_BIZ)
			    {
			    	format(string, sizeof(string), "You already own %d businesses, sell one of them to buy another.", MAX_PLAYER_BIZ);
					SendClientMessage(playerid, RED, string);
					return 1;
				}
				if(BizInfo[BizID[playerid]][bPrice] > GetPlayerCash(playerid)) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
				GivePlayerCash(playerid, - BizInfo[BizID[playerid]][bPrice]);
				format(hname, sizeof(hname), "%s's business", GetName(playerid));
				new INI:bFilee = INI_Open(file);
        		INI_WriteString(bFilee, "bName", hname);
        		INI_WriteString(bFilee, "bOwner", GetName(playerid));
        		INI_Close(bFilee);
				BizInfo[BizID[playerid]][bName] = hname;
				BizInfo[BizID[playerid]][bOwner] = GetName(playerid);
				Update3DTextLabelText(bLabel[BizID[playerid]], YELLOW, hname);
				SendClientMessage(playerid, WHITE, "Business purchased.");
				return 1;
	    	}
	    	return 1;
		}
	}
    if(dialogid == BIZ_SELL_DIALOG)
	{
		if(response)
		{
		    new file[40], bowner[24], bname[50];
			format(file, sizeof(file), BIZ_FILE, BizID[playerid]);
			format(bname, sizeof(bname), "For-Sale");
			format(bowner, sizeof(bowner), "%s", DEFAULT_BIZ_OWNER_NAME);
			Update3DTextLabelText(bLabel[BizID[playerid]], YELLOW, bizlabel);
			BizInfo[BizID[playerid]][bOwner] = bowner;
			BizInfo[BizID[playerid]][bName] = bname;
			GivePlayerCash(playerid, BizInfo[BizID[playerid]][bEarnings]);
			GivePlayerCash(playerid, BizInfo[BizID[playerid]][bPrice]/2);
			BizInfo[BizID[playerid]][bEarnings] = 0;
			SendClientMessage(playerid, WHITE, "Business sold. You received 50 percent of the value of the business and the remaining earnings.");
			SaveBizStats(BizID[playerid]);
		}
	}
	if(dialogid == BIZ_MENU_DIALOG)
	{
	    if(response)
	    switch(listitem)
	    {
	        case 0:
	        {
	            ShowPlayerDialog(playerid, BIZ_NAME_DIALOG, DIALOG_STYLE_INPUT, "{FFFFFF}Business Menu", "{FFFFFF}Please enter your new business name below:", "Submit", "Cancel");
	        }
	        case 1:
	        {
				format(fstr, sizeof(fstr), "{FFFFFF}Earnings Balance: $%d", BizInfo[BizID[playerid]][bEarnings]);
	            ShowPlayerDialog(playerid, BIZ_BALANCE_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Business Menu", fstr, "Ok", "");
			}
	        case 2:
	        {
	            format(fstr2, sizeof(fstr2), "{FFFFFF}Please enter the amount you wish to withdraw below:\nEarnings Balance: $%d", BizInfo[BizID[playerid]][bEarnings]);
	            ShowPlayerDialog(playerid, BIZ_WITHDRAW_DIALOG, DIALOG_STYLE_INPUT, "{FFFFFF}Business Menu", fstr2, "Submit", "Cancel");
	        }
	        case 3:
	        {
	            ShowPlayerDialog(playerid, BIZ_SELL_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Business Menu", "{FFFFFF}Are you sure you want to sell this business?", "Sell", "Dont Sell");
	        }
	    }
	}
	if(dialogid == BIZ_WITHDRAW_DIALOG)
	{
	    if(response)
	    if(!IsNumeric(inputtext)) return SendClientMessage(playerid, RED, "Characters detected, numbers only.");
	    if(!strlen(inputtext)) return SendClientMessage(playerid, RED, "You must submit an amount to withdraw.");
	    if(strval(inputtext) > BizInfo[BizID[playerid]][bEarnings]) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
		if(strval(inputtext) > 10000000) return SendClientMessage(playerid, RED, "You can only withdraw $10M at a time");
		BizInfo[BizID[playerid]][bEarnings] = BizInfo[BizID[playerid]][bEarnings] - strval(inputtext);
	    GivePlayerCash(playerid, strval(inputtext));
	    format(fstr, sizeof(fstr), "You have withdrawn $%d from your business earnings.", strval(inputtext));
	    SendClientMessage(playerid, WHITE, fstr);
	    new file[40];
		format(file, sizeof(file), BIZ_FILE, BizID[playerid]);
	    new INI:bFilee = INI_Open(file);
		INI_WriteInt(bFilee, "bEarnings", BizInfo[BizID[playerid]][bEarnings]);
		INI_Close(bFilee);
	}
	if(dialogid == BIZ_NAME_DIALOG)
	{
	    if(response)
		if(strfind(inputtext, "%", true) != -1 || strfind(inputtext, "~", true) != -1) return SendClientMessage(playerid, RED, "Your bussiness name cant contain some symbols.");
	    if(!strlen(inputtext)) return SendClientMessage(playerid, RED, "You must input a new name to change your current business name.");
	    if(strlen(inputtext) < 1 || strlen(inputtext) > 50) return SendClientMessage(playerid, RED, "Your business name can only contain 1-50 characters.");
		new text[50];
		format(text, sizeof(text), "%s", inputtext);
		BizInfo[BizID[playerid]][bName] = text;
		format(fstr, sizeof(fstr), "You have successfully changed your business name to %s", text);
	    SendClientMessage(playerid, WHITE, fstr);
	    Update3DTextLabelText(bLabel[BizID[playerid]], YELLOW, text);
	    new file[40];
		format(file, sizeof(file), BIZ_FILE, BizID[playerid]);
		new INI:bFilee = INI_Open(file);
		INI_WriteString(bFilee, "bName", BizInfo[BizID[playerid]][bName]);
		INI_Close(bFilee);
	}
    new file[40]/*, file2[24]*/, h = LastHouseCP[playerid];
    format(file, sizeof(file), HOUSE_FILE, h);
	if(dialogid == HOUSE_MENU)//
	{
	    if(response)
	    switch(listitem)
		{
			case 0: ShowPlayerDialog(playerid, HOUSE_MENU+14, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Name", "{FFFFFF}Enter the new house name below:\n\nPress 'Cancel' to cancel.", "Done", "Cancel");
		    case 1:
		    {
		        format(fstr, sizeof(fstr), "{FFFFFF}Slot 1: %s\nSlot 2: %s\nSlot 3: %s\nSlot 4: %s\nSlot 5: %s\nSlot 6: %s\nSlot 7: %s\nSlot 8: %s\nSlot 9: %s\nSlot 10: %s",
				HouseInfo[h][hKeyOwner1], HouseInfo[h][hKeyOwner2], HouseInfo[h][hKeyOwner3], HouseInfo[h][hKeyOwner4], HouseInfo[h][hKeyOwner5], HouseInfo[h][hKeyOwner6], HouseInfo[h][hKeyOwner7], HouseInfo[h][hKeyOwner8], HouseInfo[h][hKeyOwner9], HouseInfo[h][hKeyOwner10]);
		        ShowPlayerDialog(playerid, HOUSE_KEYS_DIALOG, DIALOG_STYLE_LIST, "{FFFFFF}House Menu - House Keys", fstr, "Select", "Cancel");
		    }
			case 2:
		    {
				new string[150];
				format(string, sizeof(string), "{FFFFFF}Are you sure you want to sell your house for $%d?", ReturnPercent(GetHouseValue(h), HOUSE_SELLING_PERCENT_RETURN));
				ShowPlayerDialog(playerid, HOUSE_MENU+3, DIALOG_STYLE_MSGBOX, "{FFFFFF}House Menu - House Sale", string, "Sell", "Dont Sell");
		    }
		}
		return 1;
	}
	if(dialogid == HOUSE_KEYS_INPUT)
	{
	    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
	    if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, YELLOW, "The player name can only contain 3-24 charactors.");
		new ufile[40];
		format(ufile, sizeof(ufile), USER_FILE, inputtext);
		if(!fexist(ufile)) return SendClientMessage(playerid, RED, "That username does not exist in the ACNR user database.");
		new update[24];
		format(update, sizeof(update), "%s", inputtext);
		HouseInfo[h][hKeyOwner1] = update;//
	    format(fstr, sizeof(fstr), "You have given %s a set of house keys, re-click the slot to remove the keys.", inputtext);
	    SendClientMessage(playerid, YELLOW, fstr);
	    if(IsPlayerConnected(GetID(inputtext)))
	    {
	    	format(fstr2, sizeof(fstr2), "%s [%d] has just given you a set of keys to their house.", GetName(playerid), playerid);
	    	SendClientMessage(GetID(inputtext), LIGHTGREEN, fstr2);
	    }
	    SaveHouseStats(h);
	}
	if(dialogid == HOUSE_KEYS_INPUT2)
	{
	    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
	    if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, YELLOW, "The player name can only contain 3-24 charactors.");
		new ufile[40];
		format(ufile, sizeof(ufile), USER_FILE, inputtext);
		if(!fexist(ufile)) return SendClientMessage(playerid, RED, "That username does not exist in the ACNR user database.");
		new update[24];
		format(update, sizeof(update), "%s", inputtext);
		HouseInfo[h][hKeyOwner2] = update;//
	    format(fstr, sizeof(fstr), "You have given %s a set of house keys, re-click the slot to remove the keys.", inputtext);
	    SendClientMessage(playerid, YELLOW, fstr);
	    if(IsPlayerConnected(GetID(inputtext)))
	    {
	    	format(fstr2, sizeof(fstr2), "%s [%d] has just given you a set of keys to their house.", GetName(playerid), playerid);
	    	SendClientMessage(GetID(inputtext), LIGHTGREEN, fstr2);
	    }
	    SaveHouseStats(h);
	}
	if(dialogid == HOUSE_KEYS_INPUT3)
	{
	    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
	    if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, YELLOW, "The player name can only contain 3-24 charactors.");
		new ufile[40];
		format(ufile, sizeof(ufile), USER_FILE, inputtext);
		if(!fexist(ufile)) return SendClientMessage(playerid, RED, "That username does not exist in the ACNR user database.");
		new update[24];
		format(update, sizeof(update), "%s", inputtext);
		HouseInfo[h][hKeyOwner3] = update;//
	    format(fstr, sizeof(fstr), "You have given %s a set of house keys, re-click the slot to remove the keys.", inputtext);
	    SendClientMessage(playerid, YELLOW, fstr);
	    if(IsPlayerConnected(GetID(inputtext)))
	    {
	    	format(fstr2, sizeof(fstr2), "%s [%d] has just given you a set of keys to their house.", GetName(playerid), playerid);
	    	SendClientMessage(GetID(inputtext), LIGHTGREEN, fstr2);
	    }
	    SaveHouseStats(h);
	}
	if(dialogid == HOUSE_KEYS_INPUT4)
	{
	    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
	    if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, YELLOW, "The player name can only contain 3-24 charactors.");
		new ufile[40];
		format(ufile, sizeof(ufile), USER_FILE, inputtext);
		if(!fexist(ufile)) return SendClientMessage(playerid, RED, "That username does not exist in the ACNR user database.");
		new update[24];
		format(update, sizeof(update), "%s", inputtext);
		HouseInfo[h][hKeyOwner4] = update;//
	    format(fstr, sizeof(fstr), "You have given %s a set of house keys, re-click the slot to remove the keys.", inputtext);
	    SendClientMessage(playerid, YELLOW, fstr);
	    if(IsPlayerConnected(GetID(inputtext)))
	    {
	    	format(fstr2, sizeof(fstr2), "%s [%d] has just given you a set of keys to their house.", GetName(playerid), playerid);
	    	SendClientMessage(GetID(inputtext), LIGHTGREEN, fstr2);
	    }
	    SaveHouseStats(h);
	}
	if(dialogid == HOUSE_KEYS_INPUT5)
	{
	    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
	    if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, YELLOW, "The player name can only contain 3-24 charactors.");
		new ufile[40];
		format(ufile, sizeof(ufile), USER_FILE, inputtext);
		if(!fexist(ufile)) return SendClientMessage(playerid, RED, "That username does not exist in the ACNR user database.");
		new update[24];
		format(update, sizeof(update), "%s", inputtext);
		HouseInfo[h][hKeyOwner5] = update;//
	    format(fstr, sizeof(fstr), "You have given %s a set of house keys, re-click the slot to remove the keys.", inputtext);
	    SendClientMessage(playerid, YELLOW, fstr);
	    if(IsPlayerConnected(GetID(inputtext)))
	    {
	    	format(fstr2, sizeof(fstr2), "%s [%d] has just given you a set of keys to their house.", GetName(playerid), playerid);
	    	SendClientMessage(GetID(inputtext), LIGHTGREEN, fstr2);
	    }
	    SaveHouseStats(h);
	}
	if(dialogid == HOUSE_KEYS_INPUT6)
	{
	    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
	    if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, YELLOW, "The player name can only contain 3-24 charactors.");
		new ufile[40];
		format(ufile, sizeof(ufile), USER_FILE, inputtext);
		if(!fexist(ufile)) return SendClientMessage(playerid, RED, "That username does not exist in the ACNR user database.");
		new update[24];
		format(update, sizeof(update), "%s", inputtext);
		HouseInfo[h][hKeyOwner6] = update;//
	    format(fstr, sizeof(fstr), "You have given %s a set of house keys, re-click the slot to remove the keys.", inputtext);
	    SendClientMessage(playerid, YELLOW, fstr);
	    if(IsPlayerConnected(GetID(inputtext)))
	    {
	    	format(fstr2, sizeof(fstr2), "%s [%d] has just given you a set of keys to their house.", GetName(playerid), playerid);
	    	SendClientMessage(GetID(inputtext), LIGHTGREEN, fstr2);
	    }
	    SaveHouseStats(h);
	}
	if(dialogid == HOUSE_KEYS_INPUT7)
	{
	    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
	    if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, YELLOW, "The player name can only contain 3-24 charactors.");
		new ufile[40];
		format(ufile, sizeof(ufile), USER_FILE, inputtext);
		if(!fexist(ufile)) return SendClientMessage(playerid, RED, "That username does not exist in the ACNR user database.");
		new update[24];
		format(update, sizeof(update), "%s", inputtext);
		HouseInfo[h][hKeyOwner7] = update;//
	    format(fstr, sizeof(fstr), "You have given %s a set of house keys, re-click the slot to remove the keys.", inputtext);
	    SendClientMessage(playerid, YELLOW, fstr);
	    if(IsPlayerConnected(GetID(inputtext)))
	    {
	    	format(fstr2, sizeof(fstr2), "%s [%d] has just given you a set of keys to their house.", GetName(playerid), playerid);
	    	SendClientMessage(GetID(inputtext), LIGHTGREEN, fstr2);
	    }
	    SaveHouseStats(h);
	}
	if(dialogid == HOUSE_KEYS_INPUT8)
	{
	    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
	    if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, YELLOW, "The player name can only contain 3-24 charactors.");
		new ufile[40];
		format(ufile, sizeof(ufile), USER_FILE, inputtext);
		if(!fexist(ufile)) return SendClientMessage(playerid, RED, "That username does not exist in the ACNR user database.");
		new update[24];
		format(update, sizeof(update), "%s", inputtext);
		HouseInfo[h][hKeyOwner8] = update;//
	    format(fstr, sizeof(fstr), "You have given %s a set of house keys, re-click the slot to remove the keys.", inputtext);
	    SendClientMessage(playerid, YELLOW, fstr);
	    if(IsPlayerConnected(GetID(inputtext)))
	    {
	    	format(fstr2, sizeof(fstr2), "%s [%d] has just given you a set of keys to their house.", GetName(playerid), playerid);
	    	SendClientMessage(GetID(inputtext), LIGHTGREEN, fstr2);
	    }
	    SaveHouseStats(h);
	}
	if(dialogid == HOUSE_KEYS_INPUT9)
	{
	    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
	    if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, YELLOW, "The player name can only contain 3-24 charactors.");
		new ufile[40];
		format(ufile, sizeof(ufile), USER_FILE, inputtext);
		if(!fexist(ufile)) return SendClientMessage(playerid, RED, "That username does not exist in the ACNR user database.");
		new update[24];
		format(update, sizeof(update), "%s", inputtext);
		HouseInfo[h][hKeyOwner9] = update;//
	    format(fstr, sizeof(fstr), "You have given %s a set of house keys, re-click the slot to remove the keys.", inputtext);
	    SendClientMessage(playerid, YELLOW, fstr);
	    if(IsPlayerConnected(GetID(inputtext)))
	    {
	    	format(fstr2, sizeof(fstr2), "%s [%d] has just given you a set of keys to their house.", GetName(playerid), playerid);
	    	SendClientMessage(GetID(inputtext), LIGHTGREEN, fstr2);
	    }
	    SaveHouseStats(h);
	}
	if(dialogid == HOUSE_KEYS_INPUT10)
	{
	    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
	    if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, YELLOW, "The player name can only contain 3-24 charactors.");
		new ufile[40];
		format(ufile, sizeof(ufile), USER_FILE, inputtext);
		if(!fexist(ufile)) return SendClientMessage(playerid, RED, "That username does not exist in the ACNR user database.");
		new update[24];
		format(update, sizeof(update), "%s", inputtext);
		HouseInfo[h][hKeyOwner10] = update;//
	    format(fstr, sizeof(fstr), "You have given %s a set of house keys, re-click the slot to remove the keys.", inputtext);
	    SendClientMessage(playerid, YELLOW, fstr);
	    if(IsPlayerConnected(GetID(inputtext)))
	    {
	    	format(fstr2, sizeof(fstr2), "%s [%d] has just given you a set of keys to their house.", GetName(playerid), playerid);
	    	SendClientMessage(GetID(inputtext), LIGHTGREEN, fstr2);
	    }
	    SaveHouseStats(h);
	}
	if(dialogid == HOUSE_KEYS_DIALOG)
	{
	    if(response)
	    switch(listitem)
		{
			case 0:
			{
			    if(strcmp("Empty", HouseInfo[h][hKeyOwner1], false) == 0)
			    {
			        ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
			    }
			    else
			    {
			        new slot[24];
			        format(slot, sizeof(slot), "Empty");
			        HouseInfo[h][hKeyOwner1] = slot;
			        SaveHouseStats(h);
			        SendClientMessage(playerid, YELLOW, "You have successfully emptied house key slot (1)");
			    }
			}
			case 1:
			{
			    if(strcmp("Empty", HouseInfo[h][hKeyOwner2], false) == 0)
			    {
			        ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT2, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
			    }
			    else
			    {
			        new slot[24];
			        format(slot, sizeof(slot), "Empty");
			        HouseInfo[h][hKeyOwner2] = slot;
			        SaveHouseStats(h);
			        SendClientMessage(playerid, YELLOW, "You have successfully emptied house key slot (2)");
			    }
			}
			case 2:
			{
			    if(strcmp("Empty", HouseInfo[h][hKeyOwner3], false) == 0)
			    {
			        ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT3, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
			    }
			    else
			    {
			        new slot[24];
			        format(slot, sizeof(slot), "Empty");
			        HouseInfo[h][hKeyOwner3] = slot;
			        SaveHouseStats(h);
			        SendClientMessage(playerid, YELLOW, "You have successfully emptied house key slot (3)");
			    }
			}
			case 3:
			{
			    if(strcmp("Empty", HouseInfo[h][hKeyOwner4], false) == 0)
			    {
			        ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT4, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
			    }
			    else
			    {
			        new slot[24];
			        format(slot, sizeof(slot), "Empty");
			        HouseInfo[h][hKeyOwner4] = slot;
			        SaveHouseStats(h);
			        SendClientMessage(playerid, YELLOW, "You have successfully emptied house key slot (4)");
			    }
			}
			case 4:
			{
			    if(strcmp("Empty", HouseInfo[h][hKeyOwner5], false) == 0)
			    {
			        ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT5, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
			    }
			    else
			    {
			        new slot[24];
			        format(slot, sizeof(slot), "Empty");
			        HouseInfo[h][hKeyOwner5] = slot;
			        SaveHouseStats(h);
			        SendClientMessage(playerid, YELLOW, "You have successfully emptied house key slot (5)");
			    }
			}
			case 5:
			{
			    if(strcmp("Empty", HouseInfo[h][hKeyOwner6], false) == 0)
			    {
			        ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT6, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
			    }
			    else
			    {
			        new slot[24];
			        format(slot, sizeof(slot), "Empty");
			        HouseInfo[h][hKeyOwner6] = slot;
			        SaveHouseStats(h);
			        SendClientMessage(playerid, YELLOW, "You have successfully emptied house key slot (6)");
			    }
			}
			case 6:
			{
			    if(strcmp("Empty", HouseInfo[h][hKeyOwner7], false) == 0)
			    {
			        ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT7, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
			    }
			    else
			    {
			        new slot[24];
			        format(slot, sizeof(slot), "Empty");
			        HouseInfo[h][hKeyOwner7] = slot;
			        SaveHouseStats(h);
			        SendClientMessage(playerid, YELLOW, "You have successfully emptied house key slot (7)");
			    }
			}
			case 7:
			{
			    if(strcmp("Empty", HouseInfo[h][hKeyOwner8], false) == 0)
			    {
			        ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT8, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
			    }
			    else
			    {
			        new slot[24];
			        format(slot, sizeof(slot), "Empty");
			        HouseInfo[h][hKeyOwner8] = slot;
			        SaveHouseStats(h);
			        SendClientMessage(playerid, YELLOW, "You have successfully emptied house key slot (8)");
			    }
			}
			case 8:
			{
			    if(strcmp("Empty", HouseInfo[h][hKeyOwner9], false) == 0)
			    {
			        ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT9, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
			    }
			    else
			    {
			        new slot[24];
			        format(slot, sizeof(slot), "Empty");
			        HouseInfo[h][hKeyOwner9] = slot;
			        SaveHouseStats(h);
			        SendClientMessage(playerid, YELLOW, "You have successfully emptied house key slot (9)");
			    }
			}
			case 9:
			{
			    if(strcmp("Empty", HouseInfo[h][hKeyOwner10], false) == 0)
			    {
			        ShowPlayerDialog(playerid, HOUSE_KEYS_INPUT10, DIALOG_STYLE_INPUT, "{FFFFFF}House Menu - House Keys", "{FFFFFF}Please enter the name of the player you want to give keys to:", "Set", "Cancel");
			    }
			    else
			    {
			        new slot[24];
			        format(slot, sizeof(slot), "Empty");
			        HouseInfo[h][hKeyOwner10] = slot;
			        SaveHouseStats(h);
			        SendClientMessage(playerid, YELLOW, "You have successfully emptied house key slot (10)");
			    }
			}
		}
		return 1;
	}
	if(dialogid == HOUSE_MENU+3)//
	{
		if(response)
		{
			GivePlayerCash(playerid, ReturnPercent(GetHouseValue(h), HOUSE_SELLING_PERCENT_RETURN));
			new str[150];
   			format(str,sizeof(str),"You have successfully sold your house for $%d.", ReturnPercent(GetHouseValue(h), HOUSE_SELLING_PERCENT_RETURN));
   			SendClientMessage(playerid,WHITE,str);
			new gname[40], gowner[24];
			format(gowner,sizeof(gowner), "Nobody");
			format(gname,sizeof(gname), "For-Sale");
			HouseInfo[h][hValue] = HouseInfo[h][hValue] - ReturnPercent(GetHouseValue(h), HOUSE_SELLING_PERCENT_RETURN);
			HouseInfo[h][hOwner] = gowner;
			HouseInfo[h][hName] = gname;
			new stringg[24];
			format(stringg, sizeof(stringg), "Empty");
			HouseInfo[h][hKeyOwner1] = stringg;
			HouseInfo[h][hKeyOwner2] = stringg;
			HouseInfo[h][hKeyOwner3] = stringg;
			HouseInfo[h][hKeyOwner4] = stringg;
			HouseInfo[h][hKeyOwner5] = stringg;
			HouseInfo[h][hKeyOwner6] = stringg;
			HouseInfo[h][hKeyOwner7] = stringg;
			HouseInfo[h][hKeyOwner8] = stringg;
			HouseInfo[h][hKeyOwner9] = stringg;
			HouseInfo[h][hKeyOwner10] = stringg;
			/*Loop(h2, MAX_HOUSES)
			{
				if(IsHouseInRangeOfHouse(h, h2, VALUE_RANGE_BETWEEN_HOUSES) && h2 != h)
				{
			   		format(file2, sizeof(file2), HOUSE_FILE, h2);
					HouseInfo[h2][hValue] = HouseInfo[h2][hValue] - ReturnPercent(GetHouseValue(h2), HOUSE_SOLD_AREA_VALUE);
                    UpdateHouseText(h2);
					SaveHouseStats(h2);
				}
			}*/
			UpdateHouseText(h);
			SaveHouseStats(h);
		}
		return 1;
	}
	if(dialogid == HOUSE_MENU+4)//
	{
		if(response)
		{
		    new hcount = GetOwnedHouses(playerid);
   			if(PlayerInfo[playerid][vLevel] >= 1)//VIP
    		{
				if(hcount >= MAX_VIP_HOUSES)
				{
			    	new str[150];
   					format(str,sizeof(str), "You already own %d houses, you need to sell one of them before you can buy another.", MAX_VIP_HOUSES);
                	SendClientMessage(playerid,WHITE,str);
					return 1;
				}
				if(strcmp(GetHouseOwner(LastHouseCP[playerid]), pNick(playerid), false) && strcmp(GetHouseOwner(h), "Nobody", false)) return SendClientMessage(playerid, RED, "This House Is Already Owned By Someone Else.");
				if(GetHouseValue(h) > GetPlayerCash(playerid))
				{
			    	SendClientMessage(playerid, RED, "Insufficent funds.");
					return 1;
				}
				else
				{
				    new hname[40];
			    	format(hname, sizeof(hname), "%s's house", pNick(playerid));
					GivePlayerCash(playerid, -GetHouseValue(h));
					new gowner[24];
					format(gowner, sizeof(gowner), "%s", GetName(playerid));
					HouseInfo[h][hOwner] = gowner;
					HouseInfo[h][hName] = hname;
					new str[150];
   					format(str,sizeof(str), "You have have successfully purchased this house for $%d.", GetHouseValue(h));
   					SendClientMessage(playerid,WHITE,str);
					/*Loop(h2, MAX_HOUSES)
					{
						if(IsHouseInRangeOfHouse(h, h2, VALUE_RANGE_BETWEEN_HOUSES) && h2 != h)
						{
					    	format(file2, sizeof(file2), HOUSE_FILE, h2);
							HouseInfo[h2][hValue] = HouseInfo[h2][hValue] - ReturnPercent(GetHouseValue(h2), HOUSE_SOLD_AREA_VALUE);
                        	UpdateHouseText(h2);
                        	SaveHouseStats(h2);
						}
					}*/
					UpdateHouseText(h);
					SaveHouseStats(h);
					return 1;
				}
			}
		    if(PlayerInfo[playerid][vLevel] == 0 && DegreeInfo[playerid][dReal] >= 1)//Real Estate Degree
    		{
				if(hcount >= MAX_DEGREE_HOUSES)
				{
			    	new str[150];
   					format(str,sizeof(str), "You already own %d houses, you need to sell one of them before you can buy another.", MAX_DEGREE_HOUSES);
                	SendClientMessage(playerid,WHITE,str);
					return 1;
				}
				if(strcmp(GetHouseOwner(LastHouseCP[playerid]), pNick(playerid), false) && strcmp(GetHouseOwner(h), "Nobody", false)) return SendClientMessage(playerid, RED, "This House Is Already Owned By Someone Else.");
				if(GetHouseValue(h) > GetPlayerCash(playerid))
				{
                	SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
					return 1;
				}
				else
				{
				    new hname[40];
			    	format(hname, sizeof(hname), "%s's house", pNick(playerid));
					GivePlayerCash(playerid, -GetHouseValue(h));
					new gowner[24];
					format(gowner, sizeof(gowner), "%s", GetName(playerid));
					HouseInfo[h][hOwner] = gowner;
					HouseInfo[h][hName] = hname;
					new stringg[24];
					format(stringg, sizeof(stringg), "Empty");
					HouseInfo[h][hKeyOwner1] = stringg;
					HouseInfo[h][hKeyOwner2] = stringg;
					HouseInfo[h][hKeyOwner3] = stringg;
					HouseInfo[h][hKeyOwner4] = stringg;
					HouseInfo[h][hKeyOwner5] = stringg;
					HouseInfo[h][hKeyOwner6] = stringg;
					HouseInfo[h][hKeyOwner7] = stringg;
					HouseInfo[h][hKeyOwner8] = stringg;
					HouseInfo[h][hKeyOwner9] = stringg;
					HouseInfo[h][hKeyOwner10] = stringg;
					new str[150];
   					format(str,sizeof(str), "You have have successfully purchased this house for $%d.", GetHouseValue(h));
   					SendClientMessage(playerid,WHITE,str);
					/*Loop(h2, MAX_HOUSES)
					{
						if(IsHouseInRangeOfHouse(h, h2, VALUE_RANGE_BETWEEN_HOUSES) && h2 != h)
						{
					    	format(file2, sizeof(file2), HOUSE_FILE, h2);
							HouseInfo[h2][hValue] = HouseInfo[h2][hValue] - ReturnPercent(GetHouseValue(h2), HOUSE_SOLD_AREA_VALUE);
                        	UpdateHouseText(h2);
                        	SaveHouseStats(h2);
						}
					}*/
					UpdateHouseText(h);
					SaveHouseStats(h);
					return 1;
				}
			}
			if(PlayerInfo[playerid][vLevel] == 0 && DegreeInfo[playerid][dReal] == 0)
    		{
				if(hcount >= MAX_OWNABLE_HOUSES)
				{
			    	new str[150];
   					format(str,sizeof(str), "You already own %d houses, you need to sell one of them before you can buy another.", MAX_OWNABLE_HOUSES);
                	SendClientMessage(playerid,WHITE,str);
					return 1;
				}
				if(strcmp(GetHouseOwner(LastHouseCP[playerid]), pNick(playerid), false) && strcmp(GetHouseOwner(h), "Nobody", false)) return SendClientMessage(playerid, RED, "This House Is Already Owned By Someone Else.");
				if(GetHouseValue(h) > GetPlayerCash(playerid))
				{
					SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
					return 1;
				}
				else
				{
			    	new hname[40];
			    	format(hname, sizeof(hname), "%s's house", pNick(playerid));
					GivePlayerCash(playerid, -GetHouseValue(h));
					new gowner[24];
					format(gowner, sizeof(gowner), "%s", GetName(playerid));
					HouseInfo[h][hOwner] = gowner;
					HouseInfo[h][hName] = hname;
					new str[150];
   					format(str,sizeof(str), "You have have successfully purchased this house for $%d.", GetHouseValue(h));
   					SendClientMessage(playerid,WHITE,str);
					/*Loop(h2, MAX_HOUSES)
					{
						if(IsHouseInRangeOfHouse(h, h2, VALUE_RANGE_BETWEEN_HOUSES) && h2 != h)
						{
					    	format(file2, sizeof(file2), HOUSE_FILE, h2);
							HouseInfo[h2][hValue] = HouseInfo[h][hValue] - ReturnPercent(GetHouseValue(h2), HOUSE_SOLD_AREA_VALUE);
                        	UpdateHouseText(h2);
                        	SaveHouseStats(h2);
						}
					}*/
					UpdateHouseText(h);
					SaveHouseStats(h);
					return 1;
				}
			}
		}
		return 1;
	}
	if(dialogid == HOUSE_MENU+14)//
	{
		if(response)
		{
		    if(strfind(inputtext, "%", true) != -1 || strfind(inputtext, "~", true) != -1) return SendClientMessage(playerid, RED, "Your house name cant contain some symbols.");
			if(strlen(inputtext) < 4 || strlen(inputtext) > 40) return SendClientMessage(playerid, RED, "Invalid House Name Lenght! (4-40) Characters.");
			else
			{
			    new hname[40];
			    format(hname, sizeof(hname), "%s", inputtext);
				HouseInfo[h][hName] = hname;
				new str[150];
				format(str,sizeof(str), "You have set your house name to %s.", inputtext);
				SendClientMessage(playerid, WHITE,str);
                UpdateHouseText(h);
                SaveHouseStats(h);
			}
		}
		return 1;
	}
    switch(dialogid)
    {
    	case GYM_DIALOG:
	    {
		    if(response)
		    {
                switch(listitem)
                {
			        case 0:
			        {
						if(GetPlayerCash(playerid) >= 50000)
						{
                            SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
				            FightStyleID{playerid} = 0;
				            SendClientMessage(playerid, YELLOW, "Your fight style will now be saved to Elbow Style. Cost: $50K");
				            GivePlayerCash(playerid, - 50000);
				        }
				        else
				        {
                            SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
				        }
			        }
			        case 1:
			        {
						if(GetPlayerCash(playerid) >= 100000)
						{
                            SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
				            FightStyleID{playerid} = 1;
				            SendClientMessage(playerid, YELLOW, "Your fight style will now be saved to Boxer Style. Cost: $100K");
				            GivePlayerCash(playerid, - 100000);
				        }
				        else
				        {
                            SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
				        }
			        }
			        case 2:
			        {
						if(GetPlayerCash(playerid) >= 50000)
						{
                            SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
				            FightStyleID{playerid} = 2;
				            SendClientMessage(playerid, YELLOW, "Your fight style will now be saved to Grab & Kick Style. Cost: $50K");
				            GivePlayerCash(playerid, - 50000);
				        }
				        else
				        {
                            SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
				        }
			        }
			        case 3:
			        {
						if(GetPlayerCash(playerid) >= 50000)
						{
                            SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
				            FightStyleID{playerid} = 3;
				            SendClientMessage(playerid, YELLOW, "Your fight style will now be saved to Knee & Head Style. Cost: $50K");
				            GivePlayerCash(playerid, - 50000);
				        }
				        else
				        {
                            SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
				        }
			        }
			        case 4:
			        {
						if(GetPlayerCash(playerid) >= 100000)
						{
                            SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				            FightStyleID{playerid} = 4;
				            SendClientMessage(playerid, YELLOW, "Your fight style will now be saved to Kung Fu Style. Cost: $100K");
				            GivePlayerCash(playerid, - 100000);
				        }
				        else
				        {
                            SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
				        }
			        }
			        case 5:
			        {
						SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				        FightStyleID{playerid} = 5;
				        SendClientMessage(playerid, YELLOW, "Your fight style will now be saved to Normal Style.");
			        }
				}
			}
			return 1;
		}
    case RULES_LIST:
    {
		if(!response)
		{
		    PlayerInfo[playerid][pKicks]++;
		    new string[150],pName[24];
		    GetPlayerName(playerid, (pName),sizeof(pName));
            GameTextForPlayer(playerid,"~r~Kicked...~n~kicked..~n~kicked.~n~kicked",9999,2);
            format(string, sizeof(string), "%s [%d] az server kick shod - DALIL: Ghabol nakardane ghavanin.", pName, playerid);
            SendMessageToAll(RED,string);
           	SendClientMessage(playerid, RED, string);
            KickPlayer(playerid);
            tedadekick++;
		    accssave();
		}
		return 1;
    }
    case ASK_DIALOG:
	{
		if(response)
        if(!strlen(inputtext)) return SendClientMessage(playerid, RED, "You need to submit a message to ask a question.");
        format(fstr, sizeof(fstr), "(( %s [%d] porsid: %s ))", GetName(playerid), playerid, inputtext);
		SendHelpMessage(LIGHTBLUE, fstr);
		SendClientMessage(playerid, RED, "Piam ersal shod, LOTFAN SABR KONID.");
		return 1;
	}
    case CONTROL_PANEL2:
	{
        if(response)
        if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, RED, "Your password can only contain 3-24 characters.");
        new buf[129];
    	WP_Hash(buf, sizeof (buf), inputtext);
//		bcrypt_hash(playerid, "OnPassswordHash", inputtext, BCRYPT_COST);// how the fuck I get buf :|
		PlayerInfo[playerid][pPass] = buf;
		new f[40];
		format(f, sizeof(f), USER_FILE, GetName(playerid));
		new INI:ufile = INI_Open(f);
        INI_WriteString(ufile, "pPass", PlayerInfo[playerid][pPass]);
		INI_Close(ufile);
		format(fstr, sizeof(fstr), "New password %s set.", inputtext);
		SendClientMessage(playerid, WHITE, fstr);
		
//	    if(ACNR_DEBUG == 1) { printf("DEBUG: inputtext: %s \n buf: %s \n pPass: %s", inputtext, buf, PlayerInfo[playerid][pPass]); }

		return 1;
	}
	case CONTROL_PANEL5:
	{
		if(response)
		if(!strlen(inputtext)) return SendClientMessage(playerid, RED, "You must enter in a report.") && ShowPlayerDialog(playerid, CONTROL_PANEL5, DIALOG_STYLE_INPUT, "{FFFFFF}Player Control Panel", "{FFFFFF}Please enter your report below:", "Select", "Cancel");
		format(fstr, sizeof(fstr), "You have reported %s [%d] to online admins, DONT DOUBLE REPORT.", GetName(reportee[playerid]), reportee[playerid]);
		SendClientMessage(playerid, RED, fstr);
      	SendClientMessage(playerid, ORANGE,"It is best to post screenshots of your report at just-samp.rozblog.com");
      	format(fstr2, sizeof(fstr2), "[REPORT]: %s [%d] reported %s [%d] for: %s", GetName(playerid), playerid, GetName(reportee[playerid]), reportee[playerid], inputtext);
      	SendHelpMessage(LIGHTBLUE, fstr2);
		return 1;
    }
    case CONTROL_PANEL4:
	{
		if(response)
        if(!IsNumeric(inputtext)) return SendClientMessage(playerid, RED, "Characters detected, numbers only.");
        if(!IsPlayerConnected(strval(inputtext))) return SendClientMessage(playerid, RED, "Player not found.");
	    reportee[playerid] = strval(inputtext);
		ShowPlayerDialog(playerid, CONTROL_PANEL5, DIALOG_STYLE_INPUT, "{FFFFFF}Player Control Panel", "{FFFFFF}Please enter your report below:", "Select", "Cancel");
		return 1;
	}
    case CONTROL_PANEL3:
	{
		if(response)
        if(!IsNumeric(inputtext)) return SendClientMessage(playerid, RED, "Characters detected, numbers only.");
        if(!IsPlayerConnected(strval(inputtext))) return SendClientMessage(playerid, RED, "Player not found.");

		new sciss[5], lock[5], help[5], hhelp[5];

		if(PlayerInfo[strval(inputtext)][pScissors] == 1)
		{
			format(sciss, sizeof(sciss), "Yes");
		}
		else if(PlayerInfo[strval(inputtext)][pScissors] == 0)
		{
			format(sciss, sizeof(sciss), "No");
		}

		if(PlayerInfo[strval(inputtext)][vLock] == 1)
		{
			format(lock, sizeof(lock), "Yes");
		}
		else if(PlayerInfo[strval(inputtext)][vLock] == 0)
		{
			format(lock, sizeof(lock), "No");
		}

		if(PlayerInfo[strval(inputtext)][Helper] == 1)
		{
			format(help, sizeof(help), "Yes");
		}
		else if(PlayerInfo[strval(inputtext)][Helper] == 0)
		{
			format(help, sizeof(help), "No");
		}

		if(PlayerInfo[strval(inputtext)][hHelper] == 1)
		{
			format(hhelp, sizeof(hhelp), "Yes");
		}
		else if(PlayerInfo[strval(inputtext)][hHelper] == 0)
		{
			format(hhelp, sizeof(hhelp), "No");
		}

		new line1[200], line2[200], line3[200], line4[200];
        format(line1, sizeof(line1), "[Name]: %s [%d] [Score]: %d [Holding]: $%d [Kills]: %d [Deaths]: %d [Holdups]: %d [Crimes]: %d", GetName(strval(inputtext)), strval(inputtext), GetPlayerScore(strval(inputtext)), GetPlayerCash(strval(inputtext)), PlayerInfo[strval(inputtext)][pKills], PlayerInfo[strval(inputtext)][pDeaths], PlayerInfo[strval(inputtext)][pHoldups], PlayerInfo[strval(inputtext)][pCrimes]);
        SendClientMessage(playerid, LIGHTBLUE, line1);
		format(line2, sizeof(line2), "[Times Fined]: %d [Times Arrested]: %d [Takedowns]: %d [Issues]: %d [Joins]: %d [Warns]: %d [Kicks]: %d", PlayerInfo[strval(inputtext)][pFined], PlayerInfo[strval(inputtext)][pArrests], PlayerInfo[strval(inputtext)][pTakedowns], PlayerInfo[strval(inputtext)][pTickets], PlayerInfo[strval(inputtext)][pJoins], PlayerInfo[strval(inputtext)][pWarns], PlayerInfo[strval(inputtext)][pKicks]);
        SendClientMessage(playerid, LIGHTBLUE, line2);
		format(line3, sizeof(line3), "[Rope]: %d [Scissors]: %s [Cans]: %d [Medikits]: %d [vLock]: %s [Admin]: %d [VIP]: %d [Helper]: %s [Head Helper]: %s", PlayerInfo[strval(inputtext)][pRope], sciss, PlayerInfo[strval(inputtext)][pPaintCan], PlayerInfo[strval(inputtext)][pKits], lock, PlayerInfo[strval(inputtext)][aLevel], PlayerInfo[strval(inputtext)][vLevel], help, hhelp);
        SendClientMessage(playerid, LIGHTBLUE, line3);
		format(line4, sizeof(line4), "[Materials]: %d [Credit]: $%d [Debt Owing]: $%d [Vehicles]: %d [Houses]: %d [Businesses]: %d", PlayerInfo[strval(inputtext)][pMaterials], BankInfo[strval(inputtext)][Credit], BankInfo[strval(inputtext)][Debt], GetPlayerVehicles{strval(inputtext)}, GetOwnedHouses(strval(inputtext)), GetPlayerOwnedBusinesses(strval(inputtext)));
		SendClientMessage(playerid, LIGHTBLUE, line4);
		return 1;
	}
	case CONTROL_PANEL6:
	{
        if(response)
        {
            new buf[129];
    		WP_Hash(buf, sizeof (buf), inputtext);
        	if(strcmp(buf, PlayerInfo[playerid][pPass], false) != 0) return SendClientMessage(playerid, RED, "Invalid password.");
			ShowPlayerDialog(playerid, CONTROL_PANEL2, DIALOG_STYLE_INPUT, "{FFFFFF}Player Control Panel", "{FFFFFF}Please enter your new password below:", "Select", "Cancel");
			
//			if(ACNR_DEBUG == 1) { printf("DEBUG: inputtext: %s \n buf: %s \n pPass: %s", inputtext, buf, PlayerInfo[playerid][pPass]); }

		}
		return 1;
	}
	case CONTROL_PANEL:
	{
        if(response)
        switch(listitem)
        {
			case 0:
			{
		    	ShowPlayerDialog(playerid, CONTROL_PANEL6, DIALOG_STYLE_INPUT, "{FFFFFF}Player Control Panel", "{FFFFFF}Please verify your current password below:", "Select", "Cancel");
			}
			case 1:
			{
				new sciss[5], lock[5], help[5], hhelp[5];

				if(PlayerInfo[playerid][pScissors] == 1)
				{
					format(sciss, sizeof(sciss), "Yes");
				}
				else if(PlayerInfo[playerid][pScissors] == 0)
				{
					format(sciss, sizeof(sciss), "No");
				}

				if(PlayerInfo[playerid][vLock] == 1)
				{
					format(lock, sizeof(lock), "Yes");
				}
				else if(PlayerInfo[playerid][vLock] == 0)
				{
					format(lock, sizeof(lock), "No");
				}

				if(PlayerInfo[playerid][Helper] == 1)
				{
					format(help, sizeof(help), "Yes");
				}
				else if(PlayerInfo[playerid][Helper] == 0)
				{
					format(help, sizeof(help), "No");
				}

				if(PlayerInfo[playerid][hHelper] == 1)
				{
					format(hhelp, sizeof(hhelp), "Yes");
				}
				else if(PlayerInfo[playerid][hHelper] == 0)
				{
					format(hhelp, sizeof(hhelp), "No");
				}

	    		new line1[200], line2[200], line3[200], line4[200];
        		format(line1, sizeof(line1), "[Name]: %s [%d] [Score]: %d [Holding]: $%d [Kills]: %d [Deaths]: %d [Holdups]: %d [Crimes]: %d", GetName(playerid), playerid, GetPlayerScore(playerid), GetPlayerCash(playerid), PlayerInfo[playerid][pKills], PlayerInfo[playerid][pDeaths], PlayerInfo[playerid][pHoldups], PlayerInfo[playerid][pCrimes]);
                SendClientMessage(playerid, LIGHTBLUE, line1);
				format(line2, sizeof(line2), "[Times Fined]: %d [Times Arrested]: %d [Takedowns]: %d [Issues]: %d [Joins]: %d [Warns]: %d [Kicks]: %d", PlayerInfo[playerid][pFined], PlayerInfo[playerid][pArrests], PlayerInfo[playerid][pTakedowns], PlayerInfo[playerid][pTickets], PlayerInfo[playerid][pJoins], PlayerInfo[playerid][pWarns], PlayerInfo[playerid][pKicks]);
                SendClientMessage(playerid, LIGHTBLUE, line2);
				format(line3, sizeof(line3), "[Rope]: %d [Scissors]: %s [Cans]: %d [Medikits]: %d [vLock]: %s [Admin]: %d [VIP]: %d [Helper]: %s [Head Helper]: %s", PlayerInfo[playerid][pRope], sciss, PlayerInfo[playerid][pPaintCan], PlayerInfo[playerid][pKits], lock, PlayerInfo[playerid][aLevel], PlayerInfo[playerid][vLevel], help, hhelp);
                SendClientMessage(playerid, LIGHTBLUE, line3);
				format(line4, sizeof(line4), "[Materials]: %d [Credit]: $%d [Debt Owing]: $%d [Vehicles]: %d [Houses]: %d [Businesses]: %d", PlayerInfo[playerid][pMaterials], BankInfo[playerid][Credit], BankInfo[playerid][Debt], GetPlayerVehicles{playerid}, GetOwnedHouses(playerid), GetPlayerOwnedBusinesses(playerid));
				SendClientMessage(playerid, LIGHTBLUE, line4);
			}
			case 2:
			{
		    	ShowPlayerDialog(playerid, CONTROL_PANEL3, DIALOG_STYLE_INPUT, "{FFFFFF}Player Control Panel", "{FFFFFF}Please enter the id of the player you wish to review stats on:", "Select", "Cancel");
			}
			case 3:
			{
		    	ShowPlayerDialog(playerid, CONTROL_PANEL4, DIALOG_STYLE_INPUT, "{FFFFFF}Player Control Panel", "{FFFFFF}Please enter the id of the player you wish to report:", "Select", "Cancel");
			}
			case 4:
			{
				if(GetTeam{playerid} == CLASS_COPS)
				{
					ShowPlayerDialog(playerid,COP_MSG,DIALOG_STYLE_MSGBOX ,"{FFFFFF}Police",
"{FFFFFF}Your a police officer, your job is to arrest(/ar) and takedown\nwanted criminals(/pc) and ticket(/tk) suspect civilians(/pc).\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail out zendani ha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [Cop Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye cmdlist server. az /askadmin baraye adminhelp\nya az /n bara soal kardan az helperha estefade kon.", "Ok", "");
				}
				else if(GetTeam{playerid} == CLASS_CIA)
				{
			        ShowPlayerDialog(playerid, CIA_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF} CIA",
"{FFFFFF}Your a undercover cia agent, kar shoma kashf va kam kardan\nbishtare wanted criminals(/pc) ba estefade az tarfand haye maherane ast.\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail out zendani ha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [Cop Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye a list cmd haye server. az /askadmin baraye admin help\nya az /n baraye komak gereftan az helper ha estefade kon.", "Ok", "");
				}
				else if(GetTeam{playerid} == CLASS_FBI)
				{
			        ShowPlayerDialog(playerid,FBI_MSG,DIALOG_STYLE_MSGBOX ,"{FFFFFF}FBI",
"{FFFFFF}Your a undercover fbi agent, kar shoma kashf va kam kardan\nbishtare wanted criminals(/pc) ba estefade az tarfand haye maherane ast.\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail out zendani ha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [Cop Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye cmdlist server.az /askadmin baraye adminhelp\nya az /n bara komak gereftan az helperha estefade kon.","Ok","");
				}
			    else if(GetTeam{playerid} == CLASS_CIV)
				{
			        ShowPlayerDialog(playerid, CIV_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF}Civilian",
"{FFFFFF}Your a civilian(robber), your job is to rob players, casinos,\nbanks, stores and businesses while trying to avoid arrest from\nlaw enforcement. If you get arrested or taken down you are then\nsent to jail for 3-4 mins, which you can either /escape or get a\nfriend to /break or /bail you out.\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye a list cmd haye server. az /askadmin baraye admin help\nya az /n baraye komak gereftan az helper ha estefade konid.", "Ok", "");
				}
			    else if(GetTeam{playerid} == CLASS_MEDIC)
				{
			        ShowPlayerDialog(playerid, MEDIC_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF}Medic",
"{FFFFFF}Your a medic, your job is to assist members of ACNR with\ninjuries using /medic, they can also /callmedic to call for help.\nUse /m [msg] for [Medic Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye a list cmd haye server. az /askadmin baraye admin help\nya az /n baraye komak gereftan az helper ha estefade konid.", "Ok", "");
				}
			    else if(GetTeam{playerid} == CLASS_ARMY)
				{
			        ShowPlayerDialog(playerid, ARMY_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF} Army",
"{FFFFFF}Your a army soldier, your job is to focus on and takedown most\nwanted criminals(/pc) at all costs using army supplied vehicles.\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail out zendani ha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [Cop Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye cmdlist server. az /askadmin baraye adminhelp\nya az /n baraye komak gereftan az helperha estefade kon.","Ok","");
				}
			}
			case 5:
			{
				if(GetTeam{playerid} == CLASS_COPS)
   				{
        				ShowPlayerDialog(playerid, CMDS_LIST1, DIALOG_STYLE_MSGBOX ,
				"{FFFFFF}Cop Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n\n/ar /tk /cuff(/cf) /uncuff /c /taze(/tz) /(acc/dec)bribe /bail /shield /raid /pickup ", "Ok", "");
				}
    			else if(GetTeam{playerid} == CLASS_CIA)
   				{
  					ShowPlayerDialog(playerid, CMDS_LIST2, DIALOG_STYLE_MSGBOX ,
				"{FFFFFF}CIA Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n\n/ar /tk /cuff(/cf) /uncuff /c /taze(/tz) /(acc/dec)bribe /bail /shield /raid /pickup ", "Ok", "");
    			}
    			else if(GetTeam{playerid} == CLASS_ARMY)
   				{
  					ShowPlayerDialog(playerid, CMDS_LIST3, DIALOG_STYLE_MSGBOX ,
				"{FFFFFF}Army Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n\n/ar /tk /cuff(/cf) /uncuff /c /taze(/tz) /(acc/dec)bribe /bail /shield /raid /pickup ", "Ok", "");
    			}
    			else if(GetTeam{playerid} == CLASS_FBI)
   				{
  					ShowPlayerDialog(playerid, CMDS_LIST6, DIALOG_STYLE_MSGBOX ,
				"{FFFFFF}FBI Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n\n/ar /tk /cuff(/cf) /uncuff /c /taze(/tz) /(acc/dec)bribe /bail /shield /raid /pickup ", "Ok", "");
    			}
    			else if(GetTeam{playerid} == CLASS_CIV)
   				{
    				ShowPlayerDialog(playerid, CMDS_LIST4, DIALOG_STYLE_MSGBOX ,
				"{FFFFFF}Civilian Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n\n/roblist /esc /(un)tie /(cancel)hit /hits /(break)out/cuffs /bribe /mask /blowbomb /breakin", "Ok", "");
   				}
    			else if(GetTeam{playerid} == CLASS_MEDIC)
   				{
    				ShowPlayerDialog(playerid, CMDS_LIST5, DIALOG_STYLE_MSGBOX ,
				"{FFFFFF}Medic Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n/medic /m", "Ok", "");
   				}
			}
			case 6:
			{
				ShowPlayerDialog(playerid, RULES_LIST, DIALOG_STYLE_MSGBOX ,
	"{FF0000}Ghavanin Server",
	"{FF0000}1: LOTFAN az HACKS/MODS/CHEATS/BUG/ABUSE estefade nakonid dargheyere in sorat ban bedon unban\n2: LOTFAN DM,HK,PARK,CAMP ya gharar dadane hit haye alaki nakonid!\n3: LOTFAN adab ra reayat konid va tohin va biehterami nakonid!\n4: LOTFAN az spam kardan shadidan khod dari konid!\n5: LOTFAN /q ya pause baraye jelogiri az harchizi nakonid!\n6: LOTFAN ba police ha ya dozd ha hamkari nakonid!\n7: LOTFAN tabligh nakonid va baraye chizi mesle pool ya... naporsid!",
	"Accept", "Ban");
			}
			case 7:
			{
			    ShowPlayerDialog(playerid, FAQS_DIALOG, DIALOG_STYLE_LIST, "{FFFFFF}ACNR - FAQS - Questions", "{FFFFFF}Chegone Madrak bekharam?\nChetor mitonam class cia/fbi/army/medic ra entekhab konam?\nChetor pool dar biaram?\nChetor mashin bekharam?\nChetor house/business bekharam?\nChetori VIP besham?\nHow much are guns/mats worth?\nHow to apply for ACNR admin/staff positions?\nElvis kie?\nChetori Material/Ghate aslahe bekharam?", "Select", "Cancel");
			}
		}
	}
	case BANK_MENU:
	{
        if(response)
        switch(listitem)
        {
		case 0:
		{
		    format(fstr, sizeof(fstr), "{FFFFFF}Meghdar pooli ke mikhahid bardasht konid ra vared konid:\nMeghdar pool ghabel bardasht: $%d", BankInfo[playerid][Balance]);
		    ShowPlayerDialog(playerid, WITHDRAW_MENU, DIALOG_STYLE_INPUT, "{FFFFFF} Bank - Withdraw", fstr, "Select", "Cancel");
		}
		case 1:
		{
		    format(fstr, sizeof(fstr), "{FFFFFF}Meghdar poli ke mikhahid variz konid vared konid:\nPool dar jib: $%d", GetPlayerCash(playerid));
		    ShowPlayerDialog(playerid, DEPOSIT_MENU, DIALOG_STYLE_INPUT, "{FFFFFF} Bank - Deposit", fstr, "Select", "Cancel");
		}
		case 2:
		{
		    format(fstr, sizeof(fstr), "{FFFFFF}Pool dar bank: $%d\nPool dar jib: $%d", BankInfo[playerid][Balance], GetPlayerCash(playerid));
		    ShowPlayerDialog(playerid, WITHDRAW_MENU + 2, DIALOG_STYLE_MSGBOX, "{FFFFFF} Bank - Balance", fstr, "Select", "Cancel");
		    BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
		    if(PlayerInfo[playerid][vLevel] < 1)
		    {
		    BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
		    GivePlayerCash(playerid, - 4);
		    SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
		    }
		    SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
		}
		case 3:
		{
		    ShowPlayerDialog(playerid, TRANSFER_MENU, DIALOG_STYLE_INPUT, "{FFFFFF} Bank - Transfer", "{FFFFFF}Lotfan id kasi ke mikhahid pool be hesabash berizid vared konid:", "Select", "Cancel");
		}
		case 4:
		{
		    ShowPlayerDialog(playerid, CREDIT_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Credit", "{FFFFFF}Credit Balance\nWithdraw Credit\nPay Debt\nLoans", "Select", "Cancel");
		}
		case 5:
		{
			format(fstr, sizeof(fstr), "{FFFFFF}Balance: $%d\nCredit: $%d\nDebt Owing: $%d\nFees Paid: $%d\nTransactions: %d", BankInfo[playerid][Balance], BankInfo[playerid][Credit], BankInfo[playerid][Debt], BankInfo[playerid][Fees], BankInfo[playerid][Transactions]);
			ShowPlayerDialog(playerid, STATEMENT_MENU, DIALOG_STYLE_MSGBOX, "{FFFFFF} Bank - Statement", fstr, "Select", "Cancel");
 			BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
 			if(PlayerInfo[playerid][vLevel] < 1)
 			{
 			BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  			GivePlayerCash(playerid, - 4);
   			SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   			}
   			SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
		}
	}
	}
	case CREDIT_MENU:
	{
		if(response)
	    switch(listitem)
        {
        	case 0:
        	{
		    	format(fstr, sizeof(fstr), "{FFFFFF}Available credit: $%d\nDebt Owing: $%d\nHolding: $%d", BankInfo[playerid][Credit], BankInfo[playerid][Debt], GetPlayerCash(playerid));
		    	ShowPlayerDialog(playerid, CREDIT_MENU, DIALOG_STYLE_MSGBOX, "{FFFFFF} Bank - Credit", fstr, "Select", "Cancel");
		    	BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
				if(PlayerInfo[playerid][vLevel] < 1)
 			    {
 			    BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  			    GivePlayerCash(playerid, - 4);
   			    SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   			    }
		    	SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
        	}
			case 1:
        	{
		    	format(fstr, sizeof(fstr), "{FFFFFF}Please enter the amount you wish to withdraw:\nAvailable credit: $%d", BankInfo[playerid][Credit]);
		    	ShowPlayerDialog(playerid, CREDIT_MENU2, DIALOG_STYLE_INPUT, "{FFFFFF} Bank - Credit", fstr, "Select", "Cancel");
        	}
        	case 2:
        	{
				format(fstr, sizeof(fstr), "{FFFFFF}Please enter the amount you wish to direct debit:\nAvailable funds: $%d", BankInfo[playerid][Balance]);
		    	ShowPlayerDialog(playerid, CREDIT_MENU3, DIALOG_STYLE_INPUT, "{FFFFFF} Bank - Credit", fstr, "Select", "Cancel");
        	}
        	case 3:
        	{
        	    ShowPlayerDialog(playerid, CREDIT_MENU4, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Credit", "{FFFFFF}Budget Loan[$1M]\nEconomy Loan[$3M]\nInvestment Loan[$5M]\nWealth Loan[$10M]", "Select", "Cancel");
        	}
        }
	}
	case CREDIT_MENU4:
	{
		if(response)
	    switch(listitem)
        {
        	case 0:
			{
			    if(BankInfo[playerid][Debt] > 0) return SendClientMessage(playerid, RED, "[CREDIT-CHECK]: Sorry, Shoma bayad aval vam ghabli khod ra kamel bepar dazid.");
			    if(CalculateWealth(playerid) < 1000000/4/*25%*/) return SendClientMessage(playerid, RED, "[CREDIT-CHECK]: Sorry, Shoma bayad $250K pool dar bank dashte bashid ta betonid vam begirid.");
			    BankInfo[playerid][Credit] = BankInfo[playerid][Credit] + 1000000;//Budget loan
			    BankInfo[playerid][Debt] = BankInfo[playerid][Debt] + 1000000 + 1000000/4;//25%
		    	BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
				if(PlayerInfo[playerid][vLevel] < 1)
 			    {
 			    BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  			    GivePlayerCash(playerid, - 4);
   			    SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   			    }
			    SendClientMessage(playerid, WHITE, "THANKYOU: Budget Loan purchased, thank you for banking with  Bank.");
			}
			case 1:
			{
			    if(BankInfo[playerid][Debt] > 0) return SendClientMessage(playerid, RED, "[CREDIT-CHECK]: Sorry, Shoma bayad aval vam ghabli khod ra kamel bepar dazid.");
			    if(CalculateWealth(playerid) < 3000000/4/*25%*/) return SendClientMessage(playerid, RED, "[CREDIT-CHECK]: Sorry, Shoma bayad $750K pool dar bank dashte bashid ta betonid vam begirid.");
			    BankInfo[playerid][Credit] = BankInfo[playerid][Credit] + 3000000;//Economy loan
			    BankInfo[playerid][Debt] = BankInfo[playerid][Debt] + 3000000 + 3000000/4;//25%
		    	BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
				if(PlayerInfo[playerid][vLevel] < 1)
 			    {
 			    BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  			    GivePlayerCash(playerid, - 4);
   			    SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   			    }
			    SendClientMessage(playerid, WHITE, "THANKYOU: Economy Loan purchased, thank you for banking with  Bank.");
			}
			case 2:
			{
			    if(BankInfo[playerid][Debt] > 0) return SendClientMessage(playerid, RED, "[CREDIT-CHECK]: Sorry, Shoma bayad aval vam ghabli khod ra kamel bepar dazid.");
			    if(CalculateWealth(playerid) < 5000000/4/*25%*/) return SendClientMessage(playerid, RED, "[CREDIT-CHECK]: Sorry, Shoma bayad $1.25M pool dar bank dashte bashid ta betonid vam begirid.");
			    BankInfo[playerid][Credit] = BankInfo[playerid][Credit] + 5000000;//Investment loan
			    BankInfo[playerid][Debt] = BankInfo[playerid][Debt] + 5000000 + 5000000/4;//25%
		    	BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
				if(PlayerInfo[playerid][vLevel] < 1)
 			    {
 			    BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  			    GivePlayerCash(playerid, - 4);
   			    SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   			    }
			    SendClientMessage(playerid, WHITE, "THANKYOU: Investment Loan purchased, thank you for banking with  Bank.");
			}
			case 3:
			{
			    if(BankInfo[playerid][Debt] > 0) return SendClientMessage(playerid, RED, "[CREDIT-CHECK]: Sorry, Shoma bayad aval vam ghabli khod ra kamel bepar dazid.");
			    if(CalculateWealth(playerid) < 10000000/4/*25%*/) return SendClientMessage(playerid, RED, "[CREDIT-CHECK]: Sorry, Shoma bayad $2.5M pool dar bank dashte bashid ta betonid vam begirid.");
			    BankInfo[playerid][Credit] = BankInfo[playerid][Credit] + 10000000;//Wealth loan
			    BankInfo[playerid][Debt] = BankInfo[playerid][Debt] + 10000000 + 10000000/4;//25%
		    	BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
				if(PlayerInfo[playerid][vLevel] < 1)
 			    {
 			    BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  			    GivePlayerCash(playerid, - 4);
   			    SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   			    }
			    SendClientMessage(playerid, WHITE, "THANKYOU: Wealth Loan purchased, thank you for banking with  Bank.");
			}
		}
	}
	case CREDIT_MENU3:
	{
        if(response)
        if(!IsNumeric(inputtext)) return SendClientMessage(playerid, RED, "Characters detected, numbers only.");
		if(!strlen(inputtext)) return SendClientMessage(playerid, RED, "You need to enter an amount to direct debit."), ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		if(strval(inputtext) > BankInfo[playerid][Balance])
		{
		    SendClientMessage(playerid, RED, "POOL KAFI NADARI!"), ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
			return 1;
		}
		if(strval(inputtext) > BankInfo[playerid][Debt])
		{
			format(fstr, sizeof(fstr), "You only owe $%d in debt, you cannot pay anymore.", BankInfo[playerid][Debt]);
			SendClientMessage(playerid, RED, fstr);
			return 1;
		}
		if(strval(inputtext) > 10000000) return SendClientMessage(playerid, RED, "You can only direct debit $10M at a time");
		BankInfo[playerid][Balance] = BankInfo[playerid][Balance] - strval(inputtext);
		BankInfo[playerid][Debt] = BankInfo[playerid][Debt] - strval(inputtext);
		format(fstr, sizeof(fstr), "You have direct debited $%d into your debt account. New debt owing: $%d", strval(inputtext), BankInfo[playerid][Debt]);
		SendClientMessage(playerid, YELLOW, fstr);
		BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
		if(PlayerInfo[playerid][vLevel] < 1)
        {
        BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
        GivePlayerCash(playerid, - 4);
        SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
        }
		SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
		ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		new astring[100];
		format(astring, sizeof(astring), "%s [%d] has direct debited $%d into their debt account", GetName(playerid), playerid, strval(inputtext));
		SendAdminMessage(GREY, astring);
	}
	case CREDIT_MENU2:
	{
        if(response)
        if(!IsNumeric(inputtext)) return SendClientMessage(playerid, RED, "Characters detected, numbers only.");
		if(!strlen(inputtext)) return SendClientMessage(playerid, RED, "You need to enter an amount to withdraw."), ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		if(strval(inputtext) > BankInfo[playerid][Credit])
		{
		    SendClientMessage(playerid, RED, "POOL KAFI NADARI!"), ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
			return 1;
		}
		if(strval(inputtext) > 10000000) return SendClientMessage(playerid, RED, "You can only withdraw $10M at a time");
		BankInfo[playerid][Credit] = BankInfo[playerid][Credit] - strval(inputtext);
		GivePlayerCash(playerid, strval(inputtext));
		format(fstr, sizeof(fstr), "You have withdrawn $%d from your credit account. New credit: $%d", strval(inputtext), BankInfo[playerid][Credit]);
		SendClientMessage(playerid, YELLOW, fstr);
		BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
		if(PlayerInfo[playerid][vLevel] < 1)
        {
 		BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  		GivePlayerCash(playerid, - 4);
   		SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   		}
		SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
		ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		new astring[100];
		format(astring, sizeof(astring), "%s [%d] has withdrawn $%d from their credit account", GetName(playerid), playerid, strval(inputtext));
		SendAdminMessage(GREY, astring);
	}
	case TRANSFER_MENU:
	{
        if(response)
        if(!IsNumeric(inputtext)) return SendClientMessage(playerid, RED, "Characters detected, numbers only.");
		if(!strlen(inputtext)) return SendClientMessage(playerid, RED, "You need to enter a player id."), ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		if(!IsPlayerConnected(playerid)) return SendClientMessage(playerid, RED, "Player not found.");
		transferid[playerid] = strval(inputtext);
		ShowPlayerDialog(playerid, TRANSFER_MENU2, DIALOG_STYLE_INPUT, "{FFFFFF} Bank - Transfer", "{FFFFFF}Please enter the amount you wish to transfer:", "Select", "Cancel");
	}
	case TRANSFER_MENU2:
	{
        if(response)
        if(!IsNumeric(inputtext)) return SendClientMessage(playerid, RED, "Characters detected, numbers only.");
		if(!strlen(inputtext)) return SendClientMessage(playerid, RED, "You need to enter an amount to transfer."), ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		if(strval(inputtext) > BankInfo[playerid][Balance])
		{
		    SendClientMessage(playerid, RED, "POOL KAFI NADARI!"), ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
			return 1;
		}
		if(strval(inputtext) > 10000000) return SendClientMessage(playerid, RED, "You can only transfer $10M at a time");
		BankInfo[playerid][Balance] = BankInfo[playerid][Balance] - strval(inputtext);
		BankInfo[transferid[playerid]][Balance] = BankInfo[transferid[playerid]][Balance] + strval(inputtext);
		format(fstr, sizeof(fstr), "You have transfered $%d into %s bank account. New balance: $%d", strval(inputtext), GetName(transferid[playerid]), BankInfo[playerid][Balance]);
		SendClientMessage(playerid, YELLOW, fstr);
		BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
		if(PlayerInfo[playerid][vLevel] < 1)
        {
 		BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  		GivePlayerCash(playerid, - 4);
   		SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   		}
		SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
		ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		new astring[100];
		format(astring, sizeof(astring), "%s [%d] has transfered $%d into %s bank account.", GetName(playerid), playerid, strval(inputtext), GetName(transferid[playerid]));
		SendAdminMessage(GREY, astring);
	}
	case WITHDRAW_MENU:
	{
        if(response)
        if(!IsNumeric(inputtext)) return SendClientMessage(playerid, RED, "Characters detected, numbers only.");
		if(!strlen(inputtext)) return SendClientMessage(playerid, RED, "You need to enter an amount to withdraw."), ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		if(strval(inputtext) > BankInfo[playerid][Balance])
		{
		    SendClientMessage(playerid, RED, "POOL KAFI NADARI!"), ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
			return 1;
		}
		if(strval(inputtext) > 10000000) return SendClientMessage(playerid, RED, "You can only withdraw $10M at a time");
		BankInfo[playerid][Balance] = BankInfo[playerid][Balance] - strval(inputtext);
		GivePlayerCash(playerid, strval(inputtext));
		format(fstr, sizeof(fstr), "You have withdrawn $%d from your bank account. New balance: $%d", strval(inputtext), BankInfo[playerid][Balance]);
		SendClientMessage(playerid, YELLOW, fstr);
		BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
		if(PlayerInfo[playerid][vLevel] < 1)
        {
 		BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  		GivePlayerCash(playerid, - 4);
   		SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   		}
		SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
		ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		new astring[100];
		format(astring, sizeof(astring), "%s [%d] has withdrawn $%d from their bank account", GetName(playerid), playerid, strval(inputtext));
		SendAdminMessage(GREY, astring);
	}
	case DEPOSIT_MENU:
	{
        if(response)
        if(!IsNumeric(inputtext)) return SendClientMessage(playerid, RED, "Characters detected, numbers only.");
		if(!strlen(inputtext)) return SendClientMessage(playerid, RED, "You need to enter an amount to deposit."), ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		if(strval(inputtext) > GetPlayerCash(playerid))
		{
		    SendClientMessage(playerid, RED, "POOL KAFI NADARI!"), ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
			return 1;
		}
		if(strval(inputtext) > 10000000) return SendClientMessage(playerid, RED, "You can only deposit $10M at a time");
		BankInfo[playerid][Balance] = BankInfo[playerid][Balance] + strval(inputtext);
		GivePlayerCash(playerid, - strval(inputtext));
		format(fstr, sizeof(fstr), "You have deposited $%d into your bank account. New balance: $%d", strval(inputtext), BankInfo[playerid][Balance]);
		SendClientMessage(playerid, YELLOW, fstr);
		BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
		if(PlayerInfo[playerid][vLevel] < 1)
        {
 		BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  		GivePlayerCash(playerid, - 4);
   		SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   		}
		SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
		ShowPlayerDialog(playerid, BANK_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Bank - Main Menu", "{FFFFFF}Withdraw\nDeposit\nBalance\nTransfer\nCredit\nStatement", "Select", "Cancel");
		new astring[100];
		format(astring, sizeof(astring), "%s [%d] has deposited $%d into their bank account", GetName(playerid), playerid, strval(inputtext));
		SendAdminMessage(GREY, astring);
	}
    case GLOBAL_AMMU_MENU:
    {
		if(response)
	    switch(listitem)
        {
        	case 0:
			{
            	ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Hand Guns", "{FFFFFF}Item: 9mm - Price: $200\nItem: Silenced 9mm - Price: $300\nItem: Desert Eagle - Price: $500", "Select", "Cancel");
        	}
        	case 1:
			{
            	ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Shotguns", "{FFFFFF}Item: Shotgun - Price: $600\nItem: Sawnoff Shotgun - Price: $800\nItem: Combat Shotgun - Price: $1000", "Select", "Cancel");
			}
        	case 2:
			{
		    	ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Sub Machine Guns", "{FFFFFF}Item: Tec 9 - Price: $600\nItem: Micro SMG - Price: $800 \nItem: MP5 - Price: $1000", "Select", "Cancel");
        	}
			case 3:
			{
            	ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Assault Rifles", "{FFFFFF}Item: AK47 - Price: $800\nItem: M4 - Price: $1000", "Select", "Cancel");
        	}
        	case 4:
			{
            	ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Body Armour", "{FFFFFF}Item: Body Armour - Price: $500", "Select", "Cancel");
        	}
        }
	}
    case GLOBAL_AMMU_MENU1:
    {
		if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 200) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            GivePlayerCash(playerid, -200);
            GivePlayerWeapon(playerid,22,100);
            SendClientMessage(playerid, YELLOW, "You have purchased a 9mm with 100 ammo for $200.");
            ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
            ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
		case 1:
		{
            if(GetPlayerCash(playerid) < 300) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -300);
	        GivePlayerWeapon(playerid,23,100);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Silenced 9mm with 100 ammo for $300.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
	        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
		case 2:
		{
            if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -500);
	        GivePlayerWeapon(playerid,24,100);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Desert Eagle with 100 ammo for $500.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
	        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        }
    }
    case GLOBAL_AMMU_MENU2:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 600) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -600);
	        GivePlayerWeapon(playerid,25,100);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Shotgun with 100 ammo for $600.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
	        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        case 1:
		{
            if(GetPlayerCash(playerid) < 800) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -800);
	        GivePlayerWeapon(playerid,26,100);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Sawn Off Shotgun with 100 ammo for $800.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
	        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        case 2:
		{
            if(GetPlayerCash(playerid) < 1000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -1000);
	        GivePlayerWeapon(playerid,27,100);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Combat Shotgun with 100 ammo for $1000");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
	        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        }
    }
    case GLOBAL_AMMU_MENU3:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 600) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -600);
	        GivePlayerWeapon(playerid,32,200);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Tec 9 with 200 ammo for $600.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
            ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        case 1:
		{
            if(GetPlayerCash(playerid) < 800) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -800);
	        GivePlayerWeapon(playerid,28,200);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Micro SMG with 200 ammo for $800.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
	        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        case 2:
		{
            if(GetPlayerCash(playerid) < 1000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -1000);
	        GivePlayerWeapon(playerid,29,200);
	        SendClientMessage(playerid, YELLOW, "You have purchased a MP5 with 200 ammo for $1000.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
	        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        }
    }
    case GLOBAL_AMMU_MENU4:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 800) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -800);
	        GivePlayerWeapon(playerid,30,200);
	        SendClientMessage(playerid, YELLOW, "You have purchased a AK47 with 200 ammo for $800.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
	        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        case 1:
        {
            if(GetPlayerCash(playerid) < 1000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -1000);
	        GivePlayerWeapon(playerid,31,200);
	        SendClientMessage(playerid, YELLOW, "You have purchased a M4 with 200 ammo for $1000.");
	        ApplyAnimation(playerid,"DEALER","DEALER_DEAL ",4.1,0,1,1,1,1);
	        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
		}
		}
    }
    case GLOBAL_AMMU_MENU5:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -500);
			SetPlayerArmour(playerid, 100);
	        SendClientMessage(playerid, YELLOW, "You have purchased Body Armour for $500.");
	        ShowPlayerDialog(playerid, GLOBAL_AMMU_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Gun Menu", "{FFFFFF}Handguns\nShotguns\nSub Machine Guns\nAssault Rifles\nBody Armour", "Select", "Cancel");
        }
        }
    }
    case GLOBAL_SHOP_MENU:
    {
		if(response)
	    switch(listitem)
        {
        case 0:
		{
            ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Food/Drink Menu", "{FFFFFF}Item: Sprunk and Chips - Price: $10\nItem: Sprunk and Hotdog - Price: $20", "Select", "Cancel");
        }
        case 1:
		{
            ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Menu Abzarha", "{FFFFFF}Item: Rope - Price: $5000\nItem: Scissors - Price: $20K\nItem: Gholf khodro - Price: $50K\nItem: 5 Ghoti Sprey - Price: $5K", "Select", "Cancel");
		}
		case 2:
		{
            ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Belit ghorekeshi", "{FFFFFF}Item: Daily Lottery Ticket - Price: $500", "Select", "Cancel");
		}
		}
	}
	case GLOBAL_SHOP_MENU1:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 10) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        new Float:health;
	        GetPlayerHealth(playerid,health);

//			if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

			if(health >= 100) return SendClientMessage(playerid, RED, "You cant eat with 100 percent health.");
			{
				GivePlayerCash(playerid, -10);
				if(health + 25 > 100)
				{
			    	SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SetPlayerHealth(playerid, health + 25);
				}
	        	SendClientMessage(playerid, YELLOW, "You have purchased Sprunk and Chips for $10.");
	        	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	        	ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item List", "{FFFFFF}Food/Drink List\nHardware List\nLottery Ticket", "Select", "Cancel");
			}
		}
        case 1:
		{
            if(GetPlayerCash(playerid) < 20) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        new Float:health;
	        GetPlayerHealth(playerid,health);

//			if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

			if(health >= 100) return SendClientMessage(playerid, RED, "You cant eat with 100 percent health.");
			{
				GivePlayerCash(playerid, -20);
				if(health + 50 > 100)
				{
			    	SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SetPlayerHealth(playerid, health + 50);
				}
	        	SendClientMessage(playerid, YELLOW, "You have purchased a Sprunk and Hotdog for $20.");
	        	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	        	ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item List", "{FFFFFF}Food/Drink List\nHardware List\nLottery Ticket", "Select", "Cancel");
			}
		}
        }
    }
    case GLOBAL_SHOP_MENU2:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            {
                GivePlayerCash(playerid, -5000);
                PlayerInfo[playerid][pRope]+=4;
                SendClientMessage(playerid, YELLOW, "You have purchased 4 Pieces of Rope for $5000.");
                ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item List", "{FFFFFF}Food/Drink List\nHardware List\nLottery Ticket", "Select", "Cancel");
			}
		}
		case 1:
		{
            if(GetPlayerCash(playerid) < 20000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            if(PlayerInfo[playerid][pScissors] == 1) return SendClientMessage(playerid, RED, "You Already Have A Pair of Scissors.");

			{
                GivePlayerCash(playerid, -20000);
                PlayerInfo[playerid][pScissors]++;
                SendClientMessage(playerid, YELLOW, "You have purchased a Pair of Scissors for $20K.");
                ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item List", "{FFFFFF}Food/Drink List\nHardware List\nLottery Ticket", "Select", "Cancel");
			}
		}
        case 2:
		{
            if(GetPlayerCash(playerid) < 50000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            if(PlayerInfo[playerid][vLock] == 1) return SendClientMessage(playerid, RED, "You already own a vLock.");
            {
	            GivePlayerCash(playerid, -50000);
	            PlayerInfo[playerid][vLock]++;
	            SendClientMessage(playerid, YELLOW, "You have purchased a Personel Vehicle Lock for $50K.");
	            ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item List", "{FFFFFF}Food/Drink List\nHardware List\nLottery Ticket", "Select", "Cancel");
			}
		}
		case 3:
		{
            if(GetPlayerCash(playerid) < 5000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            if(PlayerInfo[playerid][pPaintCan] == 1) return SendClientMessage(playerid, RED, "You Already Have Spray Can.");
            {
	            GivePlayerCash(playerid, -5000);
	            PlayerInfo[playerid][pPaintCan]+=5;
	            SendClientMessage(playerid, YELLOW, "You have purchased 5 Spray Cans for $5K.");
	            ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item List", "{FFFFFF}Food/Drink List\nHardware List\nLottery Ticket", "Select", "Cancel");
			}
		}
        }
    }
    case GLOBAL_SHOP_MENU3:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 500) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        if(HasLotteryTicket{playerid} == 1) return SendClientMessage(playerid, RED, "You already have a lottery ticket.");
	        {
                new nstring[150];
	            SendClientMessage(playerid, YELLOW, "You have purchased a Lottery Ticket for $500.");
		        HasLotteryTicket{playerid} = 1;
	        	GivePlayerCash(playerid, -500);
		        MakePlayersLottoNumbers(playerid);
		        format(nstring, sizeof(nstring), "Your lotto numbers are: %d, %d, %d, %d, %d, %d", PlayersLottoNumbers[0][playerid], PlayersLottoNumbers[1][playerid], PlayersLottoNumbers[2][playerid], PlayersLottoNumbers[3][playerid], PlayersLottoNumbers[4][playerid], PlayersLottoNumbers[5][playerid]);
	    	    SendClientMessage(playerid, YELLOW, nstring);
	            ShowPlayerDialog(playerid, GLOBAL_SHOP_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Item List", "{FFFFFF}Food/Drink List\nHardware List\nLottery Ticket", "Select", "Cancel");
			}
		}
		}
    }
	case GLOBAL_CLUB_MENU:
    {
		if(response)
	    switch(listitem)
        {
        case 0:
		{
            ShowPlayerDialog(playerid, GLOBAL_CLUB_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Beverages Menu", "{FFFFFF}Item: Beer - Price: $10\nItem: Wine - Price: $20", "Select", "Cancel");
        }
        case 1:
		{
            ShowPlayerDialog(playerid, GLOBAL_CLUB_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Bartender Menu", "{FFFFFF}Item: Ectasy - Price: $100\nItem: Cocaine - Price: $250\n", "Select", "Cancel");
        }
        }
	}
	case GLOBAL_CLUB_MENU1:
    {
        if(response)
        switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 10) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -10);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Bottle of Beer for $10.");
	        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
	        SetPlayerDrunkLevel(playerid, 3000);
        }
        case 1:
		{
            if(GetPlayerCash(playerid) < 20) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -20);
	        SendClientMessage(playerid, YELLOW, "You have purchased a Bottle of Wine for $20.");
	        SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE);
	        SetPlayerDrunkLevel(playerid, 3000);
        }
        }
    }
    case GLOBAL_CLUB_MENU2:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 100) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -100);
	        SendClientMessage(playerid, YELLOW, "You have purchased some Ectasy for $100.");
	        ApplyAnimation(playerid, "VENDING", "VEND_Eat_P", 1.0, 0, 0, 0, 0, 0);
            SetPlayerDrunkLevel(playerid, 6000);
            SetPlayerHealth(playerid,100.0);
            SetPlayerArmour(playerid,100.0);
        }
        case 1:
		{
            if(GetPlayerCash(playerid) < 250) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        GivePlayerCash(playerid, -250);
	        SendClientMessage(playerid, YELLOW, "You have purchased some Cocaine for $250.");
	        ApplyAnimation(playerid, "VENDING", "VEND_Eat_P", 1.0, 0, 0, 0, 0, 0);
	        SetPlayerDrunkLevel(playerid, 6000);
	        SetPlayerHealth(playerid,100.0);
            SetPlayerArmour(playerid,100.0);
        }
        }
	}
    case REGISTER_MENU:
    {
	    new f[40], string[150];
        format(f, sizeof(f), USER_FILE, GetName(playerid));
        if(!strlen(inputtext)) return SendClientMessage(playerid, RED, "Shoma bayad yek ramz obor vared konid.") && format(string,sizeof(string),"Welcome to ACNR %s!\n\nIn esm sabtenam nashode.\n\nYek ramz obor vared konid va on ro faramosh nakonid:", GetName(playerid)) && ShowPlayerDialog(playerid, REGISTER_MENU, DIALOG_STYLE_INPUT, "{FFFFFF}Register", string, "Register", "Ban");
        if(strlen(inputtext) < 3 || strlen(inputtext) > 24) return SendClientMessage(playerid, RED, "> Your password can only contain 3-24 characters.") && format(string,sizeof(string),"{FFFFFF}Welcome to ACNR %s!\n\nIn esm sabtenam nashode.\n\nYek ramz obor vared konid va on ro faramosh nakonid:", GetName(playerid)) && ShowPlayerDialog(playerid, REGISTER_MENU, DIALOG_STYLE_INPUT, "{FFFFFF}Register", string, "Register", "Ban");
		if(!response) return SendClientMessage(playerid, RED, "Ghabl az spawn bayad sabtenam konid.") && KickPlayer(playerid);
		{
		IsPlayersFirstSpawn{playerid} = false;
        IsLoggedIn{playerid} = 1;
		new buf[129];
    	WP_Hash(buf, sizeof(buf), inputtext);
		PlayerInfo[playerid][pPass] = buf;
		
//	    if(ACNR_DEBUG == 1) { printf("DEBUG: inputtext: %s \n buf: %s \n pPass: %s", inputtext, buf, PlayerInfo[playerid][pPass]); }		
		
		new INI:ufile = INI_Open(f);
        INI_WriteString(ufile, "pPass", buf);
		INI_Close(ufile);

		if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
		{
			SaveBankStats(playerid);
    		SaveFightStats(playerid);
    		SaveUserStats(playerid);
    		SaveDegreeStats(playerid);
    	}
    	
        PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);

        newestname = GetName(playerid);
        
        tedadeacc++;
        accssave();

		GivePlayerCash(playerid, 10000);
		format(fstr, sizeof(fstr), "Elvis: Sabtenam kardid! Be ACNR khosh amadid %s [%d].", GetName(playerid),playerid);
        SendClientMessage(playerid, WHITE, fstr);
        format(fstr2, sizeof(fstr2), "%s [%d] Sabtenam kard.", GetName(playerid), playerid);
        SendMessageToAll(LIGHTBLUE, fstr2);
		SendClientMessage(playerid, LIGHTGREEN, "Use /cp to access the player control panel.");
        ShowPlayerDialog(playerid, RULES_LIST, DIALOG_STYLE_MSGBOX ,
	    "{FF0000}Ghavanin server",
	    "{FF0000}1: LOTFAN az HACKS/MODS/CHEATS/BUG/ABUSE estefade nakonid dargheyere in sorat ban bedon unban\n2: LOTFAN DM,HK,PARK,CAMP ya gharar dadane hit haye alaki nakonid!\n3: LOTFAN adab ra reayat konid va tohin va biehterami nakonid!\n4: LOTFAN az spam kardan shadidan khod dari konid!\n5: LOTFAN /q ya pause baraye jelogiri az harchizi nakonid!\n6: LOTFAN ba police ha ya dozd ha hamkari nakonid!\n7: LOTFAN tabligh nakonid va baraye chizi mesle pool ya... naporsid!",
	    "Accept", "Ban");

       	new asd[1000];
        TextDrawShowForPlayer(playerid, ACNRInfo[playerid]);
 	    format(asd,sizeof(asd),"~w~A~b~~h~C~w~N~r~R ~r~~h~V~w~2.2.2 - ~g~Forum/site~w~: just-samp.rozblog.com  //  ~y~Accounts:  %d ~w~/ ~p~Newest Name:  %s ~w~/ ~b~~h~Joins:  %d ~w~/ ~r~~h~Kicks:  %d ~w~/ ~r~Bans:  %d  ~w~//",tedadeacc,newestname,tedadvoro,tedadekick,tedadeban);
 	    TextDrawSetString(ACNRInfo[playerid], asd);
        }
    }
    case LOGIN_MENU:
    {
	    new f[40], string[150];
        format(f, sizeof(f), USER_FILE, GetName(playerid));

	    new userfile9[40];
	    format(userfile9, sizeof(userfile9), USER_FILE, GetName(playerid));
        INI_ParseFile(userfile9, "LoadUser_data", .bExtra = true, .extra = playerid);
//beta
        if(!response)
		{
			SendClientMessage(playerid, RED, "Ghabl az spawn bayad login shavid. Bye.");
			KickPlayer(playerid);
			return 1;
		}
        if(!strlen(inputtext))
		{
			format(fstr2,sizeof(fstr2),"{FFFFFF}Khosh Amadi %s [%d].\n\nIn Esm ghablan sabtenam shode.\n\nBaraye vorod ramze obore khod ra vared konid:", GetName(playerid),playerid);
      		ShowPlayerDialog(playerid, LOGIN_MENU, DIALOG_STYLE_INPUT, "{FFFFFF}ACNR Account Login", fstr2, "Login", "Ban");
 			SendClientMessage(playerid, RED, "Shoma bayad yek ramze obor vared konid.");
			return 1;
		}
        {
        	new buf123[300];
    		WP_Hash(buf123, sizeof (buf123), inputtext);
			
			new passtostr[300];
			format(passtostr, sizeof(passtostr), "%s", PlayerInfo[playerid][pPass]);
			
/*			if(ACNR_DEBUG == 1)
			{
				new dbstr[300];	
				printf("inputtext: %s \n buf123: %s \n passtostr: %s \n pPass: %s",inputtext, buf123, passtostr, PlayerInfo[playerid][pPass]);
				format(dbstr, sizeof(dbstr), "inputtext: %s \n buf123: %s \n passtostr: %s \n pPass: %s",inputtext, buf123, passtostr, PlayerInfo[playerid][pPass]);
				SendClientMessage(playerid, RED, dbstr);
			}*/
			
    		if(strcmp(buf123, passtostr, false) != 0 && mohlatincpass{playerid} == 0)
    		{
    			mohlatincpass{playerid} ++;
    			format(fstr2,sizeof(fstr2),"{FFFFFF}Khosh Amadi %s [%d].\n\nIn Esm ghablan sabtenam shode.\n\nBaraye vorod ramze obore khod ra vared konid:", GetName(playerid),playerid);
      		    ShowPlayerDialog(playerid, LOGIN_MENU, DIALOG_STYLE_INPUT, "{FFFFFF}ACNR Account Login", fstr2, "Login", "Ban");
      		    SendClientMessage(playerid,RED,"   RamzObor ra eshtebah vared kardid (1/3)  ");
      		    //return 1;
      		}
     	    else if(strcmp(buf123, passtostr, false) != 0 && mohlatincpass{playerid} == 1)
    		{
     			mohlatincpass{playerid} ++;
    			format(fstr2,sizeof(fstr2),"{FFFFFF}Khosh Amadi %s [%d].\n\nIn Esm ghablan sabtenam shode.\n\nBaraye vorod ramze obore khod ra vared konid:", GetName(playerid),playerid);
    	    	ShowPlayerDialog(playerid, LOGIN_MENU, DIALOG_STYLE_INPUT, "{FFFFFF}ACNR Account Login", fstr2, "Login", "Ban");
    	    	SendClientMessage(playerid,RED,"   RamzObor ra eshtebah vared kardid (2/3)  ");
    	    	//return 1;
     	    }
     	    else if(strcmp(buf123, passtostr, false) != 0 && mohlatincpass{playerid} == 2)
		    {
				PlayerInfo[playerid][pKicks]++;
     	        GameTextForPlayer(playerid,"~r~Kicked...~n~kicked..~n~kicked.~n~kicked",9999,2);
     	        SendClientMessage(playerid, RED, "Ramz Obor Eshtebah.");
      	        format(string, sizeof(string), "%s [%d] az ACNR kick shod - Dalil: Ramz obor eshtebah", GetName(playerid), playerid);
      	        SendMessageToAll(RED, string);
      	        SendClientMessage(playerid,RED,"   RamzObor ra eshtebah vared kardid (3/3)  ");
      	     	SendClientMessage(playerid, RED, string);
       	        KickPlayer(playerid);
      	        tedadekick++;
			    accssave();
			    print(string);
        	    return 1;
        	}
        	else
        	{
            	PlayerInfo[playerid][pJoins]++;
				SetPlayerScore(playerid, PlayerInfo[playerid][pScore]);
				SetPlayerCash(playerid, PlayerInfo[playerid][pCash]);

            	IsLoggedIn{playerid} = 1;
        	
        		PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);
        	
            	format(fstr, sizeof(fstr), "Elvis: ba movafaghiat vared shodid! Khosh Amadi %s [%d].", GetName(playerid),playerid);
            	SendClientMessage(playerid, WHITE, fstr);
            	format(fstr2, sizeof(fstr2), "%s [%d] Vared Shod.", GetName(playerid), playerid);
            	SendMessageToAll(LIGHTBLUE, fstr2);
            	SendClientMessage(playerid, LIGHTGREEN, "az /cp baraye moshaheydeye control panel estefade konid.");
            	ShowPlayerDialog(playerid, RULES_LIST, DIALOG_STYLE_MSGBOX ,
	        	"{FF0000}Ghavanin Server",
	        	"{FF0000}1: LOTFAN az HACKS/MODS/CHEATS/BUG/ABUSE estefade nakonid dargheyere in sorat ban bedon unban\n2: LOTFAN DM,HK,PARK,CAMP ya gharar dadane hit haye alaki nakonid!\n3: LOTFAN adab ra reayat konid va tohin va biehterami nakonid!\n4: LOTFAN az spam kardan shadidan khod dari konid!\n5: LOTFAN /q ya pause baraye jelogiri az harchizi nakonid!\n6: LOTFAN ba police ha ya dozd ha hamkari nakonid!\n7: LOTFAN tabligh nakonid va baraye chizi mesle pool ya... naporsid!",
	        	"Accept", "Ban");

       	    	new asd[1000];
            	TextDrawShowForPlayer(playerid, ACNRInfo[playerid]);
 	        	format(asd,sizeof(asd),"~w~A~b~~h~C~w~N~r~R ~r~~h~V~w~2.2.2 - ~g~Forum/site~w~: just-samp.rozblog.com  //  ~y~Accounts:  %d ~w~/ ~p~Newest Name:  %s ~w~/ ~b~~h~Joins:  %d ~w~/ ~r~~h~Kicks:  %d ~w~/ ~r~Bans:  %d  ~w~//",tedadeacc,newestname,tedadvoro,tedadekick,tedadeban);
 	        	TextDrawSetString(ACNRInfo[playerid], asd);
			}
		}
    }
    case HOS_MENU:
    {
		if(response)
	    switch(listitem)
        {
            case 0:
			{
			    if(GetPlayerWantedLevel(playerid) >= 1) return SendClientMessage(playerid, RED, "You cant change skins(class) when you have wanted level.");
			    HasChangedSkin{playerid} = true;
			    SetPlayerHealth(playerid, 0.0);
			    ForceClassSelection(playerid);
			}
        	case 1:
			{
            	ShowPlayerDialog(playerid, HOS_MENU1, DIALOG_STYLE_LIST, "{FFFFFF} Hospital", "{FFFFFF}Item: Medikit x2 Pack - Price: $50K\nItem: Medikit x5 Pack - Price: $100K", "Select", "Cancel");
        	}
        }
	}
    case HOS_MENU1:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
            if(GetPlayerCash(playerid) < 50000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
			GivePlayerCash(playerid, -50000);
	        PlayerInfo[playerid][pKits] += 2;
	        SendClientMessage(playerid, YELLOW, "You have purchased a 2 Pack of Medikits for $50K.");
        }
        case 1:
		{
            if(GetPlayerCash(playerid) < 100000) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            GivePlayerCash(playerid, -100000);
			PlayerInfo[playerid][pKits] += 5;
	        SendClientMessage(playerid, YELLOW, "You have purchased a 5 Pack of Medikits for $100K.");
        }
        }
    }
    case CLUCK_MENU:
    {
		if(response)
	    switch(listitem)
        {
        case 0:
		{
            ShowPlayerDialog(playerid, CLUCK_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Cluck'n Bell - Menu", "{FFFFFF}Item: Value Meal - Price: $10\nItem: Cezar Salad - Price: $15", "Select", "Cancel");
        }
        }
	}
	case CLUCK_MENU1:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
	        if(GetPlayerCash(playerid) < 10) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        new Float:health;
	        GetPlayerHealth(playerid,health);

//			if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

			if(health >= 100) return SendClientMessage(playerid, RED, "You cant eat with 100 percent health.");
			{
				GivePlayerCash(playerid, -10);
				if(health + 25 > 100)
				{
			    	SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SetPlayerHealth(playerid, health + 25);
				}
	        	SendClientMessage(playerid, YELLOW, "You have purchased a Value Meal for $10.");
	        	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	        	ShowPlayerDialog(playerid, CLUCK_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Cluck'n Bell", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
	        }
        }
        case 1:
	    {
	        if(GetPlayerCash(playerid) < 15) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        new Float:health;
	        GetPlayerHealth(playerid,health);

//			if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

			if(health >= 100) return SendClientMessage(playerid, RED, "You cant eat with 100 percent health.");
			{
				GivePlayerCash(playerid, -15);
				if(health + 50 > 100)
				{
			    	SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SetPlayerHealth(playerid, health + 50);
				}
	        	SendClientMessage(playerid, YELLOW, "You have purchased a Cezar Salad for $15.");
	        	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	        	ShowPlayerDialog(playerid, CLUCK_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Cluck'n Bell", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
	        }
        }
        }
	}
	case BURG_MENU:
    {
		if(response)
	    switch(listitem)
        {
        case 0:
		{
            ShowPlayerDialog(playerid, BURG_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot - Menu", "{FFFFFF}Item: Cheese Burger - Price: $10\nItem: Double Patty and Cheese - Price: $15", "Select", "Cancel");
        }
        }
	}
	case BURG_MENU1:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
	        if(GetPlayerCash(playerid) < 10) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            new Float:health;
            GetPlayerHealth(playerid,health);

//			if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

			if(health >= 100) return SendClientMessage(playerid, RED, "You cant eat with 100 percent health.");
			{
	        	GivePlayerCash(playerid, -10);
				if(health + 25 > 100)
				{
			    	SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SetPlayerHealth(playerid, health + 25);
				}
	        	SendClientMessage(playerid, YELLOW, "You have purchased a Cheese Burger for $10.");
	        	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	        	ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
	        }
        }
        case 1:
	    {
	        if(GetPlayerCash(playerid) < 15) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        new Float:health;
	        GetPlayerHealth(playerid,health);

//			if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

			if(health >= 100) return SendClientMessage(playerid, RED, "You cant eat with 100 percent health.");
			{
				GivePlayerCash(playerid, -15);
				if(health + 50 > 100)
				{
			    	SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SetPlayerHealth(playerid, health + 50);
				}
	        	SendClientMessage(playerid, YELLOW, "You have purchased a Double Patty and Cheese for $15.");
	        	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	        	ShowPlayerDialog(playerid, BURG_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Burger Shot", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
	        }
        }
        }
	}
	case NVPD_ELEVATOR_MENU:
    {
		if(response)
	    switch(listitem)
        {
        case 0:
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,2267.9355,2445.0942,-7.4531);
			SetPlayerFacingAngle(playerid,179.6141);
        }
        case 1:
		{
            SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,2267.9468,2444.9011,3.2734);
			SetPlayerFacingAngle(playerid,180.5113);
        }
        case 2:
		{
            SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,2294.2534,2451.3782,10.8203);
			SetPlayerFacingAngle(playerid,91.2775);
        }
        case 3:
		{
            SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,2296.2930,2461.4600,38.6875);
			SetPlayerFacingAngle(playerid,3.3004);
        }
        }
	}
	case PIZZA_MENU:
    {
		if(response)
	    switch(listitem)
        {
        case 0:
		{
            ShowPlayerDialog(playerid, PIZZA_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Well Stacked Pizzas - Menu", "{FFFFFF}Item: Large Pizza - Price: $10\nItem: 2 Large Pizzas - Price: $15", "Select", "Cancel");
        }
        }
	}
	case PIZZA_MENU1:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
	        if(GetPlayerCash(playerid) < 10) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	        new Float:health;
	        GetPlayerHealth(playerid,health);

//			if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

			if(health >= 100) return SendClientMessage(playerid, RED, "You cant eat with 100 percent health.");
			{
				GivePlayerCash(playerid, -10);
				if(health + 25 > 100)
				{
			    	SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SetPlayerHealth(playerid, health + 25);
				}
	        	SendClientMessage(playerid, YELLOW, "You have purchased a Large Pizza for $10.");
	        	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	        	ShowPlayerDialog(playerid, PIZZA_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Well Stacked Pizzas", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
	        }
        }
        case 1:
	    {
	        if(GetPlayerCash(playerid) < 15) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
            new Float:health;
            GetPlayerHealth(playerid,health);

//			if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

			if(health >= 100) return SendClientMessage(playerid, RED, "You cant eat with 100 percent health.");
			{
				GivePlayerCash(playerid, -15);
				if(health + 50 > 100)
				{
			    	SetPlayerHealth(playerid, 100.0);
				}
				else
				{
					SetPlayerHealth(playerid, health + 50);
				}
	        	SendClientMessage(playerid, YELLOW, "You have purchased 2 Large Pizzas for $15.");
	        	ApplyAnimation(playerid,"FOOD","EAT_Burger",4.1,0,1,1,1,1);
	        	ShowPlayerDialog(playerid, PIZZA_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Well Stacked Pizzas", "{FFFFFF}Food/Drink Menu", "Select", "Cancel");
	        }
        }
        }
	}
	case TUNE_MENU:
	{
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
				ShowPlayerDialog(playerid, TUNE_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Paintjobs List", "{FFFFFF}Item: Paint Job - 1 - Price: $5K\nItem: Paint Job - 2 - Price: $5K\nItem: Paint Job - 3 - Price: $5K\nBack", "Select", "Cancel");
			}
			case 1:
			{
				ShowPlayerDialog(playerid, TUNE_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Colors List", "{FFFFFF}Item: Black - Price: $1K\nItem: White - Price: $1K\nItem: Red - Price: $1K\nItem: Blue - Price: $1K\nItem: Green - Price: $1K\nItem: Yellow - Price: $1K\nItem: Pink - Price: $1K\nItem: Brown - Price: $1K\nBack", "Select", "Cancel");
			}
			case 2:
			{
				ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
			}
			case 3:
			{
				ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
			}
			case 4:
			{
				ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
			}
            case 5:
			{
				ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
			}
			case 6:
			{
				ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
			}
			case 7:
			{
				ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
			}
            case 8:
			{
				ShowPlayerDialog(playerid, TUNE_MENU9, DIALOG_STYLE_LIST, "{FFFFFF}Bullbars List", "{FFFFFF}Item: Locos Low Chrome Grill - Price: $1K\nItem: Locos Low Chrome Bars - Price: $1K\nItem: Locos Low Chrome Lights - Price: $1K\nItem: Locos Low Chrome Bullbar - Price: $1K\nBack", "Select", "Cancel");
			}
			case 9:
			{
				ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
			}
			case 10:
			{
				ShowPlayerDialog(playerid, TUNE_MENU11, DIALOG_STYLE_LIST, "{FFFFFF}Car Stereos List", "{FFFFFF}Item: Bass Boost - Price: $1K\nBack", "Select", "Cancel");
			}
			case 11:
			{
				ShowPlayerDialog(playerid, TUNE_MENU12, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 2", "{FFFFFF}Hydraulics\nNitros Oxide\nNeons\nBack", "Select", "Cancel");
			}
			case 12:
			{
				ShowPlayerDialog(playerid, TUNE_MENU13, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 2", "{FFFFFF}Item: Trance - Price: $1K\nItem: Shadow - Price: $1K\nItem: Rimshine - Price: $1K\nItem: Classic - Price: $1K\nItem: Cutter - Price: $1K\nItem: Switch - Price: $1K\nItem: Dollar - Price: $1K\nBack", "Select", "Cancel");
			}
			case 13:
			{
				ShowPlayerDialog(playerid, TUNE_MENU14, DIALOG_STYLE_LIST, "{FFFFFF}Hydraulics", "{FFFFFF}Item: Hydraulics - Price: $1K\nBack", "Select", "Cancel");
			}
			case 14:
			{
				ShowPlayerDialog(playerid, TUNE_MENU15, DIALOG_STYLE_LIST, "{FFFFFF}Nitros Oxide", "{FFFFFF}Item: Nirto x2 - Price: $1K\nItem: Nirto x5 - Price: $2K\nItem: Nirto x10 - Price: $3K\nBack", "Select", "Cancel");
			}
			case 15:
			{
				ShowPlayerDialog(playerid, TUNE_MENU16, DIALOG_STYLE_LIST, "{FFFFFF}Neons", "{FFFFFF}Item: Blue Neons - Price: $5K\nItem: Red Neons - Price: $5K\nItem: Green Neons - Price: $5K\nItem: Yellow Neons - Price: $5K\nItem: Pink Neons - Price: $5K\nItem: White Neons - Price: $5K\nRemove Neons\nBack", "Select", "Cancel");
			}
			}
       }
   }

   case TUNE_MENU1:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||

				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				if(GetPlayerCash(playerid) >= 5000)
		        {

					ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),0);
				    OnVehiclePaintjob(playerid, GetPlayerVehicleID(playerid), 0);
					ChangeVehicleColor(GetPlayerVehicleID(playerid),1,1);
		            OnVehicleRespray(playerid, GetPlayerVehicleID(playerid), 1, 1);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					GivePlayerCash(playerid,-5000);
					SendClientMessage(playerid,YELLOW,"You have added Paintjob - 1 to your car for $5K.");
                    ShowPlayerDialog(playerid, TUNE_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Paintjobs List", "{FFFFFF}Item: Paint Job - 1 - Price: $5K\nItem: Paint Job - 2 - Price: $5K\nItem: Paint Job - 3 - Price: $5K\nBack", "Select", "Cancel");

				}
				else
				{
				   SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
				}
				else
				{
				   SendClientMessage(playerid,RED,"Paintjobs only work for Wheel Arch Angel and Loco Low Co type cars.");
			       ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
				}
			}
			case 1:
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||

				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				if(GetPlayerCash(playerid) >= 5000)
		        {

					ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),1);
					OnVehiclePaintjob(playerid, GetPlayerVehicleID(playerid), 1);
					ChangeVehicleColor(GetPlayerVehicleID(playerid),1,1);
		            OnVehicleRespray(playerid, GetPlayerVehicleID(playerid), 1, 1);
					GivePlayerCash(playerid,-5000);
					PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					SendClientMessage(playerid,YELLOW,"You have added Paintjob - 2 to your car for $5K.");
                    ShowPlayerDialog(playerid, TUNE_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Paintjobs List", "{FFFFFF}Item: Paint Job - 1 - Price: $5K\nItem: Paint Job - 2 - Price: $5K\nItem: Paint Job - 3 - Price: $5K\nBack", "Select", "Cancel");

				}
				else
				{
				   SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
				}
				else
				{
				   SendClientMessage(playerid,RED,"Paintjobs only work for Wheel Arch Angel and Loco Low Co type cars.");
			       ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
				}
			}
			case 2:
			{
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||

				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				if(GetPlayerCash(playerid) >= 5000)
		        {

                   ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),2);
                   OnVehiclePaintjob(playerid, GetPlayerVehicleID(playerid), 2);
                   ChangeVehicleColor(GetPlayerVehicleID(playerid),1,1);
                   OnVehicleRespray(playerid, GetPlayerVehicleID(playerid), 1, 1);
                   GivePlayerCash(playerid,-5000);
                   PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				   SendClientMessage(playerid,YELLOW,"You have added Paintjob - 3 to your car for $5K.");
                   ShowPlayerDialog(playerid, TUNE_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Paintjobs List", "{FFFFFF}Item: Paint Job - 1 - Price: $5K\nItem: Paint Job - 2 - Price: $5K\nItem: Paint Job - 3 - Price: $5K\nBack", "Select", "Cancel");
				}
				else
				{
				   SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
				}
				else
				{
				   SendClientMessage(playerid,RED,"Paintjobs only work for Wheel Arch Angel and Loco Low Co type cars.");
			       ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
				}
			}
			case 3:
			{
				ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
			}
			}
	   }
   }

   case TUNE_MENU2:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
		    if(GetPlayerCash(playerid) >= 1000)
            {

		            GivePlayerCash(playerid,-1000);
		            ChangeVehicleColor(GetPlayerVehicleID(playerid),0,0);//Black
		            OnVehicleRespray(playerid, GetPlayerVehicleID(playerid), 0, 0);
		            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            SendClientMessage(playerid,YELLOW,"You have successfully painted your vehicle Black for $1K.");
		            ShowPlayerDialog(playerid, TUNE_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Colors List", "{FFFFFF}Item: Black - Price: $1K\nItem: White - Price: $1K\nItem: Red - Price: $1K\nItem: Blue - Price: $1K\nItem: Green - Price: $1K\nItem: Yellow - Price: $1K\nItem: Pink - Price: $1K\nItem: Brown - Price: $1K\nBack", "Select", "Cancel");

			}
			else
			{
			    SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 1:
			{
		    if(GetPlayerCash(playerid) >= 1000)
            {

			        GivePlayerCash(playerid,-1000);
			        ChangeVehicleColor(GetPlayerVehicleID(playerid),1,1);//White
			        OnVehicleRespray(playerid, GetPlayerVehicleID(playerid), 1, 1);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,YELLOW,"You have successfully painted your vehicle White for $1K.");
			        ShowPlayerDialog(playerid, TUNE_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Colors List", "{FFFFFF}Item: Black - Price: $1K\nItem: White - Price: $1K\nItem: Red - Price: $1K\nItem: Blue - Price: $1K\nItem: Green - Price: $1K\nItem: Yellow - Price: $1K\nItem: Pink - Price: $1K\nItem: Brown - Price: $1K\nBack", "Select", "Cancel");

			}
			else
			{
			    SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 2:
			{
		    if(GetPlayerCash(playerid) >= 1000)
            {

			        GivePlayerCash(playerid,-1000);
			        ChangeVehicleColor(GetPlayerVehicleID(playerid),3,3);//Red
			        OnVehicleRespray(playerid, GetPlayerVehicleID(playerid), 3, 3);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,YELLOW,"You have successfully painted your vehicle Red for $1K.");
			        ShowPlayerDialog(playerid, TUNE_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Colors List", "{FFFFFF}Item: Black - Price: $1K\nItem: White - Price: $1K\nItem: Red - Price: $1K\nItem: Blue - Price: $1K\nItem: Green - Price: $1K\nItem: Yellow - Price: $1K\nItem: Pink - Price: $1K\nItem: Brown - Price: $1K\nBack", "Select", "Cancel");

			}
			else
			{
			    SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 3:
			{
		    if(GetPlayerCash(playerid) >= 1000)
            {

			        GivePlayerCash(playerid,-1000);
			        ChangeVehicleColor(GetPlayerVehicleID(playerid),79,79); //Blue
			        OnVehicleRespray(playerid, GetPlayerVehicleID(playerid), 79, 79);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,YELLOW,"You have successfully painted your vehicle Blue for $1K.");
			        ShowPlayerDialog(playerid, TUNE_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Colors List", "{FFFFFF}Item: Black - Price: $1K\nItem: White - Price: $1K\nItem: Red - Price: $1K\nItem: Blue - Price: $1K\nItem: Green - Price: $1K\nItem: Yellow - Price: $1K\nItem: Pink - Price: $1K\nItem: Brown - Price: $1K\nBack", "Select", "Cancel");

			}
			else
			{
			    SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 4:
			{
		    if(GetPlayerCash(playerid) >= 1000)
            {

			        GivePlayerCash(playerid,-1000);
			        ChangeVehicleColor(GetPlayerVehicleID(playerid),86,86);//Green
			        OnVehicleRespray(playerid, GetPlayerVehicleID(playerid), 86, 86);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,YELLOW,"You have successfully painted your vehicle Green for $1K.");
			        ShowPlayerDialog(playerid, TUNE_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Colors List", "{FFFFFF}Item: Black - Price: $1K\nItem: White - Price: $1K\nItem: Red - Price: $1K\nItem: Blue - Price: $1K\nItem: Green - Price: $1K\nItem: Yellow - Price: $1K\nItem: Pink - Price: $1K\nItem: Brown - Price: $1K\nBack", "Select", "Cancel");

			}
			else
			{
			    SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 5:
			{
		    if(GetPlayerCash(playerid) >= 1000)
            {

			        GivePlayerCash(playerid,-1000);
			        ChangeVehicleColor(GetPlayerVehicleID(playerid),6,6);//Yellow
			        OnVehicleRespray(playerid, GetPlayerVehicleID(playerid), 6, 6);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,YELLOW,"You have successfully painted your vehicle Yellow for $1K.");
			        ShowPlayerDialog(playerid, TUNE_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Colors List", "{FFFFFF}Item: Black - Price: $1K\nItem: White - Price: $1K\nItem: Red - Price: $1K\nItem: Blue - Price: $1K\nItem: Green - Price: $1K\nItem: Yellow - Price: $1K\nItem: Pink - Price: $1K\nItem: Brown - Price: $1K\nBack", "Select", "Cancel");

			}
			else
			{
			    SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 6:
            {
		    if(GetPlayerCash(playerid) >= 1000)
            {

			        GivePlayerCash(playerid,-1000);
			        ChangeVehicleColor(GetPlayerVehicleID(playerid),126,126);//Pink
			        OnVehicleRespray(playerid, GetPlayerVehicleID(playerid), 126, 126);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,YELLOW,"You have successfully painted your vehicle Pink for $1K.");
			        ShowPlayerDialog(playerid, TUNE_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Colors List", "{FFFFFF}Item: Black - Price: $1K\nItem: White - Price: $1K\nItem: Red - Price: $1K\nItem: Blue - Price: $1K\nItem: Green - Price: $1K\nItem: Yellow - Price: $1K\nItem: Pink - Price: $1K\nItem: Brown - Price: $1K\nBack", "Select", "Cancel");
			}
			else
			{
			    SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 7:
			{
		    if(GetPlayerCash(playerid) >= 1000)
            {

			        GivePlayerCash(playerid,-1000);
			        ChangeVehicleColor(GetPlayerVehicleID(playerid),66,66);//Brown
			        OnVehicleRespray(playerid, GetPlayerVehicleID(playerid), 66, 66);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	          		SendClientMessage(playerid,YELLOW,"You have successfully painted your vehicle Brown for $1K.");
			        ShowPlayerDialog(playerid, TUNE_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Colors List", "{FFFFFF}Item: Black - Price: $1K\nItem: White - Price: $1K\nItem: Red - Price: $1K\nItem: Blue - Price: $1K\nItem: Green - Price: $1K\nItem: Yellow - Price: $1K\nItem: Pink - Price: $1K\nItem: Brown - Price: $1K\nBack", "Select", "Cancel");
            }
            else
			{
			    SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
            case 8:
			{
        		    ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
            }
			}
		}
   }

   case TUNE_MENU3:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {

		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
		            {
                    if(GetPlayerCash(playerid) >= 1000)
                    {
		            	AddVehicleComponent(GetPlayerVehicleID(playerid),1034);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1034);
		            	GivePlayerCash(playerid,-1000);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            	SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Exhaust to your Elegy.");
		            	ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1046);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1046);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Exhaust to your Flash.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1065);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1065);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Exhaust to your Jetser.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1064);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1064);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Exhaust to your Stratum.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1028);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1028);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Exhaust to your Sultan.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1089);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1089);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Exhaust to your Uranus.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
	    			}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
	  			 	else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Wheel Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
                    }
                    }
            }
			case 1:
            {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
                {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
			        {
                    if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1037);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1037);
		            	GivePlayerCash(playerid,-1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Exhaust to your Elegy.");
			            ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1045);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1045);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Exhaust to your Flash.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1066);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1066);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"ou Have Successfully Added A Wheel Arch X-Flow Exhaust to your Jester.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1059);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1059);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Exhaust to your Stratum.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1029);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1029);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Exhaust to your Sultan.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1092);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1092);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Exhaust to your Uranus.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Wheel Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
					}
            }
			case 2:
            {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)

			    {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1126);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1126);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Exhaust to your Remington.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1129);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1129);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	                    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Exhaust to your Savanna.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1104);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1104);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Exhaust to your Blade.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1113);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1113);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Exhaust to your Slamvan.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1136);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1136);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					   	SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Exhaust to your Tornado.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}

					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Locos Low type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
            }
			case 3:
            {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
			    {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1127);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1127);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Exhaust to your Remingon.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1132);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1132);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Exhaust to your Savanna.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1105);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1105);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Exhaust to your Blade.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1114);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1114);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Exhaust to your Slamvan.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
					{
                    if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1135);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1135);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Exhaust to your Tornado.");
					    ShowPlayerDialog(playerid, TUNE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Exhausts List", "{FFFFFF}Item: Wheel Arch Alien Exhaust - Price: $1K\nItem: Wheel Arch X-Flow Exhaust - Price: $1K\nItem: Locos Low Chromer Exhaust - Price: $1K\nLocos Low Slamin Exhaust - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Locos Low type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
            }
			case 4:
            {
                 ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
            }
            }
	    }
   }

   case TUNE_MENU4:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				   GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				   GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				   GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				   GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
				   {

		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
		            {
					if(GetPlayerCash(playerid) >= 1000)
                    {
		            	AddVehicleComponent(GetPlayerVehicleID(playerid),1171);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1171);
		            	GivePlayerCash(playerid,-1000);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Front Bumper to your Elegy.");
		            	ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1153);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1153);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Front Bumper to your Flash.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1160);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1160);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Front Bumper to your Jester.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1155);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1155);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Front Bumper to your Stratum.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1169);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1169);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Front Bumper to your Sultan.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1166);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1166);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Front Bumper to your Uranus.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Wheel Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
	                }
	                }
            }
			case 1:
            {
                   if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
	               GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
	               GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
	               GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
                   GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		           {


			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
			        {
					if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1172);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1172);
		            	GivePlayerCash(playerid,-1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Front Bumper to your Elegy.");
			            ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1152);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1152);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Front Bumper to your Flash.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1173);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1173);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Front Bumper to your Jester.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1157);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1157);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Front Bumper to your Stratum.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1170);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1170);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Front Bumper to your Sultan.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1165);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1165);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Front Bumper to your Uranus.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Wheel Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
		    }
			case 2:
            {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
				{

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1179);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1179);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Front Bumper to your Remington.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1189);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1189);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Front Bumper to your Savanna.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1182);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1182);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Front Bumper to your Blade.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1115);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1115);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Front Bumper to your Slamvan.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1191);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1191);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Front Bumper to your Tornado.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Locos Low type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
			}
            case 3:
            {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
	            GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
			    {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1185);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1185);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Front Bumper to your Remington.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1188);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1188);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Front Bumper to your Savanna.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1181);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1181);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Front Bumper to your Blade.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
                    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1116);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1116);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Front Bumper to your Slamvan.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1190);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1190);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Front Bumper to your Tornado.");
					    ShowPlayerDialog(playerid, TUNE_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Front Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Locos Low type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
                    }
                    }
            }
            case 4:
            {
                 ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
            }
            }
        }
   }

   case TUNE_MENU5:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {

		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
		            {
					if(GetPlayerCash(playerid) >= 1000)
                    {
		            	AddVehicleComponent(GetPlayerVehicleID(playerid),1149);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1149);
		            	GivePlayerCash(playerid,-1000);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Rear Bumper to your Elegy.");
		            	ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1150);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1150);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Rear Bumper to your Flash.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1159);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1159);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Rear Bumper to your Jester.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1154);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1154);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Rear Bumper to your Stratum.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1141);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1141);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Rear Bumper to your Sultan.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1168);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1168);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Rear Bumper to your Uranus.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Wheel Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
            }
			case 1:
            {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {


			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
			        {
					if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1148);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1148);
		            	GivePlayerCash(playerid,-1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Rear Bumper to your Elegy.");
		                ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1151);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1151);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Rear Bumper to your Flash.");
				        ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1161);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1161);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Rear Bumper to your Jester.");
				        ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1156);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1156);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Rear Bumper to your Stratum.");
				        ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1140);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1140);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Rear Bumper to your Sultan.");
				        ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1167);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1167);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Rear Bumper to your Uranus.");
				        ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Wheel Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
            }
			case 2:
            {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
			    {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1180);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1180);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Rear Bumper to your Remington.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1187);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1187);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Rear Bumper to your Savanna.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1184);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1184);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Rear Bumper to your Blade.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1109);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1109);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Rear Bumper to your Slamvan.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1192);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1192);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Chromer Rear Bumper to your Tornado.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Locos Low type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
            }
			case 3:
            {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
			    {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1178);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1178);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Rear Bumper to your Remington.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1186);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1186);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Rear Bumper to your Savanna.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1183);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1183);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Rear Bumper to your Blade.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1110);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1110);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Rear Bumper to your Slamvan.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1193);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1193);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Slamin Rear Bumper to your Tornado.");
					    ShowPlayerDialog(playerid, TUNE_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rear Bumpers List", "{FFFFFF}Item: Wheel Arch Alien Bumper - Price: $1K\nItem: Wheel Arch X-Flow Bumper - Price: $1K\nItem: Locos Low Chromer Bumper - Price: $1K\nItem: Locos Low Slamin Bumper - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Locos Low type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
            }
            case 4:
            {
                 ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
            }
            }
        }
   }

   case TUNE_MENU6:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {


		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
		            {
					if(GetPlayerCash(playerid) >= 1000)
                    {
		            	AddVehicleComponent(GetPlayerVehicleID(playerid),1035);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1035);
		            	GivePlayerCash(playerid,-1000);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Roof Vent to your Elegy.");
		            	ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1054);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1054);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Roof Vent to your Flash.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1067);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1067);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Roof Vent to your Jester.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1055);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1055);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Roof Vent to your Stratum.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1032);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1032);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Roof Vent to your Sultan.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1088);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1088);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Roof Vent to your Uranus.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Wheel Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
            }
	        case 1:
			{
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {



			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
			        {
					if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1035);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1035);
		            	GivePlayerCash(playerid,-1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Roof Vent to your Elegy.");
			            ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1053);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1053);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Roof Vent to your Flash.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1068);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1068);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Roof Vent to your Jester.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1061);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1061);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Roof Vent to your Stratum.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1033);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1033);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Roof Vent to your Sultan.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1091);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1091);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Roof Vent to your Uranus.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Wheel Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
			}
			case 2:
			{
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
			    {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1128);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1128);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Hardtop Roof to your Blade.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
			        else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
			        {
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1128);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1128);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Hardtop Roof to your Savanna.");
					    ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to a Savanna or Blade.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
            }
		    case 3:
			{
                 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
			    {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
			        {
					if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1131);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1131);
		            	GivePlayerCash(playerid,-1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,YELLOW,"You have added a Locos Low Softtop Roof to your Savanna.");
			            ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
	   				else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
					{
					if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1103);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1103);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Locos Low Softtop Roof to your Blade.");
                        ShowPlayerDialog(playerid, TUNE_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Roofs List", "{FFFFFF}Item: Wheel Arch Alien Roof Vent - Price: $1K\nItem: Wheel Arch X-Flow Roof Vent - Price: $1K\nItem: Locos Low Hardtop Roof - Price: $1K\nItem: Locos Low Softtop Roof - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to a Savanna or Blade.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
            }
            case 4:
            {
                 ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
            }
            }
	     }
   }

   case TUNE_MENU7:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {
                    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
		            {
					if(GetPlayerCash(playerid) >= 2000)
                    {
		            	AddVehicleComponent(GetPlayerVehicleID(playerid),1147);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1147);
		            	GivePlayerCash(playerid,-2000);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Spoiler to your Elegy.");
		            	ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
					if(GetPlayerCash(playerid) >= 2000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1049);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1049);
		            	GivePlayerCash(playerid,-2000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Spoiler to your Flash.");
					    ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
					if(GetPlayerCash(playerid) >= 2000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1162);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1162);
		            	GivePlayerCash(playerid,-2000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Spoiler to your Jester.");
					    ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, " {FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
					if(GetPlayerCash(playerid) >= 2000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1158);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1158);
		            	GivePlayerCash(playerid,-2000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Spoiler to your Stratum.");
					    ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
					if(GetPlayerCash(playerid) >= 2000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1138);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1138);
		            	GivePlayerCash(playerid,-2000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Spoiler to your Sultan.");
					    ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
					if(GetPlayerCash(playerid) >= 2000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1164);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1164);
		            	GivePlayerCash(playerid,-2000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch Alien Spoiler to your Uranus.");
					    ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Wheel Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
    	    }
            case 1:
			{
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
			        {
					if(GetPlayerCash(playerid) >= 2000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1146);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1146);
		            	GivePlayerCash(playerid,-2000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Spoiler to your Elegy.");
			            ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
					if(GetPlayerCash(playerid) >= 2000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1150);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1150);
		            	GivePlayerCash(playerid,-2000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Spoiler to your Flash.");
					    ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
					if(GetPlayerCash(playerid) >= 2000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1158);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1158);
		            	GivePlayerCash(playerid,-2000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Spoiler to your Jester.");
					    ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
					if(GetPlayerCash(playerid) >= 2000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1060);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1060);
		            	GivePlayerCash(playerid,-2000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Spoiler to your Stratum.");
					    ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
					if(GetPlayerCash(playerid) >= 2000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1139);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1139);
		            	GivePlayerCash(playerid,-2000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Spoiler to your Sultan.");
					    ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
					if(GetPlayerCash(playerid) >= 2000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1163);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1163);
		            	GivePlayerCash(playerid,-2000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added a Wheel Arch X-Flow Spoiler to your Uranus.");
					    ShowPlayerDialog(playerid, TUNE_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Spoilers List", "{FFFFFF}Item: Alien Spoiler - Price: $2K\nItem: X-Flow Spoiler - Price: $2K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to X-Flow Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
            }
            case 2:
            {
                 ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
            }
            }
	   	 }
    }

    case TUNE_MENU8:
    {
		if(response)
		{
		    switch(listitem)
            {
			case 0:
			{
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {

		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
		            {
		            if(GetPlayerCash(playerid) >= 1000)
                    {
		            	AddVehicleComponent(GetPlayerVehicleID(playerid),1036);
		            	AddVehicleComponent(GetPlayerVehicleID(playerid),1040);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1036);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1040);
		            	GivePlayerCash(playerid,-1000);
		            	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	              		SendClientMessage(playerid,YELLOW,"You have added Wheel Arch Alien Sideskirts to your Elegy.");
		            	ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
                    }
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1047);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1051);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1047);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1051);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Wheel Arch Alien Sideskirts to your Flash.");
					    ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1069);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1071);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Wheel Arch Alien Sideskirts to your Jester.");
					    ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1056);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1062);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1056);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1062);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Wheel Arch Alien Sideskirts to your Stratum.");
					    ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1026);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1027);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1026);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1027);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Wheel Arch Alien Sideskirts to your Sultan.");
					    ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1090);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1094);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1090);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1094);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				 	    SendClientMessage(playerid,YELLOW,"You have added Wheel Arch Alien Sideskirts to your Uranus.");
					    ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Wheel Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
					}
		    }
	   	    case 1:
			{
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
			        {
		            if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1039);
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1041);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1039);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1041);
		            	GivePlayerCash(playerid,-1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,YELLOW,"You have added Wheel Arch X-Flow Sideskirts to your Elegy.");
			            ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1048);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1052);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1048);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1052);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Wheel Arch X-Flow Sideskirts to your Flash.");
					    ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1070);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1072);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1070);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1072);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Wheel Arch X-Flow Sideskirts to your Jester.");
					    ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1057);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1063);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1057);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1063);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Wheel Arch X-Flow Sideskirts to your Stratum.");
					    ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1031);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1030);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1031);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1030);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Wheel Arch X-Flow Sideskirts to your Sultan.");
					    ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1093);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1095);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1093);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1095);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Wheel Arch X-Flow Sideskirts to your Uranus.");
					    ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to Wheel Arch Angels type cars.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");}
		            }
		    }
		    case 2:
			{
                 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
	               GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
		 	       GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
                   {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1102);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1133);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1102);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1133);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Locos Low Chrome Strip Sideskirts to your Savanna.");
	    		        ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
	                }
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
	                else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1134);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1137);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1134);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1137);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Locos Low Chrome Strip Sideskirts to your Tornado.");
	    		        ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
	                }
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
	                else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
					{
		            if(GetPlayerCash(playerid) >= 1000)
                    {
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1108);
					    AddVehicleComponent(GetPlayerVehicleID(playerid),1107);
					    OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1108);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1107);
		            	GivePlayerCash(playerid,-1000);
					    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					    SendClientMessage(playerid,YELLOW,"You have added Locos Low Chrome Strip Sideskirts to your Blade.");
	                    ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
	                }
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to a Savanna, Tornado or Blade.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");}
	                }
	        }
	  	    case 3:
			{
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
			    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
			        {
		            if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1122);
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1101);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1122);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1101);
		            	GivePlayerCash(playerid,-1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,YELLOW,"You have added Locos Low Chrome Flames Sideskirts to your Locos Remington.");
			            ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to a Remington.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");}
			        }
			}
			case 4:
			{
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
			    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
			        {
		            if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1106);
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1124);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1106);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1124);
		            	GivePlayerCash(playerid,-1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,YELLOW,"You have added Locos Low Chrome Arches Sideskirts to your Remington.");
			            ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to a Remington.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");}
			        }
			}
			case 5:
			{
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)

			    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
			        {
		            if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1118);
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1120);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1118);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1120);
		            	GivePlayerCash(playerid,-1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,YELLOW,"You have added Locos Low Chrome Trim Sideskirts to your Slamvan.");
			            ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to a Slamvan.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");}
			        }
			}
			case 6:
			{
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)

			    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
			        {
		            if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1119);
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1121);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1119);
		            	OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1121);
		            	GivePlayerCash(playerid,-1000);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            SendClientMessage(playerid,YELLOW,"You have added Locos Low Chrome Wheelcovers to your Slamvan.");
			            ShowPlayerDialog(playerid, TUNE_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Sideskirts List", "{FFFFFF}Item: Wheel Arch Alien Sideskirts - Price: $1K\nItem: Wheel Arch X-Flow Sideskirts - Price: $1K\nItem: Locos Low Chrome Strip - Price: $1K\nItem: Locos Low Chrome Flames - Price: $1K\nItem: Locos Low Chrome Arches - Price: $1K\nItem: Locos Low Chrome Trim - Price: $1K\nItem: Locos Low Wheelcovers - Price: $1K\nBack", "Select", "Cancel");
					}
                    else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to a Slamvan.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");}
			        }
			}
			case 7:
            {
                 ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");}
            }
         }
   }

   case TUNE_MENU9:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)

			    {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
			        {
					if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1100);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1100);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            GivePlayerCash(playerid,-1000);
			            SendClientMessage(playerid,YELLOW,"You have added Locos Low Chrome Grill to your Remington.");
			            ShowPlayerDialog(playerid, TUNE_MENU9, DIALOG_STYLE_LIST, "{FFFFFF}Bullbars List", "{FFFFFF}Item: Locos Low Chrome Grill - Price: $1K\nItem: Locos Low Chrome Bars - Price: $1K\nItem: Locos Low Chrome Lights - Price: $1K\nItem: Locos Low Chrome Bullbar - Price: $1K\nBack", "Select", "Cancel");
			        }
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to a Remington.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
			}
			case 1:
			{
                 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)

			    {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
			        {
					if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1123);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1123);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            GivePlayerCash(playerid,-1000);
			            SendClientMessage(playerid,YELLOW,"You have added Locos Low Chrome Bars to your Remington.");
			            ShowPlayerDialog(playerid, TUNE_MENU9, DIALOG_STYLE_LIST, "{FFFFFF}Bullbars List", "{FFFFFF}Item: Locos Low Chrome Grill - Price: $1K\nItem: Locos Low Chrome Bars - Price: $1K\nItem: Locos Low Chrome Lights - Price: $1K\nItem: Locos Low Chrome Bullbar - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to a Remington.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
			}
			case 2:
			{
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)

			    {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
			        {
					if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1125);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1125);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            GivePlayerCash(playerid,-1000);
			            SendClientMessage(playerid,YELLOW,"You have added Locos Low Chrome Lights to your Remington.");
			            ShowPlayerDialog(playerid, TUNE_MENU9, DIALOG_STYLE_LIST, "{FFFFFF}Bullbars List", "{FFFFFF}Item: Locos Low Chrome Grill - Price: $1K\nItem: Locos Low Chrome Bars - Price: $1K\nItem: Locos Low Chrome Lights - Price: $1K\nItem: Locos Low Chrome Bullbar - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to a Remington.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
			}
			case 3:
			{
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)

			    {

			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
			        {
					if(GetPlayerCash(playerid) >= 1000)
                    {
			            AddVehicleComponent(GetPlayerVehicleID(playerid),1117);
			            OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1117);
			            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			            GivePlayerCash(playerid,-1000);
			            SendClientMessage(playerid,YELLOW,"You have added Locos Low Chrome Lights to your Slamvan.");
			            ShowPlayerDialog(playerid, TUNE_MENU9, DIALOG_STYLE_LIST, "{FFFFFF}Bullbars List", "{FFFFFF}Item: Locos Low Chrome Grill - Price: $1K\nItem: Locos Low Chrome Bars - Price: $1K\nItem: Locos Low Chrome Lights - Price: $1K\nItem: Locos Low Chrome Bullbar - Price: $1K\nBack", "Select", "Cancel");
					}
					else
			        {
			            SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			        }
			        }
					else
					{
				    SendClientMessage(playerid,RED,"You can only add this component to a Slamvan.");
					ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
					}
					}
			}
			case 4:
            {
                 ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
            }
            }
       }
   }

   case TUNE_MENU10:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
			if(GetPlayerCash(playerid) >= 1000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1025);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1025);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     GivePlayerCash(playerid,-1000);
                 SendClientMessage(playerid,YELLOW,"You have added some Offroad Wheels.");
	             ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
	        }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
            case 1:
			{
			if(GetPlayerCash(playerid) >= 1000)
            {

			     AddVehicleComponent(GetPlayerVehicleID(playerid),1074);
			     OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1074);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     GivePlayerCash(playerid,-1000);
			     SendClientMessage(playerid,YELLOW,"You have added some Mega Wheels.");
			     ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
            case 2:
			{
			if(GetPlayerCash(playerid) >= 1000)
            {

	             AddVehicleComponent(GetPlayerVehicleID(playerid),1076);
	             OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1076);
			     GivePlayerCash(playerid,-1000);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,YELLOW,"You have added some Wires Wheels.");
			     ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
	        case 3:
			{
			if(GetPlayerCash(playerid) >= 1000)
            {

			     AddVehicleComponent(GetPlayerVehicleID(playerid),1078);
			     OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1078);
			     GivePlayerCash(playerid,-1000);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     SendClientMessage(playerid,YELLOW,"You have added some Twist Wheels.");
			     ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 4:
			{
			if(GetPlayerCash(playerid) >= 1000)
            {

			     AddVehicleComponent(GetPlayerVehicleID(playerid),1081);
			     OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1081);
			     GivePlayerCash(playerid,-1000);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     SendClientMessage(playerid,YELLOW,"You have added some Groove Wheels.");
		         ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 5:
			{
			if(GetPlayerCash(playerid) >= 1000)
            {

                 AddVehicleComponent(GetPlayerVehicleID(playerid),1082);
                 OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1082);
			     GivePlayerCash(playerid,-1000);
                 PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
   			     SendClientMessage(playerid,YELLOW,"You have added some Import Wheels.");
			     ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 6:
			{
			if(GetPlayerCash(playerid) >= 1000)
            {

			     AddVehicleComponent(GetPlayerVehicleID(playerid),1085);
			     OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1085);
			     GivePlayerCash(playerid,-1000);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     SendClientMessage(playerid,YELLOW,"You have added some Atomic Wheels.");
                 ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 7:
			{
			if(GetPlayerCash(playerid) >= 1000)
            {

			     AddVehicleComponent(GetPlayerVehicleID(playerid),1096);
			     OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1096);
			     GivePlayerCash(playerid,-1000);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	          	 SendClientMessage(playerid,YELLOW,"You have added some Ahab Wheels.");
			     ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 8:
			{
			if(GetPlayerCash(playerid) >= 1000)
            {

                 AddVehicleComponent(GetPlayerVehicleID(playerid),1097);
                 OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1097);
			     GivePlayerCash(playerid,-1000);
                 PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	           	 SendClientMessage(playerid,YELLOW,"You have added some Virtual Wheels.");
                 ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 9:
			{
			if(GetPlayerCash(playerid) >= 1000)
            {

			     AddVehicleComponent(GetPlayerVehicleID(playerid),1098);
			     OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1098);
			     GivePlayerCash(playerid,-1000);
			     PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	         	 SendClientMessage(playerid,YELLOW,"You have added some Access Wheels.");
			     ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 10:
			{
                 ShowPlayerDialog(playerid, TUNE_MENU13, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 2", "{FFFFFF}Item: Trance - Price: $1K\nItem: Shadow - Price: $1K\nItem: Rimshine - Price: $1K\nItem: Classic - Price: $1K\nItem: Cutter - Price: $1K\nItem: Switch - Price: $1K\nItem: Dollar - Price: $1K\nBack", "Select", "Cancel");
			}
			case 11:
            {
                 ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
            }
			}
		}
   }

   case TUNE_MENU11:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
			if(GetPlayerCash(playerid) >= 1000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1086);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1086);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         GivePlayerCash(playerid,-1000);
		         SendClientMessage(playerid,YELLOW,"You have added a Bass Boost Stereo System.");
		         ShowPlayerDialog(playerid, TUNE_MENU11, DIALOG_STYLE_LIST, "{FFFFFF}Car Stereos List", "{FFFFFF}Item: Bass Boost - Price: $1K\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 1:
            {
                 ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
            }
            }
		}
   }

   case TUNE_MENU12:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
		         ShowPlayerDialog(playerid, TUNE_MENU14, DIALOG_STYLE_LIST, "{FFFFFF}Hydraulics", "{FFFFFF}Item: Hydraulics - Price: $1K\nBack", "Select", "Cancel");
			}
			case 1:
			{
		         ShowPlayerDialog(playerid, TUNE_MENU15, DIALOG_STYLE_LIST, "{FFFFFF}Nitros Oxide", "{FFFFFF}Item: Nitro x2 - Price: $1K\nNitro x5 - Price: $2K\nNitro x10 - Price: $3K\nBack", "Select", "Cancel");
			}
			case 2:
			{
		         ShowPlayerDialog(playerid, TUNE_MENU16, DIALOG_STYLE_LIST, "{FFFFFF}Neons", "{FFFFFF}Item: Blue Neons - Price: $5K\nItem: Red Neons - Price: $5K\nItem: Green Neons - Price: $5K\nItem: Yellow Neons - Price: $5K\nItem: Pink Neons - Price: $5K\nItem: White Neons - Price: $5K\nRemove Neons\nBack", "Select", "Cancel");
			}
			case 3:
            {
                 ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
            }
            }
		}
	}

   case TUNE_MENU13:
   {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
		    if(GetPlayerCash(playerid) >= 1000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1084);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1084);
		         GivePlayerCash(playerid,-1000);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,YELLOW,"You have added some Trance Wheels.");
		         ShowPlayerDialog(playerid, TUNE_MENU13, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 2", "{FFFFFF}Item: Trance - Price: $1K\nItem: Shadow - Price: $1K\nItem: Rimshine - Price: $1K\nItem: Classic - Price: $1K\nItem: Cutter - Price: $1K\nItem: Switch - Price: $1K\nItem: Dollar - Price: $1K\nBack", "Select", "Cancel");
            }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
            case 1:
            {
		    if(GetPlayerCash(playerid) >= 1000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1073);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1073);
		         GivePlayerCash(playerid,-1000);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,YELLOW,"You have added some Shadow Wheels.");
		         ShowPlayerDialog(playerid, TUNE_MENU13, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 2", "{FFFFFF}Item: Trance - Price: $1K\nItem: Shadow - Price: $1K\nItem: Rimshine - Price: $1K\nItem: Classic - Price: $1K\nItem: Cutter - Price: $1K\nItem: Switch - Price: $1K\nItem: Dollar - Price: $1K\nBack", "Select", "Cancel");
            }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
            case 2:
            {
		    if(GetPlayerCash(playerid) >= 1000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1075);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1075);
		         GivePlayerCash(playerid,-1000);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,YELLOW,"You have added some Rimshine Wheels.");
		         ShowPlayerDialog(playerid, TUNE_MENU13, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 2", "{FFFFFF}Item: Trance - Price: $1K\nItem: Shadow - Price: $1K\nItem: Rimshine - Price: $1K\nItem: Classic - Price: $1K\nItem: Cutter - Price: $1K\nItem: Switch - Price: $1K\nItem: Dollar - Price: $1K\nBack", "Select", "Cancel");
            }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
            case 3:
            {
		    if(GetPlayerCash(playerid) >= 1000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1077);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1077);
		         GivePlayerCash(playerid,-1000);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,YELLOW,"You have added some Classic Wheels.");
		         ShowPlayerDialog(playerid, TUNE_MENU13, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 2", "{FFFFFF}Item: Trance - Price: $1K\nItem: Shadow - Price: $1K\nItem: Rimshine - Price: $1K\nItem: Classic - Price: $1K\nItem: Cutter - Price: $1K\nItem: Switch - Price: $1K\nItem: Dollar - Price: $1K\nBack", "Select", "Cancel");
            }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
            case 4:
            {
		    if(GetPlayerCash(playerid) >= 1000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1079);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1079);
		         GivePlayerCash(playerid,-1000);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,YELLOW,"You have added some Cutter Wheels.");
		         ShowPlayerDialog(playerid, TUNE_MENU13, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 2", "{FFFFFF}Item: Trance - Price: $1K\nItem: Shadow - Price: $1K\nItem: Rimshine - Price: $1K\nItem: Classic - Price: $1K\nItem: Cutter - Price: $1K\nItem: Switch - Price: $1K\nItem: Dollar - Price: $1K\nBack", "Select", "Cancel");
            }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
            case 5:
            {
		    if(GetPlayerCash(playerid) >= 1000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1080);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1080);
		         GivePlayerCash(playerid,-1000);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,YELLOW,"You have added some Switch Wheels.");
		         ShowPlayerDialog(playerid, TUNE_MENU13, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 2", "{FFFFFF}Item: Trance - Price: $1K\nItem: Shadow - Price: $1K\nItem: Rimshine - Price: $1K\nItem: Classic - Price: $1K\nItem: Cutter - Price: $1K\nItem: Switch - Price: $1K\nItem: Dollar - Price: $1K\nBack", "Select", "Cancel");
            }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
            case 6:
            {
		    if(GetPlayerCash(playerid) >= 1000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1083);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1083);
		         GivePlayerCash(playerid,-1000);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,YELLOW,"You have added some Dollar Wheels.");
		         ShowPlayerDialog(playerid, TUNE_MENU13, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 2", "{FFFFFF}Item: Trance - Price: $1K\nItem: Shadow - Price: $1K\nItem: Rimshine - Price: $1K\nItem: Classic - Price: $1K\nItem: Cutter - Price: $1K\nItem: Switch - Price: $1K\nItem: Dollar - Price: $1K\nBack", "Select", "Cancel");
            }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
            case 7:
            {
		         ShowPlayerDialog(playerid, TUNE_MENU10, DIALOG_STYLE_LIST, "{FFFFFF}Wheels List - 1", "{FFFFFF}Item: Offroad - Price: $1K\nItem: Mega - Price: $1K\nItem: Wires - Price: $1K\nItem: Twist - Price: $1K\nItem: Grove - Price: $1K\nItem: Import - Price: $1K\nItem: Atomic - Price: $1K\nItem: Ahab - Price: $1K\nItem: Virtual - Price: $1K\nItem: Access - Price: $1K\nNext\nBack", "Select", "Cancel");
            }
            }
		}
    }
    case TUNE_MENU14:
    {
		if(response)
		{
			switch(listitem)
            {
		    case 0:
		    {
		    if(GetPlayerCash(playerid) >= 1000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1087);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1087);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         GivePlayerCash(playerid,-1000);
		         SendClientMessage(playerid,YELLOW,"You have added Hydraulics to your car for $1K.");
		         ShowPlayerDialog(playerid, TUNE_MENU12, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 2", "{FFFFFF}Hydraulics\nNitros Oxide\nNeons\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 1:
		    {
			    ShowPlayerDialog(playerid, TUNE_MENU12, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 2", "{FFFFFF}Hydraulics\nNitros Oxide\nNeons\nBack", "Select", "Cancel");
			}
			}
		}
	}

	case TUNE_MENU15:
    {
		if(response)
		{
			switch(listitem)
            {
            case 0:
			{
			if(GetPlayerCash(playerid) >= 1000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1009);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1009);
		         GivePlayerCash(playerid,-1000);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,YELLOW,"You have added Nitros x2 to your car for $1K.");
		         ShowPlayerDialog(playerid, TUNE_MENU12, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 2", "{FFFFFF}Hydraulics\nNitros Oxide\nNeons\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 1:
			{
			if(GetPlayerCash(playerid) >= 2000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1008);
		         GivePlayerCash(playerid,-2000);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,YELLOW,"You have added Nitros x5 to your car for $2K.");
		         ShowPlayerDialog(playerid, TUNE_MENU12, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 2", "{FFFFFF}Hydraulics\nNitros Oxide\nNeons\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
		    case 2:
			{
			if(GetPlayerCash(playerid) >= 3000)
            {

		         AddVehicleComponent(GetPlayerVehicleID(playerid),1010);
		         OnVehicleMod(playerid,GetPlayerVehicleID(playerid),1010);
		         GivePlayerCash(playerid,-3000);
		         PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         SendClientMessage(playerid,YELLOW,"You have added Nitros x10 to your car for $3K.");
		         ShowPlayerDialog(playerid, TUNE_MENU12, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 2", "{FFFFFF}Hydraulics\nNitros Oxide\nNeons\nBack", "Select", "Cancel");
			}
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 3:
		    {
			    ShowPlayerDialog(playerid, TUNE_MENU12, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 2", "{FFFFFF}Hydraulics\nNitros Oxide\nNeons\nBack", "Select", "Cancel");
			}
			}
		}
	}
	case TUNE_MENU16:
    {
		if(response)
		{
			switch(listitem)
            {
            case 0:
			{
			if(IsPlayerInOwnedVehicle(playerid, GetPlayerVehicleID(playerid)) == 0) return SendClientMessage(playerid, RED, "You can only buy neons for owned vehicles.");
			if(GetPlayerCash(playerid) >= 5000)
			{
			    DestroyNeons(GetPlayerVehicleID(playerid));
		    	blueneons[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18648,0,0,0,0,0,0);
            	blueneons2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18648,0,0,0,0,0,0);
            	AttachDynamicObjectToVehicle(blueneons[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	AttachDynamicObjectToVehicle(blueneons2[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				VehicleInfo[IsShopVehicle[GetPlayerVehicleID(playerid)]][vNeons] = BLUE_NEONS;
                GivePlayerCash(playerid,-5000);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				SaveVehicleStats(IsShopVehicle[GetPlayerVehicleID(playerid)]);
                SendClientMessage(playerid, YELLOW, "You have added Blue Neons to your car for $5K.");
				ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
		    }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 1:
			{
			if(IsPlayerInOwnedVehicle(playerid, GetPlayerVehicleID(playerid)) == 0) return SendClientMessage(playerid, RED, "You can only buy neons for owned vehicles.");
			if(GetPlayerCash(playerid) >= 5000)
			{
			    DestroyNeons(GetPlayerVehicleID(playerid));
		    	redneons[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18647,0,0,0,0,0,0);
            	redneons2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18647,0,0,0,0,0,0);
            	AttachDynamicObjectToVehicle(redneons[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	AttachDynamicObjectToVehicle(redneons2[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				VehicleInfo[IsShopVehicle[GetPlayerVehicleID(playerid)]][vNeons] = RED_NEONS;
                GivePlayerCash(playerid,-5000);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				SaveVehicleStats(IsShopVehicle[GetPlayerVehicleID(playerid)]);
                SendClientMessage(playerid, YELLOW, "You have added Red Neons to your car for $5K.");
				ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
		    }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 2:
			{
			if(IsPlayerInOwnedVehicle(playerid, GetPlayerVehicleID(playerid)) == 0) return SendClientMessage(playerid, RED, "You can only buy neons for owned vehicles.");
			if(GetPlayerCash(playerid) >= 5000)
			{
			    DestroyNeons(GetPlayerVehicleID(playerid));
		    	greenneons[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18649,0,0,0,0,0,0);
      			greenneons2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18649,0,0,0,0,0,0);
            	AttachDynamicObjectToVehicle(greenneons[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	AttachDynamicObjectToVehicle(greenneons2[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				VehicleInfo[IsShopVehicle[GetPlayerVehicleID(playerid)]][vNeons] = GREEN_NEONS;
                GivePlayerCash(playerid,-5000);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				SaveVehicleStats(IsShopVehicle[GetPlayerVehicleID(playerid)]);
                SendClientMessage(playerid, YELLOW, "You have added Green Neons to your car for $5K.");
				ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
		    }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 3:
			{
			if(IsPlayerInOwnedVehicle(playerid, GetPlayerVehicleID(playerid)) == 0) return SendClientMessage(playerid, RED, "You can only buy neons for owned vehicles.");
			if(GetPlayerCash(playerid) >= 5000)
			{
			    DestroyNeons(GetPlayerVehicleID(playerid));
		    	yellowneons[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18650,0,0,0,0,0,0);
       			yellowneons2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18650,0,0,0,0,0,0);
            	AttachDynamicObjectToVehicle(yellowneons[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	AttachDynamicObjectToVehicle(yellowneons2[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				VehicleInfo[IsShopVehicle[GetPlayerVehicleID(playerid)]][vNeons] = YELLOW_NEONS;
                GivePlayerCash(playerid,-5000);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				SaveVehicleStats(IsShopVehicle[GetPlayerVehicleID(playerid)]);
                SendClientMessage(playerid, YELLOW, "You have added Yellow Neons to your car for $5K.");
				ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
		    }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 4:
			{
			if(IsPlayerInOwnedVehicle(playerid, GetPlayerVehicleID(playerid)) == 0) return SendClientMessage(playerid, RED, "You can only buy neons for owned vehicles.");
			if(GetPlayerCash(playerid) >= 5000)
			{
			    DestroyNeons(GetPlayerVehicleID(playerid));
		    	pinkneons[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18651,0,0,0,0,0,0);
          		pinkneons2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18651,0,0,0,0,0,0);
            	AttachDynamicObjectToVehicle(pinkneons[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	AttachDynamicObjectToVehicle(pinkneons2[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				VehicleInfo[IsShopVehicle[GetPlayerVehicleID(playerid)]][vNeons] = PINK_NEONS;
                GivePlayerCash(playerid,-5000);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				SaveVehicleStats(IsShopVehicle[GetPlayerVehicleID(playerid)]);
                SendClientMessage(playerid, YELLOW, "You have added Pink Neons to your car for $5K.");
				ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
		    }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 5:
			{
			if(IsPlayerInOwnedVehicle(playerid, GetPlayerVehicleID(playerid)) == 0) return SendClientMessage(playerid, RED, "You can only buy neons for owned vehicles.");
			if(GetPlayerCash(playerid) >= 5000)
			{
			    DestroyNeons(GetPlayerVehicleID(playerid));
		    	whiteneons[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18652,0,0,0,0,0,0);
          		whiteneons2[GetPlayerVehicleID(playerid)] = CreateDynamicObject(18652,0,0,0,0,0,0);
            	AttachDynamicObjectToVehicle(whiteneons[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	AttachDynamicObjectToVehicle(whiteneons2[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
				VehicleInfo[IsShopVehicle[GetPlayerVehicleID(playerid)]][vNeons] = WHITE_NEONS;
                GivePlayerCash(playerid,-5000);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				SaveVehicleStats(IsShopVehicle[GetPlayerVehicleID(playerid)]);
                SendClientMessage(playerid, YELLOW, "You have added White Neons to your car for $5K.");
				ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
		    }
			else
			{
			     SendClientMessage(playerid,RED,"POOL KAFI NADARI!");
			}
			}
			case 6:
			{
				if(IsPlayerInOwnedVehicle(playerid, GetPlayerVehicleID(playerid)) == 0) return SendClientMessage(playerid, RED, "You can only remove neons from owned vehicles.");
			    DestroyNeons(GetPlayerVehicleID(playerid));
				SaveVehicleStats(IsShopVehicle[GetPlayerVehicleID(playerid)]);
				VehicleInfo[IsShopVehicle[GetPlayerVehicleID(playerid)]][vNeons] = NO_NEONS;
			    SendClientMessage(playerid, YELLOW, "Neons Removed.");
				ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
			}
			case 7:
		    {
			    ShowPlayerDialog(playerid, TUNE_MENU12, DIALOG_STYLE_LIST, "Tune Menu - 2", "Hydraulics\nNitros Oxide\nNeons\nBack", "Select", "Cancel");
			}
			}
		}
    }
    case PANEL_MENU:
    {
        if(response)
        {
            switch(listitem)
            {
                case 0:
		        {
		            ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapons", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
		        }
		        case 1:
		        {
                    ShowPlayerDialog(playerid,VEHICLE_MENU,DIALOG_STYLE_INPUT,"{FFFFFF}Vehicles","{FFFFFF}Enter the name of any vehicle below:","Spawn","Cancel");
		        }
		        case 2:
		        {
		            ShowPlayerDialog(playerid, TELE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Teleports", "{FFFFFF}Exterior Locations\nInterior Locations\nAirports", "Select", "Cancel");
		        }
		        case 3:
		        {
		            ShowPlayerDialog(playerid,SKIN_MENU,DIALOG_STYLE_INPUT,"{FFFFFF}Skins","{FFFFFF}Enter a skin id from 0-311:","Set","Cancel");
		        }
		        case 4:
		        {
		            ShowPlayerDialog(playerid, TUNE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Tune Menu - 1","{FFFFFF}Paint Jobs\nColors\nExhausts\nFront Bumpers\nRear Bumpers\nRoofs\nSpoilers\nSideskirts\nBullbars\nWheels\nCar Stereos\nNext", "Select", "Cancel");
                }
				case 5:
		        {
					new EV[2000];
					strcat(EV,"{FFFFFF}Commands: /(start/finish)event /(dis)armevent /eventvehs /(start/stop)joins /levent /getevent /countdown /(un)freezevent /e\n\nSome ACNR Events:\n\n- 'Hide'Or'Die' - Players given some time to hide in a open area/building,\nThen admins find/kill them all,Last one standing wins 500k.\n\n- 'Kill'That'Admin' - Admins arm up with bodyguards and announce random amounts on their heads,\nEach admin kill rises the win amount (ACNR Signature event)");
                    ShowPlayerDialog(playerid,EVENTS_HOWTO, DIALOG_STYLE_MSGBOX ,"{FFFFFF}ACNR Events",EV, "Ok", "");
                }
                case 6:
                {
					new OJ[2000];
					strcat(OJ,"{FFFFFF}/bojlist  /createobject  /cancelobject  /setobject  /attachobject  /detachobject\n");
					strcat(OJ,"{FFFFFF}/moveobject  /moveup  /movedown  /movenorth  /movesouth  /moveeast  /movewest\n");
					strcat(OJ,"{FFFFFF}/rotatex  /rotatey  /rotatez");
                    ShowPlayerDialog(playerid, OBJECTS_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Objects", OJ, "Ok", "");
                }
                case 7:
                {
                	new ACMDS[2000];
                	if(PlayerInfo[playerid][Helper] == 1 || PlayerInfo[playerid][hHelper] == 1)
	        		{
            	        strcat(ACMDS, "{009E00}Helper: {FFFFFF}/warn  /rwarn\n\n");
           	        }
            		if(PlayerInfo[playerid][hHelper] == 1)
	           		{
             	        strcat(ACMDS, "{009E00}Head Helper: {FFFFFF}/sethelper  /openhanger  /closehanger  /exitat  (+ Helper cmds) ( Dastresi be Admin Tower )\n\n");
          	  	    }
           	 	    if(IsPlayerSetBuilder{playerid} == true)
        			{
            		    strcat(ACMDS, "{009E00}Builder: {FFFFFF}/hcmds  /bcmds\n\n");
            		}
          	  	    if(PlayerInfo[playerid][aLevel] >= 1)
        			{
          	            strcat(ACMDS, "{009E00}Lvl 1: {FFFFFF}/duty  /a  /spec  /specoff  /cage  /freeze  /unfreeze  /ap  /aranks  /mutelist  /car  /undercover\n");
          	            strcat(ACMDS, "{009E00}Lvl 1: {FFFFFF}/gotoat  /gotocells  /mute  /unmute  /nmute  /savepos  /loadpos  /exitat  /plus  /minus  /afuel  /objects\n");
         	            strcat(ACMDS, "{009E00}Lvl 1: {FFFFFF}/warn  /rwarn  /kick  /ann  /asay  /clearchat  /addnos  /disarm  /color  /sn  /kojam  /drag\n");
        	            strcat(ACMDS, "{009E00}Lvl 1: {FFFFFF}( Dastresi be Admin Tower )\n\n");
        			}
        	    	if(PlayerInfo[playerid][aLevel] >= 2)
        			{
        	            strcat(ACMDS, "{009E00}Lvl 2: {FFFFFF}/aweaps  /gcar  /jetpack  /ban  /afix  /events  /god  /godcar  /goto  /explode  /force  /carrespawn\n");
        	            strcat(ACMDS, "{009E00}Lvl 2: {FFFFFF}/flip  /akill  /givegun  /givecash  /reloadbans  /anopm  /jail  /uncage  /ip  /slap  /checkweap\n");
        	            strcat(ACMDS, "{009E00}Lvl 2: {FFFFFF}( + admin lvl 1 cmds )\n\n");
        	    	}
        	    	if(PlayerInfo[playerid][aLevel] >= 3)
        			{
        	            strcat(ACMDS, "{009E00}Lvl 3: {FFFFFF}/restart  /get  /unban  /blockip  /unblockip  /respawncars  /gg  /settime  /setweather  /sethelper\n");
        	            strcat(ACMDS, "{009E00}Lvl 3: {FFFFFF}/banip  /setwanted  /sethp  /sethealth  /setarm  /setarmour  /setcash  /setskin  /vslap  /dcar\n");
        	            strcat(ACMDS, "{009E00}Lvl 3: {FFFFFF}( + admin lvl 1-2 cmds )\n\n");
        	    	}
    	        	if(PlayerInfo[playerid][aLevel] >= 4)
		        	{
                	    strcat(ACMDS, "{009E00}Lvl 4: {FFFFFF}/setscore  /setadmin  /setvip  /sethhelper  /setbuilder  /cvote  /votes\n");
                	    strcat(ACMDS, "{009E00}Lvl 4: {FFFFFF}/fsay  /cchat  /fly  /startfly  /stopfly  /playaudio  /hcmds  /bcmds  /supervslap\n");
                	    strcat(ACMDS, "{009E00}Lvl 4: {FFFFFF}( + admin lvl 1-3 cmds )\n\n");
    	        	}
    	        	if(IsPlayerAdmin(playerid))
		        	{
                	    strcat(ACMDS, "{009E00}RCON: {FFFFFF}/setadmin  /setvip  /restart  /goto  /cvote  /votes  /gotoat  /ip  /a  /anopm\n");
                	    strcat(ACMDS, "{009E00}RCON: {FFFFFF}/ban  /kick  /banip  /unban  /fly  /checkweap  /kojam  /god  /reloadbans  /ap  /fsay\n");
                	    strcat(ACMDS, "{009E00}RCON: {FFFFFF}( Dastresi be Admin Tower )");
    	        	}
                    ShowPlayerDialog(playerid, ACMDS_LIST , DIALOG_STYLE_MSGBOX, "{00C5B6}ACNR Admin CMDs", ACMDS, "Ok", "");
                }
		    }
		}
    }
    case TELE_MENU:
    {
        if(response)
        {
            switch(listitem)
            {
                case 0:
		        {
                    ShowPlayerDialog(playerid, TELE_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Exterior Locations", "{FFFFFF}Fort Carson\nPrickle Pine\nPalamino Creek\nGrove Street\nDoherty\nCome-A-Lot\nTemple\nMt Chilliad\nSanta Maria Beach\nIdlewood\nOcean Flats\nSF Aircraft Carrier\nArea 69\nLiberty City\n4 Dragons Casino\nCaligulas Casino\nPD\nMeydan Asli\nKACC Military Fuels\nBlackfield\nBayside", "Select", "Cancel");
                }
                case 1:
		        {
                    ShowPlayerDialog(playerid, TELE_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Interior Locations", "{FFFFFF}Kickstart Arena\n Arena\nJizzys Pleasure Dome\nJefferson Motel\nZero's RC Battlefield\nShamal Passenger Plane\nAdromoda Cargo Plane", "Select", "Cancel");
                }
                case 2:
		        {
                    ShowPlayerDialog(playerid, TELE_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}Airports", "{FFFFFF}Los Santos International Airport\nSan Fierro Easter Basin Airport\nLas Venturas Airport\nAbandoned Airfield, Verdant Meadows", "Select", "Cancel");
                }
            }
        }
    }
    case TELE_MENU1:
    {
        if(response)
		{
	        switch(listitem)
            {
            case 0:
		    {
		        SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid), -361.10, 1185.23, 20.49);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,-361.10, 1185.23, 20.49);
                SendClientMessage(playerid, LIGHTGREEN ,"Fort Carson.");
            }
            case 1:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid), 1293.61, 2529.54, 11.42);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,1293.61, 2529.54, 11.42);
                SendClientMessage(playerid, LIGHTGREEN ,"Prickle Pine.");
            }
            case 2:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid), 2231.64, 156.93, 27.63);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,2231.64, 156.93, 27.63);
                SendClientMessage(playerid, LIGHTGREEN ,"Palomino Creek, Red County.");
            }
            case 3:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid), 2505.64, -1683.72, 14.25);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,2505.64, -1683.72, 14.25);
                SendClientMessage(playerid, LIGHTGREEN ,"Grove Street, Los Santos.");
            }
            case 4:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid), -1935.77, 228.79, 34.16);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,-1935.77, 228.79, 34.16);
                SendClientMessage(playerid, LIGHTGREEN ,"Doherty, San Fierro.");
            }
            case 5:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid), 2126.628417,1144.060058,13.281629);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,2126.628417,1144.060058,13.281629);
                SendClientMessage(playerid, LIGHTGREEN ,"Come-A-Lot.");
            }
            case 6:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),1041.26, -1036.77, 32.48);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,1041.26, -1036.77, 32.48);
                SendClientMessage(playerid, LIGHTGREEN ,"Temple, Los Santos.");
            }
            case 7:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),-2234.2651,-1736.5273,480.8152);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,-2234.2651,-1736.5273,480.8152);
                SendClientMessage(playerid, LIGHTGREEN ,"Mt Chilliad, Flint County.");
            }
            case 8:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),322.65, -1780.30, 5.55);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,322.65, -1780.30, 5.55);
                SendClientMessage(playerid, LIGHTGREEN ,"Santa Maria Beach, Los Santos.");
            }
            case 9:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),2078.44, -1831.44, 14.13);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,2078.44, -1831.44, 14.13);
                SendClientMessage(playerid, LIGHTGREEN ,"Idlewood, Los Santos.");
            }
            case 10:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),-2707.48, 218.65, 4.93);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,-2707.48, 218.65, 4.93);
                SendClientMessage(playerid, LIGHTGREEN ,"Ocean Flats, San Fierro.");
            }
            case 11:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),-1347.7941,497.3724,18.2344);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,-1347.7941,497.3724,18.2344);
                SendClientMessage(playerid, LIGHTGREEN ,"Aircraft Carrier, San Fierro.");
            }
            case 12:
		    {
                SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),283.4610,2036.9712,17.6406);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,283.4610,2036.9712,17.6406);
                SendClientMessage(playerid, LIGHTGREEN ,"Area 69.");
            }
            case 13:
		    {
                SetPlayerInterior(playerid, 1);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),-729.276000,503.086944,1371.971801);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),1);
		        }
                SetPlayerPos(playerid,-729.276000,503.086944,1371.971801);
                SendClientMessage(playerid, LIGHTGREEN ,"Liberty City.");
            }
            case 14:
		    {
		        SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),2028.1781,1008.2630,10.8203);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
                SetPlayerPos(playerid,2028.1781,1008.2630,10.8203);
               	SendClientMessage(playerid, LIGHTGREEN, "4 Dragons Casino.");
		    }
		    case 15:
		    {
		        SetPlayerInterior(playerid, 0);
         		SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),2183.7783,1678.1868,11.0807);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
              	SetPlayerPos(playerid,2183.7783,1678.1868,11.0807);
              	SendClientMessage(playerid, LIGHTGREEN, "Caligulas Casino.");
		    }
		    case 16:
		    {
		      	SetPlayerInterior(playerid, 0);
              	SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),2290.2549,2424.4880,10.8203);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
               	SetPlayerPos(playerid,2290.2549,2424.4880,10.8203);
              	SendClientMessage(playerid, LIGHTGREEN, "PD.");
		    }
		    case 17:
		    {
		      	SetPlayerInterior(playerid, 0);
              	SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),2298.8076,2352.6245,10.8203);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
               	SetPlayerPos(playerid,2298.8076,2352.6245,10.8203);
              	SendClientMessage(playerid, LIGHTGREEN, "Meydan Asli.");
		    }
		    case 18:
		    {
		      	SetPlayerInterior(playerid, 0);
              	SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),2619.0615,2720.9163,36.5386);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
              	SetPlayerPos(playerid,2619.0615,2720.9163,36.5386);
             	SendClientMessage(playerid, LIGHTGREEN, "KACC Military Fuels.");
			}
		    case 19:
		    {
      			SetPlayerInterior(playerid, 0);
            	SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),1129.4067,1311.8624,10.8203);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
               	SetPlayerPos(playerid,1129.4067,1311.8624,10.8203);
             	SendClientMessage(playerid, LIGHTGREEN, "Blackfield.");
		    }
		    case 20:
		    {
      			SetPlayerInterior(playerid, 0);
            	SetPlayerVirtualWorld(playerid, 0);
                if(GetPlayerVehicleID(playerid))
                {
		            SetVehiclePos(GetPlayerVehicleID(playerid),-2437.4387,2236.8357,4.9844);
		            LinkVehicleToInterior(GetPlayerVehicleID(playerid),0);
		        }
               	SetPlayerPos(playerid,-2437.4387,2236.8357,4.9844);
             	SendClientMessage(playerid, LIGHTGREEN, "Bayside.");
		    }
            }
		}
	}
	case TELE_MENU2:
    {
        if(response)
        {
	        switch(listitem)
            {
                case 0:
		        {
                    SetPlayerInterior(playerid, 14);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,-1410.72, 1591.16, 1052.53);
                    SendClientMessage(playerid, LIGHTGREEN ,"Kickstart Arena.");
		        }
		        case 1:
		        {
					IsPlayerInArena{playerid} = true;
		            SetPlayerInterior(playerid, 15);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,-1394.20, 987.62, 1023.96);
                    SendClientMessage(playerid, LIGHTGREEN ,"Arena.");
					SendClientMessage(playerid, WHITE, "Welcome to  Arena, use /exitarena at anytime to leave.");
		        }
		        case 2:
		        {
                    SetPlayerInterior(playerid, 3);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,-2660.6185, 1426.8320, 907.3626);
                    SendClientMessage(playerid, LIGHTGREEN ,"Jizzys Pleasure Dome, San Fierro.");
		        }
		        case 3:
		        {
                    SetPlayerInterior(playerid, 15);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,2220.26, -1148.01, 1025.80);
                    SendClientMessage(playerid, LIGHTGREEN ,"Jefferson Motel, Los Santos.");
		        }
		        case 4:
		        {
                    SetPlayerInterior(playerid, 10);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,-975.5766, 1061.1312, 1345.6719);
                    SendClientMessage(playerid, LIGHTGREEN ,"Zero's RC Battlefield.");
		        }
		        case 5:
		        {
                    SetPlayerInterior(playerid, 1);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,1.6127, 34.7411, 1199.0);
                    SendClientMessage(playerid, LIGHTGREEN ,"Shamal Passenger Plane.");
		        }
		        case 6:
		        {
                    SetPlayerInterior(playerid, 9);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,315.48, 984.13, 1959.11);
                    SendClientMessage(playerid, LIGHTGREEN ,"Adromoda Cargo Plane.");
		        }
	        }
	    }
	}
	case TELE_MENU3:
    {
        if(response)
        {
	        switch(listitem)
            {
                case 0:
		        {
                    SetPlayerInterior(playerid, 0);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,1881.1639,-2390.3616,13.5547);
                    SendClientMessage(playerid, LIGHTGREEN ,"Los Santos International Airport.");
		        }
		        case 1:
		        {
		            SetPlayerInterior(playerid, 0);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,-1286.5164,57.1271,14.1484);
                    SendClientMessage(playerid, LIGHTGREEN ,"San Fierro, Easter Basin Airport.");
		        }
		        case 2:
		        {
                    SetPlayerInterior(playerid, 0);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,1319.2031,1250.7645,10.8203);
                    SendClientMessage(playerid, LIGHTGREEN ,"Las Venturas Airport.");
		        }
		        case 3:
		        {
                    SetPlayerInterior(playerid, 0);
                    SetPlayerVirtualWorld(playerid, 0);
                    SetPlayerPos(playerid,411.2631,2533.6057,19.1484);
                    SendClientMessage(playerid, LIGHTGREEN ,"Abandoned Airport, Verdant Meadows.");
		        }
	        }
	    }
	}
    case VEHICLE_MENU:
    {
        new Float:x, Float:y, Float:z, string[150];
        new v = GetVehicleIDFromModelName(inputtext);
        if(response)
        if(v > 400 && v < 611)
	    {
            new Float:a;
		    GetPlayerFacingAngle(playerid, a);
		    GetPlayerPos(playerid, x, y, z);
		    if(IsPlayerInAnyVehicle(playerid) == 1)
		    {
			    GetXYPosInFrontOfPlayer(playerid, x, y, 8);
		    }
		    else
		    {
		        GetXYPosInFrontOfPlayer(playerid, x, y, 5);
		    }
		    new pVeh = CreateVehicle(v, x, y, z+1, a+90, -1, -1, -1);
		    vipvehicle[pVeh] = 1;
		    SendClientMessage(playerid,GREEN, "NOTIFICATION: When you exit the Vehicle, it will dissapear.");
		    LinkVehicleToInterior(pVeh, GetPlayerInterior(playerid));
		    SetVehicleVirtualWorld(pVeh, GetPlayerVirtualWorld(playerid));
            format(string, sizeof(string), "%s spawned.", GlobalVehicleNames[v - 400]);
	        SendClientMessage(playerid, YELLOW, string);
        }
        else
        {
            SendClientMessage(playerid, RED, "Invalid vehicle name.");
            ShowPlayerDialog(playerid,VEHICLE_MENU,DIALOG_STYLE_INPUT,"{FFFFFF}Vehicles","{FFFFFF}Enter the name of any vehicle below:", "Spawn", "Cancel");
        }
    }
    case SKIN_MENU:
    {
        if(response)
        if(IsNumeric(inputtext))
        {
            if(CheckValidSkinID(strval(inputtext)))
            {
                SetPlayerSkin(playerid, strval(inputtext));
                new string[50];
                format(string, sizeof(string), "{FFFFFF}> Skin id set to %s", (inputtext));
		        SendClientMessage(playerid, 0x0, string);
            }
            else
            {
                SendClientMessage(playerid, RED, "Invalid skin id.");
                ShowPlayerDialog(playerid,SKIN_MENU,DIALOG_STYLE_INPUT,"{FFFFFF}Skin","{FFFFFF}Enter a skin id from 0-311:", "Set", "Cancel");
            }
		}
    }
    case WEAPON_MENU:
    {
		if(response)
	    switch(listitem)
        {
        case 0:
		{
            ShowPlayerDialog(playerid, WEAPON_MENU1, DIALOG_STYLE_LIST, "{FFFFFF}Handguns", "{FFFFFF}9mm\nSilenced 9mm\nDesert Eagle", "Select", "Cancel");
        }
        case 1:
		{
            ShowPlayerDialog(playerid, WEAPON_MENU2, DIALOG_STYLE_LIST, "{FFFFFF}Shotguns", "{FFFFFF}Shotgun\nSawnoff Shotgun\nCombat Shotgun", "Select", "Cancel");
		}
        case 2:
		{
		    ShowPlayerDialog(playerid, WEAPON_MENU3, DIALOG_STYLE_LIST, "{FFFFFF}SMG's", "{FFFFFF}Tec 9\nMicro SMG\nMP5", "Select", "Cancel");
        }
		case 3:
		{
            ShowPlayerDialog(playerid, WEAPON_MENU4, DIALOG_STYLE_LIST, "{FFFFFF}Assault Rifles", "{FFFFFF}AK47\nM4", "Select", "Cancel");
        }
        case 4:
		{
            ShowPlayerDialog(playerid, WEAPON_MENU5, DIALOG_STYLE_LIST, "{FFFFFF}Rifles", "{FFFFFF}Country Rifle\nSniper Rifle", "Select", "Cancel");
        }
        case 5:
		{
            ShowPlayerDialog(playerid, WEAPON_MENU6, DIALOG_STYLE_LIST, "{FFFFFF}Hand Thrown", "{FFFFFF}Grenades\nTear Gas\nMolotov Cocktail", "Select", "Cancel");
        }
        case 6:
		{
            ShowPlayerDialog(playerid, WEAPON_MENU7, DIALOG_STYLE_LIST, "{FFFFFF}Hand Held", "{FFFFFF}Chainsaw\nKnife\nBaseball Bat\nGolf Club\nNight Stick\nShovel\nPool Cue\nKatana\nPurple Dildo\nSmall White Vibrator\nLarge White Vibrator\nSilver Vibrator\nFlowers\nCane\nSatchel\nDetonator\nSpraycan\nFire Extinguisher\nCamera", "Select", "Cancel");
        }
        case 7:
		{
            ShowPlayerDialog(playerid, WEAPON_MENU8, DIALOG_STYLE_LIST, "{FFFFFF}Heavy Weapons", "{FFFFFF}RPG\nHeat Seaker RPG\nFlamethrower\nMinigun", "Select", "Cancel");
        }
        }
	}
    case WEAPON_MENU1:
    {
		if(response)
	    switch(listitem)
        {
        case 0:
		{
            GivePlayerWeapon(playerid,22,99999);
            ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
		case 1:
		{
	        GivePlayerWeapon(playerid,23,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
		case 2:
		{
	        GivePlayerWeapon(playerid,24,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        }
    }
    case WEAPON_MENU2:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
	        GivePlayerWeapon(playerid,25,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 1:
		{
	        GivePlayerWeapon(playerid,26,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 2:
		{
	        GivePlayerWeapon(playerid,27,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        }
    }
    case WEAPON_MENU3:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
	        GivePlayerWeapon(playerid,32,99999);
            ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 1:
		{
	        GivePlayerWeapon(playerid,28,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 2:
		{
	        GivePlayerWeapon(playerid,29,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        }
    }
    case WEAPON_MENU4:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
	        GivePlayerWeapon(playerid,30,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 1:
        {
	        GivePlayerWeapon(playerid,31,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
		}
		}
    }
    case WEAPON_MENU5:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
			GivePlayerWeapon(playerid,33,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 1:
		{
			GivePlayerWeapon(playerid,34,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        }
    }
    case WEAPON_MENU6:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
			GivePlayerWeapon(playerid,16,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 1:
		{
			GivePlayerWeapon(playerid,17,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 2:
		{
			GivePlayerWeapon(playerid,18,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        }
    }
    case WEAPON_MENU7:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
			GivePlayerWeapon(playerid,9,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 1:
		{
			GivePlayerWeapon(playerid,4,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 2:
		{
			GivePlayerWeapon(playerid,5,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 3:
		{
			GivePlayerWeapon(playerid,2,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 4:
		{
			GivePlayerWeapon(playerid,3,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 5:
		{
			GivePlayerWeapon(playerid,6,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 6:
		{
			GivePlayerWeapon(playerid,7,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 7:
		{
			GivePlayerWeapon(playerid,8,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 8:
		{
			GivePlayerWeapon(playerid,10,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 9:
		{
			GivePlayerWeapon(playerid,11,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 10:
		{
			GivePlayerWeapon(playerid,12,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 11:
		{
			GivePlayerWeapon(playerid,13,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 12:
		{
			GivePlayerWeapon(playerid,14,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 13:
		{
			GivePlayerWeapon(playerid,15,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 14:
		{
			GivePlayerWeapon(playerid,39,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 15:
		{
			GivePlayerWeapon(playerid,40,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 16:
		{
			GivePlayerWeapon(playerid,41,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 17:
		{
			GivePlayerWeapon(playerid,42,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 18:
		{
			GivePlayerWeapon(playerid,43,1);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        }
    }
    case WEAPON_MENU8:
    {
        if(response)
	    switch(listitem)
        {
        case 0:
		{
			GivePlayerWeapon(playerid,35,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 1:
		{
			GivePlayerWeapon(playerid,36,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 2:
		{
			GivePlayerWeapon(playerid,37,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        case 3:
		{
			GivePlayerWeapon(playerid,38,99999);
	        ShowPlayerDialog(playerid, WEAPON_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Weapon Menu", "{FFFFFF}Handguns\nShotguns\nSMG's\nAssault Rifles\nRifles\nHand Thrown\nHand Held\nHeavy Weapons", "Select", "Cancel");
        }
        }
    }
    }
    return 1;
}

public SkydiveInteriorChanger(playerid)
{
	if(!IsPlayerConnected(playerid))
	{
	    KillTimer(skytimer{playerid});
	}
	if(!IsPlayerInRangeOfPoint(playerid, 100.0, 315.745086, 984.969299, 1958.919067))
	{
	    SetPlayerInterior(playerid, 0);
	    KillTimer(skytimer{playerid});
	}
	return 1;
}

public OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)
{
    if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);//
	if(GetPlayerAnimationIndex(playerid) == 1660 || GetPlayerAnimationIndex(playerid) == 1661) return GivePlayerCash(playerid, -1); //Drink machines
	if(IsPlayerUsingAnim{playerid} == true && newkeys == KEY_SECONDARY_ATTACK)
    {
        if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_NONE)
        {
            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		}
    	ClearAnimations(playerid);
    	IsPlayerUsingAnim{playerid} = false;
    	return 1;
    }
    if((newkeys == KEY_ACTION) && (IsPlayerInAnyVehicle(playerid)) && (GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
    {
        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
        {
	        SendClientMessage(playerid,LIGHTGREEN,"Tavajo: baraye inke mashini be mashin shoma vasl shavad:");
	        SendClientMessage(playerid,LIGHTGREEN,"1: bayad be andazeye kafi be mashin morede nazar nazdik bashid.");
	        SendClientMessage(playerid,LIGHTGREEN,"2: dar mashin morede nazar kasi be onvan ranande savar nabashad.");
			new Float:pX,Float:pY,Float:pZ;
			GetVehiclePos(GetPlayerVehicleID(playerid),pX,pY,pZ);
			new Float:vXv,Float:vYv,Float:vZv;
			foreach(new vid : Vehicle)
			{
                if(IsVehicleStreamedIn(vid, playerid))
                {
                    GetVehiclePos(vid,vXv,vYv,vZv);
                    if(vid != GetPlayerVehicleID(playerid) && vid != GetVehicleTrailer(GetPlayerVehicleID(playerid)))
                    {
                        if((floatabs(pX-vXv)<7.0) && (floatabs(pY-vYv)<7.0) && (floatabs(pZ-vZv)<7.0))
                        {
                            if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			                {
		                        DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
			                }
			                AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
                            SendClientMessage(playerid,YELLOW,"Mashin vasl shod!");
                            return 1;
			            }
			        }
                }
            }
   	        return SendClientMessage(playerid,RED,"Hich mashini nazdik shoma nist.");
    	}
	}
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && newkeys == KEY_WALK)
    {
    if(IsPlayerInRangeOfPoint(playerid, 1.0, 246.4467,118.5374,1003.2188))
	{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingCIA{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
	if(ciarobbed == 1) return SendClientMessage(playerid, RED, "This place has been robbed recently, please wait before robbing it again.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer10]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 120 sanie sabr kon");
    TimerInfo[playerid][CMD_timer10] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  CIA HQ at Blackfield.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  CIA HQ.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 246.4467,118.5374,1003.2188))
    {
	    if((gettime() - 120) < ciarobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon");
        format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing the  CIA HQ at Blackfield.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  CIA HQ, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingCIA{playerid} = true;
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
        ciatimer{playerid} = SetTimerEx("CIARob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        ciarobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
	format(astring,sizeof(astring),"%s [%d] typed: /robcia",pName,playerid);
	SendAdminMessage(GREY,astring);
	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
	}
    else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2032.79, -117.39, 1034.80))
	{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingUNI{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer11]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 120 sanie sabr kon");
    TimerInfo[playerid][CMD_timer11] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  University at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  University.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2032.79, -117.39, 1034.80))
    {
	    if((gettime() - 120) < unirobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing the  University at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  University, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingUNI{playerid} = true;
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
        unitimer{playerid} = SetTimerEx("UNIRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        unirobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
	format(astring,sizeof(astring),"%s [%d] typed: /robuni",pName,playerid);
	SendAdminMessage(GREY,astring);
	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
	}
    else if(IsPlayerInRangeOfPoint(playerid,1.0,250.0561,69.4203,1003.6406))
	{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingFBI{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer12]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer12] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  FBI HQ at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  FBI HQ.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,250.0561,69.4203,1003.6406))
    {
	    if((gettime() - 120) < fbirobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing the  FBI HQ at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  FBI HQ, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingFBI{playerid} = true;
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        fbitimer{playerid} = SetTimerEx("FBIRob", 25000, false, "d", playerid);
        fbirobbed = gettime();
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robfbi",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
	}
    else if(IsPlayerInRangeOfPoint(playerid,1.0,766.7718,-59.7159,1000.6563))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingGym{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer13]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer13] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  Gym at Redsands East.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  Gym.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,766.7718,-59.7159,1000.6563))
    {
	    if((gettime() - 120) < gymrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the  Gym at Redsands East.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  Gym, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingGym{playerid} = true;
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        gymtimer{playerid} = SetTimerEx("GymRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        gymrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robgym",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,499.9675,-20.6944,1000.6797))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingClub{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer14]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer14] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  Night Club at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  Night Club.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,499.9675,-20.6944,1000.6797))
    {
	    if((gettime() - 120) < clubrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the  Night Club at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  Night Club, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingClub{playerid} = true;
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        clubtimer{playerid} = SetTimerEx("ClubRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        clubrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robclub",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,374.7570,-118.8264,1001.4995))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingPizza{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer15]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer15] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Well Stacked Pizzas at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the Well Stacked Pizzas.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,374.7570,-118.8264,1001.4995))
    {
	    if((gettime() - 120) < pizzarobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Well Stacked Pizzas at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Well Stacked Pizzas, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingPizza{playerid} = true;
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        pizzatimer{playerid} = SetTimerEx("PizzaRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        pizzarobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robpizza",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(GetPlayerVirtualWorld(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,1.0,1139.7198,-4.0644,1000.6719))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingIsle{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer16]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer16] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob The Emerald Isle Casino at The  Strip[North]", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob The Emerald Isle Casino.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(GetPlayerVirtualWorld(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,1.0,1139.7198,-4.0644,1000.6719))
    {
	    if((gettime() - 120) < islerobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing The Emerald Isle Casino at The  Strip[North]", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing The Emerald Isle Casino, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        IsRobbingIsle{playerid} = true;
        isletimer{playerid} = SetTimerEx("IsleRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        islerobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robisle",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(GetPlayerVirtualWorld(playerid) == 2 && IsPlayerInRangeOfPoint(playerid,1.0,1139.7198,-4.0644,1000.6719))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingVegas{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer17]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer17] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  Casino at The  Strip.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  Casino.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(GetPlayerVirtualWorld(playerid) == 2 && IsPlayerInRangeOfPoint(playerid,1.0,1139.7198,-4.0644,1000.6719))
    {
	    if((gettime() - 120) < vegasrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the  Casino at The  Strip.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  Casino, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        IsRobbingVegas{playerid} = true;
        vegastimer{playerid} = SetTimerEx("VegasRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        vegasrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robvegas",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(GetPlayerVirtualWorld(playerid) == 3 && IsPlayerInRangeOfPoint(playerid,1.0,1139.7198,-4.0644,1000.6719))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingRedsands{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer18]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer18] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Redsands Casino at Redsands West.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the Redsands Casino.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(GetPlayerVirtualWorld(playerid) == 3 && IsPlayerInRangeOfPoint(playerid,1.0,1139.7198,-4.0644,1000.6719))
    {
	    if((gettime() - 120) < redrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Redsands Casino at Redsands West.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Redsands Casino, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingRedsands{playerid} = true;
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        redsandstimer{playerid} = SetTimerEx("RedsandsRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        redrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robred",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,2156.6917,1599.5377,1006.1797))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingCalg{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer19]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer19] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Caligulas Casino at The  Strip.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the Caligulas Casino.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,2156.6917,1599.5377,1006.1797))
    {
	    if((gettime() - 120) < calgrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing Caligulas Casino at The  Strip.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing Caligulas Casino, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        IsRobbingCalg{playerid} = true;
        calgtimer{playerid} = SetTimerEx("CalgRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        calgrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robcalg",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,1955.3691,1018.0455,992.4688))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingDrag{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer20]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer20] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the 4 Dragons Casino at The  Strip[South]", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the 4 Dragons Casino.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,1955.3691,1018.0455,992.4688))
    {
	    if((gettime() - 120) < dragrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing 4 Dragons Casino at The  Strip[South]", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing 4 Dragons Casino, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        IsRobbingDrag{playerid} = true;
        dragtimer{playerid} = SetTimerEx("DragRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        dragrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robdrag",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,230.0261,165.0891,1003.0234))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingNVPD{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer21]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer21] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the PD at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the PD.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,230.0261,165.0891,1003.0234))
    {
	    if((gettime() - 120) < nvpdrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the PD at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the PD, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
	    IsRobbingNVPD{playerid} = true;
        nvpdtimer{playerid} = SetTimerEx("NVPDRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        nvpdrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robpd",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,361.8299,173.7282,1008.3828))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingHall{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer22]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer22] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  City Hall at  Transfender", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  City Hall.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,361.8299,173.7282,1008.3828))
    {
	    if((gettime() - 120) < hallrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the  City Hall at  Transfender", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  City Hall, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
	    IsRobbingHall{playerid} = true;
        halltimer{playerid} = SetTimerEx("HallRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        hallrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robhall",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,496.4771,-76.0378,998.7578))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingBar{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer35]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer35] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  Bar at  Meydan Asli", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  Bar.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,496.4771,-76.0378,998.7578))
    {
	    if((gettime() - 120) < barrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the  Bar at  Meydan Asli", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  Bar, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
	    IsRobbingBar{playerid} = true;
        bartimer{playerid} = SetTimerEx("BarRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        barrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robbar",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,2316.6169,-7.3947,26.7422))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingBank1{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingBank2{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingBank3{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingBank4{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer23]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer23] = gettime();
	if(IsPlayerInRangeOfPoint(playerid,1.0,2316.6169,-7.3947,26.7422) && GetPlayerVirtualWorld(playerid) == 1)
    {
        new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Bank at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Bank.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < bank1robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Bank at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Bank, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingBank1{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        	banktimer{playerid} = SetTimerEx("BankRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	bank1robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,2316.6169,-7.3947,26.7422) && GetPlayerVirtualWorld(playerid) == 2)
    {
        new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Bank at El Quebrados.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Bank.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < bank2robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Bank at El Quebrados.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Bank, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingBank2{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        	banktimer{playerid} = SetTimerEx("BankRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	bank2robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,2316.6169,-7.3947,26.7422) && GetPlayerVirtualWorld(playerid) == 3)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Bank at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Bank.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < bank3robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Bank at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Bank, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingBank3{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        	banktimer{playerid} = SetTimerEx("BankRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	bank3robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,2316.6169,-7.3947,26.7422) && GetPlayerVirtualWorld(playerid) == 4)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Bank at Tierra Robada.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Bank.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < bank4robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Bank at Tierra Robada.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Bank, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingBank4{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        	banktimer{playerid} = SetTimerEx("BankRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	bank4robbed = gettime();
        }
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
    new astring[100],pName[24];
    GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robbank",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,-10.6035,-178.2635,1003.5469))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingStore1{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingStore2{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingStore3{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingStore4{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer24]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer24] = gettime();
	if(IsPlayerInRangeOfPoint(playerid,1.0,-10.6035,-178.2635,1003.5469) && GetPlayerVirtualWorld(playerid) == 1)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the 24/7 Store at The Old  Strip[North]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the 24/7 Store.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < store1robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the 24/7 Store at The Old  Strip[North]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the 24/7 Store, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingStore1{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	storetimer{playerid} = SetTimerEx("StoreRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	store1robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,-10.6035,-178.2635,1003.5469) && GetPlayerVirtualWorld(playerid) == 2)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the 24/7 Store at The Old  Strip[SE]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the 24/7 Store.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < store2robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the 24/7 Store at The Old  Strip[SE]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the 24/7 Store, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingStore2{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	storetimer{playerid} = SetTimerEx("StoreRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	store2robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,-10.6035,-178.2635,1003.5469) && GetPlayerVirtualWorld(playerid) == 3)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the 24/7 Store at The  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the 24/7 Store.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < store3robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the 24/7 Store at The  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the 24/7 Store, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingStore3{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	storetimer{playerid} = SetTimerEx("StoreRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	store3robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,-10.6035,-178.2635,1003.5469) && GetPlayerVirtualWorld(playerid) == 4)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the 24/7 Store at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the 24/7 Store.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < store4robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the 24/7 Store at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the 24/7 Store, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingStore4{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	storetimer{playerid} = SetTimerEx("StoreRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	store4robbed = gettime();
        }
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robstore",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,371.5888,-6.0188,1001.8589))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingCluck1{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingCluck2{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingCluck3{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer25]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer25] = gettime();
	if(IsPlayerInRangeOfPoint(playerid,1.0,371.5888,-6.0188,1001.8589) && GetPlayerVirtualWorld(playerid) == 1)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Cluck'n Bell at The Old  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Cluck'n Bell.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < cluck1robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Cluck'n Bell at The Old  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Cluck'n Bell, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingCluck1{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	clucktimer{playerid} = SetTimerEx("CluckRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	cluck1robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,371.5888,-6.0188,1001.8589) && GetPlayerVirtualWorld(playerid) == 2)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Cluck'n Bell at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Cluck'n Bell.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < cluck2robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Cluck'n Bell at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Cluck'n Bell, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingCluck2{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	clucktimer{playerid} = SetTimerEx("CluckRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	cluck2robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,371.5888,-6.0188,1001.8589) && GetPlayerVirtualWorld(playerid) == 3)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Cluck'n Bell at Tierra Robada.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Cluck'n Bell.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < cluck3robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Cluck'n Bell at Tierra Robada.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Cluck'n Bell, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingCluck3{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	clucktimer{playerid} = SetTimerEx("CluckRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	cluck3robbed = gettime();
        }
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robcluck",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,376.5498,-67.4389,1001.5078))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingShot1{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingShot2{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingShot3{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingShot4{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingShot5{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer26]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer26] = gettime();
	if(IsPlayerInRangeOfPoint(playerid,1.0,376.5498,-67.4389,1001.5078) && GetPlayerVirtualWorld(playerid) == 1)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Burger Shot at The Old  Strip[West]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Burger Shot.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < shot1robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Burger Shot at The Old  Strip[West]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Burger Shot, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingShot1{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	shottimer{playerid} = SetTimerEx("ShotRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	shot1robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,376.5498,-67.4389,1001.5078) && GetPlayerVirtualWorld(playerid) == 2)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Burger Shot at The Old  Strip[SE]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Burger Shot.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < shot2robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Burger Shot at The Old  Strip[SE]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Burger Shot, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingShot2{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	shottimer{playerid} = SetTimerEx("ShotRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	shot2robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,376.5498,-67.4389,1001.5078) && GetPlayerVirtualWorld(playerid) == 3)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Burger Shot at Redsands West.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Burger Shot.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < shot3robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Burger Shot at Redsands West.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Burger Shot, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingShot3{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	shottimer{playerid} = SetTimerEx("ShotRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	shot3robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,376.5498,-67.4389,1001.5078) && GetPlayerVirtualWorld(playerid) == 4)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Burger Shot at Spinybed.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Burger Shot.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < shot4robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Burger Shot at Spinybed.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Burger Shot, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingShot4{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	shottimer{playerid} = SetTimerEx("ShotRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	shot4robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,376.5498,-67.4389,1001.5078) && GetPlayerVirtualWorld(playerid) == 5)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Burger Shot at Redsands East.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Burger Shot.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < shot5robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Burger Shot at Redsands East.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Burger Shot, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingShot5{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	shottimer{playerid} = SetTimerEx("ShotRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	shot5robbed = gettime();
        }
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robshot",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156))
    {
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingAmmu1{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingAmmu2{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingAmmu3{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingAmmu4{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingAmmu5{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingAmmu6{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer27]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer27] = gettime();
	if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 1)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at The  Strip[South]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu1robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at The  Strip[South]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu1{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu1robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 2)
	{
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at Bone County.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu2robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at Bone County.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu2{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu2robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 3)
	{
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu3robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu3{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu3robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 4)
	{
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at El Quebrados.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu4robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at El Quebrados.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu4{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu4robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 5)
	{
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at The Old  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu5robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at The Old  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu5{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu5robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 6)
	{
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu6robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu6{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu6robbed = gettime();
        }
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robammu",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
    }
    else return SendClientMessage(playerid,RED,"Error: Shoma bayad dar checkpoint maghaze baraye shoro dozdi bashid.");
    }
	return 1;
}

stock PlayerInVehicle(vehicleid)
{
    foreach(new i : Player)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInVehicle(i, vehicleid)) return i;
        }
    }
    return 0;
}

stock IsAnyPlayerInVehicle(vehicleid)
{
    foreach(new i : Player)
    {
        if(IsPlayerConnected(i))
        {
            if(IsPlayerInVehicle(i, vehicleid)) return 1;
        }
    }
    return 0;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	new string[150];
	if(!ispassenger)
	{
	    if(IsShopVehicle[vehicleid] != -1)
		{
		    if(strcmp(GetName(playerid), VehicleInfo[IsShopVehicle[vehicleid]][vOwner], false))
		    {
                GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, vcondition);
		        format(string, sizeof(string), "This vehicle is owned by %s.", VehicleInfo[IsShopVehicle[vehicleid]][vOwner]);
		        SendClientMessage(playerid, RED, string);
		        SetVehicleParamsEx(vehicleid, engine, lights, ON, doors, bonnet, boot, vcondition);
		    }
		}
		if(IsAnyPlayerInVehicle(vehicleid))
		{
		    if(playerid != PlayerInVehicle(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		    {
                GetPlayerLastVehicleID[playerid] = vehicleid;
			}
		}
	}
	if(vipvehicle[vehicleid] == 1)
	{
	    SendClientMessage(playerid,GREEN, "NOTIFICATION: When you exit the Vehicle, it will dissapear.");
	}
	return 1;
}

public OnPlayerStateChange(playerid, PLAYER_STATE:newstate, PLAYER_STATE:oldstate)
{
	//show vehicle name by abolfazl
    if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
    {
	    TextDrawShowForPlayer(playerid,esmmashin[playerid]);
        new stringgg[200];
        new ccar = GetPlayerVehicleID(playerid);
        new mmm = GetVehicleModel(ccar);
        format(stringgg, sizeof(stringgg), "%s", GlobalVehicleNames[mmm - 400]);
	    TextDrawSetString(esmmashin[playerid],stringgg);
		if(is3don[playerid] == 1)
		{
			tdSpeedo_Toggle(playerid, 1);
		}
    }
    if(newstate != PLAYER_STATE_DRIVER && newstate != PLAYER_STATE_PASSENGER)
    {
//		new newnewnew[40];
//		format(newnewnew,sizeof(newnewnew),"%s (%d)", GetName(playerid), playerid);
//	    TextDrawSetString(esmmashin[playerid],newnewnew);
		TextDrawHideForPlayer(playerid , esmmashin[playerid]);
		
		tdSpeedo_Toggle(playerid, 0); //3D speedo
		
	} // disabled on 2.2.2 TETA update // textdraw was amassive
	//
	if(newstate==PLAYER_STATE_DRIVER && GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
	{
        SendClientMessage(playerid,YELLOW,"Mitavanid az ACTION KEY baraye vasl kardan mashin ha be mashin kod estefade konid.");
	}
	//
	if(newstate == PLAYER_STATE_PASSENGER && HasBeenCuffed{playerid} == true)
	{
		PlayerAzMashinBironKon(playerid);
		//return 1;
	}
	//
	if(IsPlayerBeingSpectated{playerid} == true && PlayerBeingSpectatedBy[playerid] != -1)
	{
	    if(IsAdminSpectating{PlayerBeingSpectatedBy[playerid]} == true && SpecInfo[PlayerBeingSpectatedBy[playerid]][IsSpectating] == playerid)
	    {
    		if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
    		{
    		    TogglePlayerSpectating(PlayerBeingSpectatedBy[playerid], true);
        		SetPlayerInterior(PlayerBeingSpectatedBy[playerid], GetPlayerInterior(playerid));
        		SetPlayerVirtualWorld(PlayerBeingSpectatedBy[playerid], GetPlayerVirtualWorld(playerid));
        		PlayerSpectateVehicle(PlayerBeingSpectatedBy[playerid], GetPlayerVehicleID(playerid));
        		//return 1;
    		}
    		else if(newstate == PLAYER_STATE_ONFOOT)
    		{
    		    TogglePlayerSpectating(PlayerBeingSpectatedBy[playerid], true);
        		SetPlayerInterior(PlayerBeingSpectatedBy[playerid], GetPlayerInterior(playerid));
        		SetPlayerVirtualWorld(PlayerBeingSpectatedBy[playerid], GetPlayerVirtualWorld(playerid));
        		PlayerSpectatePlayer(PlayerBeingSpectatedBy[playerid], playerid);
        		//return 1;
    		}
	    }
	}
	//
    switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
	{
        case 601, 598, 427, 523, 497, 421:
        {
			if(GetTeam{playerid} == CLASS_CIV && newstate == PLAYER_STATE_DRIVER)
            {
                new current_zone;
 		        current_zone = Player_Zone[playerid];
				new string[150];
		        format(string,sizeof(string),"[DISPATCH]: Suspect %s [%d] has just stolen a law enforcement vehicle at %s", GetName(playerid) ,playerid, ZoneNames[current_zone][zone_name]);
	            CopRadio(BLUE, string);
	            SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid) + 4);
	            SendClientMessage(playerid, RED, "Law enforcement vehicle theft [WANTED LEVEL INCREASED]");
	        	//return 1;
			}
        }
        case 490:
        {
			if(GetTeam{playerid} != CLASS_FBI && newstate == PLAYER_STATE_DRIVER)
			{
                SendClientMessage(playerid, RED, "Only FBI agents can drive FBI ranchers.");
		    	PlayerAzMashinBironKon(playerid);
        		//return 1;
			}
        }
        case 447:
        {
			if(PlayerInfo[playerid][aLevel] == 0 && PlayerInfo[playerid][vLevel] == 0 && newstate == PLAYER_STATE_DRIVER)
			{
            	SendClientMessage(playerid, RED, "Only admins(+ VIPs) can fly sea sparrows.");
		    	PlayerAzMashinBironKon(playerid);
        		//return 1;
			}
        }
        case 476, 520, 425, 470:
        {
            if(GetTeam{playerid} != CLASS_ARMY && PlayerInfo[playerid][vLevel] == 0 && PlayerInfo[playerid][aLevel] == 0 && newstate == PLAYER_STATE_DRIVER)
			{
            	SendClientMessage(playerid, RED, "Only  Army Soldiers(+ VIPs + Admins) can use army vehicles.");
		    	PlayerAzMashinBironKon(playerid);
        		//return 1;
			}
        }
    }
    //
    if(newstate == PLAYER_STATE_DRIVER)
    {
		new vehicleid = GetPlayerVehicleID(playerid);
		new string[200];
        if(IsShopVehicle[vehicleid] != -1)
 	    {
    		if(strcmp(GetName(playerid), VehicleInfo[IsShopVehicle[vehicleid]][vOwner], false))
    		{
			    new current_zone;
	        	current_zone = Player_Zone[playerid];
		        format(string, sizeof(string), "%s mashin shoma ra dar mantaghe %s dozdid baraye gozaresh dadan be police mitavanid az /call911 estefade konid.", GetName(playerid), ZoneNames[current_zone][zone_name]);
		        SendClientMessage(GetID(VehicleInfo[IsShopVehicle[vehicleid]][vOwner]), RED, string);
		    }
		}
	}
    //
	if(GetTeam{playerid} == CLASS_CIV && newstate == PLAYER_STATE_DRIVER)
	{
        if(IsPlayerInOwnedVehicle(playerid, GetPlayerVehicleID(playerid)) == 0)
		{
    		if(GetPlayerLastVehicleID[playerid] == GetPlayerVehicleID(playerid))
    		{
	 			new current_zone;
	        	current_zone = Player_Zone[playerid];
				new string[150];
		     	format(string,sizeof(string),"[DISPATCH]: Suspect %s [%d] has just stolen a vehicle at %s", GetName(playerid) ,playerid, ZoneNames[current_zone][zone_name]);
	          	CopRadio(BLUE, string);
	        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 1);
	         	SendClientMessage(playerid, RED, "Grand theft auto [WANTED LEVEL INCREASED]");
	         	GetPlayerLastVehicleID[playerid] = -1;
	         	//return 1;
         	}
		}
	}
    //Anti-Locked Car Jack Cheat
    if(newstate == PLAYER_STATE_DRIVER/* || newstate == PLAYER_STATE_PASSENGER*/)
	{
		new newveh = GetPlayerVehicleID(playerid);
	    if(IsShopVehicle[newveh] != -1)
		{
		    if(strcmp(GetName(playerid), VehicleInfo[IsShopVehicle[newveh]][vOwner], false))
		    {
                GetVehicleParamsEx(newveh, engine, lights, alarm, doors, bonnet, boot, vcondition);
                if(doors == ON)
                {
                    new fssss[200];
		            format(fssss, sizeof(fssss), "This vehicle is owned by %s.", VehicleInfo[IsShopVehicle[newveh]][vOwner]);
		            SendClientMessage(playerid, RED, fssss);
		            SetVehicleParamsEx(newveh, engine, lights, ON, doors, bonnet, boot, vcondition);
		            format(fstr, sizeof(fstr), "Elvis has kick %s [%d] from ACNR - Dalil: Car Jack to Lock vehicle ", GetName(playerid), playerid);
	                SendMessageToAll(RED, fstr);
  	                GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
 	                SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
                    PlayerInfo[playerid][pKicks]++;
                    KickPlayer(playerid);
                    tedadekick++;
		            accssave();
		            print(fstr);
		        }
		    }
		    //return 1;
		}
	}
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
    if(IsPlayerBeingSpectated{playerid} == true && PlayerBeingSpectatedBy[playerid] != -1)
	{
	    if(IsAdminSpectating{PlayerBeingSpectatedBy[playerid]} == true && SpecInfo[PlayerBeingSpectatedBy[playerid]][IsSpectating] == playerid)
	    {
    		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
    		{
    		    TogglePlayerSpectating(PlayerBeingSpectatedBy[playerid], true);
        		SetPlayerInterior(PlayerBeingSpectatedBy[playerid], GetPlayerInterior(playerid));
        		SetPlayerVirtualWorld(PlayerBeingSpectatedBy[playerid], GetPlayerVirtualWorld(playerid));
        		PlayerSpectateVehicle(PlayerBeingSpectatedBy[playerid], GetPlayerVehicleID(playerid));
    		}
    		else if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    		{
    		    TogglePlayerSpectating(PlayerBeingSpectatedBy[playerid], true);
        		SetPlayerInterior(PlayerBeingSpectatedBy[playerid], GetPlayerInterior(playerid));
        		SetPlayerVirtualWorld(PlayerBeingSpectatedBy[playerid], GetPlayerVirtualWorld(playerid));
        		PlayerSpectatePlayer(PlayerBeingSpectatedBy[playerid], playerid);
    		}
	    }
	}
	if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
	{
		SaveBankStats(playerid);
		SaveFightStats(playerid);
    	SaveUserStats(playerid);
    	SaveDegreeStats(playerid);
 	}
    return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    if(IsPlayerNPC(playerid)) return 1;

    if(IsLoggedIn{playerid} == 0)
	{
		SendClientMessage(playerid, RED, "You MUST be registered and logged in before you can spawn.") && KickPlayer(playerid);
		return 0;
	}
	//wanted check
    if((GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_ARMY || GetTeam{playerid} == CLASS_MEDIC || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA) && (PlayerInfo[playerid][pWanted] >= 1 || GetPlayerWantedLevel(playerid) >= 1))
    {
		SendClientMessage(playerid, RED, "You cant spawn as Law Enforcement while you have Wanted Level.");
      	ForceClassSelection(playerid);
      	return 0;
    }
	//madrak check
    if(GetTeam{playerid} == CLASS_ARMY)
    {
	    if(DegreeInfo[playerid][dDefense] == 1)
 		{
			return 1;
  		}
 		else
  		{
			SendClientMessage(playerid, RED, "In class niaz be Madrak Defense darad.");
 			GameTextForPlayer(playerid,"~r~Restricted Class", 3000, 5);
 			ForceClassSelection(playerid);
 			return 0;
  		}
    }
    if(GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_FBI)
    {
	    if(DegreeInfo[playerid][dLaw] == 1)
   		{
			return 1;
 		}
 		else
 		{
			SendClientMessage(playerid, RED, "In class niaz be Madrak Law darad.");
			GameTextForPlayer(playerid,"~r~Restricted Class", 3000, 5);
			ForceClassSelection(playerid);
			return 0;
 		}
    }
    if(GetTeam{playerid} == CLASS_MEDIC)
    {
	    if(DegreeInfo[playerid][dHealth] == 1)
   		{
			return 1;
 		}
 		else
 		{
			SendClientMessage(playerid, RED, "In class niaz be Madrak Medical darad.");
			GameTextForPlayer(playerid,"~r~Restricted Class", 3000, 5);
			ForceClassSelection(playerid);
			return 0;
 		}
    }
    //score check
    if(GetTeam{playerid} == CLASS_COPS && GetPlayerScore(playerid) < 20)
    {
		SendClientMessage(playerid, RED, "Baraye entekhab class POLICE score shoma bayad bishtar az 20 bashad.");
		return 0;
    }
    return 1;
}

public OnVehicleSpawn(vehicleid)
{
    if(IsShopVehicle[vehicleid] == -1)
	{
	    DestroyNeons(vehicleid);
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    if(vipvehicle[vehicleid] == 1)
    {
	        DestroyVehicle(vehicleid);
	        vipvehicle[vehicleid] = 0;
    }
	return 1;
}

public OnVehicleDeath(vehicleid)
{
    if(IsShopVehicle[vehicleid] != -1)
	{
	    new v = IsShopVehicle[vehicleid];
	    DestroyNeons(vehicleid);
		DestroyVehicle(vehicleid);

		new newveh = CreateVehicle(VehicleInfo[v][vModel], VehicleInfo[v][vPosX], VehicleInfo[v][vPosY], VehicleInfo[v][vPosZ], VehicleInfo[v][vPosA], VehicleInfo[v][vColor1], VehicleInfo[v][vColor2], 500000);
        SetVehicleNumberPlate(newveh, VehicleInfo[v][vPlate]);
        IsShopVehicle[newveh] = v;
		SetVehicleHealth(newveh, 1000.0);
		VehicleInfo[v][vHealth] = 1000.0;

	    VehicleInfo[v][vFuel] = 75 + random(25);

		for(new m = 0; m < 12; m++)
		{
		    if(GetVehicleMods[v][m] > 0)
		    {
		        AddVehicleComponent(newveh, GetVehicleMods[v][m]);
			}
		}

		if(VehicleInfo[v][vPaintJob] != NO_PAINT)
		{
			ChangeVehiclePaintjob(newveh, VehicleInfo[v][vPaintJob]);
		}

		if(VehicleInfo[v][vLocked] == 1)
		{
			SetVehicleParamsForAll(newveh, 0, 1);
        	GetVehicleParamsEx(newveh, engine, lights, alarm, doors, bonnet, boot, vcondition);
			SetVehicleParamsEx(newveh, engine, lights, alarm, ON, bonnet, boot, vcondition);
		}
		else if(VehicleInfo[v][vLocked] == 0)
		{
			SetVehicleParamsForAll(newveh, 0, 0);
        	GetVehicleParamsEx(newveh, engine, lights, alarm, doors, bonnet, boot, vcondition);
			SetVehicleParamsEx(newveh, engine, lights, alarm, OFF, bonnet, boot, vcondition);
		}

		if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == BLUE_NEONS)
		{
				blueneons[newveh] = CreateDynamicObject(18648,0,0,0,0,0,0);
            	blueneons2[newveh] = CreateDynamicObject(18648,0,0,0,0,0,0);
            	AttachDynamicObjectToVehicle(blueneons[newveh], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	AttachDynamicObjectToVehicle(blueneons2[newveh], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
		else if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == RED_NEONS)
		{
				redneons[newveh] = CreateDynamicObject(18647,0,0,0,0,0,0);
            	redneons2[newveh] = CreateDynamicObject(18647,0,0,0,0,0,0);
            	AttachDynamicObjectToVehicle(redneons[newveh], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            	AttachDynamicObjectToVehicle(redneons2[newveh], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
		else if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == GREEN_NEONS)
		{
			greenneons[newveh] = CreateDynamicObject(18649,0,0,0,0,0,0);
          	greenneons2[newveh] = CreateDynamicObject(18649,0,0,0,0,0,0);
           	AttachDynamicObjectToVehicle(greenneons[newveh], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
         	AttachDynamicObjectToVehicle(greenneons2[newveh], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
		else if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == YELLOW_NEONS)
		{
			yellowneons[v] = CreateDynamicObject(18650,0,0,0,0,0,0);
           	yellowneons2[v] = CreateDynamicObject(18650,0,0,0,0,0,0);
           	AttachDynamicObjectToVehicle(yellowneons[v], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
           	AttachDynamicObjectToVehicle(yellowneons2[v], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
		else if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == PINK_NEONS)
		{
			pinkneons[newveh] = CreateDynamicObject(18651,0,0,0,0,0,0);
          	pinkneons2[newveh] = CreateDynamicObject(18651,0,0,0,0,0,0);
         	AttachDynamicObjectToVehicle(pinkneons[newveh], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
        	AttachDynamicObjectToVehicle(pinkneons2[newveh], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}
		else if(VehicleInfo[v][vNeons] != NO_NEONS && VehicleInfo[v][vNeons] == WHITE_NEONS)
		{
			whiteneons[newveh] = CreateDynamicObject(18652,0,0,0,0,0,0);
          	whiteneons2[newveh] = CreateDynamicObject(18652,0,0,0,0,0,0);
         	AttachDynamicObjectToVehicle(whiteneons[newveh], newveh, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
        	AttachDynamicObjectToVehicle(whiteneons2[newveh], newveh, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
		}

		GetVehicleFuel[newveh] = VehicleInfo[v][vFuel];
		GetVehicleCurrentHealth[newveh] = VehicleInfo[v][vHealth];
		return 1;
	}
	else
	{
		SetVehicleToRespawn(vehicleid);
	}
	return 1;
}

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
    if(IsPlayerConnected(playerid))
    {
        new Float:posx, Float:posy, Float:posz;
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        foreach(new i : Player)
        {
            if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i) && GetPlayerInterior(playerid) == GetPlayerInterior(i))
            {
                GetPlayerPos(i, posx, posy, posz);
                tempposx = (oldposx -posx);
                tempposy = (oldposy -posy);
                tempposz = (oldposz -posz);
                if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
                {
                    SendClientMessage(i, col1, string);
                }
                else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
                {
                    SendClientMessage(i, col2, string);
                }
                else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
                {
                    SendClientMessage(i, col3, string);
                }
                else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
                {
                    SendClientMessage(i, col4, string);
                }
                else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
                {
                    SendClientMessage(i, col5, string);
                }
            }
            else
            {
                SendClientMessage(i, col1, string);
            }
        }
    }
    return 1;
}

public SetVehicleParamsForAll(carid,objective,doorslocked)
{
	foreach(new i : Player)
	{
		SetVehicleParamsForPlayer(carid,i,objective,doorslocked);
	}
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
    if(IsShopVehicle[vehicleid] != -1)
	{
 		if(VehicleInfo[IsShopVehicle[vehicleid]][vLocked] == 1)
  		{
			SetVehicleParamsForAll(vehicleid, 0, 1);
        	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, vcondition);
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, ON, bonnet, boot, vcondition);
			VehicleInfo[IsShopVehicle[vehicleid]][vLocked] = 1;
		}
  		else
  		{
  			SetVehicleParamsForAll(vehicleid, 0, 0);
        	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, vcondition);
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, OFF, bonnet, boot, vcondition);
			VehicleInfo[IsShopVehicle[vehicleid]][vLocked] = 0;
   		}
   	}
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	if(IsShopVehicle[vehicleid] != -1)
	{
 		if(VehicleInfo[IsShopVehicle[vehicleid]][vLocked] == 1)
  		{
			SetVehicleParamsForAll(vehicleid, 0, 1);
        	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, vcondition);
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, ON, bonnet, boot, vcondition);
			VehicleInfo[IsShopVehicle[vehicleid]][vLocked] = 1;
		}
  		else
  		{
  			SetVehicleParamsForAll(vehicleid, 0, 0);
        	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, vcondition);
			SetVehicleParamsEx(vehicleid, engine, lights, alarm, OFF, bonnet, boot, vcondition);
			VehicleInfo[IsShopVehicle[vehicleid]][vLocked] = 0;
   		}
   	}
	return 1;
}

public AcceptCMDExpire(playerid)
{
    offer_price[playerid] = -1;
    offerer_id[playerid] = -1;
    offer_price2[playerid] = -1;
    offerer_id2[playerid] = -1;
    offer_price3[playerid] = -1;
    offerer_id3[playerid] = -1;
    offer_price4[playerid] = -1;
    offerer_id4[playerid] = -1;
    offer_price5[playerid] = -1;
    offerer_id5[playerid] = -1;
    offer_price6[playerid] = -1;
    offerer_id6[playerid] = -1;
    offer_price7[playerid] = -1;
    offerer_id7[playerid] = -1;
    offer_price8[playerid] = -1;
    offerer_id8[playerid] = -1;
    offer_price9[playerid] = -1;
    offerer_id9[playerid] = -1;
    offeredveh[playerid] = -1;
    gunbuying[playerid] = 0;
    matsbuying[playerid] = 0;
    degreebuying[playerid] = 0;
	return 1;
}

public LoadHouse_data(houseid, name[], value[])
{
	INI_String("HouseOwner", HouseInfo[houseid][hOwner], 24);
	INI_String("HouseName", HouseInfo[houseid][hName], 40);
	INI_Int("HouseValue", HouseInfo[houseid][hValue]);
	INI_Float("CPOutX", HouseInfo[houseid][hCPOutX]);
	INI_Float("CPOutY", HouseInfo[houseid][hCPOutY]);
	INI_Float("CPOutZ", HouseInfo[houseid][hCPOutZ]);
	INI_Float("SpawnOutX", HouseInfo[houseid][hSPOutX]);
	INI_Float("SpawnOutY", HouseInfo[houseid][hSPOutY]);
	INI_Float("SpawnOutZ", HouseInfo[houseid][hSPOutZ]);
	INI_Float("SpawnOutAngle", HouseInfo[houseid][hSPOutA]);
	INI_Int("SpawnWorld", HouseInfo[houseid][hWorld]);
	INI_Int("SpawnInterior", HouseInfo[houseid][hSpawnInterior]);
	INI_Int("HouseInterior", HouseInfo[houseid][hHouseInterior]);
	INI_Int("QuitInHouse", HouseInfo[houseid][hQuit]);
	INI_String("KeyOwner1", HouseInfo[houseid][hKeyOwner1], 24);
	INI_String("KeyOwner2", HouseInfo[houseid][hKeyOwner2], 24);
	INI_String("KeyOwner3", HouseInfo[houseid][hKeyOwner3], 24);
	INI_String("KeyOwner4", HouseInfo[houseid][hKeyOwner4], 24);
	INI_String("KeyOwner5", HouseInfo[houseid][hKeyOwner5], 24);
	INI_String("KeyOwner6", HouseInfo[houseid][hKeyOwner6], 24);
	INI_String("KeyOwner7", HouseInfo[houseid][hKeyOwner7], 24);
	INI_String("KeyOwner8", HouseInfo[houseid][hKeyOwner8], 24);
	INI_String("KeyOwner9", HouseInfo[houseid][hKeyOwner9], 24);
	INI_String("KeyOwner10", HouseInfo[houseid][hKeyOwner10], 24);
	return 1;
}

public LoadBiz_data(bizid,name[],value[])
{
	INI_String("bName", BizInfo[bizid][bName], 50);
	INI_String("bOwner", BizInfo[bizid][bOwner], 24);
	INI_Int("bPrice", BizInfo[bizid][bPrice]);
	INI_Float("bExtX", BizInfo[bizid][bExtX]);
	INI_Float("bExtY", BizInfo[bizid][bExtY]);
	INI_Float("bExtZ", BizInfo[bizid][bExtZ]);
	INI_Float("bIntX", BizInfo[bizid][bIntX]);
	INI_Float("bIntY", BizInfo[bizid][bIntY]);
	INI_Float("bIntZ", BizInfo[bizid][bIntZ]);
	INI_Float("bExtSpwnX", BizInfo[bizid][bExtSpwnX]);
	INI_Float("bExtSpwnY", BizInfo[bizid][bExtSpwnY]);
	INI_Float("bExtSpwnZ", BizInfo[bizid][bExtSpwnZ]);
	INI_Float("bExtSpwnA", BizInfo[bizid][bExtSpwnA]);
	INI_Float("bIntSpwnX", BizInfo[bizid][bIntSpwnX]);
	INI_Float("bIntSpwnY", BizInfo[bizid][bIntSpwnY]);
	INI_Float("bIntSpwnZ", BizInfo[bizid][bIntSpwnZ]);
	INI_Float("bIntSpwnA", BizInfo[bizid][bIntSpwnA]);
	INI_Float("bRobX", BizInfo[bizid][bRobX]);
	INI_Float("bRobY", BizInfo[bizid][bRobY]);
	INI_Float("bRobZ", BizInfo[bizid][bRobZ]);
	INI_Int("bInterior", BizInfo[bizid][bInterior]);
	INI_Int("bVWorld", BizInfo[bizid][bVWorld]);
	INI_Int("bEarnings", BizInfo[bizid][bEarnings]);
	return 1;
}

public BizRob(playerid)
{
	if(IsPlayerRobbingBiz{playerid} == true)
	{
    	new file[40];
		format(file, sizeof(file), BIZ_FILE, BizRobCP[playerid]);
		new robbery = BizInfo[BizRobCP[playerid]][bEarnings]/4;
		new INI:bFilee = INI_Open(file);
		INI_WriteInt(bFilee, "bEarnings", BizInfo[BizRobCP[playerid]][bEarnings] - BizInfo[BizRobCP[playerid]][bEarnings]/4);
		INI_Close(bFilee);
		BizInfo[BizRobCP[playerid]][bEarnings] = BizInfo[BizRobCP[playerid]][bEarnings] - BizInfo[BizRobCP[playerid]][bEarnings]/4;
		GivePlayerCash(playerid, robbery);
		IsPlayerRobbingBiz{playerid} = false;
		format(fstr, sizeof(fstr), "~w~You ~g~Robbed ~w~The Business!~n~You Got ~g~$%s.", robbery);
		GameTextForPlayer(playerid, fstr, 5000, 5);
        new current_zone;
 	    current_zone = Player_Zone[playerid];
		format(fstr2, sizeof(fstr2), "[DISPATCH]: Suspect %s [%d] has robbed the %s at %s", GetName(playerid), playerid, BizInfo[BizRobCP[playerid]][bName], ZoneNames[current_zone][zone_name]);
		CopRadio(BLUE, fstr2);
		format(fstr3, sizeof(fstr3), "[ROBBERY]: %s [%d] has just robbed %s for $%d", GetName(playerid), playerid, BizInfo[BizRobCP[playerid]][bName], robbery);
		SendMessageToAll(RED, fstr3);
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
	}
	return 1;
}

public LoadVeh_data(vehicleid, name[], value[])
{
    INI_Int("Model", VehicleInfo[vehicleid][vModel]);
	INI_Int("Color1", VehicleInfo[vehicleid][vColor1]);
	INI_Int("Color2", VehicleInfo[vehicleid][vColor2]);
	INI_Int("Price", VehicleInfo[vehicleid][vPrice]);
    INI_String("Owner", VehicleInfo[vehicleid][vOwner], 24);
	INI_Float("PosX", VehicleInfo[vehicleid][vPosX]);
	INI_Float("PosY", VehicleInfo[vehicleid][vPosY]);
	INI_Float("PosZ", VehicleInfo[vehicleid][vPosZ]);
	INI_Float("PosA", VehicleInfo[vehicleid][vPosA]);
    INI_String("Plate", VehicleInfo[vehicleid][vPlate], 32);
	INI_Int("PaintJob", VehicleInfo[vehicleid][vPaintJob]);
	INI_Int("Locked", VehicleInfo[vehicleid][vLocked]);
	INI_Int("Neons", VehicleInfo[vehicleid][vNeons]);
	INI_Int("Fuel", VehicleInfo[vehicleid][vFuel]);
	INI_Float("Health", VehicleInfo[vehicleid][vHealth]);
	INI_Int("Mod1", GetVehicleMods[vehicleid][0]);
	INI_Int("Mod2", GetVehicleMods[vehicleid][1]);
	INI_Int("Mod3", GetVehicleMods[vehicleid][2]);
	INI_Int("Mod4", GetVehicleMods[vehicleid][3]);
	INI_Int("Mod5", GetVehicleMods[vehicleid][4]);
	INI_Int("Mod6", GetVehicleMods[vehicleid][5]);
	INI_Int("Mod7", GetVehicleMods[vehicleid][6]);
	INI_Int("Mod8", GetVehicleMods[vehicleid][7]);
	INI_Int("Mod9", GetVehicleMods[vehicleid][8]);
	INI_Int("Mod10", GetVehicleMods[vehicleid][9]);
	INI_Int("Mod11", GetVehicleMods[vehicleid][10]);
	INI_Int("Mod12", GetVehicleMods[vehicleid][11]);
    return 1;
}

public ResetTextLines(playerid)
{
	text_line_count{playerid} = 0;
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(IsShopVehicle[vehicleid] != -1)
	{
    	new modcount = 0;
		for(new m = 0; m < MAX_ALOUD_MODS; m++)
		{
	    	if(GetVehicleMods[IsShopVehicle[vehicleid]][m] == 0)
	    	{
	        	GetVehicleMods[IsShopVehicle[vehicleid]][m] = componentid;
	        	SaveVehicleStats(IsShopVehicle[vehicleid]);
				modcount++;
	        	break;
			}
		}
		if(modcount == 0)
		{
	    	for(new m = 0; m < 12; m++)
			{
				GetVehicleMods[IsShopVehicle[vehicleid]][m] = 0;
			}
			SaveVehicleStats(IsShopVehicle[vehicleid]);
		}
	}

    //
    switch(componentid)
    {
        case 1008..1010: if(IsPlayerInInvalidNosVehicle(playerid)) RemoveVehicleComponent(vehicleid,componentid);
        case 1026..1033,1138..1142: if(GetVehicleModel(vehicleid) != 560) RemoveVehicleComponent(vehicleid,componentid);
    }
    if(IsPlayerUsingTuneMenu{playerid} == false) return GivePlayerCash(playerid, -AVehicleModPrices[componentid - 1000]);
    //

    IsPlayerUsingTuneMenu{playerid} = false;
	return 1;
}

public Update_Zones()
{
	new line1[10];
	new line2[10];
	foreach(new i : Player)
	{
	  	if(ZoneUpdates[i] == 1)
	  	{
		   	if(IsPlayerInZone(i,Player_Zone[i]))
		   	{
	   		}
		   	else
		   	{
			    new Player_Zone_before;
			    Player_Zone_before = Player_Zone[i];
			    Player_Zone[i] = -1;
			    for(new j=0; j<sizeof(ZoneNames);j++)
				{
			    	if(IsPlayerInZone(i,j) && Player_Zone[i] == -1)
				 	{
				      	Player_Zone[i] = j;
				      	format(line1,10,"p%dzone",i);
				      	format(line2,10,"%d",j);
				      	PropertySet(line1,line2);
	     			}
				}
    			if(Player_Zone[i] == -1) Player_Zone[i] = Player_Zone_before;
   			}
		}
 	}
 	return 1;
}

public KickPublic(plyid) { Kick(plyid); }
stock KickPlayer(plyid)
{
	if(IsPlayerConnected(plyid) && !IsPlayerNPC(plyid) && !IsPlayerAdmin(plyid))
	{
	    SetTimerEx("KickPublic", 2000, false, "i", plyid);
	}
	return 1;
}

public SRCFB(cmd[]) { SendRconCommand(cmd); }
stock SRBC(cmd[])
{
	SetTimerEx("SRCFB",2000,false,"s",cmd);
	return 1;
}

public ExBanExe(plyid,reason[]) { BanEx(plyid,reason); }
stock ExBane(plyid,reason[])
{

	if(IsPlayerConnected(plyid) && !IsPlayerNPC(plyid) && !IsPlayerAdmin(plyid))
	{
	    SetTimerEx("ExBanExe",2000,false,"is",plyid,reason);
	}
	return 1;
}

task UpdateTimeandDate[1000]()
{
	// Update Time and Date
    new hour, minute, second;
    new year, month, day;
	gettime(hour, minute, second);
	getdate(year, month, day);
	new timestr[50];
   	format(timestr,32,"%02d:%02d:%02d",hour,minute,second);
   	TextDrawSetString(txtTimeDisp,timestr);
	new datestr[50];
   	format(datestr,sizeof(datestr),"%d/%02d/%02d",year,month,day);
   	TextDrawSetString(txtDateDisp,datestr);
   	if(minute == 0 && second == 0)
   	{
		new newtime[200];
		format(newtime,sizeof(newtime),"SERVER: Hamaknon saat %02d:%02d:%02d ast",hour,minute,second);
		SendMessageToAll(LIGHTGREEN,newtime);
	}
	foreach(new p : Player)
	{
	if(IsLoggedIn{p} == 1 || HasSpawned{p} == true)
    {
	TextDrawShowForPlayer(p,txtTimeDisp);
	TextDrawShowForPlayer(p,txtDateDisp);
	}
	}
	return 1;
}

public FPSUP(playerid)
{
	{
	    if(IsPlayerConnected(playerid))
	    {
            new fpstring[32];
    		format(fpstring,sizeof(fpstring),"FPS : %d",FPS2[playerid]-1);
			TextDrawSetString(FPS[playerid],fpstring);
			if(GetPlayerPing(playerid) <= 201)
            {
            TextDrawColour(FPS[playerid], GREEN);
		    }
		    else if(GetPlayerPing(playerid) > 201 && GetPlayerPing(playerid) <= 401)
            {
            TextDrawColour(FPS[playerid], BLUE);
	    	}
	    	else if(GetPlayerPing(playerid) > 401 && GetPlayerPing(playerid) <= 551)
            {
            TextDrawColour(FPS[playerid], YELLOW);
	    	}
	    	else if(GetPlayerPing(playerid) > 551 && GetPlayerPing(playerid) <= 701)
            {
            TextDrawColour(FPS[playerid], ORANGE);
	    	}
	    	else if(GetPlayerPing(playerid) > 700)
            {
            TextDrawColour(FPS[playerid], RED);
	    	}
		}
	}
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(IsShopVehicle[vehicleid] != -1 && !strcmp(GetName(playerid), VehicleInfo[vehicleid][vOwner], false))
	{
		VehicleInfo[IsShopVehicle[vehicleid]][vColor1] = color1;
		VehicleInfo[IsShopVehicle[vehicleid]][vColor2] = color2;
		SaveVehicleStats(IsShopVehicle[vehicleid]);
	}
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(IsShopVehicle[vehicleid] != -1 && !strcmp(GetName(playerid), VehicleInfo[vehicleid][vOwner], false))
	{
	    VehicleInfo[IsShopVehicle[vehicleid]][vPaintJob] = paintjobid;
	    SaveVehicleStats(IsShopVehicle[vehicleid]);
	}
	return 1;
}

public TazerTimer(playerid)
{
	ClearAnimations(playerid);
	GameTextForPlayer(playerid, "~g~Recovered", 5000, 5);
    HasBeenCuffed{playerid} = false;
    TogglePlayerControllable(playerid, true);
	return 1;
}

public RedsandsRob(playerid)
{
	if(IsRobbingRedsands{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingRedsands{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] az Redsands Casino dar Redsands West dozdi kard.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! Shoma az Redsands Casino $%d pool dozdi kardid .", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] az Redsands Casino $%d pool dozdi kard dar Redsands West.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public PizzaRob(playerid)
{
	if(IsRobbingPizza{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(19000) + 1000;
	IsRobbingPizza{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Well Stacked Pizzas at  Meydan Asli.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the Well Stacked Pizzas.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Well Stacked Pizzas for $%d at  Meydan Asli.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public NVPDRob(playerid)
{
	if(IsRobbingNVPD{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingNVPD{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the PD at  Meydan Asli.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the PD.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the PD for $%d at  Meydan Asli.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public HallRob(playerid)
{
	if(IsRobbingHall{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingHall{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the  City Hall at  Transfender.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the  City Hall.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the  City Hall for $%d at  Transfender.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public BarRob(playerid)
{
	if(IsRobbingBar{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingBar{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the  Bar at  Meydan Asli.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the  Bar.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the  Bar for $%d at  Meydan Asli.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public CalgRob(playerid)
{
	if(IsRobbingCalg{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingCalg{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Caligulas Casino at The  Strip.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the Caligulas Casino.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Caligulas Casino for $%d at The  Strip.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public DragRob(playerid)
{
	if(IsRobbingDrag{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingDrag{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the 4 Dragons Casino at The  Strip[South]", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the 4 Dragons Casino.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the 4 Dragons Casino for $%d at The  Strip[South]",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public IsleRob(playerid)
{
	if(IsRobbingIsle{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingIsle{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed The Emerald Isle Casino at The  Strip[North]", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from The Emerald Isle Casino.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed The Emerald Isle Casino for $%d at The  Strip[North]",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public VegasRob(playerid)
{
	if(IsRobbingVegas{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingVegas{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the  Casino at The  Strip.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the  Casino.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the  Casino for $%d at The  Strip.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public CIARob(playerid)
{
	if(IsRobbingCIA{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingCIA{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the  CIA HQ at Blackfield.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the  CIA HQ.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the  CIA HQ for $%d at Blackfield.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public UNIRob(playerid)
{
	if(IsRobbingUNI{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingUNI{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the  University at  Meydan Asli.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the  University.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the  University for $%d at  Meydan Asli.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public FBIRob(playerid)
{
	if(IsRobbingFBI{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingFBI{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the  FBI HQ at  Meydan Asli.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the  FBI HQ.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the  FBI HQ for $%d at  Meydan Asli.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public GymRob(playerid)
{
	if(IsRobbingGym{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingGym{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the  Gym at Redsands East.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the  Gym.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the  Gym for $%d at Redsands East.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public ClubRob(playerid)
{
	if(IsRobbingClub{playerid} == true && HasBeenArrested{playerid} == false)
	{
    new string[150], pName[24];
	new loot = random(49000) + 1000;
	IsRobbingClub{playerid} = false;
	PlayerInfo[playerid][pHoldups]++;
	PlayerInfo[playerid][pCrimes]++;
	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the  Night Club at  Meydan Asli.", GetName(playerid), playerid);
	CopRadio(BLUE, fstr);
	format(string, sizeof(string), "Great Job! You have robbed $%d from the  Night Club.", loot);
    SendClientMessage(playerid, WHITE, string);
	GetPlayerName(playerid,(pName),sizeof(pName));
	GivePlayerCash(playerid,loot);
	format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the  Night Club for $%d at  Meydan Asli.",pName, playerid, loot);
	SendMessageToAll(ORANGE,string);
 	SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 	format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 	GameTextForPlayer(playerid, string ,5000,5);
 	ClearAnimations(playerid);
 	}
    return 1;
}

public BankRob(playerid)
{
	if(IsRobbingBank1{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[150], pName[24];
		new loot = random(49000) + 1000;
		IsRobbingBank1{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Bank at  Meydan Asli.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Bank.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Bank for $%d at  Meydan Asli.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingBank2{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[150], pName[24];
		new loot = random(49000) + 1000;
		IsRobbingBank2{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Bank at El Quebrados.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Bank.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Bank for $%d at El Quebrados.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingBank3{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[150], pName[24];
		new loot = random(49000) + 1000;
		IsRobbingBank3{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Bank at Fort Carson.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Bank.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
	    GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Bank for $%d at Fort Carson.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingBank4{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[150], pName[24];
		new loot = random(49000) + 1000;
		IsRobbingBank4{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Bank at Tierra Robada.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Bank.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Bank for $%d at Tierra Robada.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 	}
    return 1;
}

public StoreRob(playerid)
{
	if(IsRobbingStore1{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingStore1{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the 24/7 Store at The Old  Strip[North]", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the 24/7 Store.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the 24/7 Store for $%d at The Old  Strip[North]",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingStore2{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingStore2{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the 24/7 Store at The Old  Strip[SE]", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the 24/7 Store.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the 24/7 Store for $%d at The Old  Strip[SE]",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingStore3{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingStore3{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the 24/7 Store at The  Strip.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the 24/7 Store.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the 24/7 Store for $%d at The  Strip.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingStore4{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingStore4{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the 24/7 Store at  Meydan Asli.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the 24/7 Store.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the 24/7 Store for $%d at  Meydan Asli.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 	}
    return 1;
}

public CluckRob(playerid)
{
	if(IsRobbingCluck1{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingCluck1{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Cluck'n Bell at The Old  Strip.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Cluck'n Bell.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Cluck'n Bell for $%d at The Old  Strip.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingCluck2{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingCluck2{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Cluck'n Bell at Fort Carson.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Cluck'n Bell.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Cluck'n Bell for $%d at Fort Carson.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingCluck3{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingCluck3{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Cluck'n Bell at Tierra Robada.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Cluck'n Bell.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Cluck'n Bell for $%d at Tierra Robada.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 	}
    return 1;
}

public ShotRob(playerid)
{
	if(IsRobbingShot1{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingShot1{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Burger Shot at The Old  Strip[West]", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Burger Shot.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Burger Shot for $%d at The Old  Strip[West]",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
    }
    else if(IsRobbingShot2{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingShot2{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Burger Shot at The Old  Strip[SE]", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Burger Shot.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Burger Shot for $%d at The Old  Strip[SE]",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
    }
    else if(IsRobbingShot3{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingShot3{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Burger Shot at Redsands West.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Burger Shot.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Burger Shot for $%d at Redsands West.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
    }
    else if(IsRobbingShot4{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingShot4{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Burger Shot at Spinybed.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Burger Shot.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Burger Shot for $%d at Spinybed.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
    }
    else if(IsRobbingShot5{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingShot5{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Burger Shot at Redsands East.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Burger Shot.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Burger Shot for $%d at Redsands East.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
    }
    return 1;
}

public KelisaRob(playerid)
{
	if(IsRobbingKelisa1{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(100000 - 10000) + 10000;
		IsRobbingKelisa1{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Kelisa at Old Strip.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Kelisa at Old Strip.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Kelisa for $%d at Old Strip.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingKelisa2{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(100000 - 10000) + 10000;
		IsRobbingKelisa2{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Kelisa at PILGRIM.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Kelisa at PILGRIM.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Kelisa for $%d at PILGRIM.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingKelisa3{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(100000 - 10000) + 10000;
		IsRobbingKelisa3{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Kelisa at PILGRIM.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Kelisa at PILGRIM.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Kelisa for $%d at PILGRIM.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingKelisa4{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(100000 - 10000) + 10000;
		IsRobbingKelisa4{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Kelisa at Blackfield Chaple.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Kelisa at Blackfield Chaple.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Kelisa for $%d at Blackfield Chaple.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingKelisa5{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(100000 - 10000) + 10000;
		IsRobbingKelisa5{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Kelisa at Meydan asli.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Kelisa at Meydan asli.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Kelisa for $%d at Meydan asli.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingKelisa6{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(100000 - 10000) + 10000;
		IsRobbingKelisa6{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Kelisa at Bayside.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Kelisa at Bayside.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Kelisa for $%d at Bayside.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 	}
    return 1;
}

public AmmuRob(playerid)
{
	if(IsRobbingAmmu1{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingAmmu1{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Ammunation at The  Strip[South]", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Ammunation.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Ammunation for $%d at The  Strip[South]",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingAmmu2{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingAmmu2{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Ammunation at Bone County.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Ammunation.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Ammunation for $%d at Bone County.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingAmmu3{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingAmmu3{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Ammunation at Fort Carson.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Ammunation.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Ammunation for $%d at Fort Carson.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingAmmu4{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingAmmu4{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Ammunation at El Quebrados.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Ammunation.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Ammunation for $%d at El Quebrados.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingAmmu5{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingAmmu5{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Ammunation at The Old  Strip.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Ammunation.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Ammunation for $%d at The Old  Strip.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 		return 1;
 	}
 	else if(IsRobbingAmmu6{playerid} == true && HasBeenArrested{playerid} == false)
	{
    	new string[100], pName[24];
		new loot = random(19000) + 1000;
		IsRobbingAmmu6{playerid} = false;
		PlayerInfo[playerid][pHoldups]++;
		PlayerInfo[playerid][pCrimes]++;
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has robbed the Ammunation at  Meydan Asli.", GetName(playerid), playerid);
		CopRadio(BLUE, fstr);
		format(string, sizeof(string), "Great Job! You have robbed $%d from the Ammunation.", loot);
    	SendClientMessage(playerid, WHITE, string);
		GetPlayerName(playerid,(pName),sizeof(pName));
		GivePlayerCash(playerid,loot);
		format(string, sizeof(string), "[ROBBERY]: %s [%d] has just robbed the Ammunation for $%d at  Meydan Asli.",pName, playerid, loot);
		SendMessageToAll(ORANGE,string);
 		SetPlayerScore(playerid, GetPlayerScore(playerid)+1);
 		format(string, sizeof(string), "~w~Robbery ~g~Completed!~n~~w~You Stole: ~g~$%d", loot);
 		GameTextForPlayer(playerid, string ,5000,5);
 		ClearAnimations(playerid);
 	}
    return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, WEAPON:weaponid, bodypart)
{
	if(GetTeam{playerid} == CLASS_CIV && IsPlayerHoldingAGun(playerid) == 1)
	{
		shotsfired[playerid] ++;
		if(shotsfired[playerid] >= 25)
		{
			new current_zone, string[150];
			current_zone = Player_Zone[playerid];
			SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 3);
			format(string, sizeof(string), "[DISPATCH]: Suspect %s [%d] has assaulted %s [%d] with a deadly weapon at %s", GetName(playerid), playerid, GetName(damagedid), damagedid, ZoneNames[current_zone][zone_name]);
			CopRadio(BLUE, string);
			SendClientMessage(playerid, RED, "Assault with a deadly weapon [WANTED LEVEL INCREASED]");
			shotsfired[playerid] = 0;
		}
	}
    return 1;
}

public DetectATDeparture(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid, 100.0, 2150.0178,2425.3809,65.2773))
	{
	    KillTimer(attimer{playerid});
        hasenteredtower{playerid} = 0;
	}
	return 1;

}

public FailureToPayTicket(playerid)
{
	if(HasBeenIssuedTicket{playerid} == true && HasBeenArrested{playerid} == false)
	{
		new current_zone;
        current_zone = Player_Zone[playerid];
		SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		SendClientMessage(playerid, RED, "You have failed to pay an outstanding ticket [WANTED LEVEL INCREASED]");
		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has failed to pay a ticket at %s", GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
		CopRadio(BLUE, fstr);
		HasBeenIssuedTicket{playerid} = false;
		TicketIssuer[playerid] = -1;
	}
	return 1;
}

public RestartServer()
{
	GameTextForAll("~w~Server ~g~ Now Restarting..", 5000, 5);
    SendRconCommand("gmx");
	return 1;
}

public StartCountDown()
{
	CountStatus = 1;
	foreach(new i : Player)
	{
	    if(IsAtEvent[i] == 1)
	    {
			GameTextForAll("~r~Get Ready!", 1000, 5);
            PlayerPlaySound(i, 3200, 0.0, 0.0, 0.0);
			SetTimer("CountDownStage1", 1000, false);
	    }
	}
	return 1;
}

public CountDownStage1()
{
	CountStatus = 1;
	foreach(new i : Player)
	{
	    if(IsAtEvent[i] == 1)
	    {
			GameTextForAll("~w~3", 1000, 5);
			PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
			SetTimer("CountDownStage2", 1000, false);
	    }
	}
	return 1;
}

public CountDownStage2()
{
	CountStatus = 1;
	foreach(new i : Player)
	{
	    if(IsAtEvent[i] == 1)
	    {
			GameTextForAll("~w~2", 1000, 5);
			PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
			SetTimer("CountDownStage3", 1000, false);
	    }
	}
	return 1;
}

public CountDownStage3()
{
	CountStatus = 1;
	foreach(new i : Player)
	{
	    if(IsAtEvent[i] == 1)
	    {
			GameTextForAll("~w~1", 1000, 5);
			PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
			SetTimer("FinishCountDown", 1000, false);
	    }
	}
	return 1;
}

public FinishCountDown()
{
	foreach(new i : Player)
	{
	    if(IsAtEvent[i] == 1)
	    {
			GameTextForAll("~g~Go! Go! Go!", 1000, 5);
			PlayerPlaySound(i, 3201, 0.0, 0.0, 0.0);
			TogglePlayerControllable(i, true);
			if(HasMadeEvent{i} == 1)
			{
			    IsAtEvent[i] = 0;
			}
	    }
	}
	CountStatus = 0;
	return 1;
}

public AutoUncage(playerid)
{
	if(IsCaged{playerid} == true)
	{
		if(CageTime[playerid] > 0)
		{
			CageTime[playerid] --;
			new ctime = (CageTime[playerid]);
         	format(fstr, sizeof(fstr), "~g~Released In:~n~~w~%d Secs", ctime);
         	GameTextForPlayer(playerid, fstr, 5000, 5);
         	return 1;
      	}
		if(JailTime[playerid] == 0)
     	{
     	    KillTimer(CageTimer[playerid]);
			CageTime[playerid] = 0;
			PlayerInfo[playerid][cTime] = 0;
			IsCaged{playerid} = false;
			if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
			{
			    SaveUserStats(playerid);
			}
			new rand = random(sizeof(MedicSpawns));
			SetPlayerPos(playerid, MedicSpawns[rand][0], MedicSpawns[rand][1], MedicSpawns[rand][2]);
			SetPlayerFacingAngle(playerid, MedicSpawns[rand][3]);
			GameTextForPlayer(playerid, "~g~Uncaged", 5000, 5);
	  	}
	  	return 1;
	}
    return 1;
}

public AutoUnjail(playerid)
{
	if(IsJailed{playerid} == true)
	{
		if(JailTime[playerid] > 0)
		{
			JailTime[playerid] --;
			new jtime;
			jtime = (JailTime[playerid]);
         	format(fstr, sizeof(fstr), "~g~Released In:~n~~w~%d Secs", jtime);
         	GameTextForPlayer(playerid, fstr, 5000, 5);
         	return 1;
      	}
		if(JailTime[playerid] == 0)
     	{
     	    KillTimer(JailTimer[playerid]);
			JailTime[playerid] = 0;
			PlayerInfo[playerid][jTime] = 0;
			IsJailed{playerid} = false;
			if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
			{
			    SaveUserStats(playerid);
			}
			SetPlayerHealth(playerid, 100.0);
			SetPlayerWantedLevel(playerid, 0);
    		SetPlayerInterior(playerid, 3);
    		SetPlayerPos(playerid, 200.6972, 168.2653, 1003.0234);
    		SetPlayerFacingAngle(playerid, 89.0391);
			format(fstr, sizeof(fstr), "%s [%d] has been released from jail.", GetName(playerid), playerid);
			SendMessageToAll(YELLOW, fstr);
			if(PlayerInfo[playerid][vLevel] < 1)
			{
				new bail = random(4000) + 1000;
				GivePlayerCash(playerid, -bail);
				format(fstr2, sizeof(fstr2), "You have been released from jail, your bail was $%d.", bail);
				SendClientMessage(playerid, LIGHTGREEN, fstr2);
			}
	  	}
	}
    return 1;
}

public LoadGun_data(playerid, name[], value[])
{
    INI_Int("gSlot0_gun", GunInfo[playerid][gSlot0_gun]);
    INI_Int("gSlot0_ammo", GunInfo[playerid][gSlot0_ammo]);
    INI_Int("gSlot1_gun", GunInfo[playerid][gSlot1_gun]);
    INI_Int("gSlot1_ammo", GunInfo[playerid][gSlot1_ammo]);
    INI_Int("gSlot2_gun", GunInfo[playerid][gSlot2_gun]);
    INI_Int("gSlot2_ammo", GunInfo[playerid][gSlot2_ammo]);
    INI_Int("gSlot3_gun", GunInfo[playerid][gSlot3_gun]);
    INI_Int("gSlot3_ammo", GunInfo[playerid][gSlot3_ammo]);
    INI_Int("gSlot4_gun", GunInfo[playerid][gSlot4_gun]);
    INI_Int("gSlot4_ammo", GunInfo[playerid][gSlot4_ammo]);
    INI_Int("gSlot5_gun", GunInfo[playerid][gSlot5_gun]);
    INI_Int("gSlot5_ammo", GunInfo[playerid][gSlot5_ammo]);
    INI_Int("gSlot6_gun", GunInfo[playerid][gSlot6_gun]);
    INI_Int("gSlot6_ammo", GunInfo[playerid][gSlot6_ammo]);
    INI_Int("gSlot7_gun", GunInfo[playerid][gSlot7_gun]);
    INI_Int("gSlot7_ammo", GunInfo[playerid][gSlot7_ammo]);
    INI_Int("gSlot8_gun", GunInfo[playerid][gSlot8_gun]);
    INI_Int("gSlot8_ammo", GunInfo[playerid][gSlot8_ammo]);
    INI_Int("gSlot9_gun", GunInfo[playerid][gSlot9_gun]);
    INI_Int("gSlot9_ammo", GunInfo[playerid][gSlot9_ammo]);
    INI_Int("gSlot10_gun", GunInfo[playerid][gSlot10_gun]);
    INI_Int("gSlot10_ammo", GunInfo[playerid][gSlot10_ammo]);
    INI_Int("gSlot11_gun", GunInfo[playerid][gSlot11_gun]);
    INI_Int("gSlot11_ammo", GunInfo[playerid][gSlot11_ammo]);
    INI_Int("gSlot12_gun", GunInfo[playerid][gSlot12_gun]);
    INI_Int("gSlot12_ammo", GunInfo[playerid][gSlot12_ammo]);
    return 1;
}

public LoadPos_data(playerid, name[], value[])
{
    INI_Float("rPos_X", PosInfo[playerid][rPos_X]);
    INI_Float("rPos_Y", PosInfo[playerid][rPos_Y]);
    INI_Float("rPos_Z", PosInfo[playerid][rPos_Z]);
    INI_Float("rPos_A", PosInfo[playerid][rPos_A]);
    INI_Int("rInterior", PosInfo[playerid][rInterior]);
    INI_Int("rWorld", PosInfo[playerid][rWorld]);
/*	if(ACNR_DEBUG == 1)
		{
			new dbstr[300];
			printf("DEBUG: LoadPos_(%d,%f,%f,%f);",playerid, PosInfo[playerid][rPos_X], PosInfo[playerid][rPos_Y], PosInfo[playerid][rPos_Z]);		
			format(dbstr, sizeof(dbstr), "DEBUG: LoadPos_(%d,%f,%f,%f);",playerid, PosInfo[playerid][rPos_X], PosInfo[playerid][rPos_Y], PosInfo[playerid][rPos_Z]);
			SendClientMessage(playerid, RED, dbstr);
		}*/
    return 1;
}

CMD:debit(playerid, params[])
{
	new playerid2, debitamount;
	if(sscanf(params, "ud", playerid2, debitamount)) return SendClientMessage(playerid, RED, "[USAGE]: /debit [name/id] [amount]");
	if(!IsPlayerConnected(playerid2)) return SendClientMessage(playerid, RED, "Player not found.");
	if(debitamount > BankInfo[playerid][Balance]) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	BankInfo[playerid][Balance] = BankInfo[playerid][Balance] -debitamount;
	GivePlayerCash(playerid2, debitamount);
	if(playerid2 == playerid)
	{
		format(fstr, sizeof(fstr), "[CREDITCARD]: You have withdrawn $%d from your bank account and handed it to yourself.", debitamount);
		SendClientMessage(playerid, WHITE, fstr);
		BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
		if(PlayerInfo[playerid][vLevel] < 1)
        {
 		BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  		GivePlayerCash(playerid, - 4);
   		SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   		}
		SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
		return true;
	}
	else
	{
		format(fstr, sizeof(fstr), "[CREDITCARD]: You have withdrawn $%d from your bank account and handed it to %s.", debitamount, GetName(playerid2));
		SendClientMessage(playerid, WHITE, fstr);
		BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
		if(PlayerInfo[playerid][vLevel] < 1)
        {
 		BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  		GivePlayerCash(playerid, - 4);
   		SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   		}
		SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
	}
	return true;
}

CMD:credit(playerid, params[])
{
	new playerid2, creditamount;
	if(sscanf(params, "ud", playerid2, creditamount)) return SendClientMessage(playerid, RED, "[USAGE]: /credit [name/id] [amount]");
	if(!IsPlayerConnected(playerid2)) return SendClientMessage(playerid, RED, "Player not found.");
	if(creditamount > BankInfo[playerid][Credit]) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	BankInfo[playerid][Credit] = BankInfo[playerid][Credit] -creditamount;
	GivePlayerCash(playerid2, creditamount);
	if(playerid2 == playerid)
	{
		format(fstr, sizeof(fstr), "[DEBITCARD]: You have withdrawn $%d from your credit account and handed it to yourself.", creditamount);
		SendClientMessage(playerid, WHITE, fstr);
		BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
		if(PlayerInfo[playerid][vLevel] < 1)
        {
 		BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  		GivePlayerCash(playerid, - 4);
   		SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   		}
		SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
		return true;
	}
	else
	{
		format(fstr, sizeof(fstr), "[DEBITCARD]: You have withdrawn $%d from your credit account and handed it to %s.", creditamount, GetName(playerid2));
		SendClientMessage(playerid, WHITE, fstr);
		BankInfo[playerid][Transactions] = BankInfo[playerid][Transactions] + 1;
		if(PlayerInfo[playerid][vLevel] < 1)
        {
 		BankInfo[playerid][Fees] = BankInfo[playerid][Fees] + 4;
  		GivePlayerCash(playerid, - 4);
   		SendClientMessage(playerid, RED, "FEE: You were charged a $4 fee for this transaction.");
   		}
		SendClientMessage(playerid, WHITE, "THANKYOU: Thank you for banking with  Bank.");
	}
	return true;
}

CMD:objlist(playerid,params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
	ShowPlayerDialog(playerid, OBJECT_LIST_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}List of SOME object id's:", "{FFFFFF}Stunt objects: 13592, 13594, 13666 Roadblocks: 981, 1459, 1422, 4516, 4524, 4527\nBuildings: 4563, 9900 Ramp: 1655 Explosive barrel: 1225 Tower: 3279 Submarine: 1612\nPirate ship: 8493 Land mass: 9455 Nature: 700-725+ Roads: 5482-5512 Smoke machine: 2780\n19419-18646-11701-19620-18647..18652-18739\n1543-1544  Snow: 18863-18864  Samp-logo: 18749  UFO: 18846", "Ok", "");
	return true;
}

CMD:createobject(playerid,params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	if(GetSetObjectsCount[playerid] >= MAX_SET_OBJECTS)
	{
	    format(fstr, sizeof fstr, "You can only set a maximum of %d objects per spawn, use /deletesetobjects", MAX_SET_OBJECTS);
    	SendClientMessage(playerid, RED, fstr);
	    return true;
	}
	if(IsPlayerEditingObject{playerid} == true) return SendClientMessage(playerid, RED, "Your already editing an object, use /(set/cancel)object to edit another.");
	if(sscanf(params, "d", ObjectInfo[playerid][oID])) return SendClientMessage(playerid, RED, "[USAGE]: /createobject [objectid]");
	if(ObjectInfo[playerid][oID] > 20000 || ObjectInfo[playerid][oID] < 0) return SendClientMessage(playerid, RED, "Invalid objectid.");
    new Float:objX, Float:objY, Float:objZ;
	GetPlayerPos(playerid, objX, objY, objZ);
	IsPlayerEditingObject{playerid} = true;
	ObjectInfo[playerid][oCurrent] = CreateObject(ObjectInfo[playerid][oID], objX+5, objY+5, objZ, 0, 0, 0);
    format(fstr, sizeof(fstr), "Object id %d created at coordinates: %.2f, %.2f, %.2f", ObjectInfo[playerid][oID], objX, objY, objZ);
    SendClientMessage(playerid, WHITE, fstr);
    ObjectInfo[playerid][oX] = objX + 3;
	ObjectInfo[playerid][oY] = objY + 3;
	ObjectInfo[playerid][oZ] = objZ;
	return true;
}

CMD:cancelobject(playerid,params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to cancel.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command with an attached object, use /detachobject");
	IsPlayerEditingObject{playerid} = false;
	DestroyObject(ObjectInfo[playerid][oCurrent]);
	SendClientMessage(playerid, WHITE, "Object cancelled.");
	return true;
}

CMD:setobject(playerid,params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to set.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command with an attached object, use /detachobject");
	GetSetObjectsCount[playerid]++;
	GetSetObjects[playerid][GetSetObjectsCount[playerid]] = ObjectInfo[playerid][oCurrent];
	IsPlayerEditingObject{playerid} = false;
	ObjectInfo[playerid][oCurrent] = -1;
	SendClientMessage(playerid, WHITE, "Object set.");
	return true;
}

CMD:deletesetobjects(playerid,params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	for(new o = 0; o < MAX_SET_OBJECTS; o++)
	{
	    if(GetSetObjects[playerid][o] == -1) continue;
    	DestroyObject(GetSetObjects[playerid][o]);
    	GetSetObjects[playerid][o] = -1;
    	GetSetObjectsCount[playerid]--;
    }
	SendClientMessage(playerid, WHITE, "Set objects deleted.");
	return true;
}

CMD:attachobject(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to attach.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You already have an attached object, use /detachobject");
	IsPlayerAttachingObject{playerid} = true;
	DestroyObject(ObjectInfo[playerid][oCurrent]);
	new Float:xx, Float:yy, Float:zz;
	GetPlayerPos(playerid, xx, yy, zz);
	ObjectInfo[playerid][oCurrent] = CreateObject(ObjectInfo[playerid][oID], xx +5, yy +5, zz, 0, 0, 0);
	AttachObjectToPlayer(ObjectInfo[playerid][oCurrent], playerid, 0.0, 0.0, 1.2, 0, 0.0, 0);
	SendClientMessage(playerid, WHITE, "Object attached.");
	return true;
}

CMD:detachobject(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to attach.");
 	if(IsPlayerAttachingObject{playerid} == false) return SendClientMessage(playerid, RED, "You dont have an object to detach.");
	IsPlayerAttachingObject{playerid} = false;
	DestroyObject(ObjectInfo[playerid][oCurrent]);
	new Float:xx, Float:yy, Float:zz;
	GetPlayerPos(playerid, xx, yy, zz);
	ObjectInfo[playerid][oCurrent] = CreateObject(ObjectInfo[playerid][oID], xx +5, yy +5, zz, 0, 0, 0);
	SendClientMessage(playerid, WHITE, "Object detached.");
	return true;
}

CMD:moveobject(playerid, params[])
{
    new Float:Dist, Coord[150], Symbol[150], Float:Time;
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to move.");
	if(sscanf(params, "s[150]s[150]ff", Symbol, Coord, Dist, Time)) return SendClientMessage(playerid, RED, "[USAGE]: /moveobject [symbol] [coord] [distance] [seconds]");
	if(Dist < 0) return SendClientMessage(playerid, RED, "Please enter the distance you want to move the object in metres.");
	if(Time > 100) return SendClientMessage(playerid, RED, "You cant move objects faster then 100k/m per hour.");
	if(strfind(Symbol, "+", false) != -1)
	{
		if(strfind(Coord, "x", false) != -1)
		{
			ObjectInfo[playerid][oX] = ObjectInfo[playerid][oX] + Dist;
			MoveObject(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ], Time);
			SendClientMessage(playerid, WHITE, "Object now moving.");
		}
		else if(strfind(Coord, "y", false) != -1)
		{
			ObjectInfo[playerid][oY] = ObjectInfo[playerid][oY] + Dist;
			MoveObject(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ], Time);
			SendClientMessage(playerid, WHITE, "Object now moving.");
		}
		else if(strfind(Coord, "z", false) != -1)
		{
			ObjectInfo[playerid][oZ] = ObjectInfo[playerid][oZ] + Dist;
			MoveObject(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ], Time);
			SendClientMessage(playerid, WHITE, "Object now moving.");
		}
		else
		{
	    	SendClientMessage(playerid, RED, "The coord can only be x, y or z.");
		}
	}
	else if(strfind(Symbol, "-", false) != -1)
	{
		if(strfind(Coord, "x", false) != -1)
		{
			ObjectInfo[playerid][oX] = ObjectInfo[playerid][oX] - Dist;
			MoveObject(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ], Time);
			SendClientMessage(playerid, WHITE, "Object now moving.");
		}
		else if(strfind(Coord, "y", false) != -1)
		{
			ObjectInfo[playerid][oY] = ObjectInfo[playerid][oY] - Dist;
			MoveObject(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ], Time);
			SendClientMessage(playerid, WHITE, "Object now moving.");
		}
		else if(strfind(Coord, "z", false) != -1)
		{
			ObjectInfo[playerid][oZ] = ObjectInfo[playerid][oZ] - Dist;
			MoveObject(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ], Time);
			SendClientMessage(playerid, WHITE, "Object now moving.");
		}
		else
		{
	    	SendClientMessage(playerid, RED, "The coord can only be x, y or z.");
		}
	}
	else
	{
		SendClientMessage(playerid, RED, "The symbol can only be + or -.");
	}
	return true;
}

CMD:moveup(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	new Float:ZCoord;
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to move.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command with an attached object, use /detachobject");
	if(sscanf(params, "f", ZCoord)) return SendClientMessage(playerid, RED, "[USAGE]: /moveup [coord]");
	if(ZCoord < 0) return SendClientMessage(playerid, RED, "Please enter a coordinate to move the object.");
	ObjectInfo[playerid][oZ] = ObjectInfo[playerid][oZ] + ZCoord;
	SetObjectPos(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ]);
	SendClientMessage(playerid, WHITE, "Object moved up.");
	return true;
}

CMD:movedown(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	new Float:ZCoord;
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to move.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command with an attached object, use /detachobject");
	if(sscanf(params, "f", ZCoord)) return SendClientMessage(playerid, RED, "[USAGE]: /movedown [coord]");
	if(ZCoord < 0) return SendClientMessage(playerid, RED, "Please enter a coordinate to move the object.");
	ObjectInfo[playerid][oZ] = ObjectInfo[playerid][oZ] - ZCoord;
	SetObjectPos(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ]);
	SendClientMessage(playerid, WHITE, "Object moved down.");
	return true;
}

CMD:movenorth(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	new Float:YCoord;
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to move.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command with an attached object, use /detachobject");
	if(sscanf(params, "f", YCoord)) return SendClientMessage(playerid, RED, "[USAGE]: /movenorth [coord]");
	if(YCoord < 0) return SendClientMessage(playerid, RED, "Please enter a coordinate to move the object.");
	ObjectInfo[playerid][oY] = ObjectInfo[playerid][oY] + YCoord;
	SetObjectPos(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ]);
	SendClientMessage(playerid, WHITE, "Object moved north.");
	return true;
}

CMD:movesouth(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	new Float:YCoord;
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to move.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command with an attached object, use /detachobject");
	if(sscanf(params, "f", YCoord)) return SendClientMessage(playerid, RED, "[USAGE]: /movesouth [coord]");
	if(YCoord < 0) return SendClientMessage(playerid, RED, "Please enter a coordinate to move the object.");
	ObjectInfo[playerid][oY] = ObjectInfo[playerid][oY] - YCoord;
	SetObjectPos(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ]);
	SendClientMessage(playerid, WHITE, "Object moved south.");
	return true;
}

CMD:movewest(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	new Float:XCoord;
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to move.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command with an attached object, use /detachobject");
	if(sscanf(params, "f", XCoord)) return SendClientMessage(playerid, RED, "[USAGE]: /movewest [coord]");
	if(XCoord < 0) return SendClientMessage(playerid, RED, "Please enter a coordinate to move the object.");
	ObjectInfo[playerid][oX] = ObjectInfo[playerid][oX] - XCoord;
	SetObjectPos(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ]);
	SendClientMessage(playerid, WHITE, "Object moved west.");
	return true;
}

CMD:moveeast(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	new Float:XCoord;
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to move.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command with an attached object, use /detachobject");
	if(sscanf(params, "f", XCoord)) return SendClientMessage(playerid, RED, "[USAGE]: /moveeast [coord]");
	if(XCoord < 0) return SendClientMessage(playerid, RED, "Please enter a coordinate to move the object.");
	ObjectInfo[playerid][oX] = ObjectInfo[playerid][oX] + XCoord;
	SetObjectPos(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oX], ObjectInfo[playerid][oY], ObjectInfo[playerid][oZ]);
	SendClientMessage(playerid, WHITE, "Object moved east.");
	return true;
}

CMD:rotatex(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	new Float:XRot;
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to rotate.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command with an attached object, use /detachobject");
	if(sscanf(params, "f", XRot)) return SendClientMessage(playerid, RED, "[USAGE]: /rotatex [rotation]");
	if(XRot < 0) return SendClientMessage(playerid, RED, "Please enter a rotation coordinate to rotate the object.");
	ObjectInfo[playerid][oRotX] = ObjectInfo[playerid][oRotX] + XRot;
	SetObjectRot(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oRotX], ObjectInfo[playerid][oRotY], ObjectInfo[playerid][oRotZ]);
	SendClientMessage(playerid, WHITE, "Object rotated.");
	return true;
}

CMD:rotatey(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	new Float:YRot;
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to rotate.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command with an attached object, use /detachobject");
	if(sscanf(params, "f", YRot)) return SendClientMessage(playerid, RED, "[USAGE]: /rotatey [rotation]");
	if(YRot < 0) return SendClientMessage(playerid, RED, "Please enter a rotation coordinate to rotate the object.");
	ObjectInfo[playerid][oRotY] = ObjectInfo[playerid][oRotY] + YRot;
	SetObjectRot(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oRotX], ObjectInfo[playerid][oRotY], ObjectInfo[playerid][oRotZ]);
	SendClientMessage(playerid, WHITE, "Object rotated.");
	return true;
}

CMD:rotatez(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	new Float:ZRot;
	if(IsPlayerEditingObject{playerid} == false) return SendClientMessage(playerid, RED, "You are not editing any objects to rotate.");
	if(IsPlayerAttachingObject{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command with an attached object, use /detachobject");
	if(sscanf(params, "f", ZRot)) return SendClientMessage(playerid, RED, "[USAGE]: /rotatez [rotation]");
	if(ZRot < 0) return SendClientMessage(playerid, RED, "Please enter a rotation coordinate to rotate the object.");
	ObjectInfo[playerid][oRotZ] = ObjectInfo[playerid][oRotZ] + ZRot;
	SetObjectRot(ObjectInfo[playerid][oCurrent], ObjectInfo[playerid][oRotX], ObjectInfo[playerid][oRotY], ObjectInfo[playerid][oRotZ]);
	SendClientMessage(playerid, WHITE, "Object rotated.");
	return true;
}

CMD:r(playerid, params[])
{
	new msg[64];
	if(chattingwith[playerid] == -1) return SendClientMessage(playerid, RED, "You have not had any private messages to reply to.");
    if(IsMuted{playerid} == 1)
	{
        SendClientMessage(playerid, RED, "You cant use this command while your are mutted.");
        SetPlayerChatBubble(playerid, "Man MUTE hastam, alan nemitavanam chat konam.", RED, 50, 5000);
	    return 1;
    }
    if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /r [msg]");
    if(IsIgnoringPMs{chattingwith[playerid]} == 1) return SendClientMessage(playerid, RED, "That player is currently ignoring private messages.");
    if(!IsPlayerConnected(chattingwith[playerid])) return SendClientMessage(playerid, RED, "The player has disconnected.");
    if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
    {
   	    new placeholder;
	    for(new i = 0; i < sizeof(BadWords); i++)
	    {
	        placeholder = strfind(msg,BadWords[i],true);
	        if(placeholder != -1)
	        {
	            for(new x = placeholder; x < placeholder + strlen(BadWords[i]); x++)
	            {
	                msg[x] = '*';
	            }
	        }
	    }
        format(fstr, sizeof(fstr),"PM To %s [%d]: %s", GetName(chattingwith[playerid]), chattingwith[playerid], msg);
        SendClientMessage(playerid, WHITE, fstr);
        format(fstr, sizeof(fstr),"PM From %s [%d]: %s", GetName(playerid), playerid, msg);
        SendClientMessage(chattingwith[playerid], YELLOW, fstr);
        PlayerPlaySound(chattingwith[playerid],1085,0.0,0.0,0.0);
        chattingwith[chattingwith[playerid]] = playerid;
        new astring[100];
        format(astring, sizeof(astring),"PM: %s [%d] to %s [%d]: %s", GetName(playerid), playerid, GetName(chattingwith[playerid]), chattingwith[playerid], msg);
        SendOwnerMessage(GREY, astring);
	}
	return true;
}

CMD:pm(playerid, params[])
{
	new id, msg[64];
    if(IsMuted{playerid} == 1)
	{
        SendClientMessage(playerid, RED, "You cant use this command while your are mutted.");
        SetPlayerChatBubble(playerid, "Man MUTE hastam, alan nemitavanam chat konam.", RED, 50, 5000);
	    return 1;
    }
    if(sscanf(params, "us[64]", id, msg)) return SendClientMessage(playerid, RED, "[USAGE]: /pm [name/id] [msg]");
    if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "Player not found.");
    if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
    if(playerid == id) return SendClientMessage(playerid, RED, "You cannot PM yourself.");
    if(GetPlayerScore(playerid) < 10) return SendClientMessage(playerid, RED, "score shoma kamtar az 10 ast!");
    if(IsIgnoringPMs{id} == 1) return SendClientMessage(playerid, RED, "That player is currently ignoring private messages.");
    {
       	new placeholder;
	    for(new i = 0; i < sizeof(BadWords); i++)
	    {
	        placeholder = strfind(msg,BadWords[i],true);
	        if(placeholder != -1)
	        {
	            for(new x = placeholder; x < placeholder + strlen(BadWords[i]); x++)
	            {
	                msg[x] = '*';
	            }
	        }
	    }
        format(fstr, sizeof(fstr), "PM To %s [%d]: %s", GetName(id), id, msg);
        SendClientMessage(playerid, WHITE, fstr);
        format(fstr, sizeof(fstr), "PM From %s [%d]: %s", GetName(playerid), playerid, msg);
        SendClientMessage(id, YELLOW, fstr);
        SendClientMessage(id, LIGHTGREEN, "Baraye pasokh dadan be in PM : /r [msg] , baraye laghv daryaft PM: /nopm .");
        PlayerPlaySound(id,1085,0.0,0.0,0.0);
        chattingwith[id] = playerid;
        new astring[100];
        format(astring, sizeof(astring),"PM: %s [%d] to %s [%d]: %s", GetName(playerid), playerid, GetName(id), id, msg);
        SendOwnerMessage(GREY, astring);
    }
	return true;
}

CMD:nopm(playerid, params[])
{
    if(IsIgnoringPMs{playerid} == 0)
    {
        IsIgnoringPMs{playerid} = 1;
        SendClientMessage(playerid, LIGHTGREEN, "You are now ignoring all private messages.");
        return true;
	}
	else
	{
        IsIgnoringPMs{playerid} = 0;
        SendClientMessage(playerid, RED, "Your have stopped ignoring private messages.");
	}
	new astring[100];
    format(astring,sizeof(astring),"%s [%d] typed: /nopm", GetName(playerid), playerid);
    SendOwnerMessage(GREY,astring);
    //SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:mask(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
	if(HasBandanaAttached{playerid} == false)
	{
		SetPlayerAttachedObject(playerid, 0, 18912, 2, 0.078534, 0.041857, -0.001727, 268.970458, 1.533374, 269.223754);
		HasBandanaAttached{playerid} = true;
		return true;
	}
	else if(HasBandanaAttached{playerid} == true)
	{
        if(IsPlayerAttachedObjectSlotUsed(playerid, 0))
		{
			RemovePlayerAttachedObject(playerid, 0);
        	HasBandanaAttached{playerid} = false;
        }
	}
	return true;
}

CMD:shield(playerid, params[])
{
	if(GetTeam{playerid} == CLASS_CIV || GetTeam{playerid} == CLASS_MEDIC) return SendClientMessage(playerid, RED, "Only Law Enforcement Personel Can Use Riot Sheilds.");
	if(HasShieldAttached{playerid} == false)
	{
		SetPlayerAttachedObject(playerid, 1, 18637, 4, 0.3, 0, 0, 0, 170, 270, 1, 1, 1);
		HasShieldAttached{playerid} = true;
		return true;
	}
	else if(HasShieldAttached{playerid} == true)
	{
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1))
		{
			RemovePlayerAttachedObject(playerid, 1);
			HasShieldAttached{playerid} = false;
		}
	}
	return true;
}

CMD:ad(playerid, params[])
{
    new msg[64];
    if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /ad [msg]");
    if(IsMuted{playerid} == 1)
	{
        SendClientMessage(playerid, RED, "You cant use this command while your are mutted.");
        SetPlayerChatBubble(playerid, "Man MUTE hastam, alan nemitavanam chat konam.", RED, 50, 5000);
	    return 1;
    }
    if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your ad can only contain 1-64 characters.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer30]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 5 sanie sabr kon");
    TimerInfo[playerid][CMD_timer30] = gettime();
    {
        format(fstr, sizeof(fstr), "[ADVERT]: %s - [CONTACT]: %s [%d]", msg, GetName(playerid), playerid);
        SendMessageToAll(LIGHTGREEN, fstr);
        print(fstr);
    }
    return true;
}

CMD:fail(playerid, params[])
{
   	format(fstr, sizeof(fstr), "%s failed...", GetName(playerid));
   	SendMessageToAll(WHITE, fstr);
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer32]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 5 sanie sabr kon");
    TimerInfo[playerid][CMD_timer32] = gettime();
    return true;
}

CMD:hit(playerid, params[])
{
    new amount;
    if(sscanf(params, "ud", ID, amount)) return SendClientMessage(playerid, RED, "[USAGE]: /hit [name/id] [amount]");
  	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can place hits.");
	if(amount < 10000) return SendClientMessage(playerid, RED, "The hit must be atleast $10K.");
	if(!IsPlayerConnected(ID)) return SendClientMessage(playerid, RED, "Player not found.");
	if(ID == playerid) return SendClientMessage(playerid, RED, "You cant place a hit on yourself.");
	if(GetPlayerCash(playerid) < amount) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	if(HasHit[ID] > 0) return SendClientMessage(playerid, RED, "That player already has a hit contract placed on them.");
	if(IsPlayerNPC(ID)) return SendClientMessage(playerid, RED, "Shoma nemitavanid roye Elvis hit bezarid!.");
	{
	    HasHit[ID] = amount;
	    HasPlacedHit[ID] = playerid;
		format(fstr, sizeof(fstr), "You have placed a hit on %s [%d] for $%d.", GetName(ID), ID, amount);
		SendClientMessage(playerid, YELLOW, fstr);
		format(fstr2, sizeof(fstr2), "[HIT]: %s [%d] has just placed a hit on %s [%d] for $%d.", GetName(playerid), playerid, GetName(ID), ID, amount);
		SendMessageToAll(RED, fstr2);
		SendClientMessage(ID, RED, "You now have a hit contract!");
	}
    return true;
}

CMD:cancelhit(playerid, params[])
{
	new contract_id;
  	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
    if(sscanf(params, "u", contract_id)) return SendClientMessage(playerid, RED, "[USAGE]: /cancelhit [name/id]");
	if(!IsPlayerConnected(contract_id)) return SendClientMessage(playerid, RED, "Player not found.");
	if(contract_id == playerid) return SendClientMessage(playerid, RED, "You cant cancel your own hit.");
	if(HasHit[contract_id] > 0 && HasPlacedHit[contract_id] == playerid)
	{
	    HasHit[contract_id] = 0;
	    HasPlacedHit[contract_id] = -1;
		format(fstr, sizeof(fstr), "[HIT]: The hit on %s [%d] has been cancelled [Refund]", GetName(contract_id), contract_id);
   		SendMessageToAll(RED, fstr);
	}
	else
	{
	    SendClientMessage(playerid, RED, "You can only cancel hits that you have placed.");
	}
	return 1;
}

CMD:hits(playerid, params[])
{
    new count = 0;
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can view the hit list.");
    foreach(new i : Player)
    {
	    if(HasHit[i] > 0)
	    {
		    format(fstr, sizeof(fstr), "[Hitlist]: Player: %s [%d] - Price: $%d", GetName(i), i, HasHit[i]);
		    SendClientMessage(playerid, WHITE, fstr);
		    count++;
		}
	}
	if(count == 0)
	{
		SendClientMessage(playerid, RED, "There are currently no hit contracts at the moment.");
	}
	return true;
}

CMD:breakcuffs(playerid, params[])
{
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer5]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 5 sanie sabr kon");//1 mins
    TimerInfo[playerid][CMD_timer5] = gettime();
    if(HasBeenCuffed{playerid} == false) return SendClientMessage(playerid, RED, "Your not currently hand cuffed.");
    new BreakChances = random(5);
    switch(BreakChances)
    {
        case 0:
		{
			SendClientMessage(playerid, LIGHTGREEN, "You have successfully broken the cuffs! [WANTED LEVEL INCREASED]");
			TogglePlayerControllable(playerid, true);
			HasBeenCuffed{playerid} = false;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		case 1..4: return SendClientMessage(playerid, RED, "You have failed to break free.");
    }
    new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /breakcuffs", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:uncuff(playerid, params[])
{
    new targetid;
    if(sscanf(params, "u", targetid)) return SendClientMessage(playerid,RED, "[USAGE]: /uncuff [name/id]");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
    if(targetid == playerid) return SendClientMessage(playerid, RED, "You cant uncuff yourself.");
    if(HasBeenCuffed{targetid} == false) return SendClientMessage(playerid, RED, "That player is not hand cuffed.");
    if(!ProxDetectorS(5.0, playerid, targetid)) return SendClientMessage(playerid, RED, "That player is not close enough.");
	if(IsPlayerInAnyVehicle(targetid) && IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant uncuff players through vehicles.");
    if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_ARMY)
    {
        GameTextForPlayer(targetid, "~g~Uncuffed", 3000, 5);
        GameTextForPlayer(playerid, "~r~Suspect Uncuffed", 3000, 5);
        HasBeenCuffed{targetid} = false;
        SetPlayerSpecialAction(targetid, SPECIAL_ACTION_NONE);
    }
    else
    {
        return SendClientMessage(playerid, RED, "Only law enforcement can uncuff players.");
    }
    new astring[100];
    format(astring,sizeof(astring),"%s [%d] typed: /uncuff %d", GetName(playerid), playerid, targetid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:medic(playerid, params[])
{
    new healee, price;
    new Float:x, Float:y, Float:z;
    if(DegreeInfo[playerid][dHealth] < 1) return SendClientMessage(playerid, RED, "In command niaz be Madrak Medical darad.");
    if(GetTeam{playerid} != CLASS_MEDIC) return SendClientMessage(playerid, RED, "Only medics can heal players.");
    if(sscanf(params, "ud", healee, price)) return SendClientMessage(playerid, RED, "[USAGE]: /medic [name/id] [price]");
	if(!IsPlayerConnected(healee)) return SendClientMessage(playerid, RED, "Player not found.");
    //if(healee == playerid) return SendClientMessage(playerid, RED, "You cant heal yourself.");
    new Float:health;
    if(health >= 100.0) return SendClientMessage(playerid, RED, "In bazikon salem ast.");
    if(!ProxDetectorS(5.0, playerid, healee)) return SendClientMessage(playerid, RED, "That player is not close enough.");
    if(IsPlayerInAnyVehicle(healee) && IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant heal players through vehicles.");
    if((gettime() - 60) < TimerInfo[playerid][CMD_timer7]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 60 sanie sabr kon");//1 mins
    GetPlayerPos(playerid, x, y, z);
    GetPlayerHealth(healee, health);

//	if(ACNR_DEBUG == 1) { printf("DEBUG: health: %f \n pArmour: %f \n pHealth: %f",health, PlayerInfo[playerid][pArmour], PlayerInfo[playerid][pHealth]); }

    TimerInfo[playerid][CMD_timer7] = gettime();
    {
        format(fstr, sizeof(fstr), "You have offered to heal %s [%d] for $%d, please wait for a reply.", GetName(healee), healee, price);
        SendClientMessage(playerid, YELLOW, fstr);
        format(fstr2, sizeof(fstr2), "Medic %s [%d] has offered to heal you for $%d, use /(accept/decline)medic", GetName(playerid), playerid, price);
        SendClientMessage(healee, YELLOW, fstr2);
        offerer_id4[healee] = playerid;
        offer_price4[healee] = price;
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", healee);
    }
    new astring[100];
    format(astring,sizeof(astring),"%s [%d] typed: /medic %d %d", GetName(playerid), playerid, healee, price);
    SendAdminMessage(GREY, astring);
    return true;
}

CMD:acceptmedic(playerid, params[])
{
	if(offerer_id4[playerid] == -1) return SendClientMessage(playerid, RED, "You have not been offered medical services recently.");
	if(GetPlayerCash(playerid) < offer_price4[playerid]) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
    if(!ProxDetectorS(5.0, playerid, offerer_id4[playerid])) return SendClientMessage(playerid, RED, "Offer not close enough.");
	SetPlayerHealth(playerid, 100);
	GameTextForPlayer(playerid, "~g~Healed", 3000, 5);
	format(fstr, sizeof(fstr), "Medic %s [%d] has just healed you for $%d", GetName(offerer_id4[playerid]), playerid, offer_price4[playerid]);
	SendClientMessage(playerid, YELLOW, fstr);
	GivePlayerCash(playerid, - offer_price4[playerid]);
	GameTextForPlayer(offerer_id4[playerid], "~g~Player Healed", 3000, 5);
	GivePlayerCash(offerer_id4[playerid], offer_price4[playerid]);
	//
	if(offerer_id4[playerid] == playerid)
	{
	    new mstring[150];
	    format(mstring, sizeof(mstring), "Medic %s has just healed himself...", GetName(offerer_id4[playerid]), GetName(playerid));
        ProxDetector(20.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
	}
	else
	{
	    new mstring[150];
	    format(mstring, sizeof(mstring), "Medic %s has just healed %s...", GetName(offerer_id4[playerid]), GetName(playerid));
        ProxDetector(20.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
	    SetPlayerScore(offerer_id4[playerid], GetPlayerScore(offerer_id4[playerid]) +1);
    }
	//
    new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /acceptmedic", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    offerer_id4[playerid] = -1;
    return true;
}

CMD:declinemedic(playerid, params[])
{
    new string[150];
    if(offerer_id4[playerid] == -1) return SendClientMessage(playerid, RED, "You have not been offered medical services recently.");
	offer_price4[playerid] = -1;
	offerer_id4[playerid] = -1;
	format(string, sizeof(string), "%s [%d] has declined your offer.", GetName(playerid), playerid);
	SendClientMessage(offerer_id4[playerid], RED, string);
	SendClientMessage(playerid, WHITE, "Offer declined.");
	new astring[100];
    format(astring,sizeof(astring),"%s [%d] typed: /declinemedic", GetName(playerid), playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:cutrope(playerid, params[])
{
    if(PlayerInfo[playerid][pScissors] < 1) return SendClientMessage(playerid, RED, "You need a pair of scissors");
    if(HasBeenTied{playerid} == false) return SendClientMessage(playerid, RED, "Your not tied up.");
    if(IsLoggedIn{playerid} == 0) return SendClientMessage(playerid, RED, "Your need to be logged in before you can use this command.");
    if((gettime() - 10) < TimerInfo[playerid][CMD_timer6]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 10 sanie sabr kon");//1 mins
    TimerInfo[playerid][CMD_timer6] = gettime();
    new CutChances = random(3);
    switch(CutChances)
    {
    	case 0: return SendClientMessage(playerid, LIGHTGREEN, "You have successfully broken free!"), TogglePlayerControllable(playerid, true);
    	case 1: return SendClientMessage(playerid, RED, "You have failed to break free.");
    	case 2: return SendClientMessage(playerid, RED, "You have failed to break free and broken your pair of scissors."), PlayerInfo[playerid][pScissors] = 0, SaveUserStats(playerid);
    }
    new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /cutrope", GetName(playerid), playerid);
    //SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:bail(playerid, params[])
{
	new prisioner, bail[50];
    if(sscanf(params, "us[50]", prisioner, bail)) return SendClientMessage(playerid, RED, "[USAGE]: /bail [name/id] [condition]");
    if(!IsPlayerConnected(prisioner)) return SendClientMessage(playerid, RED, "Player not found.");
    if(strlen(bail) < 1 || strlen(bail) > 24) return SendClientMessage(playerid, RED, "Your bail vcondition can only contain 1-24 characters.");
    if(IsJailed{prisioner} == false) return SendClientMessage(playerid, RED, "That player is not in jail.");
    if(IsJailed{playerid} == true) return SendClientMessage(playerid, RED, "You cant bail yourself out of jail.");
    if(IsInCellCP{playerid} == false) return SendClientMessage(playerid, RED, "You must be at a jail cell to use this command.");
    if(GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_ARMY)
    {
	    format(fstr, sizeof(fstr), "You have released %s [%d] on bail. Condition: %s", GetName(prisioner), prisioner, bail);
        SendClientMessage(playerid, YELLOW, fstr);
        format(fstr, sizeof(fstr), "Prisioner %s [%d] has just been released on bail.", GetName(prisioner), prisioner, bail);
        SendMessageToAll(ORANGE, fstr);
        format(fstr2, sizeof(fstr2), "%s [%d] has given you bail! Condition: %s", GetName(playerid), playerid, bail);
        SendClientMessage(prisioner, LIGHTGREEN, fstr2);
        IsJailed{prisioner} = false;
    	SetPlayerHealth(prisioner, 100.00);
    	SetPlayerInterior(prisioner, 3);
    	SetPlayerPos(prisioner, 200.6972, 168.2653, 1003.0234);
    	SetPlayerFacingAngle(prisioner, 89.0391);
 	}
	else
	{
        return SendClientMessage(playerid, RED, "Only law enforcement can bail out prisioners.");
	}
	new astring[100],aName[24];
	GetPlayerName(playerid,(aName),sizeof(aName));
    format(astring,sizeof(astring),"%s [%d] typed: /bail %d %s",aName,playerid,prisioner,bail);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:break(playerid, params[])
{
	new prisioner;
    if(sscanf(params, "u", prisioner)) return SendClientMessage(playerid, RED, "[USAGE]: /break [name/id]");
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can break out players.");
    if(!IsPlayerConnected(prisioner)) return SendClientMessage(playerid, RED, "Player not found.");
    if(IsJailed{prisioner} == false) return SendClientMessage(playerid,RED, "That player is not in jail.");
    if(IsJailed{playerid} == true) return SendClientMessage(playerid, RED, "You cant break yourself out of jail, try /(esc)ape");
    if(IsInCellCP{playerid} == false) return SendClientMessage(playerid, RED, "You must be at a jail cell to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer7]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 5 sanie sabr kon");//1 mins
    TimerInfo[playerid][CMD_timer7] = gettime();
    new BreakChances = random(5);
    switch(BreakChances)
    {
    	case 0:
		{
			JailTime[prisioner] = 0;
			InMateID[prisioner] = 0;
			IsJailed{prisioner} = false;
			IsInCell{prisioner} = 0;
    		SetPlayerWantedLevel(prisioner, GetPlayerWantedLevel(prisioner) + 6);
			SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 6);
			SetPlayerHealth(prisioner, 100.00);
			SetPlayerInterior(prisioner, 3);
			SetPlayerPos(prisioner, 200.6972, 168.2653, 1003.0234);
			SetPlayerFacingAngle(prisioner, 89.0391);
			GivePlayerWeapon(prisioner, 31, 500);
    		format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has just broken %s [%d] out of jail at the PD [Inside].", GetName(playerid), playerid, GetName(prisioner), prisioner);
    		CopRadio(BLUE, fstr);
    		format(fstr2, sizeof(fstr2), "You have successfully broken %s [%d] out of jail! [WANTED LEVEL INCREASED]", GetName(prisioner), prisioner);
            SendClientMessage(playerid, YELLOW, fstr2);
    		format(fstr3, sizeof(fstr3), "%s [%d] has broken you out of jail and handed you a M4! [WANTED LEVEL INCREASED]", GetName(playerid), playerid);
            SendClientMessage(prisioner, LIGHTGREEN, fstr3);
		}
    	case 1..4:
		{
			SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 6);
			format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has attempted to break %s [%d] out of jail at the PD [Inside].", GetName(playerid), playerid, GetName(prisioner), prisioner);
			CopRadio(BLUE, fstr);
    		format(fstr2, sizeof(fstr2), "You have failed to break %s [%d] out of jail. [WANTED LEVEL INCREASED]", GetName(prisioner), prisioner);
            SendClientMessage(playerid, RED, fstr2);
    		format(fstr3, sizeof(fstr3), "%s [%d] has just failed to try and break you out of jail.", GetName(playerid), playerid);
            SendClientMessage(prisioner, ORANGE, fstr3);
		}
	}
	new astring[100],aName[24];
	GetPlayerName(playerid,(aName),sizeof(aName));
    format(astring,sizeof(astring),"%s [%d] typed: /break %d",aName,playerid,prisioner);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:bribe(playerid, params[])
{
	new bribe, copid, Float:x, Float:y, Float:z;
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
	if(sscanf(params, "ud", copid, bribe)) return SendClientMessage(playerid, RED, "[USAGE]: /bribe [name/id] [amount]");
	if(!IsPlayerConnected(copid)) return SendClientMessage(playerid, RED, "Player not found.");
	if(GetTeam{copid} == CLASS_CIV || GetTeam{copid} == CLASS_MEDIC) return SendClientMessage(playerid, RED, "You can only bribe law enforcement players.");
	if(GetPlayerWantedLevel(playerid) <= 4) return SendClientMessage(playerid, RED, "Your not wanted by the police.");
	if(BribeTo[playerid] != -1) return SendClientMessage(playerid, RED, "You have already offered the bribe, await a response.");
	if(bribe < 1000) return SendClientMessage(playerid, RED, "Bribes must be atleast $1K.");
	if(bribe > GetPlayerCash(playerid)) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	if(BribeFrom[copid] != -1) return SendClientMessage(playerid, RED, "That player has already been offered a bribe.");
	{
	    GetPlayerPos(copid, x, y, z);
	    if(!IsPlayerInRangeOfPoint(playerid, 10.0, x, y, z)) return SendClientMessage(playerid, RED, "You must be near them to bribe them.");
		BribeTo[playerid] = copid;
		BribeFrom[copid] = playerid;
		Bribe[copid] = bribe;
		format(fstr, sizeof(fstr), "%s [%d] has just offered you a $%d bribe.", GetName(playerid), playerid, bribe);
		SendClientMessage(copid, LIGHTGREEN, fstr);
		SendClientMessage(copid, YELLOW, "Use /accbribe to accept, and /decbribe to decline.");
		SendClientMessage(playerid, YELLOW, "You have offered the bribe, await a response.");
	}
	new astring[100],aName[24];
	GetPlayerName(playerid,(aName),sizeof(aName));
    format(astring,sizeof(astring),"%s [%d] typed: /bribe %d",aName,playerid,copid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:accbribe(playerid, params[])
{
    if(GetTeam{playerid} == CLASS_CIV || GetTeam{playerid} == CLASS_MEDIC) return SendClientMessage(playerid, RED, "Only law enforcement can use this command.");
	{
	    if(Bribe[playerid] == -1)
	    {
	        SendClientMessage(playerid, RED, "You have not been offered any bribes lately.");
	    }
        else if(GetPlayerWantedLevel(BribeFrom[playerid]) >= 4)
		{
		    GivePlayerCash(playerid, Bribe[playerid]);
		    GivePlayerCash(BribeFrom[playerid], -Bribe[playerid]);
		    SendClientMessage(BribeFrom[playerid], LIGHTGREEN, "Your bribe was accepted.");
			SendClientMessage(playerid, YELLOW, "You have accepted the bribe.");
			SetPlayerWantedLevel(BribeFrom[playerid], 0);
			BribeTo[BribeFrom[playerid]] = -1;
			Bribe[playerid] = -1;
			BribeFrom[playerid] = -1;
		}
		else
		{
		    SendClientMessage(playerid, RED, "That player is no longer wanted.");
			BribeTo[BribeFrom[playerid]] = -1;
			Bribe[playerid] = -1;
			BribeFrom[playerid] = -1;
		}
    }
    new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /accbribe",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:decbribe(playerid, params[])
{
    if(GetTeam{playerid} == CLASS_CIV || GetTeam{playerid} == CLASS_MEDIC) return SendClientMessage(playerid, RED,"Only Law Enforcement Can Decline Bribes.");
	{
	    if(BribeFrom[playerid] == 0)
		{
		    SendClientMessage(playerid, RED, "You have not been offered any bribes lately.");
		}
		else
		{
		    SendClientMessage(BribeFrom[playerid], RED, "Your bribe was declined. [WANTED LEVEL INCREASED]");
		    SendClientMessage(playerid, YELLOW, "You have declined the bribe.");
		    new current_zone;
        	current_zone = Player_Zone[BribeFrom[playerid]];
		    format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has just attempted to bribe %s [%d] at %s.", GetName(BribeFrom[playerid]), BribeFrom[playerid], GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
    		CopRadio(BLUE, fstr);
			SetPlayerWantedLevel(BribeFrom[playerid], GetPlayerWantedLevel(BribeFrom[playerid]) + 4);
			BribeTo[BribeFrom[playerid]] = -1;
			Bribe[playerid] = -1;
			BribeFrom[playerid] = -1;
		}
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /decbribe",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:cuff(playerid, params[])
{
	new rangepass = 0, vehiclepass = 0, wantedpass = 0, dutypass = 0, eventpass = 0, cuffedpass = 0;
    if(GetTeam{playerid} == CLASS_CIV || GetTeam{playerid} == CLASS_MEDIC) return SendClientMessage(playerid, RED, "Only law enforcement can cuff players.");
	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant cuff players while your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant cuff players from a vehicle.");
	foreach(new i : Player)
	{
	    if(i == playerid) continue;
	    new Float:x, Float:y, Float:z;
    	GetPlayerPos(i, x, y, z);
    	new Float:hp;
    	GetPlayerHealth(i, hp);
    	if(hp > 0.0)
    	if(IsPlayerInRangeOfPoint(playerid, 10.0, x, y, z) && GetPlayerInterior(playerid) == GetPlayerInterior(i) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
    	{
    	 	rangepass++;
			if(GetPlayerWantedLevel(i) >= 4)
			{
				wantedpass++;
				if(!IsPlayerInAnyVehicle(i))
				{
			    	vehiclepass++;
					if(IsOnduty{i} == 0)
					{
					    dutypass++;
						if(IsAtEvent{i} == 0)
						{
                            eventpass++;
							if(HasBeenCuffed{i} == false)
							{
							    cuffedpass++;
								GameTextForPlayer(i, "~r~Cuffed", 3000, 5);
								SendClientMessage(i, RED, "You have been cuffed, use /breakcuffs to try break free.");
								GameTextForPlayer(playerid, "~g~Suspect Cuffed", 3000, 5);
								SetPlayerSpecialAction(i, SPECIAL_ACTION_CUFFED);
								HasBeenCuffed{i} = true;
								break;
							}
						}
					}
				}
			}
		}
	}
	if(rangepass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(wantedpass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(vehiclepass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(dutypass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(eventpass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(cuffedpass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	new astring[100];
	format(astring, sizeof(astring),"%s [%d] typed: /cuff", GetName(playerid), playerid);
	SendAdminMessage(GREY, astring);
	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:cf(playerid, params[]) return cmd_cuff(playerid, params);

CMD:taze(playerid, params[])
{
	new rangepass = 0, vehiclepass = 0, wantedpass = 0, dutypass = 0, eventpass = 0, tazepass = 0;
    if(GetTeam{playerid} == CLASS_CIV || GetTeam{playerid} == CLASS_MEDIC) return SendClientMessage(playerid, RED, "Only law enforcement can taze players.");
	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant taze players while your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant taze players from a vehicle.");
	foreach(new i : Player)
	{
	    if(i == playerid) continue;
	    new Float:x, Float:y, Float:z;
    	GetPlayerPos(i, x, y, z);
    	new Float:hp;
    	GetPlayerHealth(i, hp);
    	if(hp > 0.0)
    	if(IsPlayerInRangeOfPoint(playerid, 10.0, x, y, z) && GetPlayerInterior(playerid) == GetPlayerInterior(i) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
    	{
    	 	rangepass++;
			if(GetPlayerWantedLevel(i) >= 4)
			{
				wantedpass++;
				if(!IsPlayerInAnyVehicle(i))
				{
			    	vehiclepass++;
					if(IsOnduty{i} == 0)
					{
					    dutypass++;
						if(IsAtEvent{i} == 0)
						{
                            eventpass++;
							if(HasBeenCuffed{i} == false)
							{
							    tazepass++;
								GameTextForPlayer(i, "~r~Tazered!~n~Your Now Stunned", 3000, 5);
								SetTimerEx("TazerTimer", 60000, false, "d", i);
								SendClientMessage(i, RED, "You have been tazered, your now stunned.");
								GameTextForPlayer(playerid, "~g~Suspect Tazered", 3000, 5);
								HasBeenCuffed{i} = true;
								TogglePlayerControllable(i, false);
								ApplyAnimation(i, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
								break;
							}
						}
					}
				}
			}
		}
	}
	if(rangepass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(wantedpass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(vehiclepass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(dutypass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(eventpass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(tazepass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	new astring[100];
	format(astring, sizeof(astring),"%s [%d] typed: /taze", GetName(playerid), playerid);
	SendAdminMessage(GREY, astring);
	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:tz(playerid, params[]) return cmd_taze(playerid, params);

CMD:paytk(playerid, params[])
{
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
    if(HasBeenIssuedTicket{playerid} == true)
    {
        new fine = random(1000) + 1000;
        if(GetPlayerCash(playerid) >= fine)
        {
        	KillTimer(TicketTimer{playerid});
        	HasBeenIssuedTicket{playerid} = false;
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has payed the ticket.", GetName(playerid), playerid);
			CopRadio(BLUE, fstr);
        	format(fstr2, sizeof(fstr2), "You have paid the ticket, it cost you $%d.", fine);
        	SendClientMessage(playerid, RED, fstr2);
        	format(fstr2, sizeof(fstr2), "The suspect has payed the ticket, you got paid $%d.", fine);
        	SendClientMessage(TicketIssuer[playerid], YELLOW, fstr2);
        	GivePlayerCash(playerid, -fine);
        	GivePlayerCash(TicketIssuer[playerid], fine);
        	SetPlayerWantedLevel(playerid, 0);
        	SetPlayerScore(TicketIssuer[playerid], GetPlayerScore(TicketIssuer[playerid]) + 1);
        	SetPlayerScore(playerid, GetPlayerScore(playerid) - 1);
        	PlayerInfo[TicketIssuer[playerid]][pTickets] ++;
        	PlayerInfo[playerid][pFined] ++;
        	TicketIssuer[playerid] = -1;
        }
        else
		{
		    SendClientMessage(playerid, RED, "Insuficient funds.");
		}
    }
    else
    {
        SendClientMessage(playerid, RED, "You have not been issued a ticket.");
    }
	return true;
}

CMD:tk(playerid, params[])
{
	new rangepass = 0, vehiclepass = 0, wantedpass = 0, dutypass = 0, eventpass = 0;
    if(GetTeam{playerid} == CLASS_CIV || GetTeam{playerid} == CLASS_MEDIC) return SendClientMessage(playerid, RED, "Only law enforcement can ticket players.");
	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant ticket players while your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant ticket players from a vehicle.");
	foreach(new i : Player)
	{
	    if(i == playerid) continue;
	    new Float:x, Float:y, Float:z;
    	GetPlayerPos(i, x, y, z);
    	new Float:hp;
    	GetPlayerHealth(i, hp);
    	if(hp > 0.0)
    	if(IsPlayerInRangeOfPoint(playerid, 15.0, x, y, z) && GetPlayerInterior(playerid) == GetPlayerInterior(i) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
    	{
    	 	rangepass++;
			if(GetPlayerWantedLevel(i) >= 1 && GetPlayerWantedLevel(i) <= 3)
			{
				wantedpass++;
				if(!IsPlayerInAnyVehicle(i))
				{
			    	vehiclepass++;
					if(IsOnduty{i} == 0)
					{
					    dutypass++;
						if(IsAtEvent{i} == 0)
						{
							HasBeenIssuedTicket{i} = true;
							TicketIssuer[i] = playerid;
        					TicketTimer{i} = SetTimerEx("FailureToPayTicket", 6000, false, "d", i);
                            eventpass++;
                            new current_zone;
        					current_zone = Player_Zone[i];
  							format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has been issued a ticket at %s", GetName(i), i, ZoneNames[current_zone][zone_name]);
							CopRadio(BLUE, fstr);
							GameTextForPlayer(i,"~r~Fined.~n~~w~Use /paytk to pay the ticket", 5000, 5);
							SendClientMessage(i, RED, "You have been issued a ticket, use /paytk to pay the ticket.");
							GameTextForPlayer(playerid,"~g~Suspect Fined", 5000, 5);
							SendClientMessage(playerid, YELLOW, "You have fined the suspect, stay nearby for payment.");

							break;
						}
					}
				}
			}
		}
	}
	if(rangepass == 0)
	{
		return SendClientMessage(playerid, RED, "No suspect players in range.");
	}
	else if(wantedpass == 0)
	{
		return SendClientMessage(playerid, RED, "No suspect players in range.");
	}
	else if(vehiclepass == 0)
	{
		return SendClientMessage(playerid, RED, "No suspect players in range.");
	}
	else if(dutypass == 0)
	{
		return SendClientMessage(playerid, RED, "No suspect players in range.");
	}
	else if(eventpass == 0)
	{
		return SendClientMessage(playerid, RED, "No suspect players in range.");
	}
	new astring[100];
	format(astring, sizeof(astring),"%s [%d] typed: /tk", GetName(playerid), playerid);
	SendAdminMessage(GREY, astring);
	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:ar(playerid, params[])
{
	new rangepass = 0, vehiclepass = 0, wantedpass = 0, dutypass = 0, eventpass = 0, arrestpass = 0;
    if(GetTeam{playerid} == CLASS_CIV || GetTeam{playerid} == CLASS_MEDIC) return SendClientMessage(playerid, RED, "Only law enforcement can arrest players.");
	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant arrest players while your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant arrest players from a vehicle.");
	foreach(new i : Player)
	{
	    if(i == playerid) continue;
	    new Float:x, Float:y, Float:z;
    	GetPlayerPos(i, x, y, z);
    	new Float:hp;
    	GetPlayerHealth(i, hp);
    	if(hp > 0.0)
    	if(IsPlayerInRangeOfPoint(playerid, 10.0, x, y, z) && GetPlayerInterior(playerid) == GetPlayerInterior(i) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
    	{
    	 	rangepass++;
			if(GetPlayerWantedLevel(i) >= 4)
			{
				wantedpass++;
				if(!IsPlayerInAnyVehicle(i))
				{
			    	vehiclepass++;
					if(IsOnduty{i} == 0)
					{
					    dutypass++;
						if(IsAtEvent{i} == 0)
						{
                            eventpass++;
							if(HasBeenArrested{i} == false)
							{
							    arrestpass++;
							    if(GetTeam{playerid} == CLASS_COPS)
								{
									PlayerInfo[i][pArrests] ++;
									TogglePlayerControllable(i, false);
									GameTextForPlayer(i, "~r~Arrested!", 3000, 5);
									format(fstr, sizeof(fstr), "Officer %s [%d] has just arrested you.", GetName(playerid), playerid);
									SendClientMessage(i, RED, fstr);
									GameTextForPlayer(playerid,"~w~Suspect ~g~Arrested.",5000,5);
        							SetPlayerScore(playerid, GetPlayerScore(playerid) + 1);
									new pay = random(10000) + 5000;
        							GivePlayerCash(playerid, pay);
        							PlayerInfo[playerid][pTakedowns] ++;
        							ApplyAnimation(playerid, "ped", "ARRESTgun", 4.1, 0, 1, 1, 1, 1, 1);
									format(fstr2, sizeof(fstr2), "Suspect %s [%d] has been arrested by Officer %s [%d]", GetName(i), i, GetName(playerid), playerid);
									SendMessageToAll(LIGHTGREEN, fstr2);
									SetPlayerScore(i, GetPlayerScore(i) - 1);
									SetPlayerSpecialAction(i, SPECIAL_ACTION_HANDSUP);
									SetTimerEx("SendPlayerToJail", 3000, false, "d", i);
									HasBeenArrested{i} = true;

         							break;
								}
								else if(GetTeam{playerid} == CLASS_CIA)
								{
									PlayerInfo[i][pArrests] ++;
									TogglePlayerControllable(i, false);
									GameTextForPlayer(i, "~r~Arrested!", 3000, 5);
									SendClientMessage(i, RED, "You have been arrested by a Undercover CIA Agent.");
									GameTextForPlayer(playerid,"~w~Suspect ~g~Arrested.",5000,5);
        							SetPlayerScore(playerid, GetPlayerScore(playerid) + 1);
        							new pay = random(10000) + 5000;
        							GivePlayerCash(playerid, pay);
        							PlayerInfo[playerid][pTakedowns] ++;
        							ApplyAnimation(playerid, "ped", "ARRESTgun", 4.1, 0, 1, 1, 1, 1, 1);
									format(fstr, sizeof(fstr), "Suspect %s [%d] has been arrested by a Undercover CIA Agent.", GetName(i), i);
									SendMessageToAll(LIGHTGREEN, fstr);
									SetPlayerScore(i, GetPlayerScore(i) - 1);
									SetPlayerSpecialAction(i, SPECIAL_ACTION_HANDSUP);
									SetTimerEx("SendPlayerToJail", 3000, false, "d", i);
									HasBeenArrested{i} = true;

         							break;
								}
								else if(GetTeam{playerid} == CLASS_FBI)
								{
									PlayerInfo[i][pArrests] ++;
									TogglePlayerControllable(i, false);
									GameTextForPlayer(i, "~r~Arrested!", 3000, 5);
									SendClientMessage(i, RED, "You have been arrested by a Undercover FBI Agent.");
									GameTextForPlayer(playerid,"~w~Suspect ~g~Arrested.",5000,5);
        							SetPlayerScore(playerid, GetPlayerScore(playerid) + 1);
        							new pay = random(10000) + 5000;
        							GivePlayerCash(playerid, pay);
        							PlayerInfo[playerid][pTakedowns] ++;
        							ApplyAnimation(playerid, "ped", "ARRESTgun", 4.1, 0, 1, 1, 1, 1, 1);
									format(fstr, sizeof(fstr), "Suspect %s [%d] has been arrested by a Undercover FBI Agent.", GetName(i), i);
									SendMessageToAll(LIGHTGREEN, fstr);
									SetPlayerScore(i, GetPlayerScore(i) - 1);
									SetPlayerSpecialAction(i, SPECIAL_ACTION_HANDSUP);
									SetTimerEx("SendPlayerToJail", 3000, false, "d", i);
									HasBeenArrested{i} = true;

         							break;
								}
								else if(GetTeam{playerid} == CLASS_ARMY)
								{
									PlayerInfo[i][pArrests] ++;
									TogglePlayerControllable(i, false);
									GameTextForPlayer(i, "~r~Arrested!", 3000, 5);
									SendClientMessage(i, RED, "You have been arrested by a  Army Soldier.");
									GameTextForPlayer(playerid,"~w~Suspect ~g~Arrested.",5000,5);
        							SetPlayerScore(playerid, GetPlayerScore(playerid) + 1);
        							new pay = random(10000) + 5000;
        							GivePlayerCash(playerid, pay);
        							PlayerInfo[playerid][pTakedowns] ++;
        							ApplyAnimation(playerid, "ped", "ARRESTgun", 4.1, 0, 1, 1, 1, 1, 1);
									format(fstr, sizeof(fstr), "Suspect %s [%d] has been arrested by a  Army Soldier.", GetName(i), i);
									SendMessageToAll(LIGHTGREEN, fstr);
									SetPlayerScore(i, GetPlayerScore(i) - 1);
									SetPlayerSpecialAction(i, SPECIAL_ACTION_HANDSUP);
									SetTimerEx("SendPlayerToJail", 3000, false, "d", i);
									HasBeenArrested{i} = true;

         							break;
								}
							}
						}
					}
				}
			}
		}
	}
	if(rangepass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(wantedpass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(vehiclepass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(dutypass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(eventpass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	else if(arrestpass == 0)
	{
		return SendClientMessage(playerid, RED, "No wanted players in range.");
	}
	new astring[100];
	format(astring, sizeof(astring),"%s [%d] typed: /ar", GetName(playerid), playerid);
	SendAdminMessage(GREY, astring);
	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:call(playerid, params[])
{
	SendClientMessage(playerid, RED, "[USAGE]: /call911   /callmedic   /callmechanic   /calldealer   ");
	return true;
}

CMD:callmedic(playerid, params[])
{
    new current_zone;
    current_zone = Player_Zone[playerid];
    SendClientMessage(playerid, YELLOW, "Your call has been dispatched to online medics.");
    format(fstr,sizeof(fstr),"[Medic Radio]: %s [%d] has called for help at %s, Use /medic [%d]", GetName(playerid), playerid, ZoneNames[current_zone][zone_name], playerid);
    MedicRadio(PINK, fstr);
    return true;
}

CMD:callmechanic(playerid, params[])
{
    new current_zone;
    current_zone = Player_Zone[playerid];
    SendClientMessage(playerid, YELLOW, "Your call has been dispatched to online mechanics.");
    format(fstr,sizeof(fstr),"[Mechanic Radio]: %s [%d] has called for a mechanic at %s", GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
    MechanicRadio(YELLOW, fstr);
    return true;
}

CMD:calldealer(playerid, params[])
{
    new current_zone;
    current_zone = Player_Zone[playerid];
    SendClientMessage(playerid, YELLOW, "Your call has been dispatched to online arms dealers.");
    format(fstr,sizeof(fstr),"[Arms Dealer Radio]: %s [%d] has called for some weapons at %s", GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
    DealerRadio(YELLOW, fstr);
    return true;
}

CMD:call911(playerid, params[])
{
    new report[50];
    new current_zone;
    current_zone = Player_Zone[playerid];
    if(sscanf(params, "s[50]", report)) return SendClientMessage(playerid,RED, "[USAGE]: /call911 [report]");
    if(strlen(report) < 1 || strlen(report) > 24) return SendClientMessage(playerid, RED, "Your report can only contain 1-24 characters.");
    {
        SendClientMessage(playerid, YELLOW, "Your report has been dispatched to online law enforement.");
        format(fstr, sizeof(fstr), "[Cop Radio]: %s [%d] has reported %s at %s.", GetName(playerid), playerid, report, ZoneNames[current_zone][zone_name]);
        CopRadio(BLUE, fstr);
    }
    return true;
}

CMD:escape(playerid, params[])
{
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
    if(IsJailed{playerid} == false) return SendClientMessage(playerid, RED, "Your not in jail.");
    if(CanESC{playerid} == false) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr konid.");//
	new escrand = random(5);
	switch(escrand)
	{
		case 0:
		{
        	SetPlayerHealth(playerid, 100.0);
    		SetPlayerInterior(playerid, 3);
    		SetPlayerPos(playerid, 200.6972, 168.2653, 1003.0234);
    		SetPlayerFacingAngle(playerid, 89.0391);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 6);
        	PlayerInfo[playerid][pCrimes] ++;
        	format(fstr, sizeof(fstr),"[DISPATCH]: Suspect %s [%d] has just escaped jail at PD.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "You have escaped jail!");
			format(fstr2, sizeof(fstr2), "%s [%d] has just escaped jail at PD.", GetName(playerid), playerid);
       		SendMessageToAll(RED, fstr2);
        	SendClientMessage(playerid, RED, "County jail escape. [WANTED LEVEL INCREASED]");
			IsJailed{playerid} = false;
			KillTimer(JailTimer[playerid]);
			JailTime[playerid] = 0;
			PlayerInfo[playerid][jTime] = 0;
			if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
			{
			    SaveUserStats(playerid);
			}
        }
        case 1..4:
		{
	    	CanESC{playerid} = false;
        	SetTimerEx("WaitToTryEscape", 60000, false, "d", playerid);
        	format(fstr, sizeof(fstr),"[DISPATCH]: Suspect %s [%d] has just attempted to escape jail at PD.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to escape.");
		}
	}
    return true;
}

CMD:esc(playerid, params[]) return cmd_escape(playerid, params);

CMD:lotto(playerid, params[])
{
    if(HasLotteryTicket{playerid} == 0) return SendClientMessage(playerid, RED, "You dont have a lottery ticket, buy one at a 24/7 Store.");
	{
		format(fstr, sizeof(fstr), "Your lotto numbers are: %d, %d, %d, %d, %d, %d", PlayersLottoNumbers[0][playerid], PlayersLottoNumbers[1][playerid], PlayersLottoNumbers[2][playerid], PlayersLottoNumbers[3][playerid], PlayersLottoNumbers[4][playerid], PlayersLottoNumbers[5][playerid]);
		SendClientMessage(playerid, YELLOW, fstr);
	}
	return true;
}

CMD:tie(playerid, params[])
{
   	new targetid;
   	new current_zone;
   	current_zone = Player_Zone[targetid];
   	new vehicle;
   	vehicle = GetPlayerVehicleID(playerid);
   	if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, RED, "[USAGE]: /tie [name/id]");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
   	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
   	if(GetTeam{targetid} == CLASS_MEDIC) return SendClientMessage(playerid, RED, "You cant kidnap medics.");
   	if(targetid == playerid) return SendClientMessage(playerid, RED, "You cant kidnap yourself");
   	if(!ProxDetectorS(5.0, playerid, targetid)) return SendClientMessage(playerid, RED, "That player is not close enough.");
   	if(!IsPlayerInAnyVehicle(targetid) && !IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You both have to be in a vehicle.");
   	if(PlayerInfo[playerid][pRope] < 1) return SendClientMessage(playerid, RED, "You need rope to kidnap players.");
   	if(HasBeenTied{targetid} == true) return SendClientMessage(playerid, RED, "That player is already tied up.");
   	if(!IsPlayerInVehicle(targetid, vehicle)) return SendClientMessage(playerid, RED, "You both have to be in the same vehicle.");
   	if(GetPlayerState(targetid) == PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, "You cant kidnap the driver.");
	if(IsOnduty{targetid} == 1) return SendClientMessage(playerid, RED, "You cant kidnap On-Duty admins.");
	if(IsAtEvent{targetid} == 1) return SendClientMessage(playerid, RED, "You cant kidnap players at events.");
	if(IsAtEvent{targetid} == 0)
	{
		TogglePlayerControllable(targetid, false);
      	HasBeenTied{targetid} = true;
       	PlayerInfo[playerid][pCrimes] ++;
       	PlayerInfo[playerid][pRope] --;
       	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		format(fstr, sizeof(fstr), "%s [%d] has just kidnapped you.", GetName(playerid), playerid);
       	SendClientMessage(targetid, RED, fstr);
       	GameTextForPlayer(targetid, "~r~Kidnapped", 3000, 5);
       	GameTextForPlayer(playerid, "~g~Player Tied Up", 3000, 5);
       	SendClientMessage(playerid, YELLOW, "You have successfully tied the player up.");
       	SendClientMessage(playerid, RED, "Kidnap [WANTED LEVEL INCREASED]");
       	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has just kidnapped %s [%d] at %s.", GetName(playerid), playerid, GetName(targetid), targetid, ZoneNames[current_zone][zone_name]);
       	CopRadio(BLUE, fstr);
	}
	else
	{
	    return SendClientMessage(playerid, RED, "You cant kidnap players at events.");
	}
   	new astring[64];
   	format(astring, sizeof(astring),"%s [%d] typed: /tie %d", GetName(playerid), playerid, targetid);
   	SendAdminMessage(GREY, astring);
	return true;
}

CMD:untie(playerid, params[])
{
	new targetid;
   	if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, RED, "[USAGE]: /untie [name/id]");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
   	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
   	if(targetid == playerid) return SendClientMessage(playerid, RED, "You cant untie yourself.");
   	if (!ProxDetectorS(5.0, playerid, targetid)) return SendClientMessage(playerid, RED, "That player is not close enough.");
   	if(HasBeenTied{targetid} == false) return SendClientMessage(playerid, RED, "That player is not tied up.");
   	{
		SendClientMessage(targetid, LIGHTGREEN, "You have just been untied!");
       	GameTextForPlayer(targetid, "~g~Untied", 3000, 5);
       	GameTextForPlayer(playerid, "~r~Player Untied", 3000, 5);
       	SendClientMessage(playerid, YELLOW, "Player untied.");
       	HasBeenTied{targetid} = false;
       	TogglePlayerControllable(targetid, true);
	}
   	new astring[100],aName[24];
   	GetPlayerName(playerid,(aName),sizeof(aName));
   	format(astring,sizeof(astring),"%s [%d] typed: /untie %d",aName,playerid,targetid);
   	SendAdminMessage(GREY,astring);
   	return true;
}

CMD:rob(playerid, params[])
{
	new targetid, string[150], string2[150], string3[150];
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You must /tie up someone in a vehicle to use this command.");
	if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, RED, "[USAGE]: /rob [name/id]");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
	if(playerid == targetid) return SendClientMessage(playerid, RED, "You cant rob yourself.");
	if(HasBeenTied{targetid} == false) return SendClientMessage(playerid, RED, "The player must be kidnapped in your vehicle to use this command.");
	if(!IsPlayerInAnyVehicle(targetid)) return SendClientMessage(playerid, RED, "The player must be kidnapped in your vehicle to use this command.");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(targetid)) return SendClientMessage(playerid, RED, "The player must be kidnapped in your vehicle to use this command.");
	if((gettime() - 60) < TimerInfo[playerid][CMD_timer37]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 60 sanie sabr kon");
    TimerInfo[playerid][CMD_timer37] = gettime();
	{
	    PlayerInfo[playerid][pCrimes] ++;
        new RobbedMoney = GetPlayerCash(targetid)/32;//3%
        GivePlayerCash(playerid, RobbedMoney);
		GivePlayerCash(targetid, -RobbedMoney);
		SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		new current_zone;
        current_zone = Player_Zone[playerid];
        SendClientMessage(playerid, RED, "Armed robbery. [WANTED LEVEL INCREASED]");
		format(string, sizeof(string), "You have stolen $%d from %s [%d].", RobbedMoney, GetName(targetid), targetid);
		SendClientMessage(playerid, LIGHTGREEN, string);
        format(string2, sizeof(string2), "%s [%d] has stolen $%d from you.", GetName(playerid), playerid, RobbedMoney);
 	    SendClientMessage(targetid, RED, string2);
		format(string3, sizeof(string3), "[DISPATCH]: Suspect %s [%d] has just robbed %s [%d] at %s.", GetName(playerid), playerid, GetName(targetid), targetid, ZoneNames[current_zone][zone_name]);
       	CopRadio(BLUE, string3);
       	new astring[100];
        format(astring, sizeof(astring),"%s [%d] just robbed %s [%d] for $%d", GetName(playerid), playerid, GetName(targetid), targetid, RobbedMoney);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	return true;
}

CMD:savestats(playerid, params[])
{
	new file[40];
    format(file, sizeof(file), USER_FILE, GetName(playerid));
    if(HasSpawned{playerid} == true && IsLoggedIn{playerid} == 1)
    {
		if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
		{
			SaveBankStats(playerid);
			SaveFightStats(playerid);
			SaveDegreeStats(playerid);
			SaveUserStats(playerid);
			SaveGunStats(playerid);
			SavePosStats(playerid);
    		SendClientMessage(playerid, LIGHTGREEN, "[ACCOUNT]: Moshakhasate Shoma Zakhire Shod.");
    		return true;
    	}
    }
    else
    {
        SendClientMessage(playerid, RED, "Your must be logged in and spawned to use this command.");
    }
    return true;
}

CMD:acnr(playerid, params[])
{
    new civ, cops, ciaplayers, fbiplayers, army, medic, totalplayers;
    civ = GetPlayersInTeamFromMaxPlayers(CLASS_CIV);
    cops = GetPlayersInTeamFromMaxPlayers(CLASS_COPS);
    ciaplayers = GetPlayersInTeamFromMaxPlayers(CLASS_CIA);
    fbiplayers = GetPlayersInTeamFromMaxPlayers(CLASS_FBI);
    army = GetPlayersInTeamFromMaxPlayers(CLASS_ARMY);
    medic = GetPlayersInTeamFromMaxPlayers(CLASS_MEDIC);
    foreach(new i : Player)
    {
	    totalplayers = i;
	}
    format(fstr, sizeof(fstr), "{FFFFFF}Civilians: %d\nCops/Police ha: %d\nMamor haye CIA: %d\nMamor haye FBI: %d\nArmy Soldiers: %d\nMedics/Doctor ha: %d\nPlayer haye Online: %d\nPlayer haye AFK: %d", civ, cops, ciaplayers, fbiplayers, army, medic, totalplayers, AFKcount);
    ShowPlayerDialog(playerid, VEGAS_STATS, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR Live Stats", fstr, "Ok", "");
    return true;
}

CMD:dinfo(playerid, params[])
{
	new playerid2, real[5], law[5], def[5], heal[5], mec[5], deal[5], weap[5];
	if(!sscanf(params, "u", playerid2))
	{
	    if(IsPlayerConnected(playerid2))
	    {
	    	if(IsLoggedIn{playerid2} == 1)
	    	{
	    	    if(DegreeInfo[playerid2][dReal] == 1)
	    	    {
	    	        format(real, sizeof(real), "Yes");
	    	    }
	    	    else if(DegreeInfo[playerid2][dReal] == 0)
	    	    {
	    	        format(real, sizeof(real), "No");
	    	    }

	    	    if(DegreeInfo[playerid2][dLaw] == 1)
	    	    {
	    	        format(law, sizeof(law), "Yes");
	    	    }
	    	    else if(DegreeInfo[playerid2][dLaw] == 0)
	    	    {
	    	        format(law, sizeof(law), "No");
	    	    }

	    	    if(DegreeInfo[playerid2][dDefense] == 1)
	    	    {
	    	        format(def, sizeof(def), "Yes");
	    	    }
	    	    else if(DegreeInfo[playerid2][dDefense] == 0)
	    	    {
	    	        format(def, sizeof(def), "No");
	    	    }

	    	    if(DegreeInfo[playerid2][dHealth] == 1)
	    	    {
	    	        format(heal, sizeof(heal), "Yes");
	    	    }
	    	    else if(DegreeInfo[playerid2][dHealth] == 0)
	    	    {
	    	        format(heal, sizeof(heal), "No");
	    	    }

	    	    if(DegreeInfo[playerid2][dMechanic] == 1)
	    	    {
	    	        format(mec, sizeof(mec), "Yes");
	    	    }
	    	    else if(DegreeInfo[playerid2][dMechanic] == 0)
	    	    {
	    	        format(mec, sizeof(mec), "No");
	    	    }

	    	    if(DegreeInfo[playerid2][dDealer] == 1)
	    	    {
	    	        format(deal, sizeof(deal), "Yes");
	    	    }
	    	    else if(DegreeInfo[playerid2][dDealer] == 0)
	    	    {
	    	        format(deal, sizeof(deal), "No");
	    	    }

	    	    if(DegreeInfo[playerid2][dWeapons] == 1)
	    	    {
	    	        format(weap, sizeof(weap), "Yes");
	    	    }
	    	    else if(DegreeInfo[playerid2][dWeapons] == 0)
	    	    {
	    	        format(weap, sizeof(weap), "No");
	    	    }

                format(fstr, sizeof(fstr), "{FFFFFF}Madrak Real Estate: %s\nMadrak Law: %s\nMadrak Defense: %s\nMadrak Medical: %s\nMadrak Mechanical: %s\nMadrak Dealership: %s\nMadrak Weapons: %s\nBaraye didan moshakhasat anha roye anha click konid.", real, law, def, heal, mec, deal, weap);
				ShowPlayerDialog(playerid, DEGREE_INFO_LIST, DIALOG_STYLE_LIST , "{FFFFFF}Master Degree Info", fstr, "Ok", "");
            }
            else
            {
                SendClientMessage(playerid, RED, "Player not logged in.");
            }
        }
        else
        {
            SendClientMessage(playerid, RED, "Player not found.");
        }
		return true;
	}
	else
	{
		if(DegreeInfo[playerid][dReal] == 1)
		{
			format(real, sizeof(real), "Yes");
		}
		else if(DegreeInfo[playerid][dReal] == 0)
		{
			format(real, sizeof(real), "No");
		}

		if(DegreeInfo[playerid][dLaw] == 1)
		{
			format(law, sizeof(law), "Yes");
		}
		else if(DegreeInfo[playerid][dLaw] == 0)
		{
			format(law, sizeof(law), "No");
		}

		if(DegreeInfo[playerid][dDefense] == 1)
		{
			format(def, sizeof(def), "Yes");
		}
		else if(DegreeInfo[playerid][dDefense] == 0)
		{
			format(def, sizeof(def), "No");
		}

		if(DegreeInfo[playerid][dHealth] == 1)
		{
			format(heal, sizeof(heal), "Yes");
		}
		else if(DegreeInfo[playerid][dHealth] == 0)
		{
			format(heal, sizeof(heal), "No");
		}

		if(DegreeInfo[playerid][dMechanic] == 1)
		{
			format(mec, sizeof(mec), "Yes");
		}
		else if(DegreeInfo[playerid][dMechanic] == 0)
		{
			format(mec, sizeof(mec), "No");
		}

		if(DegreeInfo[playerid][dDealer] == 1)
		{
			format(deal, sizeof(deal), "Yes");
		}
		else if(DegreeInfo[playerid][dDealer] == 0)
		{
			format(deal, sizeof(deal), "No");
		}

		if(DegreeInfo[playerid][dWeapons] == 1)
		{
			format(weap, sizeof(weap), "Yes");
		}
		else if(DegreeInfo[playerid][dWeapons] == 0)
		{
			format(weap, sizeof(weap), "No");
		}

	    format(fstr, sizeof(fstr), "{FFFFFF}Madrak Real Estate: %s\nMadrak Law: %s\nMadrak Defense: %s\nMadrak Medical: %s\nMadrak Mechanical: %s\nMadrak Dealership: %s\nMadrak Weapons: %s\nBaraye didan moshakhasat anha roye anha click konid.", real, law, def, heal, mec, deal, weap);
		ShowPlayerDialog(playerid, DEGREE_INFO_LIST, DIALOG_STYLE_LIST , "{FFFFFF}Degree Info", fstr, "Ok", "");
	}
	return true;
}

CMD:faqs(playerid, params[])
{
	ShowPlayerDialog(playerid, FAQS_DIALOG, DIALOG_STYLE_LIST, "{FFFFFF}ACNR - FAQS - Questions", "{FFFFFF}Chegone Madrak bekharam?\nChetor mitonam class cia/fbi/army/medic ra entekhab konam?\nChetor pool dar biaram?\nChetor mashin bekharam?\nChetor house/business bekharam?\nChetori VIP besham?\nHow much are guns/mats worth?\nHow to apply for ACNR admin/staff positions?\nElvis kie?\nChetori Material/Ghate aslahe bekharam?", "Select", "Cancel");
	return true;
}

CMD:gps(playerid, params[])
{
	ShowPlayerDialog(playerid, GPS, DIALOG_STYLE_LIST, "{FFFFFF} ACNR - GPS ", "{FFFFFF}Hospital / Bimarestan \nCar Shop / Mashin foroshi \nUniversity / Daneshgah \nMeydan Asli  \nNight Club \nBar \nAirport / Forodgah \nKarkhane sakht ghate aslahe / Material Factory  (1) \nKarkhane sakht ghate aslahe / Material Factory  (2) \nAsansor \nbaraye ezafe shodan makan digari mitavanid be scripter/owner gozaresh dahid ", "Select", "Cancel");
	return true;
}

CMD:climbsign(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, 2304.0759, 2382.6260, 14.9083)) return SendClientMessage(playerid, RED, "You are not at the  Bar sign.");
	SetPlayerPos(playerid, 2304.0908, 2381.2251, 45.7953);
	SetPlayerFacingAngle(playerid, 178.3792);
	GivePlayerWeapon(playerid, 46, 1);
	return true;
}

CMD:elevator(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 5.0, 1728.4685,-1671.1666,27.1953) || IsPlayerInRangeOfPoint(playerid, 5.0, 1731.1501,-1668.5820,27.1953) || IsPlayerInRangeOfPoint(playerid, 5.0, 1710.7915,-1643.9325,27.2035) || IsPlayerInRangeOfPoint(playerid, 5.0, 1713.5035,-1641.3409,27.2124) || IsPlayerInRangeOfPoint(playerid, 5.0, 1710.8021,-1643.9214,23.6797) || IsPlayerInRangeOfPoint(playerid, 5.0, 1713.5140,-1641.3318,23.6797))
	{
		ShowPlayerDialog(playerid, APARTMENTS_ELEVATOR, DIALOG_STYLE_LIST, "{FFFFFF} Apartments - Elevator", "{FFFFFF}Ground Level\nLevel 1\nLevel 2\nLevel 3\nLevel 4\nLevel 5\nLevel 6\nLevel 7\nLevel 8\nLevel 9\nLevel 10\nRoof", "Select", "Cancel");
		return true;
	}
	else
	{
		SendClientMessage(playerid, RED, "You are not at the  Appartments level elevators");
	}
	return true;
}

CMD:pickup(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 2293.1216, 2455.5334, 10.8203))//NVPD Weapon Pickup
	{
        if(GetTeam{playerid} == CLASS_CIA)
        {
			ResetPlayerWeapons(playerid);
    		GivePlayerWeapon(playerid, 3, 1);
    		GivePlayerWeapon(playerid, 26, 200);
    		GivePlayerWeapon(playerid, 29, 500);
	    	GivePlayerWeapon(playerid, 31, 400);
	    	PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
	    	SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
		else if(GetTeam{playerid} == CLASS_COPS)
        {
			ResetPlayerWeapons(playerid);
		    GivePlayerWeapon(playerid, 3, 1);
		    GivePlayerWeapon(playerid, 27, 200);
		    GivePlayerWeapon(playerid, 29, 500);
		    GivePlayerWeapon(playerid, 31, 400);
		    PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
		else if(GetTeam{playerid} == CLASS_ARMY)
        {
			ResetPlayerWeapons(playerid);
		    GivePlayerWeapon(playerid, 24, 99999);
		    GivePlayerWeapon(playerid, 26, 99999);
		    GivePlayerWeapon(playerid, 29, 99999);
		    GivePlayerWeapon(playerid, 31, 99999);
		    PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
		else if(GetTeam{playerid} == CLASS_FBI)
        {
			ResetPlayerWeapons(playerid);
		    GivePlayerWeapon(playerid, 3, 1);
		    GivePlayerWeapon(playerid, 26, 200);
		    GivePlayerWeapon(playerid, 29, 500);
		    GivePlayerWeapon(playerid, 31, 400);
		    PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
	    else
	    {
	        SendClientMessage(playerid, RED, "Only law enforcement can use this command.");
	    }
	    return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2493.1833, 2394.5808, 10.8203))//FBI Weapon Pickup
	{
        if(GetTeam{playerid} == CLASS_CIA)
        {
			ResetPlayerWeapons(playerid);
    		GivePlayerWeapon(playerid, 3, 1);
    		GivePlayerWeapon(playerid, 26, 200);
    		GivePlayerWeapon(playerid, 29, 500);
	    	GivePlayerWeapon(playerid, 31, 400);
	    	PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
	    	SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
		else if(GetTeam{playerid} == CLASS_COPS)
        {
			ResetPlayerWeapons(playerid);
		    GivePlayerWeapon(playerid, 3, 1);
		    GivePlayerWeapon(playerid, 27, 200);
		    GivePlayerWeapon(playerid, 29, 500);
		    GivePlayerWeapon(playerid, 31, 400);
		    PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
		else if(GetTeam{playerid} == CLASS_ARMY)
        {
			ResetPlayerWeapons(playerid);
		    GivePlayerWeapon(playerid, 24, 99999);
		    GivePlayerWeapon(playerid, 26, 99999);
		    GivePlayerWeapon(playerid, 29, 99999);
		    GivePlayerWeapon(playerid, 31, 99999);
		    PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
		else if(GetTeam{playerid} == CLASS_FBI)
        {
			ResetPlayerWeapons(playerid);
		    GivePlayerWeapon(playerid, 3, 1);
		    GivePlayerWeapon(playerid, 26, 200);
		    GivePlayerWeapon(playerid, 29, 500);
		    GivePlayerWeapon(playerid, 31, 400);
		    PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
	    else
	    {
	        SendClientMessage(playerid, RED, "Only law enforcement can use this command.");
	    }
	    return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 946.9702, 1730.2723, 8.8516))//CIA Weapon Pickup
	{
        if(GetTeam{playerid} == CLASS_CIA)
        {
			ResetPlayerWeapons(playerid);
    		GivePlayerWeapon(playerid, 3, 1);
    		GivePlayerWeapon(playerid, 26, 200);
    		GivePlayerWeapon(playerid, 29, 500);
	    	GivePlayerWeapon(playerid, 31, 400);
	    	PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
	    	SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
		else if(GetTeam{playerid} == CLASS_COPS)
        {
			ResetPlayerWeapons(playerid);
		    GivePlayerWeapon(playerid, 3, 1);
		    GivePlayerWeapon(playerid, 27, 200);
		    GivePlayerWeapon(playerid, 29, 500);
		    GivePlayerWeapon(playerid, 31, 400);
		    PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
		else if(GetTeam{playerid} == CLASS_ARMY)
        {
			ResetPlayerWeapons(playerid);
		    GivePlayerWeapon(playerid, 24, 99999);
		    GivePlayerWeapon(playerid, 26, 99999);
		    GivePlayerWeapon(playerid, 29, 99999);
		    GivePlayerWeapon(playerid, 31, 99999);
		    PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
		else if(GetTeam{playerid} == CLASS_FBI)
        {
			ResetPlayerWeapons(playerid);
		    GivePlayerWeapon(playerid, 3, 1);
		    GivePlayerWeapon(playerid, 26, 200);
		    GivePlayerWeapon(playerid, 29, 500);
		    GivePlayerWeapon(playerid, 31, 400);
		    PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    SendClientMessage(playerid, YELLOW, "Weapons picked up.");
		    return true;
	    }
	    else
	    {
	        SendClientMessage(playerid, RED, "Only law enforcement can use this command.");
	    }
	    return true;
    }
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2293.1194, 2447.1709, 10.8203))//NVPD Armour Pickup
	{
		if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY)
        {
			SetPlayerArmour(playerid, 100.0);
		    SendClientMessage(playerid, YELLOW, "Armour picked up.");
		    return true;
        }
	    else
	    {
	        SendClientMessage(playerid, RED, "Only law enforcement can use this command.");
	    }
	    return true;
	}
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 2493.1838, 2400.7966, 10.8203))//FBI Armour Pickup
	{
		if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY)
        {
			SetPlayerArmour(playerid, 100.0);
		    SendClientMessage(playerid, YELLOW, "Armour picked up.");
		    return true;
        }
	    else
	    {
	        SendClientMessage(playerid, RED, "Only law enforcement can use this command.");
	    }
	    return true;
	}
    else if(IsPlayerInRangeOfPoint(playerid, 2.0, 946.9492, 1736.2869, 8.8516))//CIA Armour Pickup
	{
		if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_ARMY)
        {
			SetPlayerArmour(playerid, 100.0);
		    SendClientMessage(playerid, YELLOW, "Armour picked up.");
		    return true;
        }
	    else
	    {
	        SendClientMessage(playerid, RED, "Only law enforcement can use this command.");
	    }
	    return true;
	}
	else
	{
		SendClientMessage(playerid, RED, "Your not at a pickup point.");
	}
	return true;
}

CMD:kill(playerid, params[])
{
	if(GetPlayerWantedLevel(playerid) >= 1) return SendClientMessage(playerid, RED, "You cant use this command when you have wanted level.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE || HasSpawned{playerid} == false) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
	if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command when you are jailed/caged.");
	HasChangedSkin{playerid} = true;
	SetPlayerHealth(playerid, 0.0);
	ForceClassSelection(playerid);
	return true;
}

CMD:commands(playerid, params[])
{
    if(GetTeam{playerid} == CLASS_COPS)
   	{
        ShowPlayerDialog(playerid, CMDS_LIST1, DIALOG_STYLE_MSGBOX ,
"{FFFFFF}Cop Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n\n/ar /tk /cuff(/cf) /uncuff /c /taze(/tz) /(acc/dec)bribe /bail /shield /raid /pickup /tdspeedo \n\n Client Commands:\n\n /quit (/q) /fpslimit 90 /pagesize 15 /headmove /timestamp /dl /mem /fontsize [-3 to 5] /ctd /hudscalefix ", "Ok", "");
    }
    else if(GetTeam{playerid} == CLASS_CIA)
   	{
  		ShowPlayerDialog(playerid, CMDS_LIST2, DIALOG_STYLE_MSGBOX ,
"{FFFFFF}CIA Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n\n/ar /tk /cuff(/cf) /uncuff /c /taze(/tz) /(acc/dec)bribe /bail /shield /raid /pickup /tdspeedo \n\n Client Commands:\n\n /quit (/q) /fpslimit 90 /pagesize 15 /headmove /timestamp /dl /mem /fontsize [-3 to 5] /ctd /hudscalefix ", "Ok", "");
    }
    else if(GetTeam{playerid} == CLASS_ARMY)
   	{
  		ShowPlayerDialog(playerid, CMDS_LIST3, DIALOG_STYLE_MSGBOX ,
"{FFFFFF}Army Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n\n/ar /tk /cuff(/cf) /uncuff /c /taze(/tz) /(acc/dec)bribe /bail /shield /raid /pickup /tdspeedo \n\n Client Commands:\n\n /quit (/q) /fpslimit 90 /pagesize 15 /headmove /timestamp /dl /mem /fontsize [-3 to 5] /ctd /hudscalefix ", "Ok", "");
    }
    else if(GetTeam{playerid} == CLASS_FBI)
   	{
  		ShowPlayerDialog(playerid, CMDS_LIST6, DIALOG_STYLE_MSGBOX ,
"{FFFFFF}FBI Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n\n/ar /tk /cuff(/cf) /uncuff /c /taze(/tz) /(acc/dec)bribe /bail /shield /raid /pickup /tdspeedo \n\n Client Commands:\n\n /quit (/q) /fpslimit 90 /pagesize 15 /headmove /timestamp /dl /mem /fontsize [-3 to 5] /ctd /hudscalefix ", "Ok", "");
    }
    else if(GetTeam{playerid} == CLASS_CIV)
   	{
    	ShowPlayerDialog(playerid, CMDS_LIST4, DIALOG_STYLE_MSGBOX ,
"{FFFFFF}Civilian Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n\n/roblist /esc /(un)tie /(cancel)hit /hits /(break)out/cuffs /bribe /mask /blowbomb /breakin /tdspeedo \n\n Client Commands:\n\n /quit (/q) /fpslimit 90 /pagesize 15 /headmove /timestamp /dl /mem /fontsize [-3 to 5] /ctd /hudscalefix", "Ok", "");
   	}
    else if(GetTeam{playerid} == CLASS_MEDIC)
   	{
    	ShowPlayerDialog(playerid, CMDS_LIST5, DIALOG_STYLE_MSGBOX ,
"{FFFFFF}Medic Commands", "{FFFFFF}/w(hisper) /gps /rules /help /faqs /pc /n /cp /vehcmds /pm /ad /gcmds /loc /(biz/house)menu /join /vcmds /me /do\n/healme /cutrope /call(911/medic/mechanic/dealer) /anims /(save)stats /report /fail /paint /lotto\n/vlock(/lk) /pay /lotto /viplist /acnr /nopm /votecmds /debit /credit /sazandegan /askadmin /dinfo /wealth /kill\n\nClass commands:\n/medic /m /tdspeedo \n\n Client Commands:\n\n /quit (/q) /fpslimit 90 /pagesize 15 /headmove /timestamp /dl /mem /fontsize [-3 to 5] /ctd /hudscalefix", "Ok", "");
   	}
    return true;
}

CMD:cmds(playerid, params[]) return cmd_commands(playerid, params);

CMD:classhelp(playerid, params[])
{
//    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
//	SendClientMessage(playerid, COLOR_GRAD1, "Class Help");
//	return 1;
	return cmd_help(playerid, params);
}

CMD:jailhelp(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	SendClientMessage(playerid, COLOR_GRAD1, "Jail/Prison Help");
	return 1;
}

CMD:grouphelp(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	SendClientMessage(playerid, COLOR_GRAD1, "Group Help: /gcmds");
	return 1;
}

CMD:genhelp(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	SendClientMessage(playerid, COLOR_GRAD1, "General Help");
	return 1;
}

CMD:infohelp(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	SendClientMessage(playerid, COLOR_GRAD1, "Informational Help");
	return 1;
}

CMD:msghelp(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	SendClientMessage(playerid, COLOR_GRAD1, "Messaging Help");
	return 1;
}

CMD:vehhelp(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	SendClientMessage(playerid, COLOR_GRAD1, "Vehicle Help");
	SendClientMessage(playerid, -1, "/myvehs /service /setplate /boot /bonnet /deleteveh");
	SendClientMessage(playerid, -1, "/alarm /lights /lock(/lk) /park /(decline/accept)veh /sellvehto");
	return 1;
}

CMD:housemenu(playerid, params[])
{
	if(IsInHouse[playerid] == 0) return SendClientMessage(playerid, RED, "You need to be in a house to use this command.");
	if(strcmp(GetHouseOwner(LastHouseCP[playerid]), GetName(playerid), false)) return SendClientMessage(playerid, RED, "You dont own this house.");
	{
	    ShowPlayerDialog(playerid, HOUSE_MENU, DIALOG_STYLE_LIST, "{FFFFFF}House Menu - Main Menu", "{FFFFFF}Set House Name\nGive/Take House Keys\nSell House", "Select", "Cancel");
	}
	return true;
}

CMD:hm(playerid, params[]) return cmd_housemenu(playerid, params);

CMD:createhouse(playerid, params[])
{
	new intid, file[40], h = GetFreeHouseID(), labeltext[150];
	if(IsPlayerSetBuilder{playerid} == true)
	{
	if(sscanf(params, "d", intid)) return SendClientMessage(playerid, RED, "[USAGE]: /createhouse [type]") && SendClientMessage(playerid, WHITE, "Types: 1. One Story House | 2. Two Story House | 3. Small Mansion | 4. Large Mansion | 5. Apartment");
    if(h < 0)
	{
		format(fstr, sizeof(fstr), "The server has reached a maximum of %d houses.", MAX_HOUSES);
		SendClientMessage(playerid, RED, fstr);
		return true;
	}
	if(intid == 0 || intid >= 6)//Wrong type ID..
	{
        SendClientMessage(playerid, RED, "Wrong type id.");
		SendClientMessage(playerid, WHITE, "Types: 1. One Story House | 2. Two Story House | 3. Small Mansion | 4. Large Mansion | 5.Apartment");
		return true;
	}
	else if(intid == 1)//1 Story
	{
	    format(file, sizeof(file), HOUSE_FILE, h);

	    new File:startfile = fopen(file, io_write);
    	fclose(startfile);

		GetPlayerPos(playerid, hX, hY, hZ);
		GetPlayerFacingAngle(playerid, hAngle);

		new gowner[24], gname[40];
		format(gowner, sizeof(gowner), "Nobody");
		format(gname, sizeof(gname), "For-Sale");

		new val = random(1000000) + 1000000;//Random 1M-2M

		HouseInfo[h][hCPOutX] = hX;
		HouseInfo[h][hCPOutY] = hY;
		HouseInfo[h][hCPOutZ] = hZ;
		HouseInfo[h][hOwner] = gowner;
		HouseInfo[h][hName] = gname;
		HouseInfo[h][hValue] = val;
		new stringg[24];
		format(stringg, sizeof(stringg), "Empty");
		HouseInfo[h][hKeyOwner1] = stringg;
		HouseInfo[h][hKeyOwner2] = stringg;
		HouseInfo[h][hKeyOwner3] = stringg;
		HouseInfo[h][hKeyOwner4] = stringg;
		HouseInfo[h][hKeyOwner5] = stringg;
		HouseInfo[h][hKeyOwner6] = stringg;
		HouseInfo[h][hKeyOwner7] = stringg;
		HouseInfo[h][hKeyOwner8] = stringg;
		HouseInfo[h][hKeyOwner9] = stringg;
		HouseInfo[h][hKeyOwner10] = stringg;

		HouseInfo[h][hWorld] = GetPlayerVirtualWorld(playerid);
		HouseInfo[h][hSpawnInterior] = GetPlayerInterior(playerid);
		HouseInfo[h][hHouseInterior] = 6;//

		format(labeltext, sizeof(labeltext), "%s", "For-Sale");
		HouseCPOut[h] = CreateDynamicCP(hX, hY, hZ, 1.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 4.0);
		HouseCPInt[h] = CreateDynamicCP(2196.84, -1204.36, 1049.02, 1.0, (h + 1000), 6, -1, 4.0);//
		HouseLabel[h] = Create3DTextLabel(labeltext, YELLOW, hX, hY, hZ+0.5, 30.0, GetPlayerVirtualWorld(playerid), 1);

		format(fstr, sizeof(fstr),"House id %d created.", h);
		SendClientMessage(playerid, WHITE, fstr);

		GetPosBehindOfPlayer(playerid, hX, hY, -2.0);

		HouseInfo[h][hSPOutX] = hX;
		HouseInfo[h][hSPOutY] = hY;
		HouseInfo[h][hSPOutZ] = hZ;
		HouseInfo[h][hSPOutA] = hAngle + 180;

		SaveHouseStats(h);
		return true;
	}
	else if(intid == 2)//2 Story
	{
	    format(file, sizeof(file), HOUSE_FILE, h);

	    new File:startfile = fopen(file, io_write);
    	fclose(startfile);

		GetPlayerPos(playerid, hX, hY, hZ);
		GetPlayerFacingAngle(playerid, hAngle);

		new gowner[24], gname[40];
		format(gowner, sizeof(gowner), "Nobody");
		format(gname, sizeof(gname), "For-Sale");

		new val = random(1000000) + 2000000;//Random 2M-3M

		HouseInfo[h][hCPOutX] = hX;
		HouseInfo[h][hCPOutY] = hY;
		HouseInfo[h][hCPOutZ] = hZ;
		HouseInfo[h][hOwner] = gowner;
		HouseInfo[h][hName] = gname;
		HouseInfo[h][hValue] = val;
		new stringg[24];
		format(stringg, sizeof(stringg), "Empty");
		HouseInfo[h][hKeyOwner1] = stringg;
		HouseInfo[h][hKeyOwner2] = stringg;
		HouseInfo[h][hKeyOwner3] = stringg;
		HouseInfo[h][hKeyOwner4] = stringg;
		HouseInfo[h][hKeyOwner5] = stringg;
		HouseInfo[h][hKeyOwner6] = stringg;
		HouseInfo[h][hKeyOwner7] = stringg;
		HouseInfo[h][hKeyOwner8] = stringg;
		HouseInfo[h][hKeyOwner9] = stringg;
		HouseInfo[h][hKeyOwner10] = stringg;

		HouseInfo[h][hWorld] = GetPlayerVirtualWorld(playerid);
		HouseInfo[h][hSpawnInterior] = GetPlayerInterior(playerid);
		HouseInfo[h][hHouseInterior] = 9;//

		format(labeltext, sizeof(labeltext), "%s", "For-Sale");
		HouseCPOut[h] = CreateDynamicCP(hX, hY, hZ, 1.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 4.0);
		HouseCPInt[h] = CreateDynamicCP(2317.77, -1026.76, 1050.21, 1.0, (h + 1000), 9, -1, 4.0);//
		HouseLabel[h] = Create3DTextLabel(labeltext, YELLOW, hX, hY, hZ+0.5, 30.0, GetPlayerVirtualWorld(playerid), 1);

		format(fstr, sizeof(fstr),"House id %d created.", h);
		SendClientMessage(playerid, WHITE, fstr);

		GetPosBehindOfPlayer(playerid, hX, hY, -2.0);

		HouseInfo[h][hSPOutX] = hX;
		HouseInfo[h][hSPOutY] = hY;
		HouseInfo[h][hSPOutZ] = hZ;
		HouseInfo[h][hSPOutA] = hAngle + 180;

		SaveHouseStats(h);
		return true;
	}
	else if(intid == 3)//Small Mansion
	{
	    format(file, sizeof(file), HOUSE_FILE, h);

	    new File:startfile = fopen(file, io_write);
    	fclose(startfile);

		GetPlayerPos(playerid, hX, hY, hZ);
		GetPlayerFacingAngle(playerid, hAngle);

		new gowner[24], gname[40];
		format(gowner, sizeof(gowner), "Nobody");
		format(gname, sizeof(gname), "For-Sale");

		new val = random(4000000) + 3000000;//Random 3M-5M

		HouseInfo[h][hCPOutX] = hX;
		HouseInfo[h][hCPOutY] = hY;
		HouseInfo[h][hCPOutZ] = hZ;
		HouseInfo[h][hOwner] = gowner;
		HouseInfo[h][hName] = gname;
		HouseInfo[h][hValue] = val;
		new stringg[24];
		format(stringg, sizeof(stringg), "Empty");
		HouseInfo[h][hKeyOwner1] = stringg;
		HouseInfo[h][hKeyOwner2] = stringg;
		HouseInfo[h][hKeyOwner3] = stringg;
		HouseInfo[h][hKeyOwner4] = stringg;
		HouseInfo[h][hKeyOwner5] = stringg;
		HouseInfo[h][hKeyOwner6] = stringg;
		HouseInfo[h][hKeyOwner7] = stringg;
		HouseInfo[h][hKeyOwner8] = stringg;
		HouseInfo[h][hKeyOwner9] = stringg;
		HouseInfo[h][hKeyOwner10] = stringg;

		HouseInfo[h][hWorld] = GetPlayerVirtualWorld(playerid);
		HouseInfo[h][hSpawnInterior] = GetPlayerInterior(playerid);
		HouseInfo[h][hHouseInterior] = 12;//

		format(labeltext, sizeof(labeltext), "%s", "For-Sale");
		HouseCPOut[h] = CreateDynamicCP(hX, hY, hZ, 1.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 4.0);
		HouseCPInt[h] = CreateDynamicCP(2324.41, -1149.54, 1050.71, 1.0, (h + 1000), 12, -1, 4.0);//
		HouseLabel[h] = Create3DTextLabel(labeltext, YELLOW, hX, hY, hZ+0.5, 30.0, GetPlayerVirtualWorld(playerid), 1);

		format(fstr, sizeof(fstr),"Mansion id %d created.", h);
		SendClientMessage(playerid, WHITE, fstr);

		GetPosBehindOfPlayer(playerid, hX, hY, -2.0);

		HouseInfo[h][hSPOutX] = hX;
		HouseInfo[h][hSPOutY] = hY;
		HouseInfo[h][hSPOutZ] = hZ;
		HouseInfo[h][hSPOutA] = hAngle + 180;

		SaveHouseStats(h);
		return true;
	}
	else if(intid == 4)//Large Mansion
	{
	    format(file, sizeof(file), HOUSE_FILE, h);

	    new File:startfile = fopen(file, io_write);
    	fclose(startfile);

		GetPlayerPos(playerid, hX, hY, hZ);
		GetPlayerFacingAngle(playerid, hAngle);

		new gowner[24], gname[40];
		format(gowner, sizeof(gowner), "Nobody");
		format(gname, sizeof(gname), "For-Sale");

  		new val = random(5000000) + 5000000;//Random 5M-10M

		HouseInfo[h][hCPOutX] = hX;
		HouseInfo[h][hCPOutY] = hY;
		HouseInfo[h][hCPOutZ] = hZ;
		HouseInfo[h][hOwner] = gowner;
		HouseInfo[h][hName] = gname;
		HouseInfo[h][hValue] = val;
		new stringg[24];
		format(stringg, sizeof(stringg), "Empty");
		HouseInfo[h][hKeyOwner1] = stringg;
		HouseInfo[h][hKeyOwner2] = stringg;
		HouseInfo[h][hKeyOwner3] = stringg;
		HouseInfo[h][hKeyOwner4] = stringg;
		HouseInfo[h][hKeyOwner5] = stringg;
		HouseInfo[h][hKeyOwner6] = stringg;
		HouseInfo[h][hKeyOwner7] = stringg;
		HouseInfo[h][hKeyOwner8] = stringg;
		HouseInfo[h][hKeyOwner9] = stringg;
		HouseInfo[h][hKeyOwner10] = stringg;

		HouseInfo[h][hWorld] = GetPlayerVirtualWorld(playerid);
		HouseInfo[h][hSpawnInterior] = GetPlayerInterior(playerid);
		HouseInfo[h][hHouseInterior] = 5;//

		format(labeltext, sizeof(labeltext), "%s", "For-Sale");
		HouseCPOut[h] = CreateDynamicCP(hX, hY, hZ, 1.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 4.0);
		HouseCPInt[h] = CreateDynamicCP(140.28, 1365.92, 1083.85, 1.0, (h + 1000), 5, -1, 4.0);//
		HouseLabel[h] = Create3DTextLabel(labeltext, YELLOW, hX, hY, hZ+0.5, 30.0, GetPlayerVirtualWorld(playerid), 1);

		format(fstr, sizeof(fstr),"Mansion id %d created.", h);
		SendClientMessage(playerid, WHITE, fstr);

		GetPosBehindOfPlayer(playerid, hX, hY, -2.0);

		HouseInfo[h][hSPOutX] = hX;
		HouseInfo[h][hSPOutY] = hY;
		HouseInfo[h][hSPOutZ] = hZ;
		HouseInfo[h][hSPOutA] = hAngle + 180;

		SaveHouseStats(h);
		return true;
	}
	else if(intid == 5)//Apartment
	{
	    format(file, sizeof(file), HOUSE_FILE, h);

	    new File:startfile = fopen(file, io_write);
    	fclose(startfile);

		GetPlayerPos(playerid, hX, hY, hZ);
		GetPlayerFacingAngle(playerid, hAngle);

		new gowner[24], gname[40];
		format(gowner, sizeof(gowner), "Nobody");
		format(gname, sizeof(gname), "For-Sale");

		new val = random(4000000) + 3000000;//Random 3M-5M

		HouseInfo[h][hCPOutX] = hX;
		HouseInfo[h][hCPOutY] = hY;
		HouseInfo[h][hCPOutZ] = hZ;
		HouseInfo[h][hOwner] = gowner;
		HouseInfo[h][hName] = gname;
		HouseInfo[h][hValue] = val;
		new stringg[24];
		format(stringg, sizeof(stringg), "Empty");
		HouseInfo[h][hKeyOwner1] = stringg;
		HouseInfo[h][hKeyOwner2] = stringg;
		HouseInfo[h][hKeyOwner3] = stringg;
		HouseInfo[h][hKeyOwner4] = stringg;
		HouseInfo[h][hKeyOwner5] = stringg;
		HouseInfo[h][hKeyOwner6] = stringg;
		HouseInfo[h][hKeyOwner7] = stringg;
		HouseInfo[h][hKeyOwner8] = stringg;
		HouseInfo[h][hKeyOwner9] = stringg;
		HouseInfo[h][hKeyOwner10] = stringg;

		HouseInfo[h][hWorld] = GetPlayerVirtualWorld(playerid);
		HouseInfo[h][hSpawnInterior] = GetPlayerInterior(playerid);
		HouseInfo[h][hHouseInterior] = 7;//

		format(labeltext, sizeof(labeltext), "%s", "For-Sale");
		HouseCPOut[h] = CreateDynamicCP(hX, hY, hZ, 1.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 4.0);
		HouseCPInt[h] = CreateDynamicCP(225.7121, 1021.4438, 1084.0177, 1.0, (h + 1000), 7, -1, 4.0);//
		HouseLabel[h] = Create3DTextLabel(labeltext, YELLOW, hX, hY, hZ+0.5, 30.0, GetPlayerVirtualWorld(playerid), 1);

		format(fstr, sizeof(fstr),"Apartment id %d created.", h);
		SendClientMessage(playerid, WHITE, fstr);

		GetPosBehindOfPlayer(playerid, hX, hY, -2.0);

		HouseInfo[h][hSPOutX] = hX;
		HouseInfo[h][hSPOutY] = hY;
		HouseInfo[h][hSPOutZ] = hZ;
		HouseInfo[h][hSPOutA] = hAngle + 180;

		SaveHouseStats(h);
		return true;
	}
	else if(intid >= 6)//Wrong type ID..
	{
        SendClientMessage(playerid, RED, "Wrong type id.");
		SendClientMessage(playerid, WHITE, "Types: 1. One Story House | 2. Two Story House | 3. Small Mansion | 4. Large Mansion | 5. Apartment");
	}
	return true;
	}
	else if(PlayerInfo[playerid][aLevel] == 4)
	{
	if(sscanf(params, "d", intid)) return SendClientMessage(playerid, RED, "[USAGE]: /createhouse [type]") && SendClientMessage(playerid, WHITE, "Types: 1. One Story House | 2. Two Story House | 3. Small Mansion | 4. Large Mansion | 5.Apartment");
    if(h < 0)
	{
		new str[150];
		format(str,sizeof(str), "The server has reached a maximum of %d houses.", MAX_HOUSES);
		SendClientMessage(playerid,RED,str);
		return true;
	}
	if(intid == 0 || intid >= 6)//Wrong type ID..
	{
        SendClientMessage(playerid, RED, "Wrong type id.");
		SendClientMessage(playerid, WHITE, "Types: 1. One Story House | 2. Two Story House | 3. Small Mansion | 4. Large Mansion | 5.Apartment");
		return true;
	}
	else if(intid == 1)//1 Story
	{
	    format(file, sizeof(file), HOUSE_FILE, h);

	    new File:startfile = fopen(file, io_write);
    	fclose(startfile);

		GetPlayerPos(playerid, hX, hY, hZ);
		GetPlayerFacingAngle(playerid, hAngle);

		new gowner[24], gname[40];
		format(gowner, sizeof(gowner), "Nobody");
		format(gname, sizeof(gname), "For-Sale");

		new val = random(1000000) + 1000000;//Random 1M-2M

		HouseInfo[h][hCPOutX] = hX;
		HouseInfo[h][hCPOutY] = hY;
		HouseInfo[h][hCPOutZ] = hZ;
		HouseInfo[h][hOwner] = gowner;
		HouseInfo[h][hName] = gname;
		HouseInfo[h][hValue] = val;
		new stringg[24];
		format(stringg, sizeof(stringg), "Empty");
		HouseInfo[h][hKeyOwner1] = stringg;
		HouseInfo[h][hKeyOwner2] = stringg;
		HouseInfo[h][hKeyOwner3] = stringg;
		HouseInfo[h][hKeyOwner4] = stringg;
		HouseInfo[h][hKeyOwner5] = stringg;
		HouseInfo[h][hKeyOwner6] = stringg;
		HouseInfo[h][hKeyOwner7] = stringg;
		HouseInfo[h][hKeyOwner8] = stringg;
		HouseInfo[h][hKeyOwner9] = stringg;
		HouseInfo[h][hKeyOwner10] = stringg;

		HouseInfo[h][hWorld] = GetPlayerVirtualWorld(playerid);
		HouseInfo[h][hSpawnInterior] = GetPlayerInterior(playerid);
		HouseInfo[h][hHouseInterior] = 6;//

		format(labeltext, sizeof(labeltext), "%s", "For-Sale");
		HouseCPOut[h] = CreateDynamicCP(hX, hY, hZ, 1.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 4.0);
		HouseCPInt[h] = CreateDynamicCP(2196.84, -1204.36, 1049.02, 1.0, (h + 1000), 6, -1, 4.0);//
		HouseLabel[h] = Create3DTextLabel(labeltext, YELLOW, hX, hY, hZ+0.5, 30.0, GetPlayerVirtualWorld(playerid), 1);

		format(fstr, sizeof(fstr),"House id %d created.", h);
		SendClientMessage(playerid, WHITE, fstr);

		GetPosBehindOfPlayer(playerid, hX, hY, -2.0);

		HouseInfo[h][hSPOutX] = hX;
		HouseInfo[h][hSPOutY] = hY;
		HouseInfo[h][hSPOutZ] = hZ;
		HouseInfo[h][hSPOutA] = hAngle + 180;

		SaveHouseStats(h);
		return true;
	}
	else if(intid == 2)//2 Story
	{
	    format(file, sizeof(file), HOUSE_FILE, h);

	    new File:startfile = fopen(file, io_write);
    	fclose(startfile);

		GetPlayerPos(playerid, hX, hY, hZ);
		GetPlayerFacingAngle(playerid, hAngle);

		new gowner[24], gname[40];
		format(gowner, sizeof(gowner), "Nobody");
		format(gname, sizeof(gname), "For-Sale");

		new val = random(1000000) + 2000000;//Random 2M-3M

		HouseInfo[h][hCPOutX] = hX;
		HouseInfo[h][hCPOutY] = hY;
		HouseInfo[h][hCPOutZ] = hZ;
		HouseInfo[h][hOwner] = gowner;
		HouseInfo[h][hName] = gname;
		HouseInfo[h][hValue] = val;
		new stringg[24];
		format(stringg, sizeof(stringg), "Empty");
		HouseInfo[h][hKeyOwner1] = stringg;
		HouseInfo[h][hKeyOwner2] = stringg;
		HouseInfo[h][hKeyOwner3] = stringg;
		HouseInfo[h][hKeyOwner4] = stringg;
		HouseInfo[h][hKeyOwner5] = stringg;
		HouseInfo[h][hKeyOwner6] = stringg;
		HouseInfo[h][hKeyOwner7] = stringg;
		HouseInfo[h][hKeyOwner8] = stringg;
		HouseInfo[h][hKeyOwner9] = stringg;
		HouseInfo[h][hKeyOwner10] = stringg;

		HouseInfo[h][hWorld] = GetPlayerVirtualWorld(playerid);
		HouseInfo[h][hSpawnInterior] = GetPlayerInterior(playerid);
		HouseInfo[h][hHouseInterior] = 9;//

		format(labeltext, sizeof(labeltext), "%s", "For-Sale");
		HouseCPOut[h] = CreateDynamicCP(hX, hY, hZ, 1.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 4.0);
		HouseCPInt[h] = CreateDynamicCP(2317.77, -1026.76, 1050.21, 1.0, (h + 1000), 9, -1, 4.0);//
		HouseLabel[h] = Create3DTextLabel(labeltext, YELLOW, hX, hY, hZ+0.5, 30.0, GetPlayerVirtualWorld(playerid), 1);

		format(fstr, sizeof(fstr),"House id %d created.", h);
		SendClientMessage(playerid, WHITE, fstr);

		GetPosBehindOfPlayer(playerid, hX, hY, -2.0);

		HouseInfo[h][hSPOutX] = hX;
		HouseInfo[h][hSPOutY] = hY;
		HouseInfo[h][hSPOutZ] = hZ;
		HouseInfo[h][hSPOutA] = hAngle + 180;

		SaveHouseStats(h);
		return true;
	}
	else if(intid == 3)//Small Mansion
	{
	    format(file, sizeof(file), HOUSE_FILE, h);

	    new File:startfile = fopen(file, io_write);
    	fclose(startfile);

		GetPlayerPos(playerid, hX, hY, hZ);
		GetPlayerFacingAngle(playerid, hAngle);

		new gowner[24], gname[40];
		format(gowner, sizeof(gowner), "Nobody");
		format(gname, sizeof(gname), "For-Sale");

		new val = random(4000000) + 3000000;//Random 3M-5M

		HouseInfo[h][hCPOutX] = hX;
		HouseInfo[h][hCPOutY] = hY;
		HouseInfo[h][hCPOutZ] = hZ;
		HouseInfo[h][hOwner] = gowner;
		HouseInfo[h][hName] = gname;
		HouseInfo[h][hValue] = val;
		new stringg[24];
		format(stringg, sizeof(stringg), "Empty");
		HouseInfo[h][hKeyOwner1] = stringg;
		HouseInfo[h][hKeyOwner2] = stringg;
		HouseInfo[h][hKeyOwner3] = stringg;
		HouseInfo[h][hKeyOwner4] = stringg;
		HouseInfo[h][hKeyOwner5] = stringg;
		HouseInfo[h][hKeyOwner6] = stringg;
		HouseInfo[h][hKeyOwner7] = stringg;
		HouseInfo[h][hKeyOwner8] = stringg;
		HouseInfo[h][hKeyOwner9] = stringg;
		HouseInfo[h][hKeyOwner10] = stringg;

		HouseInfo[h][hWorld] = GetPlayerVirtualWorld(playerid);
		HouseInfo[h][hSpawnInterior] = GetPlayerInterior(playerid);
		HouseInfo[h][hHouseInterior] = 12;//

		format(labeltext, sizeof(labeltext), "%s", "For-Sale");
		HouseCPOut[h] = CreateDynamicCP(hX, hY, hZ, 1.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 4.0);
		HouseCPInt[h] = CreateDynamicCP(2324.41, -1149.54, 1050.71, 1.0, (h + 1000), 12, -1, 4.0);//
		HouseLabel[h] = Create3DTextLabel(labeltext, YELLOW, hX, hY, hZ+0.5, 30.0, GetPlayerVirtualWorld(playerid), 1);

		format(fstr, sizeof(fstr),"Mansion id %d created.", h);
		SendClientMessage(playerid, WHITE, fstr);

		GetPosBehindOfPlayer(playerid, hX, hY, -2.0);

		HouseInfo[h][hSPOutX] = hX;
		HouseInfo[h][hSPOutY] = hY;
		HouseInfo[h][hSPOutZ] = hZ;
		HouseInfo[h][hSPOutA] = hAngle + 180;

		SaveHouseStats(h);
		return true;
	}
	else if(intid == 4)//Large Mansion
	{
	    format(file, sizeof(file), HOUSE_FILE, h);

	    new File:startfile = fopen(file, io_write);
    	fclose(startfile);

		GetPlayerPos(playerid, hX, hY, hZ);
		GetPlayerFacingAngle(playerid, hAngle);

		new gowner[24], gname[40];
		format(gowner, sizeof(gowner), "Nobody");
		format(gname, sizeof(gname), "For-Sale");

		new val = random(5000000) + 5000000;//Random 5M-10M

		HouseInfo[h][hCPOutX] = hX;
		HouseInfo[h][hCPOutY] = hY;
		HouseInfo[h][hCPOutZ] = hZ;
		HouseInfo[h][hOwner] = gowner;
		HouseInfo[h][hName] = gname;
		HouseInfo[h][hValue] = val;
		new stringg[24];
		format(stringg, sizeof(stringg), "Empty");
		HouseInfo[h][hKeyOwner1] = stringg;
		HouseInfo[h][hKeyOwner2] = stringg;
		HouseInfo[h][hKeyOwner3] = stringg;
		HouseInfo[h][hKeyOwner4] = stringg;
		HouseInfo[h][hKeyOwner5] = stringg;
		HouseInfo[h][hKeyOwner6] = stringg;
		HouseInfo[h][hKeyOwner7] = stringg;
		HouseInfo[h][hKeyOwner8] = stringg;
		HouseInfo[h][hKeyOwner9] = stringg;
		HouseInfo[h][hKeyOwner10] = stringg;

		HouseInfo[h][hWorld] = GetPlayerVirtualWorld(playerid);
		HouseInfo[h][hSpawnInterior] = GetPlayerInterior(playerid);
		HouseInfo[h][hHouseInterior] = 5;//

		format(labeltext, sizeof(labeltext), "%s", "For-Sale");
		HouseCPOut[h] = CreateDynamicCP(hX, hY, hZ, 1.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 4.0);
		HouseCPInt[h] = CreateDynamicCP(140.28, 1365.92, 1083.85, 1.0, (h + 1000), 5, -1, 4.0);//
		HouseLabel[h] = Create3DTextLabel(labeltext, YELLOW, hX, hY, hZ+0.5, 30.0, GetPlayerVirtualWorld(playerid), 1);

		format(fstr, sizeof(fstr),"Mansion id %d created.", h);
		SendClientMessage(playerid, WHITE, fstr);

		GetPosBehindOfPlayer(playerid, hX, hY, -2.0);

		HouseInfo[h][hSPOutX] = hX;
		HouseInfo[h][hSPOutY] = hY;
		HouseInfo[h][hSPOutZ] = hZ;
		HouseInfo[h][hSPOutA] = hAngle + 180;

		SaveHouseStats(h);
		return true;
	}
	else if(intid == 5)//Apartment
	{
	    format(file, sizeof(file), HOUSE_FILE, h);

	    new File:startfile = fopen(file, io_write);
    	fclose(startfile);

		GetPlayerPos(playerid, hX, hY, hZ);
		GetPlayerFacingAngle(playerid, hAngle);

		new gowner[24], gname[40];
		format(gowner, sizeof(gowner), "Nobody");
		format(gname, sizeof(gname), "For-Sale");

		new val = random(4000000) + 3000000;//Random 3M-5M

		HouseInfo[h][hCPOutX] = hX;
		HouseInfo[h][hCPOutY] = hY;
		HouseInfo[h][hCPOutZ] = hZ;
		HouseInfo[h][hOwner] = gowner;
		HouseInfo[h][hName] = gname;
		HouseInfo[h][hValue] = val;
		new stringg[24];
		format(stringg, sizeof(stringg), "Empty");
		HouseInfo[h][hKeyOwner1] = stringg;
		HouseInfo[h][hKeyOwner2] = stringg;
		HouseInfo[h][hKeyOwner3] = stringg;
		HouseInfo[h][hKeyOwner4] = stringg;
		HouseInfo[h][hKeyOwner5] = stringg;
		HouseInfo[h][hKeyOwner6] = stringg;
		HouseInfo[h][hKeyOwner7] = stringg;
		HouseInfo[h][hKeyOwner8] = stringg;
		HouseInfo[h][hKeyOwner9] = stringg;
		HouseInfo[h][hKeyOwner10] = stringg;

		HouseInfo[h][hWorld] = GetPlayerVirtualWorld(playerid);
		HouseInfo[h][hSpawnInterior] = GetPlayerInterior(playerid);
		HouseInfo[h][hHouseInterior] = 7;//

		format(labeltext, sizeof(labeltext), "%s", "For-Sale");
		HouseCPOut[h] = CreateDynamicCP(hX, hY, hZ, 1.0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), -1, 4.0);
		HouseCPInt[h] = CreateDynamicCP(225.7121, 1021.4438, 1084.0177, 1.0, (h + 1000), 7, -1, 4.0);//
		HouseLabel[h] = Create3DTextLabel(labeltext, YELLOW, hX, hY, hZ+0.5, 30.0, GetPlayerVirtualWorld(playerid), 1);

		format(fstr, sizeof(fstr),"Apartment id %d created.", h);
		SendClientMessage(playerid, WHITE, fstr);

		GetPosBehindOfPlayer(playerid, hX, hY, -2.0);

		HouseInfo[h][hSPOutX] = hX;
		HouseInfo[h][hSPOutY] = hY;
		HouseInfo[h][hSPOutZ] = hZ;
		HouseInfo[h][hSPOutA] = hAngle + 180;

		SaveHouseStats(h);
		return true;
	}
	else if(intid >= 6)//Wrong type ID..
	{
        SendClientMessage(playerid, RED, "Wrong type id.");
		SendClientMessage(playerid, WHITE, "Types: 1. One Story House | 2. Two Story House | 3. Small Mansion | 4. Large Mansion | 5.Apartment");
	}
	return true;
	}
	else
	{
	    SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
	}
    return true;
}

CMD:removehouse(playerid, params[])
{
	new h, file[40];
	if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, RED, "[USAGE]: /removehouse [house id]");
    format(file, sizeof(file), HOUSE_FILE, h);
	if(!fexist(file)) return SendClientMessage(playerid, RED, "Invalid house id.");
	{
     	DestroyHouseEntrance(h, TYPE_OUT);
	    DestroyHouseEntrance(h, TYPE_INT);
	    Delete3DTextLabel(HouseLabel[h]);
	    new str[150];
		format(str, sizeof(str), "House id %d removed.", h);
		SendClientMessage(playerid,RED,str);
		fremove(file);
	}
    return true;
}

CMD:removeallhouses(playerid, params[])
{
	new hcount, file[40];
	if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
	else
	{
	    Loop(h, MAX_HOUSES)
	    {
	        format(file, sizeof(file), HOUSE_FILE, h);
	        if(fexist(file))
	        {
		     	DestroyHouseEntrance(h, TYPE_OUT);
			    DestroyHouseEntrance(h, TYPE_INT);
			    Delete3DTextLabel(HouseLabel[h]);
				fremove(file);
				hcount++;
			}
		}
		new str[150];
		format(str, sizeof(str), "%d houses have been removed.", hcount);
		SendClientMessage(playerid,RED,str);
	}
    return true;
}

CMD:resethouseprices(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
	for(new h = 0; h < MAX_HOUSES; h++)
	{
	    new file[40];
	    format(file, sizeof(file), HOUSE_FILE, h);
		if(fexist(file))
		{
		    if(HouseInfo[h][hHouseInterior] == 6)
			{
                new price = random(600000) + 200000;
		    	HouseInfo[h][hValue] = price;
			}
			else if(HouseInfo[h][hHouseInterior] == 9)
			{
                new price = random(800000) + 200000;
		    	HouseInfo[h][hValue] = price;
			}
			else if(HouseInfo[h][hHouseInterior] == 12)
			{
                new price = random(1800000) + 200000;
		    	HouseInfo[h][hValue] = price;
			}
			else if(HouseInfo[h][hHouseInterior] == 5)
			{
                new price = random(4800000) + 200000;
		    	HouseInfo[h][hValue] = price;
			}
			SaveHouseStats(h);
		}
	}
	SendClientMessage(playerid, WHITE, "All server houses prices have been reset.");
	return 1;
}

CMD:sellhouse(playerid, params[])
{
	new file[40], h;//file2[40];
	if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
	if(sscanf(params, "d", h)) return SendClientMessage(playerid, RED, "[USAGE]: /sellhouse [house id]");
    format(file, sizeof(file), HOUSE_FILE, h);
	if(!fexist(file)) return SendClientMessage(playerid, RED, "Invalid house id.");
	if(!strcmp(GetHouseOwner(h), "Nobody", false)) return SendClientMessage(playerid, RED, "This house has no owner, you cant sell it.");
	{
		//GivePlayerCash(playerid, ReturnPercent(GetHouseValue(h), HOUSE_SELLING_PERCENT_RETURN));
		//HouseInfo[h][hValue] = HouseInfo[h][hValue] - ReturnPercent(GetHouseValue(h), HOUSE_SELLING_PERCENT_RETURN);
		SellHouse(h);
		foreach(new i : Player)
		{
		    if(LastHouseCP[playerid] == h && IsInHouse[i] == 1)
		    {
		    	IsInHouse[i] = 0;
       			SetPlayerPosEx(i, HouseInfo[h][hSPOutX], HouseInfo[h][hSPOutY], HouseInfo[h][hSPOutZ], HouseInfo[h][hSpawnInterior], HouseInfo[h][hWorld]);
		        SetPlayerFacingAngle(i, HouseInfo[h][hSPOutA]);
		        SetPlayerInterior(i, HouseInfo[h][hSpawnInterior]);
		        SetPlayerVirtualWorld(i, HouseInfo[h][hWorld]);
			}
		}
		SendClientMessage(playerid, WHITE, "House sold.");
	}
    return true;
}

CMD:sellallhouses(playerid, params[])
{
	new file[40], hcount;
	if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED,"Only admin level 4 can use this command.");
	{
	    Loop(h, MAX_HOUSES)
	    {
	        format(file, sizeof(file), HOUSE_FILE, h);
	        if(fexist(file) && strcmp(GetHouseOwner(h), "Nobody", false))
	        {
				//GivePlayerCash(playerid, ReturnPercent(GetHouseValue(h), HOUSE_SELLING_PERCENT_RETURN));
				//HouseInfo[h][hValue] = HouseInfo[h][hValue] - ReturnPercent(GetHouseValue(h), HOUSE_SELLING_PERCENT_RETURN);
				new gname[40], gowner[24];
				format(gowner,sizeof(gowner), "Nobody");
				format(gname,sizeof(gname), "For-Sale");
				HouseInfo[h][hOwner] = gowner;
				HouseInfo[h][hName] = gname;
				new stringg[24];
				format(stringg, sizeof(stringg), "Empty");
				HouseInfo[h][hKeyOwner1] = stringg;
				HouseInfo[h][hKeyOwner2] = stringg;
				HouseInfo[h][hKeyOwner3] = stringg;
				HouseInfo[h][hKeyOwner4] = stringg;
				HouseInfo[h][hKeyOwner5] = stringg;
				HouseInfo[h][hKeyOwner6] = stringg;
				HouseInfo[h][hKeyOwner7] = stringg;
				HouseInfo[h][hKeyOwner8] = stringg;
				HouseInfo[h][hKeyOwner9] = stringg;
				HouseInfo[h][hKeyOwner10] = stringg;
				UpdateHouseText(h);
				SaveHouseStats(h);
				hcount++;
			}
			foreach(new i : Player)
		    {
                if(LastHouseCP[playerid] == h && IsInHouse[i] == 1)
		        {
		    	    IsInHouse[i] = 0;
       			    SetPlayerPosEx(i, HouseInfo[h][hSPOutX], HouseInfo[h][hSPOutY], HouseInfo[h][hSPOutZ], HouseInfo[h][hSpawnInterior], HouseInfo[h][hWorld]);
		            SetPlayerFacingAngle(i, HouseInfo[h][hSPOutA]);
		            SetPlayerInterior(i, HouseInfo[h][hSpawnInterior]);
		            SetPlayerVirtualWorld(i, HouseInfo[h][hWorld]);
			    }
		    }
		}
	    new string[64];
	    format(string, sizeof(string), "%d houses sold.", hcount);
	    SendClientMessage(playerid, WHITE, string);
	}
    return true;
}

CMD:roblist(playerid, params[])
{
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
    {
        new RB[3000];
        strcat(RB,"{FFFFFF}/robbank, /robpd, /robvegas, /robisle, /robdrag, /robred, /robclub, /robgym, /robhall, /robfbi\n");
        strcat(RB,"{FFFFFF}/robcia, /robcalg, /robcluck, /robuni, /robshot, /robbiz, /robammu, /robstore, /robpizza /robbar\n\n");
        strcat(RB,"{FFFFFF}6ta aslahe foroshi , 4ta bank , 4ta store , 5ta casino , 5ta burger shot , 3ta cluck , 1 bar, 1 club\n");
		strcat(RB,"{FFFFFF}1 pd , 1 gym , 1 city hall , 1 fbi , 1 cia , 1 danseshgah , 1 pizza , 6 Kelisa\n");
        strcat(RB,"va 600 ta business ke tavasot admin dar server sakhte mishavand va bazikonan ba pool \n");
		strcat(RB,"daron bazi khod anha ra mikharand va shoma mitavanid az anha kharid va dozdi konid.\n");
		strcat(RB,"(albate dozdi be shart inke sahebash online bashad va dar business pool bashad.)");
        ShowPlayerDialog(playerid, ROB_LIST, DIALOG_STYLE_MSGBOX , "{FFFFFF}ACNR Robbery Commands", RB, "Ok", "");
    }
    return true;
}

CMD:robcia(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingCIA{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
	if(ciarobbed == 1) return SendClientMessage(playerid, RED, "This place has been robbed recently, please wait before robbing it again.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer10]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 120 sanie sabr kon");
    TimerInfo[playerid][CMD_timer10] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  CIA HQ at Blackfield.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  CIA HQ.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, 246.4467,118.5374,1003.2188))
    {
	    if((gettime() - 120) < ciarobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon");
        format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing the  CIA HQ at Blackfield.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  CIA HQ, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingCIA{playerid} = true;
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
        ciatimer{playerid} = SetTimerEx("CIARob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        ciarobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
	format(astring,sizeof(astring),"%s [%d] typed: /robcia",pName,playerid);
	SendAdminMessage(GREY,astring);
	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robuni(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingUNI{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer11]) return SendClientMessage(playerid, RED, "[CMD_Timer]: 120 sanie sabr kon");
    TimerInfo[playerid][CMD_timer11] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  University at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  University.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2032.79, -117.39, 1034.80))
    {
	    if((gettime() - 120) < unirobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing the  University at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  University, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingUNI{playerid} = true;
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
        unitimer{playerid} = SetTimerEx("UNIRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        unirobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
	format(astring,sizeof(astring),"%s [%d] typed: /robuni",pName,playerid);
	SendAdminMessage(GREY,astring);
	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robfbi(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingFBI{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer12]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer12] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  FBI HQ at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  FBI HQ.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,250.0561,69.4203,1003.6406))
    {
	    if((gettime() - 120) < fbirobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] is now robbing the  FBI HQ at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  FBI HQ, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingFBI{playerid} = true;
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        fbitimer{playerid} = SetTimerEx("FBIRob", 25000, false, "d", playerid);
        fbirobbed = gettime();
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robfbi",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robgym(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingGym{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer13]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer13] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  Gym at Redsands East.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  Gym.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,766.7718,-59.7159,1000.6563))
    {
	    if((gettime() - 120) < gymrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the  Gym at Redsands East.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  Gym, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingGym{playerid} = true;
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        gymtimer{playerid} = SetTimerEx("GymRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        gymrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robgym",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robclub(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingClub{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer14]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer14] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  Night Club at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  Night Club.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,499.9675,-20.6944,1000.6797))
    {
	    if((gettime() - 120) < clubrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the  Night Club at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  Night Club, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingClub{playerid} = true;
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        clubtimer{playerid} = SetTimerEx("ClubRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        clubrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robclub",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robpizza(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingPizza{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer15]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer15] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Well Stacked Pizzas at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the Well Stacked Pizzas.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,374.7570,-118.8264,1001.4995))
    {
	    if((gettime() - 120) < pizzarobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Well Stacked Pizzas at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Well Stacked Pizzas, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingPizza{playerid} = true;
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        pizzatimer{playerid} = SetTimerEx("PizzaRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        pizzarobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robpizza",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robisle(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingIsle{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer16]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer16] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob The Emerald Isle Casino at The  Strip[North]", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob The Emerald Isle Casino.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(GetPlayerVirtualWorld(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,1.0,1139.7198,-4.0644,1000.6719))
    {
	    if((gettime() - 120) < islerobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing The Emerald Isle Casino at The  Strip[North]", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing The Emerald Isle Casino, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        IsRobbingIsle{playerid} = true;
        isletimer{playerid} = SetTimerEx("IsleRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        islerobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robisle",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robvegas(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingVegas{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer17]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer17] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  Casino at The  Strip.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  Casino.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(GetPlayerVirtualWorld(playerid) == 2 && IsPlayerInRangeOfPoint(playerid,1.0,1139.7198,-4.0644,1000.6719))
    {
	    if((gettime() - 120) < vegasrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the  Casino at The  Strip.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  Casino, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        IsRobbingVegas{playerid} = true;
        vegastimer{playerid} = SetTimerEx("VegasRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        vegasrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robvegas",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robred(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingRedsands{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer18]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer18] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Redsands Casino at Redsands West.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the Redsands Casino.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(GetPlayerVirtualWorld(playerid) == 3 && IsPlayerInRangeOfPoint(playerid,1.0,1139.7198,-4.0644,1000.6719))
    {
	    if((gettime() - 120) < redrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Redsands Casino at Redsands West.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Redsands Casino, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        IsRobbingRedsands{playerid} = true;
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        redsandstimer{playerid} = SetTimerEx("RedsandsRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        redrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robred",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robcalg(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingCalg{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer19]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer19] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Caligulas Casino at The  Strip.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the Caligulas Casino.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,2156.6917,1599.5377,1006.1797))
    {
	    if((gettime() - 120) < calgrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing Caligulas Casino at The  Strip.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing Caligulas Casino, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        IsRobbingCalg{playerid} = true;
        calgtimer{playerid} = SetTimerEx("CalgRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        calgrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robcalg",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robdrag(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingDrag{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer20]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer20] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the 4 Dragons Casino at The  Strip[South]", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the 4 Dragons Casino.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,1955.3691,1018.0455,992.4688))
    {
	    if((gettime() - 120) < dragrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing 4 Dragons Casino at The  Strip[South]", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing 4 Dragons Casino, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        IsRobbingDrag{playerid} = true;
        dragtimer{playerid} = SetTimerEx("DragRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        dragrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robdrag",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robpd(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingNVPD{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer21]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer21] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the PD at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the PD.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,230.0261,165.0891,1003.0234))
    {
	    if((gettime() - 120) < nvpdrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the PD at  Meydan Asli.", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the PD, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
	    IsRobbingNVPD{playerid} = true;
        nvpdtimer{playerid} = SetTimerEx("NVPDRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        nvpdrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robpd",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robhall(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingHall{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer22]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer22] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  City Hall at  Transfender", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  City Hall.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,361.8299,173.7282,1008.3828))
    {
	    if((gettime() - 120) < hallrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the  City Hall at  Transfender", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  City Hall, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
	    IsRobbingHall{playerid} = true;
        halltimer{playerid} = SetTimerEx("HallRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        hallrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robhall",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robbar(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingBar{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer35]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer35] = gettime();
	new chance = random(3);
	if(chance == 0)
	{
	    format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the  Bar at  Meydan Asli", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, RED, "You have failed to rob the  Bar.");
	    GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,496.4771,-76.0378,998.7578))
    {
	    if((gettime() - 120) < barrobbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the  Bar at  Meydan Asli", GetName(playerid), playerid);
        CopRadio(BLUE, fstr);
        SendClientMessage(playerid, LIGHTGREEN, "Your robbing the  Bar, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
	    IsRobbingBar{playerid} = true;
        bartimer{playerid} = SetTimerEx("BarRob", 25000, false, "d", playerid);
        ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        barrobbed = gettime();
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robbar",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robbank(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingBank1{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingBank2{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingBank3{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingBank4{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer23]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer23] = gettime();
	if(IsPlayerInRangeOfPoint(playerid,1.0,2316.6169,-7.3947,26.7422) && GetPlayerVirtualWorld(playerid) == 1)
    {
        new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Bank at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Bank.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < bank1robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Bank at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Bank, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingBank1{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        	banktimer{playerid} = SetTimerEx("BankRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	bank1robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,2316.6169,-7.3947,26.7422) && GetPlayerVirtualWorld(playerid) == 2)
    {
        new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Bank at El Quebrados.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Bank.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < bank2robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Bank at El Quebrados.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Bank, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingBank2{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        	banktimer{playerid} = SetTimerEx("BankRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	bank2robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,2316.6169,-7.3947,26.7422) && GetPlayerVirtualWorld(playerid) == 3)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Bank at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Bank.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < bank3robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Bank at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Bank, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingBank3{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        	banktimer{playerid} = SetTimerEx("BankRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	bank3robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,2316.6169,-7.3947,26.7422) && GetPlayerVirtualWorld(playerid) == 4)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Bank at Tierra Robada.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Bank.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < bank4robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Bank at Tierra Robada.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Bank, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingBank4{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+6);
        	banktimer{playerid} = SetTimerEx("BankRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	bank4robbed = gettime();
        }
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
    new astring[100],pName[24];
    GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robbank",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robstore(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingStore1{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingStore2{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingStore3{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingStore4{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer24]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer24] = gettime();
	if(IsPlayerInRangeOfPoint(playerid,1.0,-10.6035,-178.2635,1003.5469) && GetPlayerVirtualWorld(playerid) == 1)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the 24/7 Store at The Old  Strip[North]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the 24/7 Store.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < store1robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the 24/7 Store at The Old  Strip[North]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the 24/7 Store, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingStore1{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	storetimer{playerid} = SetTimerEx("StoreRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	store1robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,-10.6035,-178.2635,1003.5469) && GetPlayerVirtualWorld(playerid) == 2)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the 24/7 Store at The Old  Strip[SE]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the 24/7 Store.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < store2robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the 24/7 Store at The Old  Strip[SE]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the 24/7 Store, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingStore2{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	storetimer{playerid} = SetTimerEx("StoreRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	store2robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,-10.6035,-178.2635,1003.5469) && GetPlayerVirtualWorld(playerid) == 3)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the 24/7 Store at The  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the 24/7 Store.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < store3robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the 24/7 Store at The  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the 24/7 Store, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingStore3{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	storetimer{playerid} = SetTimerEx("StoreRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	store3robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,-10.6035,-178.2635,1003.5469) && GetPlayerVirtualWorld(playerid) == 4)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the 24/7 Store at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the 24/7 Store.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < store4robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the 24/7 Store at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the 24/7 Store, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingStore4{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	storetimer{playerid} = SetTimerEx("StoreRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	store4robbed = gettime();
        }
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robstore",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robcluck(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingCluck1{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingCluck2{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingCluck3{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer25]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer25] = gettime();
	if(IsPlayerInRangeOfPoint(playerid,1.0,371.5888,-6.0188,1001.8589) && GetPlayerVirtualWorld(playerid) == 1)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Cluck'n Bell at The Old  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Cluck'n Bell.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < cluck1robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Cluck'n Bell at The Old  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Cluck'n Bell, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingCluck1{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	clucktimer{playerid} = SetTimerEx("CluckRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	cluck1robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,371.5888,-6.0188,1001.8589) && GetPlayerVirtualWorld(playerid) == 2)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Cluck'n Bell at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Cluck'n Bell.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < cluck2robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Cluck'n Bell at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Cluck'n Bell, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingCluck2{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	clucktimer{playerid} = SetTimerEx("CluckRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	cluck2robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,371.5888,-6.0188,1001.8589) && GetPlayerVirtualWorld(playerid) == 3)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Cluck'n Bell at Tierra Robada.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Cluck'n Bell.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < cluck3robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Cluck'n Bell at Tierra Robada.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Cluck'n Bell, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingCluck3{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	clucktimer{playerid} = SetTimerEx("CluckRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	cluck3robbed = gettime();
        }
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robcluck",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robshot(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingShot1{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingShot2{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingShot3{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingShot4{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingShot5{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer26]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer26] = gettime();
	if(IsPlayerInRangeOfPoint(playerid,1.0,376.5498,-67.4389,1001.5078) && GetPlayerVirtualWorld(playerid) == 1)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Burger Shot at The Old  Strip[West]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Burger Shot.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < shot1robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Burger Shot at The Old  Strip[West]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Burger Shot, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingShot1{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	shottimer{playerid} = SetTimerEx("ShotRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	shot1robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,376.5498,-67.4389,1001.5078) && GetPlayerVirtualWorld(playerid) == 2)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Burger Shot at The Old  Strip[SE]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Burger Shot.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < shot2robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Burger Shot at The Old  Strip[SE]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Burger Shot, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingShot2{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	shottimer{playerid} = SetTimerEx("ShotRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	shot2robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,376.5498,-67.4389,1001.5078) && GetPlayerVirtualWorld(playerid) == 3)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Burger Shot at Redsands West.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Burger Shot.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < shot3robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Burger Shot at Redsands West.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Burger Shot, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingShot3{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	shottimer{playerid} = SetTimerEx("ShotRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	shot3robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,376.5498,-67.4389,1001.5078) && GetPlayerVirtualWorld(playerid) == 4)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Burger Shot at Spinybed.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Burger Shot.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < shot4robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Burger Shot at Spinybed.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Burger Shot, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingShot4{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	shottimer{playerid} = SetTimerEx("ShotRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	shot4robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,376.5498,-67.4389,1001.5078) && GetPlayerVirtualWorld(playerid) == 5)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Burger Shot at Redsands East.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Burger Shot.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < shot5robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Burger Shot at Redsands East.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Burger Shot, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingShot5{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	shottimer{playerid} = SetTimerEx("ShotRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	shot5robbed = gettime();
        }
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robshot",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:robammu(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can rob places.");
	if(IsRobbingAmmu1{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingAmmu2{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingAmmu3{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingAmmu4{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingAmmu5{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsRobbingAmmu6{playerid} == true) return SendClientMessage(playerid, RED, "Your already robbing the joint.");
	if(IsPlayerHoldingAGun(playerid) == 0 || HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "Shoma baraye dozdi az makan ha bayad aslahe dar dast khod daste bashid.");
    if((gettime() - 120) < TimerInfo[playerid][CMD_timer27]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer27] = gettime();
	if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 1)
    {
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at The  Strip[South]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu1robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at The  Strip[South]", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu1{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu1robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 2)
	{
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at Bone County.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu2robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at Bone County.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu2{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu2robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 3)
	{
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu3robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at Fort Carson.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu3{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu3robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 4)
	{
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at El Quebrados.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu4robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at El Quebrados.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu4{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu4robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 5)
	{
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at The Old  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu5robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at The Old  Strip.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu5{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu5robbed = gettime();
        }
	}
	else if(IsPlayerInRangeOfPoint(playerid,1.0,295.5833,-80.8050,1001.5156) && GetPlayerVirtualWorld(playerid) == 6)
	{
		new chance = random(3);
		if(chance == 0)
		{
	    	format(fstr, sizeof(fstr),  "[DISPATCH]: Suspect %s [%d] has attempted to rob the Ammunation at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, RED, "You have failed to rob the Ammunation.");
	    	GameTextForPlayer(playerid, "~w~Robbery ~r~Failed", 5000, 5);
        	SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
		}
		else
		{
	    	if((gettime() - 120) < ammu6robbed) return SendClientMessage(playerid, RED, "This place has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
        	format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] is now robbing the Ammunation at  Meydan Asli.", GetName(playerid), playerid);
        	CopRadio(BLUE, fstr);
        	SendClientMessage(playerid, LIGHTGREEN, "Your robbing the Ammunation, DON'T LEAVE THE CHECKPOINT!");
	    	GameTextForPlayer(playerid, "~r~Holdup ~w~In ~g~Progress...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
        	IsRobbingAmmu6{playerid} = true;
        	SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid)+4);
        	ammutimer{playerid} = SetTimerEx("AmmuRob", 25000, false, "d", playerid);
        	ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
        	ammu6robbed = gettime();
        }
	}
	else
	{
        return SendClientMessage(playerid, RED, "Your not at the robbery checkpoint.");
	}
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /robammu",pName,playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:help(playerid, params[])
{
    if(GetTeam{playerid} == CLASS_COPS)
	{
	    ShowPlayerDialog(playerid, COP_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF} Police",
	"{FFFFFF}Your a police,kar shoma dastgir kardan(/ar)\nwanted criminals(/pc) and jarime(/tk) suspect civilians(/pc).\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail out zendani ha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [Cop Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye a list cmd haye server. az /askadmin baraye admin help\nya az /n baraye komak gereftan az helper ha estefade konid.", "Ok", "");
	}
	else if(GetTeam{playerid} == CLASS_CIA)
	{
        ShowPlayerDialog(playerid, CIA_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF} CIA",
	"{FFFFFF}Your a mamor makhfi cia, kar shoma dastgir kardan\nbishtare wanted criminals(/pc) ast.\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail out zendani ha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [Cop Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye a list cmd haye server. az /askadmin baraye admin help\nya az /n baraye komak gereftan az helper ha estefade konid.", "Ok", "");
	}
	else if(GetTeam{playerid} == CLASS_FBI)
	{
        ShowPlayerDialog(playerid, FBI_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF} FBI",
	"{FFFFFF}Your a mamor makhfi fbi, kar shoma dastgir kardan\nbishtare wanted criminals(/pc) ast.\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail out zendani ha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [Cop Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye cmdlist haye server. az /askadmin baraye adminhelp\nya az /n baraye komak gereftan az helperha estefade kon.","Ok","");
	}
    else if(GetTeam{playerid} == CLASS_CIV)
	{
        ShowPlayerDialog(playerid, CIV_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF}Civilian",
	"{FFFFFF}Your a civilian(robber), your job is to rob players, casinos,\nbanks, stores and businesses while trying to avoid arrest from\nlaw enforcement. If you get arrested or taken down you are then\nsent to jail for 3-4 mins, which you can either /escape or get a\nfriend to /break or /bail you out.\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye a list cmd haye server. az /askadmin baraye admin help\nya az /n baraye komak gereftan az helper ha estefade konid.", "Ok", "");
	}
    else if(GetTeam{playerid} == CLASS_MEDIC)
	{
        ShowPlayerDialog(playerid, MEDIC_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF}Medic",
	"{FFFFFF}Your a medic, your job is to assist members of ACNR with\ninjuries using /medic, they can also /callmedic to call for help.\nUse /m [msg] for [Medic Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye a list cmd haye server. az /askadmin baraye admin help\nya az /n baraye komak gereftan az helper ha estefade konid.", "Ok", "");
	}
    else if(GetTeam{playerid} == CLASS_ARMY)
	{
        ShowPlayerDialog(playerid, ARMY_MSG, DIALOG_STYLE_MSGBOX , "{FFFFFF} Army",
	"{FFFFFF}Your a army soldier, your job is to focus on and takedown most\nwanted criminals(/pc) at all costs using army supplied vehicles.\nshoma mitavanid /taze(/tz) va /cuff(/cf) wanted criminals va shoma\nmitavanid /bail out zendani ha ya reshve begirid /bribe az wanted criminals.\naz /c [msg] baraye [Cop Radio]\n\naz /faqs baraye list soalat motedavel va /cmds\nbaraye a list cmd haye server. az /askadmin baraye admin help\nya az /n baraye komak gereftan az helper ha estefade kon.", "Ok", "");
	}
    return true;
}

CMD:service(playerid, params[])
{
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, "You need to be in a vehicle as the driver to use this command.");
	if(IsPlayerInRangeOfPoint(playerid,20.0,2114.8848,920.2251,10.8203) || IsPlayerInRangeOfPoint(playerid,20.0,2639.7700,1106.1627,10.8203)
	|| IsPlayerInRangeOfPoint(playerid,20.0,2202.4160,2474.7686,10.8203) || IsPlayerInRangeOfPoint(playerid,20.0,2147.2354,2747.9351,10.8203)
	|| IsPlayerInRangeOfPoint(playerid,20.0,1596.1118,2198.9944,10.8203) || IsPlayerInRangeOfPoint(playerid,20.0,612.0298,1695.0731,6.9922)
	|| IsPlayerInRangeOfPoint(playerid,20.0,-1328.3317,2677.4412,50.0625) || IsPlayerInRangeOfPoint(playerid,20.0,-1471.3004,1864.1031,32.6328)
	|| IsPlayerInRangeOfPoint(playerid,20.0,1602.5015,1615.4475,10.8203) || IsPlayerInRangeOfPoint(playerid,20.0,-2322.4451,2298.0378,-0.5677))
	{
	    ShowPlayerDialog(playerid, SERVICE_STATION_MENU, DIALOG_STYLE_LIST, "{FFFFFF} Service Station - Menu", "{FFFFFF}Service: Repair - Price: $500\nService: Refuel - Price: $500\nService: Vehicle Bomb - Price: $100K\nClick here for Tune Menu", "Buy", "Cancel");
	}
	else
	{
		SendClientMessage(playerid, RED, "Your not at a service station.");
	}
	return true;
}

CMD:pay(playerid, params[])
{
    new targetid, cash;
    if(sscanf(params, "ud", targetid, cash)) return SendClientMessage(playerid, RED, "[USAGE]: /pay [name/id] [amount]");
    if(IsPlayerNPC(targetid)) return SendClientMessage(playerid, RED, "Shoma nemitavanid be Elvis pool bedahid!.");
    if(GetPlayerCash(playerid) < cash) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
  	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
 	if(!ProxDetectorS(5.0, playerid, targetid)) return SendClientMessage(playerid, RED, "That player is not close enough.");
 	if(targetid == playerid) return SendClientMessage(playerid, RED, "You cant pay yourself.");
    if((gettime() - 30) < TimerInfo[playerid][CMD_timer4]) return SendClientMessage(playerid, RED, "[Timer]: 30 sanie sabr kon.");//30 secs
    TimerInfo[playerid][CMD_timer4] = gettime();
	if(cash <= 0) return SendClientMessage(playerid, RED, "Payments must be greater then $0.");
	{
		GivePlayerCash(playerid, -cash);
		GivePlayerCash(targetid, cash);
		format(fstr, sizeof(fstr),"You have just paid %s [%d] $%d.", GetName(targetid), targetid, cash);
		SendClientMessage(playerid, YELLOW, fstr);
		format(fstr, sizeof(fstr),"%s [%d] has just paid you $%d.", GetName(playerid), playerid, cash);
		SendClientMessage(targetid, LIGHTGREEN, fstr);
		new astring[100];
		format(astring, sizeof(astring),"%s [%d] just paid %s [%d] - $%d", GetName(playerid), playerid, GetName(targetid), targetid, cash);
		SendAdminMessage(GREY,astring);
		SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:loc(playerid, params[])
{
    new targetid;
	if(sscanf(params, "u", targetid)) return SendClientMessage(playerid,RED, "[USAGE]: /loc [name/id]");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
	{
        new current_zone;
        current_zone = Player_Zone[targetid];
        new Float:x,Float:y,Float:z;
        GetPlayerPos(targetid,x,y,z);
		new Float:Pdist = GetPlayerDistanceFromPoint(playerid,x,y,z);
		new ssstring[200];
        format(fstr2,sizeof(fstr2), " %s [%d]:",GetName(targetid),targetid);
        new zone[50];
        GetPlayerCity(playerid, zone, sizeof(zone));
        format(fstr3,sizeof(fstr3), " City: %s",zone);
	    format(fstr,sizeof(fstr), " Zone: %s" ,ZoneNames[current_zone][zone_name]);
	    format(ssstring,sizeof(ssstring)," Fasele: %0.2f",Pdist);
	    SendClientMessage(playerid, YELLOW, fstr2);
	    SendClientMessage(playerid, YELLOW, fstr3);
	    SendClientMessage(playerid, YELLOW, fstr);
	    SendClientMessage(playerid, YELLOW, ssstring);
	}
	return 1;
}

CMD:rules(playerid, params[])
{
    ShowPlayerDialog(playerid, RULES_LIST, DIALOG_STYLE_MSGBOX ,
	"{FF0000}Ghavanin Server",
	"{FF0000}1: LOTFAN az HACKS/MODS/CHEATS/BUG/ABUSE estefade nakonid dargheyere in sorat ban bedon unban\n2: LOTFAN DM,HK,PARK,CAMP ya gharar dadane hit haye alaki nakonid!\n3: LOTFAN adab ra reayat konid va tohin va biehterami nakonid!\n4: LOTFAN az spam kardan shadidan khod dari konid!\n5: LOTFAN /q ya pause baraye jelogiri az harchizi nakonid!\n6: LOTFAN ba police ha ya dozd ha hamkari nakonid!\n7: LOTFAN tabligh nakonid va baraye chizi mesle pool ya... naporsid!",
	"Accept", "Ban");
	new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /rules",pName,playerid);
    //SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:me(playerid, params[])
{
	new action[50];
    if(sscanf(params, "s[50]", action)) return SendClientMessage(playerid, RED, "[USAGE]: /me [action]");
    if(IsMuted{playerid} == 1)
	{
        SendClientMessage(playerid, RED, "You cant use this command while your are mutted.");
        SetPlayerChatBubble(playerid, "Man MUTE hastam, alan nemitavanam chat konam.", RED, 50, 5000);
	    return 1;
    }
    if(strlen(action) < 1 || strlen(action) > 64) return SendClientMessage(playerid, RED, "Your action can only contain 1-64 characters.");
    if((gettime() - 2) < TimerInfo[playerid][CMD_timer31]) return SendClientMessage(playerid, RED, "[Timer]: 2 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer31] = gettime();
   	new placeholder;
	for(new i = 0; i < sizeof(BadWords); i++)
	{
    	placeholder = strfind(action,BadWords[i],true);
    	if(placeholder != -1)
    	{
        	for(new x = placeholder; x < placeholder + strlen(BadWords[i]); x++)
        	{
            	action[x] = '*';
	        }
	    }
	}
    format(fstr, sizeof(fstr), "%s %s...", GetName(playerid), action);
    SendMessageToAll(WHITE, fstr);
    print(fstr);
    return true;
}

CMD:do(playerid, params[])
{
	new action[50], string[150];
    if(sscanf(params, "s[50]", action)) return SendClientMessage(playerid, RED, "[USAGE]: /do [local chat]");
    if(IsMuted{playerid} == 1)
	{
        SendClientMessage(playerid, RED, "You cant use this command while your are mutted.");
        SetPlayerChatBubble(playerid, "Man MUTE hastam, alan nemitavanam chat konam.", RED, 50, 5000);
	    return 1;
    }
    if(strlen(action) < 1 || strlen(action) > 64) return SendClientMessage(playerid, RED, "Your action can only contain 1-64 characters.");
    if((gettime() - 2) < TimerInfo[playerid][CMD_timer31]) return SendClientMessage(playerid, RED, "[Timer]: 2 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer31] = gettime();
   	new placeholder;
	for(new i = 0; i < sizeof(BadWords); i++)
	{
    	placeholder = strfind(action,BadWords[i],true);
    	if(placeholder != -1)
    	{
        	for(new x = placeholder; x < placeholder + strlen(BadWords[i]); x++)
        	{
            	action[x] = '*';
        	}
    	}
	}
    format(string, sizeof(string), "* %s (( %s ))", GetName(playerid), action);
    ProxDetector(20.0, playerid, string, GREY, GREY, GREY, GREY, GREY);
    print(string);
    return true;
}

CMD:a(playerid, params[])
{
	if(IsPlayerAdmin(playerid))
	{
        format(fstr, sizeof(fstr), "[ADMIN-CHAT]: %s: %s", GetName(playerid), params);
        foreach(new i : Player)
		{
            if(PlayerInfo[i][aLevel] >= 1 || IsPlayerAdmin(i))
			{
                SendClientMessage(i, ORANGE, fstr);
                //print(fstr);
            }
        }
    }
    else if(PlayerInfo[playerid][aLevel] >= 1)
	{
        format(fstr, sizeof(fstr), "[ADMIN-CHAT]: %s: %s", GetName(playerid), params);
        foreach(new i : Player)
		{
            if(PlayerInfo[i][aLevel] >= 1)
			{
                SendClientMessage(i, ORANGE, fstr);
                print(fstr);
            }
        }
    }
    else
    {
        SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    }
    return true;
}

CMD:c(playerid, params[])
{
    if(GetTeam{playerid} == CLASS_COPS || GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_FBI || GetTeam{playerid} == CLASS_ARMY)
	{
        format(fstr, sizeof(fstr), "%s [%d] @ [Cop Radio]: %s", GetName(playerid), playerid, params);
        CopRadio(BLUE, fstr);
    }
    else
    {
        SendClientMessage(playerid, RED, "Only law enforcement can use this command.");
    }
    return true;
}

CMD:m(playerid, params[])
{
    if(GetTeam{playerid} == CLASS_MEDIC)
	{
        format(fstr, sizeof(fstr), "%s [%d] @ [Medic Radio]: %s", GetName(playerid), playerid, params);
        MedicRadio(PINK, fstr);
    }
    else
    {
        SendClientMessage(playerid, RED, "Only medics can use this command.");
    }
    return true;
}

CMD:pc(playerid, params[])
{
    ShowPlayerDialog(playerid, PC_MENU, DIALOG_STYLE_MSGBOX , "{FFFFFF}ACNR Player Colors", "{FFFFFF}White Player Color: Shahrvand Bigonah/CIA/FBI\n{FFFF33}Yellow Player Color: Suspect Civilian\n{FF0000}Red Player Color: Wanted Criminal\n{3300FF}Blue Player Color: Police/Cop\n{006600}Green Player Color: Army\n{FF0033}Pink Player Color: Doctor/Medic\n{FF6600}Orange Player Color: Hiding VIP\n{660066}Purple Player Color: On-Duty Admin\n{999999}Grey Player Color: Dead/Joining Player", "Ok", "");
    new astring[100],pName[24];
	GetPlayerName(playerid,(pName),sizeof(pName));
    format(astring,sizeof(astring),"%s [%d] typed: /pc",pName,playerid);
    //SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:anims(playerid, params[])
{
    ShowPlayerDialog(playerid, ANIM_LIST, DIALOG_STYLE_MSGBOX , "{FFFFFF}Animations List", "{FFFFFF}/dance /laugh /piss /chat /fucku /vomit /slapass /wave /box  /jerking\n/drunk /handsup /deal /crack /gsit /sit /taichi /lay /cry /smoke /sex /heeey /stopanim", "Ok", "");
    return true;
}

CMD:cry(playerid, params[])
{
    new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "GRAVEYARD", "mrnF_loop", 4.0, 1, 0, 0, 0, 0);
   	format(string, sizeof(string), "%s cries...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	IsPlayerUsingAnim{playerid} = true;
    return true;
}

CMD:jerking(playerid, params[])
{
    new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 0, 0, 0);
   	format(string, sizeof(string), "%s is jerking...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	IsPlayerUsingAnim{playerid} = true;
    return true;
}

CMD:dance(playerid, params[])
{
	new string[50], style;
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
	if(sscanf(params, "d", style)) return SendClientMessage(playerid, RED, "[USAGE]: /dance [1-4]");
	if(style < 1 || style > 4) return SendClientMessage(playerid, RED, "Invalid style. Styles: 1-4");
	if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
	IsPlayerUsingAnim{playerid} = true;
	if(style == 1)
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
		format(string, sizeof(string), "%s dances...", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		return true;
	}
	else if(style == 2)
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
		format(string, sizeof(string), "%s dances...", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		return true;
	}
	else if(style == 3)
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
		format(string, sizeof(string), "%s dances...", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		return true;
	}
	else if(style == 4)
	{
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
		format(string, sizeof(string), "%s dances...", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	}
	return true;
}

CMD:sex(playerid, params[])
{
	new style;
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
	if(sscanf(params, "d", style)) return SendClientMessage(playerid, RED, "[USAGE]: /sex [1-8]");
	if(style < 1 || style > 8) return SendClientMessage(playerid, RED, "Invalid style. Styles: 1-8");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
	IsPlayerUsingAnim{playerid} = true;
	if(style == 1)
	{
		ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_P", 4.0, 1, 0, 0, 0, 0, 0);
		return true;
	}
	else if(style == 2)
	{
		ApplyAnimation(playerid, "BLOWJOBZ", "BJ_STAND_LOOP_W", 4.0, 1, 0, 0, 0, 0, 0);
		return true;
	}
	else if(style == 3)
	{
		ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_P", 4.0, 1, 0, 0, 0, 0, 0);
		return true;
	}
	else if(style == 4)
	{
		ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 0, 0, 0, 0, 0);
		return true;
	}
	else if(style == 5)
	{
        ApplyAnimation(playerid, "SNM", "SPANKINGP", 4.0, 1, 0, 0, 0, 0, 0);
		return true;
	}
	else if(style == 6)
	{
		ApplyAnimation(playerid, "SNM", "SPANKINGW", 4.0, 1, 0, 0, 0, 0, 0);
		return true;
	}
	else if(style == 7)
	{
		ApplyAnimation(playerid, "SNM", "SPANKEDW", 4.0, 1, 0, 0, 0, 0, 0);
		return true;
	}
	else if(style == 8)
	{
		ApplyAnimation(playerid, "SNM", "SPANKEDP", 4.0, 1, 0, 0, 0, 0, 0);
	}
	return true;
}

CMD:laugh(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 1, 0, 0, 0, 0);
	IsPlayerUsingAnim{playerid} = true;
	if(GetClosestPlayerID(playerid) != INVALID_PLAYER_ID)
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(GetClosestPlayerID(playerid), posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, posx, posy, posz))
		{
			format(string, sizeof(string), "%s laughs at %s...", GetName(playerid), GetName(GetClosestPlayerID(playerid)));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
			return true;
		}
		else
		{
			format(string, sizeof(string), "%s laughs...", GetName(playerid));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		}
		return true;
	}
	else
	{
		format(string, sizeof(string), "%s laughs...", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	}
	return true;
}

CMD:piss(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
	SetPlayerSpecialAction(playerid, 68);
	IsPlayerUsingAnim{playerid} = true;
	if(GetClosestPlayerID(playerid) != INVALID_PLAYER_ID)
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(GetClosestPlayerID(playerid), posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, posx, posy, posz))
		{
			format(string, sizeof(string), "%s pisses on %s...", GetName(playerid), GetName(GetClosestPlayerID(playerid)));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
			return true;
		}
		else
		{
			format(string, sizeof(string), "%s takes a piss...", GetName(playerid));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		}
		return true;
	}
	else
	{
		format(string, sizeof(string), "%s takes a piss...", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	}
	return true;
}

CMD:chat(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "PED", "IDLE_CHAT", 1.800001, 1, 1, 1, 1, 13000);
	IsPlayerUsingAnim{playerid} = true;
	if(GetClosestPlayerID(playerid) != INVALID_PLAYER_ID)
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(GetClosestPlayerID(playerid), posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, posx, posy, posz))
		{
			format(string, sizeof(string), "%s chats with %s...", GetName(playerid), GetName(GetClosestPlayerID(playerid)));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
			return true;
		}
		else
		{
			format(string, sizeof(string), "%s chats with himself...", GetName(playerid));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		}
		return true;
	}
	else
	{
		format(string, sizeof(string), "%s chats with himself....", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	}
	return true;
}

CMD:box(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.0, 1, 0, 0, 0, 0);
	IsPlayerUsingAnim{playerid} = true;
	if(GetClosestPlayerID(playerid) != INVALID_PLAYER_ID)
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(GetClosestPlayerID(playerid), posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, posx, posy, posz))
		{
			format(string, sizeof(string), "%s bixing with %s...", GetName(playerid), GetName(GetClosestPlayerID(playerid)));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
			return true;
		}
		else
		{
			format(string, sizeof(string), "%s boxing with himself...", GetName(playerid));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		}
		return true;
	}
	else
	{
		format(string, sizeof(string), "%s boxing with himself....", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	}
	return true;
}

CMD:fucku(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "PED", "fucku", 4.1, 0, 1, 1, 1, 1, 1);
	IsPlayerUsingAnim{playerid} = true;
	if(GetClosestPlayerID(playerid) != INVALID_PLAYER_ID)
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(GetClosestPlayerID(playerid), posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, posx, posy, posz))
		{
			format(string, sizeof(string), "%s tells %s to get fucked...", GetName(playerid), GetName(GetClosestPlayerID(playerid)));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
			return true;
		}
		else
		{
			format(string, sizeof(string), "%s says fuck u...", GetName(playerid));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		}
		return true;
	}
	else
	{
		format(string, sizeof(string), "%s says fuck you....", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	}
	return true;
}

CMD:heeey(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "PED", "fucku", 4.1, 0, 1, 1, 1, 1, 1);
	IsPlayerUsingAnim{playerid} = true;
	if(GetClosestPlayerID(playerid) != INVALID_PLAYER_ID)
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(GetClosestPlayerID(playerid), posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, posx, posy, posz))
		{
			format(string, sizeof(string), "%s says heeey to %s...", GetName(playerid), GetName(GetClosestPlayerID(playerid)));
			PlayerPlaySound(playerid, 100014, posx, posy, posz);
			PlayerPlaySound(GetClosestPlayerID(playerid), 100014, 0, 0, 0);
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
			return true;
		}
		else
		{
			format(string, sizeof(string), "%s says heeey u...", GetName(playerid));
			PlayerPlaySound(playerid, 100014, posx, posy, posy);
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		}
		return true;
	}
	else
	{
        new Float:x, Float:y, Float:z;
        GetPlayerPos(playerid, x, y, z);
		format(string, sizeof(string), "%s says heeey you....", GetName(playerid));
		PlayerPlaySound(playerid, 100014, x, y, z);
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	}
	return true;
}

CMD:vomit(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	IsPlayerUsingAnim{playerid} = true;
	if(GetClosestPlayerID(playerid) != INVALID_PLAYER_ID)
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(GetClosestPlayerID(playerid), posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, posx, posy, posz))
		{
			format(string, sizeof(string), "%s vomits all over %s...", GetName(playerid), GetName(GetClosestPlayerID(playerid)));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
			return true;
		}
		else
		{
			format(string, sizeof(string), "%s vomits...", GetName(playerid));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		}
		return true;
	}
	else
	{
		format(string, sizeof(string), "%s vomits....", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	}
	return true;
}

CMD:slapass(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0);
	IsPlayerUsingAnim{playerid} = true;
	if(GetClosestPlayerID(playerid) != INVALID_PLAYER_ID)
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(GetClosestPlayerID(playerid), posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, posx, posy, posz))
		{
			format(string, sizeof(string), "%s slaps %s ass...", GetName(playerid), GetName(GetClosestPlayerID(playerid)));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
			return true;
		}
		else
		{
			format(string, sizeof(string), "%s slaps their own ass...", GetName(playerid));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		}
		return true;
	}
	else
	{
		format(string, sizeof(string), "%s slaps their own ass....", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	}
	return true;
}

CMD:wave(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
	IsPlayerUsingAnim{playerid} = true;
	if(GetClosestPlayerID(playerid) != INVALID_PLAYER_ID)
	{
		new Float:posx, Float:posy, Float:posz;
		GetPlayerPos(GetClosestPlayerID(playerid), posx, posy, posz);
		if(IsPlayerInRangeOfPoint(playerid, 5.0, posx, posy, posz))
		{
			format(string, sizeof(string), "%s waves at %s...", GetName(playerid), GetName(GetClosestPlayerID(playerid)));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
			return true;
		}
		else
		{
			format(string, sizeof(string), "%s waves at nobody...", GetName(playerid));
			SendMessageToAll(WHITE, string);
			SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		}
		return true;
	}
	else
	{
		format(string, sizeof(string), "%s waves at nobody....", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	}
	return true;
}

CMD:drunk(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.0, 1, 1, 1, 0, 0, 0);
	format(string, sizeof(string), "%s has too much to drink...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	IsPlayerUsingAnim{playerid} = true;
	return true;
}

CMD:handsup(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
 	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_HANDSUP);
	format(string, sizeof(string), "%s puts their hands up...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	IsPlayerUsingAnim{playerid} = true;
	return true;
}

CMD:deal(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
	format(string, sizeof(string), "%s makes a deal...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	IsPlayerUsingAnim{playerid} = true;
	return true;
}

CMD:crack(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
	format(string, sizeof(string), "%s overdoses on crack...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	IsPlayerUsingAnim{playerid} = true;
	return true;
}

CMD:smoke(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
    ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
	format(string, sizeof(string), "%s puffs on a cigarette...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	IsPlayerUsingAnim{playerid} = true;
	return true;
}

CMD:gsit(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
	ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
	format(string, sizeof(string), "%s sits on the ground...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	IsPlayerUsingAnim{playerid} = true;
	return true;
}

CMD:sit(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
	ApplyAnimation(playerid, "PED", "SEAT_idle", 4.0, 1, 0, 0, 0, 0);
	format(string, sizeof(string), "%s sits down...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	IsPlayerUsingAnim{playerid} = true;
	return true;
}

CMD:sleep(playerid, params[])
{
	new string[50], style;
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
	if(sscanf(params, "d", style)) return SendClientMessage(playerid, RED, "[USAGE]: /sleep [1-2]");
	if(style < 1 || style > 2) return SendClientMessage(playerid, RED, "Invalid style. Styles: 1-2");
	if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
	IsPlayerUsingAnim{playerid} = true;
	if(style == 1)
	{
		ApplyAnimation(playerid, "INT_HOUSE", "BED_Loop_L", 4.1, true, false, false, false, 0, SYNC_ALL);
		format(string, sizeof(string), "%s sleeps...", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		return true;
	}
	else if(style == 2)
	{
		ApplyAnimation(playerid, "INT_HOUSE", "BED_Loop_R", 4.1, true, false, false, false, 0, SYNC_ALL);
		format(string, sizeof(string), "%s sleeps...", GetName(playerid));
		SendMessageToAll(WHITE, string);
		SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
		return true;
	}
	return true;
}

CMD:stopanim(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You can't stop animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You can't stop animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You can't stop animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
	ClearAnimations(playerid);
	format(string, sizeof(string), "%s stopped acting...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	IsPlayerUsingAnim{playerid} = false;
	return true;
}

CMD:taichi(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
	ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0);
	format(string, sizeof(string), "%s performs taichi...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	IsPlayerUsingAnim{playerid} = true;
	return true;
}

CMD:lay(playerid, params[])
{
	new string[50];
    if(HasBeenCuffed{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when you have been cuffed/tazered.");
   	if(HasBeenTied{playerid} == true) return SendClientMessage(playerid, RED, "You cant use animations when your tied up.");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use animations in vehicles.");
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return SendClientMessage(playerid, RED, "You must be spawned to use this command.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer29]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer29] = gettime();
	ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
	format(string, sizeof(string), "%s lays down...", GetName(playerid));
	SendMessageToAll(WHITE, string);
	SetPlayerChatBubble(playerid, string, WHITE, 50, 5000);
	IsPlayerUsingAnim{playerid} = true;
	return true;
}

CMD:healme(playerid, params[])
{
    if(PlayerInfo[playerid][pKits] <= 0) return SendClientMessage(playerid, RED, "You dont have any medikits to use.");
    new Float:health;
    GetPlayerHealth(playerid, health);
    if(health >= 100) return SendClientMessage(playerid, RED, "You cant use medikits when you have max health.");
    if((gettime() - 180) < TimerInfo[playerid][CMD_timer3]) return SendClientMessage(playerid, RED, "[Timer]: 180 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer3] = gettime();
	{
        PlayerInfo[playerid][pKits] --;
        SetPlayerHealth(playerid, 100.0);
        format(fstr, sizeof(fstr), "%s [%d] has just used a medikit to replenish their health.", GetName(playerid), playerid);
        SendMessageToAll(ORANGE, fstr);
        format(fstr2, sizeof(fstr2), "You have just used (1) medikit, you now have (%d) medikits left.", PlayerInfo[playerid][pKits]);
        SendClientMessage(playerid, YELLOW, fstr2);
    }
    new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /healme", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:setadmin(playerid, params[])
{
	new level, id;
	if(sscanf(params, "ud", id, level)) return SendClientMessage(playerid, RED, "[USAGE]: /setadmin [name/id] [level[1-4]]");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "Player not found.");
    if(IsLoggedIn{id} == 0) return SendClientMessage(playerid, RED, "Player not logged in.");
    if(IsPlayerAdmin(playerid))
	{
	    PlayerInfo[id][aLevel] = level;
	    PlayerPlaySound(id,1085,0.0,0.0,0.0);
	    format(fstr, sizeof(fstr), "You have set %s [%d] admin level to %d.", GetName(id), id, level);
	    SendClientMessage(playerid, YELLOW, fstr);
	    format(fstr, sizeof(fstr), "Admin %s [%d] has set your admin level to %d.", GetName(playerid), playerid, level);
	    SendClientMessage(id, LIGHTGREEN, fstr);
	    SaveUserStats(id);
    }
	else if(PlayerInfo[playerid][aLevel] == 4)
	{
	    PlayerInfo[id][aLevel] = level;
	    PlayerPlaySound(id,1085,0.0,0.0,0.0);
	    format(fstr, sizeof(fstr), "You have set %s [%d] admin level to %d.", GetName(id), id, level);
	    SendClientMessage(playerid, YELLOW, fstr);
	    format(fstr, sizeof(fstr), "Admin %s [%d] has set your admin level to %d.", GetName(playerid), playerid, level);
	    SendClientMessage(id, LIGHTGREEN, fstr);
	    SaveUserStats(id);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] admin level to %d.", GetName(playerid), playerid, GetName(id), id, level);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    else
    {
        SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
    }
	return true;
}

CMD:setvip(playerid, params[])
{
	new vip, id;
	if(sscanf(params, "ud", id, vip)) return SendClientMessage(playerid,RED,"[USAGE]: /setvip [name/id] [level[1-4]]");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "Player not found.");
    if(IsLoggedIn{id} == 0) return SendClientMessage(playerid, RED, "Player not logged in.");
    if(PlayerInfo[playerid][aLevel] >= 4)
	{
	    PlayerInfo[id][vLevel] = vip;
	    PlayerPlaySound(id,1085,0.0,0.0,0.0);
	    format(fstr, sizeof(fstr), "You have set %s [%d] vip level to %d.", GetName(id), id, vip);
	    SendClientMessage(playerid, LIGHTGREEN, fstr);
	    format(fstr, sizeof(fstr), "Admin %s [%d] has set your vip level to %d.", GetName(playerid), playerid, vip);
	    SendClientMessage(id, LIGHTGREEN, fstr);
	    SaveUserStats(id);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] vip level to %d.", GetName(playerid), playerid, GetName(id), id, vip);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	else if(IsPlayerAdmin(playerid))
	{
	    PlayerInfo[id][vLevel] = vip;
	    PlayerPlaySound(id,1085,0.0,0.0,0.0);
	    format(fstr, sizeof(fstr), "You have set %s [%d] vip level to %d.", GetName(id), id, vip);
	    SendClientMessage(playerid, LIGHTGREEN, fstr);
	    format(fstr, sizeof(fstr), "Admin %s [%d] has set your vip level to %d.", GetName(playerid), playerid, vip);
	    SendClientMessage(id, LIGHTGREEN, fstr);
	    SaveUserStats(id);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] vip level to %d.", GetName(playerid), playerid, GetName(id), id, vip);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	else
	{
	    return SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
	}
	return true;
}

CMD:sethelper(playerid, params[])
{
	new targetid;
	if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, RED, "[USAGE]: /sethelper [name/id]");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
    if(IsLoggedIn{targetid} == 0) return SendClientMessage(playerid, RED, "Player not logged in.");
    if(PlayerInfo[playerid][aLevel] >= 3)
	{
	    if(PlayerInfo[targetid][Helper] == 0)
	    {
	    	PlayerInfo[targetid][Helper] = 1;
	    	PlayerPlaySound(targetid,1085,0.0,0.0,0.0);
	    	format(fstr, sizeof(fstr), "You have set %s [%d] as an Official ACNR Helper.", GetName(targetid), targetid);
	    	SendClientMessage(playerid, YELLOW, fstr);
	    	format(fstr, sizeof(fstr),"Admin %s [%d] has set you as an Official ACNR Helper.", GetName(playerid), playerid);
	    	SendClientMessage(targetid, LIGHTGREEN, fstr);
	    	SaveUserStats(targetid);
	    }
	    else
	    {
	    	PlayerInfo[targetid][Helper] = 0;
	    	PlayerPlaySound(targetid,1085,0.0,0.0,0.0);
	    	format(fstr, sizeof(fstr), "You have demoted %s [%d] as an Official ACNR Helper.", GetName(targetid), targetid);
	    	SendClientMessage(playerid, YELLOW, fstr);
	    	format(fstr, sizeof(fstr),"Admin %s [%d] has demoted you as an Official ACNR Helper.", GetName(playerid), playerid);
	    	SendClientMessage(targetid, RED, fstr);
	    	SaveUserStats(targetid);
	    }
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] to Helper.", GetName(playerid), playerid, GetName(targetid), targetid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
        return true;
	}
	else if(PlayerInfo[playerid][hHelper] == 1)
	{
	    if(PlayerInfo[targetid][Helper] == 0)
	    {
	    	PlayerInfo[targetid][Helper] = 1;
	    	PlayerPlaySound(targetid,1085,0.0,0.0,0.0);
	    	format(fstr, sizeof(fstr), "You have set %s [%d] as an Official ACNR Helper.", GetName(targetid), targetid);
	    	SendClientMessage(playerid, YELLOW, fstr);
	    	format(fstr, sizeof(fstr),"Head Helper %s [%d] has set you as an Official ACNR Helper.", GetName(playerid), playerid);
	    	SendClientMessage(targetid, LIGHTGREEN, fstr);
	    	SaveUserStats(targetid);
	    }
	    else
	    {
	    	PlayerInfo[targetid][Helper] = 0;
	    	PlayerPlaySound(targetid,1085,0.0,0.0,0.0);
	    	format(fstr, sizeof(fstr), "You have demoted %s [%d] as an Official ACNR Helper.", GetName(targetid), targetid);
	    	SendClientMessage(playerid, YELLOW, fstr);
	    	format(fstr, sizeof(fstr),"Head Helper %s [%d] has demoted you as an Official ACNR Helper.", GetName(playerid), playerid);
	    	SendClientMessage(targetid, RED, fstr);
	    	SaveUserStats(targetid);
	    }
        new astring[100];
        format(astring, sizeof(astring), "Head Helper %s [%d] has set %s [%d] to Helper.", GetName(playerid), playerid, GetName(targetid), targetid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
        return true;
	}
	else
	{
        SendClientMessage(playerid, RED, "Only [Admin level +3] + [Head Helper] can use this command.");
	}
	return true;
}

CMD:sethhelper(playerid, params[])
{
	new targetid;
	if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
	if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, RED, "[USAGE]: /sethelper [name/id]");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
    if(IsLoggedIn{targetid} == 0) return SendClientMessage(playerid, RED, "Player not logged in.");
	{
	    if(PlayerInfo[targetid][hHelper] == 0)
	    {
	    	PlayerInfo[targetid][hHelper] = 1;
	    	PlayerPlaySound(targetid,1085,0.0,0.0,0.0);
	    	format(fstr, sizeof(fstr), "You have set %s [%d] as an Official ACNR Head Helper.", GetName(targetid), targetid);
	    	SendClientMessage(playerid, YELLOW, fstr);
	    	format(fstr, sizeof(fstr),"Admin %s [%d] has set you as an Official ACNR Head Helper.", GetName(playerid), playerid);
	    	SendClientMessage(targetid, LIGHTGREEN, fstr);
	    	SaveUserStats(targetid);
	    }
	    else
	    {
	    	PlayerInfo[targetid][hHelper] = 0;
	    	PlayerPlaySound(targetid,1085,0.0,0.0,0.0);
	    	format(fstr, sizeof(fstr), "You have demoted %s [%d] as an Official ACNR Head Helper.", GetName(targetid), targetid);
	    	SendClientMessage(playerid, YELLOW, fstr);
	    	format(fstr, sizeof(fstr),"Admin %s [%d] has demoted you as an Official ACNR Head Helper.", GetName(playerid), playerid);
	    	SendClientMessage(targetid, RED, fstr);
	    	SaveUserStats(targetid);
	    }
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] to Head Helper.", GetName(playerid), playerid, GetName(targetid), targetid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	return true;
}

CMD:n(playerid, params[])
{
	if(IsNewbieMutted{playerid} == true)
	{
        SendClientMessage(playerid, RED, "Elvis: You are mutted from newbie chat, you cant use it!");
        SetPlayerChatBubble(playerid, "Man MUTE hastam, alan nemitavanam chat konam.", RED, 50, 5000);
	    return 1;
    }
    new placeholder;
	for(new i = 0; i < sizeof(BadWords); i++)
	{
	    placeholder = strfind(params,BadWords[i],true);
        if(placeholder != -1)
	    {
	        for(new x = placeholder; x < placeholder + strlen(BadWords[i]); x++)
	        {
	            params[x] = '*';
	        }
	    }
	}
	if(PlayerInfo[playerid][aLevel] == 1)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Trial Admin %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    else if(PlayerInfo[playerid][aLevel] == 2)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Server Admin %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    else if(PlayerInfo[playerid][aLevel] == 3)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Head Admin %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    else if(PlayerInfo[playerid][aLevel] == 4)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Owner %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    else if(PlayerInfo[playerid][hHelper] >= 1)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Head Helper %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
	else if(PlayerInfo[playerid][Helper] >= 1)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Helper %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    else
    {
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Newbie %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    printf("%s : %s",GetName(playerid), params);
    return true;
}

CMD:new(playerid, params[])
{
	if(IsNewbieMutted{playerid} == true)
	{
        SendClientMessage(playerid, RED, "Elvis: You are mutted from newbie chat, you cant use it!");
        SetPlayerChatBubble(playerid, "Man MUTE hastam, alan nemitavanam chat konam.", RED, 50, 5000);
	    return 1;
    }
	new placeholder;
	for(new i = 0; i < sizeof(BadWords); i++)
	{
	    placeholder = strfind(params,BadWords[i],true);
        if(placeholder != -1)
	    {
	        for(new x = placeholder; x < placeholder + strlen(BadWords[i]); x++)
	        {
	            params[x] = '*';
	        }
	    }
	}
    if(PlayerInfo[playerid][aLevel] == 1)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Trial Admin %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    else if(PlayerInfo[playerid][aLevel] == 2)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Server Admin %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    else if(PlayerInfo[playerid][aLevel] == 3)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Head Admin %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    else if(PlayerInfo[playerid][aLevel] == 4)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Owner %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    else if(PlayerInfo[playerid][hHelper] >= 1)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Head Helper %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
	else if(PlayerInfo[playerid][Helper] >= 1)
	{
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Helper %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    else
    {
        new msg[64];
        if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /(n)ew [msg]");
        if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
        format(fstr, sizeof(fstr), "Newbie %s [%d]: %s", GetName(playerid), playerid, msg);
        SendMessageToAll(LIGHTBLUE, fstr);
    }
    printf("%s : %s",GetName(playerid), params);
    return true;
}

CMD:unban(playerid, params[])
{
    new targetname[26], ip[50], reason[24];if(sscanf(params, "s[26]s[50]s[24]", targetname, ip, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /unban [FullName] [ip] [reason]");
    if(strlen(reason) < 1 || strlen(reason) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
    if(strlen(targetname) < 1 || strlen(targetname) > 24) return SendClientMessage(playerid, RED, "Name can only contain 1-24 characters.");
    if(PlayerInfo[playerid][aLevel] >= 3)
	{
	    new f[40];
		format(f, sizeof(f), USER_FILE, targetname);
		if(fexist(f))
		{
		new INI:ufile = INI_Open(f);
        INI_WriteInt(ufile, "Banned", 0);
		INI_Close(ufile);
        format(fstr, sizeof(fstr), "Admin %s [%d] has unbanned %s from ACNR - Dalil: %s", GetName(playerid), playerid, targetname, reason);
        SendMessageToAll(RED, fstr);
        format(fstr2, sizeof(fstr2), "unbanip %s",ip);
        SendRconCommand(fstr2);
        SendRconCommand("reloadbans");
        print(fstr);
        tedadeban--;
        accssave();
        print(fstr);
        }
        else
        {
        SendClientMessage(playerid,RED,"In esm mojod nist!");
        }
    }
    else if(IsPlayerAdmin(playerid))
    {
	    new f[40];
		format(f, sizeof(f), USER_FILE, targetname);
		if(fexist(f))
		{
		new INI:ufile = INI_Open(f);
        INI_WriteInt(ufile, "Banned", 0);
		INI_Close(ufile);
        format(fstr, sizeof(fstr), "Admin %s [%d] has unbanned %s from ACNR - Dalil: %s", GetName(playerid), playerid, targetname, reason);
        SendMessageToAll(RED, fstr);
        format(fstr2, sizeof(fstr2), "unbanip %s",ip);
        SendRconCommand(fstr2);
        SendRconCommand("reloadbans");
        print(fstr);
        tedadeban--;
        accssave();
        print(fstr);
        }
        else
        {
        SendClientMessage(playerid,RED,"In esm mojod nist!");
        }
    }
    else
    {
        return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
    }
    return 1;
}

CMD:blockip(playerid,params[])
{
    new ip[50];
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
    if(sscanf(params, "s[50]", ip)) return SendClientMessage(playerid, RED, "[USAGE]: /blockip [ip]");
	{
		new mosh[200];
		BlockIpAddress(ip,0);
		format(mosh,sizeof(mosh),"IP: %s  Blocked By Admin %s",ip,GetName(playerid));
		SendOwnerMessage(RED,mosh);
		SendClientMessage(playerid,RED,"Ip Blocked");
	}
	return 1;
}

CMD:unblockip(playerid,params[])
{
    new ip[50];
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
    if(sscanf(params, "s[50]", ip)) return SendClientMessage(playerid, RED, "[USAGE]: /unblockip [ip]");
	{
		new mosh[200];
		UnBlockIpAddress(ip);
		format(mosh,sizeof(mosh),"IP: %s  unBlocked By Admin %s",ip,GetName(playerid));
		SendOwnerMessage(RED,mosh);
		SendClientMessage(playerid,RED,"Ip unBlocked");
	}
	return 1;
}

CMD:banip(playerid, params[])
{
    new targetid, ip[50], reason[24];
    if(sscanf(params, "us[24]", targetid, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /banip [name/id] [reason]");
    if(strlen(reason) < 1 || strlen(reason) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
    if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    if(IsPlayerNPC(targetid)) return SendClientMessage(playerid, RED, "You cant range ban Elvis.");
    if(PlayerInfo[targetid][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED, "ERROR: Only Admin 4 can range ban other Admins.");
    if(PlayerInfo[playerid][aLevel] >= 3)
	{
		new mosh[200];
		GetPlayerIp(targetid, (ip),sizeof(ip));
		format(mosh,sizeof(mosh),">>((Name: %s , IP: %s ))<<",GetName(targetid),ip);
		SendClientMessage(playerid,YELLOW,mosh);
		SendClientMessage(targetid,YELLOW,mosh);
        PlayerInfo[targetid][Banned] = 1;
        tedadeban++;
        accssave();
        format(fstr, sizeof(fstr), "Admin %s [%d] has range banned %s [%d] from ACNR - Dalil: %s", GetName(playerid), playerid, GetName(targetid), targetid, reason);
        SendMessageToAll(RED, fstr);
        format(fstr2, sizeof(fstr2), "banip %s",ip);
        GameTextForPlayer(targetid, "~r~banned...~n~bannned..~n~banned.~n~banned", 5000, 2);
        format(fstr3, sizeof(fstr3), "You have been range banned from ACNR. You were range banned by admin %s.", GetName(playerid));
        SendClientMessage(targetid, RED, fstr3);
        SendClientMessage(targetid, ORANGE, "If you think this range ban is unfair post an appeal at just-samp.rozblog.com");
        print(fstr);

        for(new h = 0; h < MAX_HOUSES; h++)
        {
            if(!strcmp(GetHouseOwner(h), GetName(targetid), false))
            {
                SellHouse(h);
            }
        }
        for(new b = 0; b < MAX_BUSINESSES; b++)
        {
            if(!strcmp(BizInfo[b][bOwner], GetName(targetid), false))
            {
                SellBiz(b);
            }
        }

        UnloadPlayerVehicles(targetid);
        RemoveOwnedVehs(targetid);

		SRBC(fstr2);
		ExBane(targetid,fstr);
        SRBC("reloadbans");
    }
    else if(IsPlayerAdmin(playerid))
	{
		new mosh[200];
		GetPlayerIp(targetid, (ip),sizeof(ip));
		format(mosh,sizeof(mosh),">>((Name: %s , IP: %s ))<<",GetName(targetid),ip);
		SendClientMessage(playerid,YELLOW,mosh);
		SendClientMessage(targetid,YELLOW,mosh);
        PlayerInfo[targetid][Banned] = 1;
        tedadeban++;
        accssave();
        format(fstr, sizeof(fstr), "Admin %s [%d] has range banned %s [%d] from ACNR - Dalil: %s", GetName(playerid), playerid, GetName(targetid), targetid, reason);
        SendMessageToAll(RED, fstr);
        format(fstr2, sizeof(fstr2), "banip %s",ip);
        GameTextForPlayer(targetid, "~r~banned...~n~bannned..~n~banned.~n~banned", 5000, 2);
        format(fstr3, sizeof(fstr3), "You have been range banned from ACNR. You were range banned by admin %s.", GetName(playerid));
        SendClientMessage(targetid, RED, fstr3);
        SendClientMessage(targetid, ORANGE, "If you think this range ban is unfair post an appeal at just-samp.rozblog.com");
        print(fstr);

        for(new h = 0; h < MAX_HOUSES; h++)
        {
            if(!strcmp(GetHouseOwner(h), GetName(targetid), false))
            {
                SellHouse(h);
            }
        }
        for(new b = 0; b < MAX_BUSINESSES; b++)
        {
            if(!strcmp(BizInfo[b][bOwner], GetName(targetid), false))
            {
                SellBiz(b);
            }
        }

        UnloadPlayerVehicles(targetid);
        RemoveOwnedVehs(targetid);

		SRBC(fstr2);
		ExBane(targetid,fstr);
        SRBC("reloadbans");
    }
    else
    {
        return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
    }
    return true;
}

CMD:ip(playerid, params[])
{
    new targetid, ip[50];
    if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, RED, "[USAGE]: /ip [name/id]");
    if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    if(PlayerInfo[playerid][aLevel] >= 2) 
    {
        GetPlayerIp(targetid, (ip),sizeof(ip));
        format(fstr, sizeof(fstr), "[IP]: %s [%d] - %s",  GetName(targetid), targetid, ip);
        SendClientMessage(playerid, LIGHTBLUE, fstr);
    }
    else if(IsPlayerAdmin(playerid))
    {
        return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    }
    return true;
}

CMD:ban(playerid, params[])
{
    new targetid, reason[24];
    if(sscanf(params, "us[24]", targetid, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /ban [name/id] [reason]");
    if(strlen(reason) < 1 || strlen(reason) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
    if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    if(IsPlayerNPC(targetid)) return SendClientMessage(playerid, RED, "You cant ban Elvis.");
    if(PlayerInfo[targetid][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED, "ERROR: Only Admin 4 can ban other Admins.");
    if(PlayerInfo[playerid][aLevel] >= 2)
	{
		new mosh[200], ip[50];
		GetPlayerIp(targetid, (ip),sizeof(ip));
		format(mosh,sizeof(mosh),">>((Name: %s , IP: %s ))<<",GetName(targetid),ip);
		SendClientMessage(playerid,YELLOW,mosh);
		SendClientMessage(targetid,YELLOW,mosh);
        PlayerInfo[targetid][Banned] = 1;
        tedadeban++;
        accssave();
        format(fstr, sizeof(fstr), "Admin %s [%d] has banned %s [%d] from ACNR - Dalil: %s", GetName(playerid), playerid, GetName(targetid), targetid, reason);
        SendMessageToAll(RED, fstr);
        GameTextForPlayer(targetid, "~r~banned...~n~bannned..~n~banned.~n~banned", 5000, 2);
        format(fstr2, sizeof(fstr2), "You have been banned from ACNR. You were banned by admin %s.", GetName(playerid));
        SendClientMessage(targetid, RED, fstr2);
        SendClientMessage(targetid, ORANGE, "If you think this ban is unfair post an appeal at just-samp.rozblog.com");
		print(fstr);
		
        for(new h = 0; h < MAX_HOUSES; h++)
        {
            if(!strcmp(GetHouseOwner(h), GetName(targetid), false))
            {
                SellHouse(h);
            }
        }
        for(new b = 0; b < MAX_BUSINESSES; b++)
        {
            if(!strcmp(BizInfo[b][bOwner], GetName(targetid), false))
            {
                SellBiz(b);
            }
        }

        UnloadPlayerVehicles(targetid);
        RemoveOwnedVehs(targetid);

        ExBane(targetid, fstr);
        SRBC("reloadbans");
    }
    else if(IsPlayerAdmin(playerid))
    {
		new mosh[200], ip[50];
		GetPlayerIp(targetid, (ip),sizeof(ip));
		format(mosh,sizeof(mosh),">>((Name: %s , IP: %s ))<<",GetName(targetid),ip);
		SendClientMessage(playerid,YELLOW,mosh);
		SendClientMessage(targetid,YELLOW,mosh);
        PlayerInfo[targetid][Banned] = 1;
        tedadeban++;
        accssave();
        format(fstr, sizeof(fstr), "Admin %s [%d] has banned %s [%d] from ACNR - Dalil: %s", GetName(playerid), playerid, GetName(targetid), targetid, reason);
        SendMessageToAll(RED, fstr);
        GameTextForPlayer(targetid, "~r~banned...~n~bannned..~n~banned.~n~banned", 5000, 2);
        format(fstr2, sizeof(fstr2), "You have been banned from ACNR. You were banned by admin %s.", GetName(playerid));
        SendClientMessage(targetid, RED, fstr2);
        SendClientMessage(targetid, ORANGE, "If you think this ban is unfair post an appeal at just-samp.rozblog.com");
		print(fstr);

        for(new h = 0; h < MAX_HOUSES; h++)
        {
            if(!strcmp(GetHouseOwner(h), GetName(targetid), false))
            {
                SellHouse(h);
            }
        }
        for(new b = 0; b < MAX_BUSINESSES; b++)
        {
            if(!strcmp(BizInfo[b][bOwner], GetName(targetid), false))
            {
                SellBiz(b);
            }
        }

        UnloadPlayerVehicles(targetid);
        RemoveOwnedVehs(targetid);

        ExBane(targetid, fstr);
        SRBC("reloadbans");
    }
    else
    {
        return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    }
    return true;
}

CMD:kick(playerid, params[])
{
    new targetid, reason[24];
    if(sscanf(params, "us[24]", targetid, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /kick [name/id] [reason]");
    if(strlen(reason) < 1 || strlen(reason) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
    if(IsPlayerNPC(targetid)) return SendClientMessage(playerid, RED, "You cant kick Elvis.");
   	if(PlayerInfo[targetid][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED, "ERROR: Only Admin 4 can kick Admins.");
   	if(PlayerInfo[playerid][aLevel] >= 1)
	{
        format(fstr, sizeof(fstr), "Admin %s [%d] has kicked %s [%d] from ACNR - Dalil: %s", GetName(playerid), playerid, GetName(targetid), targetid, reason);
        SendMessageToAll(RED, fstr);
        PlayerInfo[targetid][pKicks] ++;
        GameTextForPlayer(targetid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
        format(fstr2, sizeof(fstr2), "You have been kicked from ACNR. You were kicked by admin %s.", GetName(playerid));
        SendClientMessage(targetid, RED, fstr2);
        SendClientMessage(targetid, ORANGE, "If you think this kick is unfair complain at just-samp.rozblog.com");
        KickPlayer(targetid);
        tedadekick++;
		accssave();
        print(fstr);
    }
    else if(IsPlayerAdmin(playerid))
	{
        format(fstr, sizeof(fstr), "Admin %s [%d] has kicked %s [%d] from ACNR - Dalil: %s", GetName(playerid), playerid, GetName(targetid), targetid, reason);
        SendMessageToAll(RED, fstr);
        PlayerInfo[targetid][pKicks] ++;
        GameTextForPlayer(targetid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
        format(fstr2, sizeof(fstr2), "You have been kicked from ACNR. You were kicked by admin %s.", GetName(playerid));
        SendClientMessage(targetid, RED, fstr2);
        SendClientMessage(targetid, ORANGE, "If you think this kick is unfair complain at just-samp.rozblog.com");
        KickPlayer(targetid);
        tedadekick++;
		accssave();
        print(fstr);
    }
    else
    {
        return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
	}
    return true;
}

CMD:akill(playerid, params[])
{
    new targetid, ris[24];
    if(sscanf(params, "us[24]", targetid,ris)) return SendClientMessage(playerid, RED, "[USAGE]: /akill [name/id] [reason]");
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use the command.");
    if(strlen(ris) < 1 || strlen(ris) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
    if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
	if(targetid == playerid) return SendClientMessage(playerid, RED, "You cant kill yourself.");
	if(PlayerInfo[targetid][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED, "ERROR: Only Admin 4 can kill other Admins.");
	if(IsPlayerNPC(targetid)) return SendClientMessage(playerid ,RED, "Shoma nemitavanid Elvis Ra bekoshid!.");
	{
	    SetPlayerHealth(targetid, 0.0);
	    GameTextForPlayer(targetid,"~r~Wasted", 5000, 5);
	    format(fstr, sizeof(fstr), "Admin %s [%d] shoma ra kosht dalid : %s.", GetName(playerid), playerid, ris);
        SendClientMessage(targetid, RED, fstr);
        new astring[200];
	    format(astring, sizeof(astring), "Admin %s [%d] has just killed %s [%d] with their admin powers. dalil : %s", GetName(playerid), playerid, GetName(targetid), targetid,ris);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
    return true;
}

CMD:report(playerid, params[])
{
    new id, reason[150];
    if(sscanf(params, "us[150]", id, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /report [name/id] [reason]");
    if(strlen(reason) < 1 || strlen(reason) > 64) return SendClientMessage(playerid, RED, "Your reason can only contain 1-64 characters.");
    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer33]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer33] = gettime();
    {
        format(fstr, sizeof(fstr), "You have just reported %s [%d] to online admins, dont DOUBLE REPORT.", GetName(id), id);
        SendClientMessage(playerid, ORANGE, fstr);
        format(fstr2, sizeof(fstr2), "[REPORT]: %s [%d] reported %s [%d] for: %s", GetName(playerid), playerid, GetName(id), id, reason);
        SendHelpMessage(LIGHTBLUE, fstr2);
    }
    return true;
}

CMD:sethealth(playerid, params[])
{
	new targetid, Float:Health;
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
    if(sscanf(params, "uf", targetid, Health)) return SendClientMessage(playerid, RED, "[USAGE]: /sethealth [name/id] [amount]");
    if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    {
        SetPlayerHealth(targetid, Health);
        format(fstr, sizeof(fstr), "Admin %s [%d] has set your health to %f.", GetName(playerid), playerid, Health);
        SendClientMessage(targetid, LIGHTGREEN, fstr);
        format(fstr, sizeof(fstr), "You have set %s [%d] health to %f.", GetName(targetid), targetid, Health);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] health to %f.", GetName(playerid), playerid, GetName(targetid), targetid, Health);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:sethp(playerid, params[])
{
	new targetid, Float:Health;
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
    if(sscanf(params, "uf", targetid, Health)) return SendClientMessage(playerid, RED, "[USAGE]: /sethealth [name/id] [amount]");
    if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    {
        SetPlayerHealth(targetid, Health);
        format(fstr, sizeof(fstr), "Admin %s [%d] has set your health to %f.", GetName(playerid), playerid, Health);
        SendClientMessage(targetid, LIGHTGREEN, fstr);
        format(fstr, sizeof(fstr), "You have set %s [%d] health to %f.", GetName(targetid), targetid, Health);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] health to %f.", GetName(playerid), playerid, GetName(targetid), targetid, Health);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:setarmour(playerid, params[])
{
	new targetid, Float:Armour;
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
    if(sscanf(params, "uf", targetid, Armour)) return SendClientMessage(playerid, RED, "[USAGE]: /setarmour [name/id] [amount]");
    if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    {
        SetPlayerArmour(targetid, Armour);
        format(fstr, sizeof(fstr), "Admin %s [%d] has set your armour to %f.", GetName(playerid), playerid, Armour);
        SendClientMessage(targetid, LIGHTGREEN, fstr);
        format(fstr, sizeof(fstr), "You have set %s [%d] armour to %f.", GetName(targetid), targetid, Armour);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] armour to %f.", GetName(playerid), playerid, GetName(targetid), targetid, Armour);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:setarm(playerid, params[])
{
	new targetid, Float:Armour;
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
    if(sscanf(params, "uf", targetid, Armour)) return SendClientMessage(playerid, RED, "[USAGE]: /setarmour [name/id] [amount]");
    if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    {
        SetPlayerArmour(targetid, Armour);
        format(fstr, sizeof(fstr), "Admin %s [%d] has set your armour to %f.", GetName(playerid), playerid, Armour);
        SendClientMessage(targetid, LIGHTGREEN, fstr);
        format(fstr, sizeof(fstr), "You have set %s [%d] armour to %f.", GetName(targetid), targetid, Armour);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] armour to %f.", GetName(playerid), playerid, GetName(targetid), targetid, Armour);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:setcash(playerid, params[])
{
	new targetid, amount;
    if(sscanf(params, "ud", targetid, amount)) return SendClientMessage(playerid, RED, "[USAGE]: /setcash [name/id] [amount]");
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
    if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    {
        format(fstr, sizeof(fstr), "Admin %s [%d] has set your money to $%d.", GetName(playerid), playerid, amount);
        SendClientMessage(targetid, LIGHTGREEN, fstr);
        format(fstr, sizeof(fstr), "You have set %s [%d] money to $%d.", GetName(targetid), targetid, amount);
        SendClientMessage(playerid, YELLOW, fstr);
        SetPlayerCash(targetid, amount);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] money to $%d.", GetName(playerid), playerid, GetName(targetid), targetid, amount);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:setwanted(playerid, params[])
{
	new targetid, level;
    if(sscanf(params, "ud", targetid, level)) return SendClientMessage(playerid, RED, "[USAGE]: /setwanted [name/id] [level]");
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
    if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
	if(GetTeam{targetid} != CLASS_CIV) return SendClientMessage(playerid,RED,"shoma nemitavanid be cia/police/doctor/fbi/army wanted bedahid.");
    {
        format(fstr, sizeof(fstr), "Admin %s [%d] has set your wanted level to %d.", GetName(playerid), playerid, level);
        SendClientMessage(targetid, LIGHTGREEN, fstr);
        format(fstr, sizeof(fstr), "You have set %s [%d] wanted level to %d.", GetName(targetid), targetid, level);
        SendClientMessage(playerid, YELLOW, fstr);
        SetPlayerWantedLevel(targetid, level);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] wanted level to %d.", GetName(playerid), playerid, GetName(targetid), targetid, level);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:rwarn(playerid, params[])
{
    new warnid, rulenumber;
    if(PlayerInfo[playerid][aLevel] >= 1) 
    {
    if(sscanf(params, "ud", warnid, rulenumber)) return SendClientMessage(playerid, RED, "[USAGE]: /rwarn [name/id] [rule number]");
    if(warnid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    if(IsPlayerNPC(warnid)) return SendClientMessage(playerid, RED, "You cant warn Elvis.");
    {
        format(fstr, sizeof(fstr), "Admin %s [%d] has given %s [%d] a warning for breaking rule %d. Read /rules", GetName(playerid), playerid, GetName(warnid), warnid, rulenumber);
        SendMessageToAll(RED, fstr);
        ShowPlayerDialog(warnid, RULES_LIST, DIALOG_STYLE_MSGBOX ,
	"{FF0000}Ghavanin Server",
	"{FF0000}1: LOTFAN az HACKS/MODS/CHEATS/BUG/ABUSE estefade nakonid dargheyere in sorat ban bedon unban\n2: LOTFAN DM,HK,PARK,CAMP ya gharar dadane hit haye alaki nakonid!\n3: LOTFAN adab ra reayat konid va tohin va biehterami nakonid!\n4: LOTFAN az spam kardan shadidan khod dari konid!\n5: LOTFAN /q ya pause baraye jelogiri az harchizi nakonid!\n6: LOTFAN ba police ha ya dozd ha hamkari nakonid!\n7: LOTFAN tabligh nakonid va baraye chizi mesle pool ya... naporsid!",
	"Accept", "Ban");
        PlayerInfo[warnid][pWarns] ++;
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has given %s [%d] a warning for breaking rule %d. Read /rules", GetName(playerid), playerid, GetName(warnid), warnid, rulenumber);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    }
    else if(PlayerInfo[playerid][Helper] == 1 || PlayerInfo[playerid][hHelper] == 1)
    {
    if(sscanf(params, "ud", warnid, rulenumber)) return SendClientMessage(playerid, RED, "[USAGE]: /rwarn [name/id] [rule number]");
    if(warnid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    if(IsPlayerNPC(warnid)) return SendClientMessage(playerid, RED, "You cant warn Elvis.");
    {
        format(fstr, sizeof(fstr), "Helper %s [%d] has given %s [%d] a warning for breaking rule %d. Read /rules", GetName(playerid), playerid, GetName(warnid), warnid, rulenumber);
        SendMessageToAll(RED, fstr);
        ShowPlayerDialog(warnid, RULES_LIST, DIALOG_STYLE_MSGBOX ,
	"{FF0000}Ghavanin Server",
	"{FF0000}1: LOTFAN az HACKS/MODS/CHEATS/BUG/ABUSE estefade nakonid dargheyere in sorat ban bedon unban\n2: LOTFAN DM,HK,PARK,CAMP ya gharar dadane hit haye alaki nakonid!\n3: LOTFAN adab ra reayat konid va tohin va biehterami nakonid!\n4: LOTFAN az spam kardan shadidan khod dari konid!\n5: LOTFAN /q ya pause baraye jelogiri az harchizi nakonid!\n6: LOTFAN ba police ha ya dozd ha hamkari nakonid!\n7: LOTFAN tabligh nakonid va baraye chizi mesle pool ya... naporsid!",
	"Accept", "Ban");
        PlayerInfo[warnid][pWarns] ++;
        new astring[100];
        format(astring, sizeof(astring), "Helper %s [%d] has given %s [%d] a warning for breaking rule %d. Read /rules", GetName(playerid), playerid, GetName(warnid), warnid, rulenumber);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    }
    else
    {
        SendClientMessage(playerid, RED, "This command is restricted to Head Helper + Admin lvl +1 + Helper.");
    }
    return true;
}

CMD:warn(playerid, params[])
{
    new warnid, reason[24];
    if(PlayerInfo[playerid][aLevel] >= 1)
    {
        if(sscanf(params, "us[24]", warnid, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /warn [name/id] [reason]");
  		if(strlen(reason) < 1 || strlen(reason) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
    	if(warnid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    	if(PlayerInfo[warnid][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid,RED, "ERROR: Only Admin +3 can warn other Admins.");
    	if(IsPlayerNPC(warnid)) return SendClientMessage(playerid, RED, "You cant warn Elvis.");
        format(fstr, sizeof(fstr), "Admin %s [%d] has given %s [%d] a warning for %s (/rules)", GetName(playerid), playerid, GetName(warnid), warnid, reason);
        SendMessageToAll(RED, fstr);
        ShowPlayerDialog(warnid, RULES_LIST, DIALOG_STYLE_MSGBOX ,
	    "{FF0000}Ghavanin Server",
	    "{FF0000}1: LOTFAN az HACKS/MODS/CHEATS/BUG/ABUSE estefade nakonid dargheyere in sorat ban bedon unban\n2: LOTFAN DM,HK,PARK,CAMP ya gharar dadane hit haye alaki nakonid!\n3: LOTFAN adab ra reayat konid va tohin va biehterami nakonid!\n4: LOTFAN az spam kardan shadidan khod dari konid!\n5: LOTFAN /q ya pause baraye jelogiri az harchizi nakonid!\n6: LOTFAN ba police ha ya dozd ha hamkari nakonid!\n7: LOTFAN tabligh nakonid va baraye chizi mesle pool ya... naporsid!",
	    "Accept", "Ban");
		PlayerInfo[warnid][pWarns] ++;
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has given %s [%d] a warning for %s (/rules)", GetName(playerid), playerid, GetName(warnid), warnid, reason);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    else if(PlayerInfo[playerid][Helper] == 1 || PlayerInfo[playerid][hHelper] == 1)
    {
        if(sscanf(params, "us[24]", warnid, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /warn [name/id] [reason]");
  		if(strlen(reason) < 1 || strlen(reason) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
    	if(warnid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
        if(PlayerInfo[warnid][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid,RED, "ERROR: Only Admin +3 can warn other Admins.");
        format(fstr, sizeof(fstr), "Helper %s [%d] has given %s [%d] a warning for %s (/rules)", GetName(playerid), playerid, GetName(warnid), warnid, reason);
        SendMessageToAll(RED, fstr);
        ShowPlayerDialog(warnid, RULES_LIST, DIALOG_STYLE_MSGBOX ,
	    "{FF0000}ACNR Server Rules",
	    "{FF0000}1: LOTFAN az HACKS/MODS/CHEATS/BUG/ABUSE estefade nakonid dargheyere in sorat ban bedon unban\n2: LOTFAN DM,HK,PARK,CAMP ya gharar dadane hit haye alaki nakonid!\n3: LOTFAN adab ra reayat konid va tohin va biehterami nakonid!\n4: LOTFAN az spam kardan shadidan khod dari konid!\n5: LOTFAN /q ya pause baraye jelogiri az harchizi nakonid!\n6: LOTFAN ba police ha ya dozd ha hamkari nakonid!\n7: LOTFAN tabligh nakonid va baraye chizi mesle pool ya... naporsid!",
	    "Accept", "Ban");
		PlayerInfo[warnid][pWarns] ++;
        new astring[100];
        format(astring, sizeof(astring), "Helper %s [%d] has given %s [%d] a warning for %s (/rules)", GetName(playerid), playerid, GetName(warnid), warnid, reason);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    else
    {
        SendClientMessage(playerid, RED, "This command is restricted to Head Helper + Admin lvl +1 + Helper.");
    }
    return true;
}

CMD:goto(playerid, params[])
{
    if(IsPlayerAdmin(playerid))
    {
        new gotoplayerid;
        new Float:gX, Float:gY, Float:gZ;
        if(sscanf(params, "u", gotoplayerid)) return SendClientMessage(playerid, RED, "[USAGE]: /goto [name/id]");
        if(!IsPlayerConnected(gotoplayerid)) return SendClientMessage(playerid, RED, "Player not found.");
        if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command while you are jailed.");
		if(GetPlayerVehicleID(playerid))
        {
            new vID, pID, Int;
            Int = GetPlayerInterior(gotoplayerid);
            pID = GetPlayerVirtualWorld(gotoplayerid);
            vID = GetPlayerVehicleID(playerid);
            GetPlayerPos(gotoplayerid, gX, gY, gZ);
            SetPlayerVirtualWorld(playerid, pID);
		    SetVehiclePos(GetPlayerVehicleID(playerid), gX+2, gY+2, gZ);
		    SetVehicleVirtualWorld(vID, pID);
		    SetPlayerInterior(playerid, Int);
			LinkVehicleToInterior(vID, Int);
		    if(IsPlayerInArena{gotoplayerid} == true)
		    {
			IsPlayerInArena{playerid} = true;
			}
			else if(IsPlayerInArena{gotoplayerid} == false)
			{
			IsPlayerInArena{playerid} = false;
			}
	        //new astring[100];
            //format(astring, sizeof(astring), "%s [%d] roye player %s[%d] goto shod.", GetName(playerid), playerid,GetName(gotoplayerid),gotoplayerid);
            //SendAdminMessage(GREY, astring);
            //SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
        }
	    else
	    {
            new pID, Int;
            Int = GetPlayerInterior(gotoplayerid);
			pID = GetPlayerVirtualWorld(gotoplayerid);
			GetPlayerPos(gotoplayerid, gX, gY, gZ);
			SetPlayerVirtualWorld(playerid, pID);
		    SetPlayerPos(playerid, gX+2, gY+2, gZ);
		    SetPlayerInterior(playerid, Int);
			if(IsPlayerInArena{gotoplayerid} == true)
		    {
			IsPlayerInArena{playerid} = true;
			}
			else if(IsPlayerInArena{gotoplayerid} == false)
			{
			IsPlayerInArena{playerid} = false;
			}
	        //new astring[100];
            //format(astring, sizeof(astring), "%s [%d] roye player %s[%d] goto shod.", GetName(playerid), playerid,GetName(gotoplayerid),gotoplayerid);
            //SendAdminMessage(GREY, astring);
            //SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
        }
    }
    else if(PlayerInfo[playerid][aLevel] >= 2)
    {
        new gotoplayerid;
        new Float:gX, Float:gY, Float:gZ;
        if(sscanf(params, "u", gotoplayerid)) return SendClientMessage(playerid, RED, "[USAGE]: /goto [name/id]");
        if(!IsPlayerConnected(gotoplayerid)) return SendClientMessage(playerid, RED, "Player not found.");
        if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command while you are jailed.");
		if(GetPlayerVehicleID(playerid))
        {
            new vID, pID, Int;
            Int = GetPlayerInterior(gotoplayerid);
            pID = GetPlayerVirtualWorld(gotoplayerid);
            vID = GetPlayerVehicleID(playerid);
            GetPlayerPos(gotoplayerid, gX, gY, gZ);
            SetPlayerVirtualWorld(playerid, pID);
		    SetVehiclePos(GetPlayerVehicleID(playerid), gX+2, gY+2, gZ);
		    SetVehicleVirtualWorld(vID, pID);
		    SetPlayerInterior(playerid, Int);
			LinkVehicleToInterior(vID, Int);
		    if(IsPlayerInArena{gotoplayerid} == true)
		    {
			IsPlayerInArena{playerid} = true;
			}
			else if(IsPlayerInArena{gotoplayerid} == false)
			{
			IsPlayerInArena{playerid} = false;
			}
	        new astring[100];
            format(astring, sizeof(astring), "%s [%d] roye player %s[%d] goto shod.", GetName(playerid), playerid,GetName(gotoplayerid),gotoplayerid);
            SendAdminMessage(GREY, astring);
            SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
        }
	    else
	    {
            new pID, Int;
            Int = GetPlayerInterior(gotoplayerid);
			pID = GetPlayerVirtualWorld(gotoplayerid);
			GetPlayerPos(gotoplayerid, gX, gY, gZ);
			SetPlayerVirtualWorld(playerid, pID);
		    SetPlayerPos(playerid, gX+2, gY+2, gZ);
		    SetPlayerInterior(playerid, Int);
			if(IsPlayerInArena{gotoplayerid} == true)
		    {
			IsPlayerInArena{playerid} = true;
			}
			else if(IsPlayerInArena{gotoplayerid} == false)
			{
			IsPlayerInArena{playerid} = false;
			}
	        new astring[100];
            format(astring, sizeof(astring), "%s [%d] roye player %s[%d] goto shod.", GetName(playerid), playerid,GetName(gotoplayerid),gotoplayerid);
            SendAdminMessage(GREY, astring);
            SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
        }
    }
    else
    {
        SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    }
    return true;
}

CMD:get(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
    {
		new getplayerid;
        new Float:gX, Float:gY, Float:gZ;
        if(sscanf(params, "u", getplayerid)) return SendClientMessage(playerid, RED, "[USAGE]: /get [name/id]");
        if(getplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
		if(GetPlayerVehicleID(getplayerid))
	    {
            new vID, pID, Int;
            Int = GetPlayerInterior(playerid);
            pID = GetPlayerVirtualWorld(playerid);
            vID = GetPlayerVehicleID(getplayerid);
            GetPlayerPos(playerid, gX, gY, gZ);
            SetPlayerVirtualWorld(getplayerid, pID);
		    SetVehiclePos(GetPlayerVehicleID(getplayerid), gX+2, gY+2, gZ);
		    SetVehicleVirtualWorld(vID, pID);
		    SetPlayerInterior(getplayerid, Int);
			LinkVehicleToInterior(vID, Int);
		    if(IsPlayerInArena{playerid} == true)
		    {
			IsPlayerInArena{getplayerid} = true;
			}
			else if(IsPlayerInArena{playerid} == false)
			{
			IsPlayerInArena{getplayerid} = false;
			}
    	    new astring[100];
            format(astring, sizeof(astring), "%s [%d] player %s[%d] ra get kard.", GetName(playerid), playerid,GetName(getplayerid),getplayerid);
            SendAdminMessage(GREY, astring);
            SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	    }
		else
		{
		    new pID, Int;
            Int = GetPlayerInterior(playerid);
			pID = GetPlayerVirtualWorld(playerid);
			GetPlayerPos(playerid, gX, gY, gZ);
			SetPlayerVirtualWorld(getplayerid, pID);
		    SetPlayerPos(getplayerid, gX+2, gY+2, gZ);
		    SetPlayerInterior(getplayerid, Int);
		    if(IsPlayerInArena{playerid} == true)
		    {
			IsPlayerInArena{getplayerid} = true;
			}
			else if(IsPlayerInArena{playerid} == false)
			{
			IsPlayerInArena{getplayerid} = false;
			}
    	    new astring[100];
            format(astring, sizeof(astring), "%s [%d] player %s[%d] ra get kard.", GetName(playerid), playerid,GetName(getplayerid),getplayerid);
            SendAdminMessage(GREY, astring);
            SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
        }
    }
    return true;
}

CMD:getplayer(playerid, params[]) return cmd_get(playerid,params); 

CMD:explode(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	{
		new bombid;
        if(sscanf(params, "u", bombid)) return SendClientMessage(playerid, RED, "[USAGE]: /explode [name/id]");
        if(!IsPlayerConnected(bombid)) return SendClientMessage(playerid, RED, "Player not found.");
        if(PlayerInfo[bombid][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED, "ERROR: Only Admin 4 can explode other Admins.");
        if(IsPlayerNPC(bombid)) return SendClientMessage(playerid, RED, "Shoma nemitavanid Elvis ra monfajer konid!.");
        if(bombid == playerid) return SendClientMessage(playerid, RED, "Shoma nemitavanid khod ra monfajer konid.");
	    {
            new Float:x,Float:y,Float:z;
            GetPlayerPos(bombid,x,y,z);
            CreateExplosion(x,y,z,6,5);
            CreateExplosion(x+2.5,y,z,6,2.5);
            CreateExplosion(x,y+2.5,z,6,2.5);
            CreateExplosion(x,y,z+2.5,6,2.5);
            SetPlayerHealth(bombid, 0.0);
            format(fstr, sizeof(fstr), "%s [%d] has died in an unspecified explosion...", GetName(bombid), bombid);
            SendMessageToAll(PINK, fstr);
			new astring[64];
    		format(astring,sizeof(astring),"%s [%d] typed: /explode %d", GetName(playerid), playerid, bombid);
    		SendAdminMessage(GREY, astring);
    		SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
        }
	}
    return true;
}

CMD:vheal(playerid, params[])
{
    if(PlayerInfo[playerid][vLevel] < 4) return SendClientMessage(playerid, RED, "Only vip level 4 can use this command.");
    if((gettime() - 180) < TimerInfo[playerid][CMD_timer2]) return SendClientMessage(playerid, RED, "[Timer]: 180 sanie sabr kon.");//5 mins
    TimerInfo[playerid][CMD_timer2] = gettime();
    {
        SetPlayerHealth(playerid, 100.0);
        SendClientMessage(playerid, YELLOW, "You have set your health to 100%.");
		//
		new mstring[150];
		format(mstring, sizeof(mstring), "VIP %s has just healed themself using /vheal...", GetName(playerid));
        ProxDetector(20.0, playerid, mstring, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN);
        //
        new astring[64];
    	format(astring, sizeof(astring),"%s [%d] typed: /vheal", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
    	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:ann(playerid, params[])
{
    new msg[64];
    if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /ann [msg]");
    if(strlen(msg) < 1 || strlen(msg) > 3640) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
	{
        format(fstr, sizeof(fstr), "~w~%s", msg);
        GameTextForAll(fstr, 5000, 3);
        new astring[300];
    	format(astring, sizeof(astring),"%s [%d] typed: /ann ", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
    	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
	return true;
}

CMD:asay(playerid, params[])
{
    new msg[64];
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /asay [msg]");
    if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
    else if(PlayerInfo[playerid][aLevel] == 1)
    {
        format(fstr, sizeof(fstr), "Trial Admin %s says: %s", GetName(playerid), msg);
        SendMessageToAll(PURPLE, fstr);
        print(fstr);
        return true;
    }
	else if(PlayerInfo[playerid][aLevel] == 2)
    {
        format(fstr, sizeof(fstr), "Server Admin %s says: %s", GetName(playerid), msg);
        SendMessageToAll(PURPLE, fstr);
        print(fstr);
        return true;
    }
    else if(PlayerInfo[playerid][aLevel] == 3)
    {
        format(fstr, sizeof(fstr), "Head Admin %s says: %s", GetName(playerid), msg);
        SendMessageToAll(PURPLE, fstr);
        print(fstr);
        return true;
    }
    else if(PlayerInfo[playerid][aLevel] == 4)
    {
        format(fstr, sizeof(fstr), "Owner %s says: %s", GetName(playerid), msg);
        SendMessageToAll(PURPLE, fstr);
        print(fstr);
    }
    return true;
}

CMD:vsay(playerid, params[])
{
    new msg[64];
    if(PlayerInfo[playerid][vLevel] < 1) return SendClientMessage(playerid, RED, "Only vip level 1+ can use this command.");
    if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid,RED,"[USAGE]: /vsay [msg]");
    if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
    new placeholder;
	for(new i = 0; i < sizeof(BadWords); i++)
	{
    	placeholder = strfind(msg,BadWords[i],true);
    	if(placeholder != -1)
    	{
        	for(new x = placeholder; x < placeholder + strlen(BadWords[i]); x++)
        	{
            	msg[x] = '*';
        	}
    	}
	}
	if(PlayerInfo[playerid][vLevel] == 1)
    {
        format(fstr, sizeof(fstr), "Bronze VIP %s says: %s", GetName(playerid), msg);
        SendMessageToAll(ORANGE, fstr);
        print(fstr);
        return true;
    }
    else if(PlayerInfo[playerid][vLevel] == 2)
    {
        format(fstr, sizeof(fstr), "Silver VIP %s says: %s", GetName(playerid), msg);
        SendMessageToAll(ORANGE, fstr);
        print(fstr);
        return true;
    }
    else if(PlayerInfo[playerid][vLevel] == 3)
    {
        format(fstr, sizeof(fstr), "Gold VIP %s says: %s", GetName(playerid), msg);
        SendMessageToAll(ORANGE, fstr);
        print(fstr);
        return true;
    }
    else if(PlayerInfo[playerid][vLevel] == 4)
    {
        format(fstr, sizeof(fstr), "Platinum VIP %s says: %s", GetName(playerid), msg);
        SendMessageToAll(ORANGE, fstr);
        print(fstr);
    }
    return true;
}

CMD:god(playerid, params[])
{
	if(IsPlayerAdmin(playerid))
    {
		if(IsInGod{playerid} == 0)
    	{
			IsInGod{playerid} = 1;
			SetPlayerHealth(playerid, 99999);
			SendClientMessage(playerid, LIGHTGREEN, "Godmode ON.");
			new astring[100];
			format(astring, sizeof(astring), "Admin %s [%d] has switched godmode ON.", GetName(playerid), playerid);
			SendAdminMessage(GREY, astring);
			SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
		}
    	else
		{
			IsInGod{playerid} = 0;
			SetPlayerHealth(playerid, 100.00);
			SendClientMessage(playerid, RED, "Godmode OFF.");
			new astring[100];
			format(astring, sizeof(astring), "Admin %s [%d] has switched godmode OFF.", GetName(playerid), playerid);
			SendAdminMessage(GREY, astring);
			SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    	}
	}
    else if(PlayerInfo[playerid][aLevel] >= 2)
    {
		if(IsInGod{playerid} == 0)
    	{
			IsInGod{playerid} = 1;
			SetPlayerHealth(playerid, 99999);
			SendClientMessage(playerid, LIGHTGREEN, "Godmode ON.");
			new astring[100];
			format(astring, sizeof(astring), "Admin %s [%d] has switched godmode ON.", GetName(playerid), playerid);
			SendAdminMessage(GREY, astring);
			SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
		}
    	else
		{
			IsInGod{playerid} = 0;
			SetPlayerHealth(playerid, 100.00);
			SendClientMessage(playerid, RED, "Godmode OFF.");
			new astring[100];
			format(astring, sizeof(astring), "Admin %s [%d] has switched godmode OFF.", GetName(playerid), playerid);
			SendAdminMessage(GREY, astring);
			SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    	}
	}
	else
 	{
		SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    }
    return true;
}

CMD:godcar(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehice to use this command.");
	if(IsInGodCar{playerid} == 0)
	{
        IsInGodCar{playerid} = 1;
       	//new vID = GetPlayerVehicleID(playerid);
        //SetVehicleHealth(vID, 999999);
        SendClientMessage(playerid, LIGHTGREEN, "Godcar ON.");
    	new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has switched godcar ON.", GetName(playerid), playerid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	else
	{
        IsInGodCar{playerid} = 0;
        new vID = GetPlayerVehicleID(playerid);
	    SetVehicleHealth(vID, 1000.0);
    	SendClientMessage(playerid, RED, "Godcar OFF.");
    	new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has switched godcar OFF.", GetName(playerid), playerid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
    return true;
}

forward MoveVehToZero(vid);
public MoveVehToZero(vid)
{
    SetVehiclePos(vid, 0.0, 0.0, 3.0);
	LinkVehicleToInterior(vid, 0);
	return 1;
}

CMD:dcar(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehice to use this command.");
	if(IsShopVehicle[GetPlayerVehicleID(playerid)] != -1) return SendClientMessage(playerid, RED, "Shoma nemitavanid mashini ra ke az car shop kharide shode hazf konid!.");
    if(vipvehicle[GetPlayerVehicleID(playerid)] == 1)
    {
	        vipvehicle[GetPlayerVehicleID(playerid)] = 0;
    }
	new theveh = GetPlayerVehicleID(playerid);
	PlayerAzMashinBironKon(playerid);
//	DestroyVehicle(GetPlayerVehicleID(playerid)); //destroyed vehicle wont respawn even with server reset
	SetTimerEx("MoveVehToZero", 2000, false, "u", theveh);
	SendClientMessage(playerid, RED, "Mashin hazf shod.");
	return true;
}

CMD:carrespawn(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehice to use this command.");
	if(IsShopVehicle[GetPlayerVehicleID(playerid)] != -1) return SendClientMessage(playerid, RED, "Shoma nemitavanid mashini ra ke az car shop kharide shode Respawn konid!.");
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	SendClientMessage(playerid, RED, "Mashin ReSpawn shod.");
	return true;
}

CMD:flip(playerid, params[])
{
	if(PlayerInfo[playerid][vLevel] >= 1)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehice to use this command.");
	    new VehicleID, Float:flX, Float:flY, Float:flZ, Float:Angle;
	    GetPlayerPos(playerid, flX, flY, flZ);
		VehicleID = GetPlayerVehicleID(playerid);
		GetVehicleZAngle(VehicleID, Angle);
		SetVehiclePos(VehicleID, flX, flY, flZ);
		SetVehicleZAngle(VehicleID, Angle);
		//
		new mstring[150];
		format(mstring, sizeof(mstring), "VIP %s has just flipped there vehicle using /flip...", GetName(playerid));
		ProxDetector(20.0, playerid, mstring, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN);
		//
		new astring[100], aName[24];
	    GetPlayerName(playerid, (aName), sizeof(aName));
	    format(astring, sizeof(astring), "%s [%d] Typed: /flip", aName, playerid);
	    SendAdminMessage(GREY, astring);
	    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	else if(PlayerInfo[playerid][aLevel] >= 2)
	{
	    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehice to use this command.");
	    new VehicleID, Float:flX, Float:flY, Float:flZ, Float:Angle;
	    GetPlayerPos(playerid, flX, flY, flZ);
		VehicleID = GetPlayerVehicleID(playerid);
		GetVehicleZAngle(VehicleID, Angle);
		SetVehiclePos(VehicleID, flX, flY, flZ);
		SetVehicleZAngle(VehicleID, Angle);
		new astring[100], aName[24];
	    GetPlayerName(playerid, (aName), sizeof(aName));
	    format(astring, sizeof(astring), "%s [%d] Typed: /flip", aName, playerid);
	    SendAdminMessage(GREY, astring);
	    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	else
	{
	    SendClientMessage(playerid, RED, "Only [vip level 1+] + [admin lvl 2+] can use this command.");
	}
    return true;
}

CMD:clearchat(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    for(new i = 0; i < 135; i++) SendMessageToAll(0xD8D8D8FF," /pc , /rules , /report , /faqs , /cmds , /help , /(n)ew , /askadmin , /gps , /updates , /stopaudio , /afklist , /nopm");
    new astring[100], aName[24];
	GetPlayerName(playerid, (aName), sizeof(aName));
	format(astring, sizeof(astring), "Admin %s [%d] has cleared main chat.", aName, playerid);
	SendAdminMessage(GREY, astring);
	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}
CMD:cchat(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4+ can use this command.");
	new reason[150];
    if(sscanf(params, "s[150]", reason)) return SendClientMessage(playerid, RED, "[USAGE]: /cchat [reason]");
    {
    new string[150];
    format(string, sizeof(string),"%s",reason);
	for(new i = 0; i < 135; i++) SendMessageToAll(0xD8D8D8FF,string);
    new astring[250], aName[24];
	GetPlayerName(playerid, (aName), sizeof(aName));
	format(astring, sizeof(astring), "Admin %s [%d] has cleared main chat, Reason: %s.", aName, playerid, reason);
	SendAdminMessage(GREY, astring);
	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
	return true;
}
CMD:cc(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
	for(new i = 0; i < 135; i++) SendMessageToAll(0xD8D8D8FF,"   ");
    new astring[100], aName[24];
	GetPlayerName(playerid, (aName), sizeof(aName));
	format(astring, sizeof(astring), "Admin %s [%d] has cleared main chat.", aName, playerid);
	SendAdminMessage(GREY, astring);
	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:givegun(playerid, params[])
{
    new giveplayerid, wepID, ammo, weapon[50];
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    if(sscanf(params, "uid", giveplayerid, wepID, ammo))
    {
			SendClientMessage(playerid, YELLOW, "_______________________________________________________________________");
            SendClientMessage(playerid, RED, "[USAGE]: /givegun [name/id] [weapon id] [ammo]");
			SendClientMessage(playerid, GREEN, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
			SendClientMessage(playerid, GREEN, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
			SendClientMessage(playerid, GREEN, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle 25: Shotgun");
			SendClientMessage(playerid, GREEN, "26: Sawnoff Shotgun 27: SPAS-12 28: Micro SMG (Mac 10) 29: SMG (MP5) 30: AK-47 31: M4 32: Tec9 33: Rifle");
			SendClientMessage(playerid, GREEN, "25: Shotgun 34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge");
			SendClientMessage(playerid, GREEN, "40: Detonator 41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Goggles 46: Parachute");
			SendClientMessage(playerid, YELLOW, "____________________________________________________________________________________________");
			return 1;
    }
    if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, RED, "Player not found.");
    if(wepID < 1 || wepID > 46)
	{

	        SendClientMessage(playerid, YELLOW, "_____________________________________________________________________");
			SendClientMessage(playerid, RED, "Invalid weapon id.");
			SendClientMessage(playerid, GREEN, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
			SendClientMessage(playerid, GREEN, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
			SendClientMessage(playerid, GREEN, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle 25: Shotgun");
			SendClientMessage(playerid, GREEN, "26: Sawnoff Shotgun 27: SPAS-12 28: Micro SMG (Mac 10) 29: SMG (MP5) 30: AK-47 31: M4 32: Tec9 33: Rifle");
			SendClientMessage(playerid, GREEN, "25: Shotgun 34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge");
			SendClientMessage(playerid, GREEN, "40: Detonator 41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Goggles 46: Parachute");
			SendClientMessage(playerid, YELLOW, "______________________________________________________________________________________");
			return 1;
	}
    if(giveplayerid == playerid)
    {
        GetWeaponName(wepID, (weapon), sizeof(weapon));
        GivePlayerWeapon(playerid, wepID, ammo);
        format(fstr, sizeof(fstr), "You have given yourself a %s with %d ammo.", weapon, ammo);
        SendClientMessage(playerid, YELLOW, fstr);
    }
    else
    {
        GetWeaponName(wepID, (weapon), sizeof(weapon));
        format(fstr, sizeof(fstr), "You have given %s [%d] a %s with %d ammo.", GetName(giveplayerid), giveplayerid, weapon, ammo);
        SendClientMessage(playerid, YELLOW, fstr);
        format(fstr, sizeof(fstr), "Admin %s [%d] has given you a %s with %d ammo.", GetName(playerid), playerid, weapon, ammo);
        SendClientMessage(giveplayerid, LIGHTGREEN, fstr);
        GivePlayerWeapon(giveplayerid, wepID, ammo);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has given %s [%d] a %s with %d ammo.", GetName(playerid), playerid, GetName(giveplayerid), giveplayerid, weapon, ammo);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:givecash(playerid, params[])
{
    new giveplayerid, amount;
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    if(sscanf(params, "ud", giveplayerid, amount)) return SendClientMessage(playerid, RED, "[USAGE]: /givecash [name/id] [amount]");
    if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, RED, "Player not found.");
    {
        GivePlayerCash(giveplayerid, amount);
        format(fstr, sizeof(fstr), "Admin %s [%d] has given you $%d.", GetName(playerid), playerid, amount);
        SendClientMessage(giveplayerid, LIGHTGREEN, fstr);
        format(fstr, sizeof(fstr), "You have given %s [%d] $%d.", GetName(giveplayerid), giveplayerid, amount);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has given %s [%d] $%d via admin powers.", GetName(playerid), playerid, GetName(giveplayerid), giveplayerid, amount);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:freeze(playerid, params[])
{
    new target, reason[24];
    if(sscanf(params, "us[24]", target, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /freeze [name/id] [reason]");
    if(strlen(reason) < 1 || strlen(reason) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    if(!IsPlayerConnected(target)) return SendClientMessage(playerid, RED, "Player not found.");
    if(target == playerid) return SendClientMessage(playerid, RED, "Shoma nemitavanid khod ra freeze konid.");
    if(PlayerInfo[target][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED, "ERROR: Only Admin 4 can freeze other Admins.");
    {
        TogglePlayerControllable(target,false);
        GameTextForPlayer(target,"~r~Frozen", 3000, 5);
        format(fstr, sizeof(fstr), "Admin %s [%d] has frozen you - Dalil: %s", GetName(playerid), playerid, reason);
        SendClientMessage(target, RED, fstr);
        format(fstr, sizeof(fstr), "You have frozen %s [%d] - Dalil: %s", GetName(target), target, reason);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[200];
        format(astring, sizeof(astring), "Admin %s [%d] has frozen %s [%d] - Dalil: %s", GetName(playerid), playerid, GetName(target), target, reason);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:unfreeze(playerid, params[])
{
    new target;
    if(sscanf(params, "u", target)) return SendClientMessage(playerid, RED, "[USAGE]: /unfreeze [name/id]");
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    if(!IsPlayerConnected(target)) return SendClientMessage(playerid, RED, "Player not found.");
    if(target == playerid) return SendClientMessage(playerid, RED, "Shoma nemitavanid khod ra unfreeze konid.");
    if(PlayerInfo[target][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED, "ERROR: Only Admin 4 can unfreeze other Admins.");
    {
        TogglePlayerControllable(target,true);
        GameTextForPlayer(target,"~g~Unfrozen", 3000, 5);
        format(fstr, sizeof(fstr), "Admin %s [%d] has unfrozen you.", GetName(playerid), playerid);
        SendClientMessage(target, LIGHTGREEN, fstr);
        format(fstr, sizeof(fstr), "You have unfrozen %s [%d]", GetName(target), target);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has unfrozen %s [%d]", GetName(playerid), playerid, GetName(target), target);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:nmute(playerid, params[])
{
    new muteid, reason[24];
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    if(sscanf(params, "us[24]", muteid, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /nmute [name/id] [reason]");
    if(strlen(reason) < 1 || strlen(reason) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
    if(muteid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    if(muteid == playerid) return SendClientMessage(playerid,RED, "You cant mute yourself.");
    if(PlayerInfo[muteid][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED, "ERROR: Only Admin 4 can nmute other Admins.");
    if(IsNewbieMutted{muteid} == false)
    {
        IsNewbieMutted{muteid} = true;
        format(fstr, sizeof(fstr), "Admin %s [%d] has mutted you from newbie chat - Dalil: %s", GetName(playerid), playerid, reason);
        SendClientMessage(muteid, RED, fstr);
        format(fstr, sizeof(fstr), "You have mutted %s [%d] from newbie chat - Dalil %s", GetName(muteid), muteid, reason);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] mutted %s [%d] from newbie chat for %s", GetName(playerid), playerid, GetName(muteid), muteid, reason);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    else
    {
        IsNewbieMutted{muteid} = false;
        format(fstr, sizeof(fstr), "Admin %s [%d] has unmutted you from newbie chat - Dalil: %s", GetName(playerid), playerid, reason);
        SendClientMessage(muteid, RED, fstr);
        format(fstr, sizeof(fstr), "You have unmutted %s [%d] from newbie chat - Dalil: %s", GetName(muteid), muteid, reason);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] unmutted %s [%d] from newbie chat for %s", GetName(playerid), playerid, GetName(muteid), muteid, reason);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:mutelist(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    new mutedplayers = 0;
    foreach(new i : Player)
    {
        if(IsPlayerConnected(i))
        {
		    if(IsMuted{i} == 1 || IsNewbieMutted{i} == true)
            {
                if(IsMuted{i} == 1 && IsNewbieMutted{i} == false)
                {
					format(fstr, sizeof(fstr),"{FFFFFF}[Name]: %s [%d] - Normal Mute", GetName(i), i);
                	SendClientMessage(playerid, RED, fstr);
					mutedplayers++;
    			}
    			else if(IsMuted{i} == 0 && IsNewbieMutted{i} == true)
                {
					format(fstr, sizeof(fstr),"{FFFFFF}[Name]: %s [%d] - Newbie Chat Mute", GetName(i), i);
                	SendClientMessage(playerid, RED, fstr);
					mutedplayers++;
    			}
    			else if(IsMuted{i} == 1 && IsNewbieMutted{i} == true)
                {
					format(fstr, sizeof(fstr),"{FFFFFF}[Name]: %s [%d] - Normal + Newbie Chat Mute", GetName(i), i);
                	SendClientMessage(playerid, RED, fstr);
					mutedplayers++;
    			}
	      	}
		}
    }
    if(mutedplayers == 0)
    {
        SendClientMessage(playerid, RED, "There are no mutted players online.");
	}
    return true;
}

CMD:mute(playerid, params[])
{
    new muteid, reason[24];
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    if(sscanf(params, "us[24]", muteid, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /mute [name/id] [reason]");
    if(strlen(reason) < 1 || strlen(reason) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
    if(muteid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    if(muteid == playerid) return SendClientMessage(playerid, RED, "You cant mute yourself.");
    if(PlayerInfo[muteid][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED, "ERROR: Only Admin 4 can mute other Admins.");
    {
        IsMuted{muteid} = 1;
        //IsNewbieMutted{muteid} = true;
        GameTextForPlayer(muteid,"~r~Muted", 3000, 5);
        format(fstr, sizeof(fstr), "Admin %s [%d] has muted you - Dalil: %s", GetName(playerid), playerid, reason);
        SendClientMessage(muteid, RED, fstr);
        format(fstr, sizeof(fstr), "You have muted %s [%d] - Dalil: %s", GetName(muteid), muteid, reason);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has muted %s [%d] - Dalil: %s", GetName(playerid), playerid, GetName(muteid), muteid, reason);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:unmute(playerid, params[])
{
    new muteid;
    if(sscanf(params, "u", muteid)) return SendClientMessage(playerid, RED, "[USAGE]: /unmute [name/id]");
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    if(muteid == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
    if(muteid == playerid) return SendClientMessage(playerid, RED, "Shoma nemitavanid khod ra unmute konid!.");
    if(PlayerInfo[muteid][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED, "ERROR: Only Admin 4 can unmute other Admins.");
    {
        IsMuted{muteid} = 0;
        IsNewbieMutted{muteid} = false;
        GameTextForPlayer(muteid,"~g~Unmuted", 3000, 5);
        format(fstr, sizeof(fstr), "Admin %s [%d] has unmuted you.", GetName(playerid), playerid);
        SendClientMessage(muteid, LIGHTGREEN, fstr);
        format(fstr, sizeof(fstr), "You have unmuted %s [%d]", GetName(muteid), muteid);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has unmuted %s [%d]", GetName(playerid), playerid, GetName(muteid), muteid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:fly(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "Nabayad savare mashin bashi!.");
	if(IsPlayerAdmin(playerid))
	{
	    // Place the player in and out of edit mode
		if(GetPVarType(playerid, "FlyMode")) CancelFlyMode(playerid);
		else FlyMode(playerid);
		return 1;
	}
	else if(PlayerInfo[playerid][aLevel] == 4)
	{
	    // Place the player in and out of edit mode
		if(GetPVarType(playerid, "FlyMode")) CancelFlyMode(playerid);
		else FlyMode(playerid);
		return 1;
	}
	else
	{
        SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
    }
	return 1;
}

CMD:reloadbans(playerid,params[])
{
	if(IsPlayerAdmin(playerid))
	{
	    SendRconCommand("reloadbans");
		return 1;
	}
	else if(PlayerInfo[playerid][aLevel] >= 2)
	{
	    SendRconCommand("reloadbans");
		return 1;
	}
	else
	{
        SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    }
	return 1;
}

CMD:startfly(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "Nabayad savare mashin bashi!.");
	if(IsFlying[playerid] == true) return SendClientMessage(playerid, RED, "Shoma darhale parvaz kardani!,Az /stopfly estefade kon.");
	else if(PlayerInfo[playerid][aLevel] == 4)
	{
	    StartFly(playerid);
	    IsInGod{playerid} = 1;
	    IsFlying[playerid] = true;
		return 1;
	}
	else
	{
        SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
    }
	return 1;
}

CMD:tdspeedo(playerid,params[])
{
	if(is3don[playerid] == 1)
	{
		is3don[playerid] = 0;
		tdSpeedo_Toggle(playerid, 0);
		return SendClientMessage(playerid, RED, "3D speedo meter Disabled.");
	}
	else if(is3don[playerid] == 0)
	{
	    is3don[playerid] = 1;
		tdSpeedo_Toggle(playerid, 1);
		return SendClientMessage(playerid, RED, "3D speedo meter Enabled.");
	}
	else
	{
        SendClientMessage(playerid, RED, "WUT :| you found bug.");
    }
	return 1;
}

CMD:stopfly(playerid,params[])
{
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "Nabayad savare mashin bashi!.");
	if(IsFlying[playerid] == false) return SendClientMessage(playerid, RED, "Shoma darhale parvaz kardan nisti!,Az /startfly estefade kon.");
	else if(PlayerInfo[playerid][aLevel] == 4)
	{
	    StopFly(playerid);
	    IsInGod{playerid} = 0;
		SetPlayerHealth(playerid, 100);
	    IsFlying[playerid] = false;
		return 1;
	}
	else
	{
        SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
    }
	return 1;
}

CMD:setscore(playerid, params[])
{
    new giveplayerid, score;
    if(sscanf(params, "ud", giveplayerid, score)) return SendClientMessage(playerid, RED, "[USAGE]: /setscore [name/id] [score]");
    if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
    if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, RED, "Player not found.");
    if(score < 0) return SendClientMessage(playerid, RED, "You cant set a players score below 0.");
    {
        SetPlayerScore(giveplayerid, score);
        format(fstr, sizeof(fstr),"Admin %s [%d] has set your score to %d.", GetName(playerid), playerid, score);
        SendClientMessage(giveplayerid, LIGHTGREEN, fstr);
        format(fstr, sizeof(fstr),"You have set %s [%d] score to %d", GetName(giveplayerid), giveplayerid, score);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] score to %d.", GetName(playerid), playerid, GetName(giveplayerid), giveplayerid, score);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
    return true;
}

CMD:disarm(playerid, params[])
{
    new id;
    if(sscanf(params, "u", id)) return SendClientMessage(playerid, RED, "[USAGE]: /disarm [name/id]");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "Player not found.");
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    if(PlayerInfo[id][aLevel] >=1 && PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED, "ERROR: Only Admin 4 can disarm other Admins.");
    {
        ResetPlayerWeapons(id);
        format(fstr, sizeof(fstr), "Admin %s [%d] has disarmed you.", GetName(playerid), playerid);
        SendClientMessage(id, RED, fstr);
        SendClientMessage(playerid, YELLOW, "Player disarmed.");
        new fstring[150];
        format(fstring, sizeof(fstring), "Admin %s [%d] has disarmed %s [%d]", GetName(playerid), playerid, GetName(id), id);
        SendAdminMessage(GREY,fstring);
        SetPlayerChatBubble(playerid, fstring, GREY, 50, 5000);
    }
    return true;
}

CMD:duty(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    if(PlayerInfo[playerid][aLevel] == 1 && IsOnduty{playerid} == 0)
	{
        IsOnduty{playerid} = 1;
        SetPVarInt(playerid, "pColor", GetPlayerColor(playerid));
        SetPVarInt(playerid, "pSkin", GetPlayerSkin(playerid));
        SetPlayerSkin(playerid, 294);
        SetPlayerColor(playerid,PURPLE);
        SetPlayerHealth(playerid, 99999);
        IsInGod{playerid} = 1;
        format(fstr, sizeof(fstr), "Trial Admin %s [%d] is now ON DUTY. Use /askadmin for assistance.", GetName(playerid), playerid);
        SendMessageToAll(PURPLE, fstr);
	}
	else if(PlayerInfo[playerid][aLevel] == 2 && IsOnduty{playerid} == 0)
	{
        IsOnduty{playerid} = 1;
        SetPVarInt(playerid, "pColor", GetPlayerColor(playerid));
        SetPVarInt(playerid, "pSkin", GetPlayerSkin(playerid));
        SetPlayerSkin(playerid, 294);
        SetPlayerColor(playerid,PURPLE);
        SetPlayerHealth(playerid, 99999);
        IsInGod{playerid} = 1;
        format(fstr, sizeof(fstr), "Server Admin %s [%d] is now ON DUTY. Use /askadmin for assistance.", GetName(playerid), playerid);
        SendMessageToAll(PURPLE, fstr);
	}
	else if(PlayerInfo[playerid][aLevel] == 3 && IsOnduty{playerid} == 0)
	{
        IsOnduty{playerid} = 1;
        SetPVarInt(playerid, "pColor", GetPlayerColor(playerid));
        SetPVarInt(playerid, "pSkin", GetPlayerSkin(playerid));
        SetPlayerSkin(playerid, 294);
        SetPlayerColor(playerid,PURPLE);
        SetPlayerHealth(playerid, 99999);
        IsInGod{playerid} = 1;
        format(fstr, sizeof(fstr), "Head Admin %s [%d] is now ON DUTY. Use /askadmin for assistance.", GetName(playerid), playerid);
        SendMessageToAll(PURPLE, fstr);
	}
	else if(PlayerInfo[playerid][aLevel] == 4 && IsOnduty{playerid} == 0)
	{
        IsOnduty{playerid} = 1;
        SetPVarInt(playerid, "pColor", GetPlayerColor(playerid));
        SetPVarInt(playerid, "pSkin", GetPlayerSkin(playerid));
        SetPlayerSkin(playerid, 294);
        SetPlayerColor(playerid,PURPLE);
        SetPlayerHealth(playerid, 99999);
        IsInGod{playerid} = 1;
        format(fstr, sizeof(fstr), "Owner %s [%d] is now ON DUTY. Use /askadmin for assistance.", GetName(playerid), playerid);
        SendMessageToAll(PURPLE, fstr);
	}
	else if(PlayerInfo[playerid][aLevel] == 1 && IsOnduty{playerid} == 1)
	{
        IsOnduty{playerid} = 0;
        SetPlayerSkin(playerid, GetPVarInt(playerid, "pSkin"));
		SetPlayerColor(playerid, GetPVarInt(playerid, "pColor"));
        SetPlayerHealth(playerid, 100);
        IsInGod{playerid} = 0;
        format(fstr, sizeof(fstr), "Trial Admin %s [%d] is now OFF DUTY. Use /(n)ew [msg] for assistance.", GetName(playerid), playerid);
        SendMessageToAll(PURPLE, fstr);
	}
	else if(PlayerInfo[playerid][aLevel] == 2 && IsOnduty{playerid} == 1)
	{
        IsOnduty{playerid} = 0;
        SetPlayerSkin(playerid, GetPVarInt(playerid, "pSkin"));
		SetPlayerColor(playerid, GetPVarInt(playerid, "pColor"));
        SetPlayerHealth(playerid, 100);
        IsInGod{playerid} = 0;
        format(fstr, sizeof(fstr), "Server Admin %s [%d] is now OFF DUTY. Use /(n)ew [msg] for assistance.", GetName(playerid), playerid);
        SendMessageToAll(PURPLE, fstr);
	}
	else if(PlayerInfo[playerid][aLevel] == 3 && IsOnduty{playerid} == 1)
	{
        IsOnduty{playerid} = 0;
        SetPlayerSkin(playerid, GetPVarInt(playerid, "pSkin"));
		SetPlayerColor(playerid, GetPVarInt(playerid, "pColor"));
        SetPlayerHealth(playerid, 100);
        IsInGod{playerid} = 0;
        format(fstr, sizeof(fstr), "Head Admin %s [%d] is now OFF DUTY. Use /(n)ew [msg] for assistance.", GetName(playerid), playerid);
        SendMessageToAll(PURPLE, fstr);
	}
	else if(PlayerInfo[playerid][aLevel] == 4 && IsOnduty{playerid} == 1)
	{
        IsOnduty{playerid} = 0;
        SetPlayerSkin(playerid, GetPVarInt(playerid, "pSkin"));
		SetPlayerColor(playerid, GetPVarInt(playerid, "pColor"));
        SetPlayerHealth(playerid, 100);
        IsInGod{playerid} = 0;
        format(fstr, sizeof(fstr), "Owner %s [%d] is now OFF DUTY. Use /(n)ew [msg] for assistance.", GetName(playerid), playerid);
        SendMessageToAll(PURPLE, fstr);
	}
	SetPlayerWantedLevel(playerid,0);
	return true;
}

CMD:admins(playerid, params[])
{
    new OnlineAdmins = 0;
    new Rank[24];
    if(IsPlayerAdmin(playerid) || PlayerInfo[playerid][aLevel] == 4)
    {
    foreach(new i : Player)
    {
        if(IsPlayerConnected(i))
        {
		    if(PlayerInfo[i][aLevel] >= 1)
            {
		        {
	 		    	switch(PlayerInfo[i][aLevel])
		        	{
				    	case 1:
				    	{
				        	Rank = "Trial Admin";
				    	}
                    	case 2:
                    	{
                        	Rank = "Server Admin";
                    	}
                    	case 3:
                    	{
                        	Rank = "Head Admin";
                    	}
				    	case 4:
				    	{
				        	Rank = "Owner";
				    	}
					}
					if(IsAdminUnderCover{i} == true)
     	            {
  	    	            format(fstr, sizeof(fstr),"%s %s [%d] - Level: %d - UnderCover", Rank, GetName(i), i, PlayerInfo[i][aLevel]);
   	                }
		            else
					{
                        format(fstr, sizeof(fstr),"%s %s [%d] - Level: %d", Rank, GetName(i), i, PlayerInfo[i][aLevel]);
					}
                	SendClientMessage(playerid, LIGHTBLUE, fstr);
					OnlineAdmins++;
				}
			}
        }
    }
    }
    else
    {
    foreach(new i : Player)
    {
        if(IsPlayerConnected(i))
        {
		    if(PlayerInfo[i][aLevel] >= 1)
            {
                if(IsAdminUnderCover{i} == true)
     	        {
  	    	        continue;
   	            }
		        else
		        {
	 		    	switch(PlayerInfo[i][aLevel])
		        	{
				    	case 1:
				    	{
				        	Rank = "Trial Admin";
				    	}
                    	case 2:
                    	{
                        	Rank = "Server Admin";
                    	}
                    	case 3:
                    	{
                        	Rank = "Head Admin";
                    	}
				    	case 4:
				    	{
				        	Rank = "Owner";
				    	}
					}
					format(fstr, sizeof(fstr),"%s %s [%d] - Level: %d", Rank, GetName(i), i, PlayerInfo[i][aLevel]);
                	SendClientMessage(playerid, LIGHTBLUE, fstr);
					OnlineAdmins++;
				}
			}
        }
    }
    }
    if(OnlineAdmins == 0)
    {
        SendClientMessage(playerid, LIGHTBLUE, "Shoma mitavanid list kamel Admin haye Server ACNR ra dar just-samp.rozblog.com bebinid.");
	}
	new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /admins", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:celllist(playerid, params[])
{
    new Inmates = 0;
    if(IsInCellCP{playerid} == false) return SendClientMessage(playerid, RED, "You must be at a jail cell to use this command.");
    if(IsInCellCP1{playerid} == true)
    {
    	foreach(new i : Player)
    	{
        	if(IsPlayerConnected(i))
        	{
		    	if(IsJailed{i} == true && IsInCell{i} == 1)
            	{
					format(fstr, sizeof(fstr),"Cell: 1 - Prisioner: %s [%d] - Inmate ID: %d", GetName(i), i, InMateID[i]);
                	SendClientMessage(playerid, LIGHTBLUE, fstr);
					Inmates++;
            	}
	    	}
    	}
    	if(Inmates == 0)
    	{
        	SendClientMessage(playerid, RED , "There are no prisioners in this cell.");
		}
	}
	else if(IsInCellCP2{playerid} == true)
    {
    	foreach(new i : Player)
    	{
        	if(IsPlayerConnected(i))
        	{
		    	if(IsJailed{i} == true && IsInCell{i} == 2)
            	{
					format(fstr, sizeof(fstr),"Cell: 2 - Prisioner: %s [%d] - Inmate ID: %d", GetName(i), i, InMateID[i]);
                	SendClientMessage(playerid, LIGHTBLUE, fstr);
					Inmates++;
            	}
	    	}
    	}
    	if(Inmates == 0)
    	{
        	SendClientMessage(playerid, RED , "There are no prisioners in this cell.");
		}
	}
	else if(IsInCellCP3{playerid} == true)
    {
    	foreach(new i : Player)
    	{
        	if(IsPlayerConnected(i))
        	{
		    	if(IsJailed{i} == true && IsInCell{i} == 3)
            	{
					format(fstr, sizeof(fstr),"Cell: 3 - Prisioner: %s [%d] - Inmate ID: %d", GetName(i), i, InMateID[i]);
                	SendClientMessage(playerid, LIGHTBLUE, fstr);
					Inmates++;
            	}
	    	}
    	}
    	if(Inmates == 0)
    	{
        	SendClientMessage(playerid, RED , "There are no prisioners in this cell.");
		}
	}
	else if(IsInCellCP4{playerid} == true)
    {
    	foreach(new i : Player)
    	{
        	if(IsPlayerConnected(i))
        	{
		    	if(IsJailed{i} == true && IsInCell{i} == 4)
            	{
					format(fstr, sizeof(fstr),"Cell: 4 - Prisioner: %s [%d] - Inmate ID: %d", GetName(i), i, InMateID[i]);
                	SendClientMessage(playerid, LIGHTBLUE, fstr);
					Inmates++;
            	}
	    	}
    	}
    	if(Inmates == 0)
    	{
        	SendClientMessage(playerid, RED , "There are no prisioners in this cell.");
		}
	}
	else if(IsInCellCP5{playerid} == true)
    {
    	foreach(new i : Player)
    	{
        	if(IsPlayerConnected(i))
        	{
		    	if(IsJailed{i} == true && IsInCell{i} == 5)
            	{
					format(fstr, sizeof(fstr),"Cell: 5 - Prisioner: %s [%d] - Inmate ID: %d", GetName(i), i, InMateID[i]);
                	SendClientMessage(playerid, LIGHTBLUE, fstr);
					Inmates++;
            	}
	    	}
    	}
    	if(Inmates == 0)
    	{
        	SendClientMessage(playerid, RED , "There are no prisioners in this cell.");
		}
	}
	else if(IsInCellCP6{playerid} == true)
    {
    	foreach(new i : Player)
    	{
        	if(IsPlayerConnected(i))
        	{
		    	if(IsJailed{i} == true && IsInCell{i} == 6)
            	{
					format(fstr, sizeof(fstr),"Cell: 6 - Prisioner: %s [%d] - Inmate ID: %d", GetName(i), i, InMateID[i]);
                	SendClientMessage(playerid, LIGHTBLUE, fstr);
					Inmates++;
            	}
	    	}
    	}
    	if(Inmates == 0)
    	{
        	SendClientMessage(playerid, RED , "There are no prisioners in this cell.");
		}
	}
    return true;
}

CMD:viplist(playerid, params[])
{
    new OnlineVIPs = 0;
    new Rank[24];
    foreach(new i : Player)
    {
        if(IsPlayerConnected(i))
        {
		    if(PlayerInfo[i][vLevel] >= 1)
            {
	 		    switch(PlayerInfo[i][vLevel])
		        {
				    case 1:
				    {
				        Rank = "Bronze VIP";
				    }
                    case 2:
                    {
                        Rank = "Silver VIP";
                    }
                    case 3:
                    {
                        Rank = "Gold VIP";
                    }
				    case 4:
				    {
				        Rank = "Platinum VIP";
				    }
				}
				format(fstr, sizeof(fstr), "%s %s [%d] - Level: %d", Rank, GetName(i), i, PlayerInfo[i][vLevel]);
                SendClientMessage(playerid, LIGHTBLUE, fstr);
				OnlineVIPs++;
			}
		}
    }
    if(OnlineVIPs == 0)
    {
        SendClientMessage(playerid, RED, "Shoma mitavanid list kamel VIP haye Server ACNR ra dar just-samp.rozblog.com bebinid.");
	}
	new astring[100];
    format(astring,sizeof(astring), "%s [%d] typed: /viplist", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:stats(playerid, params[])
{
    new getstatsid;
    if(!sscanf(params, "u", getstatsid))
	{
	    if(IsPlayerConnected(getstatsid))
	    {
	    	if(IsLoggedIn{getstatsid} == 1)
	    	{
				new sciss[5], lock[5], help[5], hhelp[5];

				if(PlayerInfo[getstatsid][pScissors] == 1)
				{
				    format(sciss, sizeof(sciss), "Yes");
				}
				else if(PlayerInfo[getstatsid][pScissors] == 0)
				{
				    format(sciss, sizeof(sciss), "No");
				}

				if(PlayerInfo[getstatsid][vLock] == 1)
				{
				    format(lock, sizeof(lock), "Yes");
				}
				else if(PlayerInfo[getstatsid][vLock] == 0)
				{
				    format(lock, sizeof(lock), "No");
				}

				if(PlayerInfo[getstatsid][Helper] == 1)
				{
				    format(help, sizeof(help), "Yes");
				}
				else if(PlayerInfo[getstatsid][Helper] == 0)
				{
				    format(help, sizeof(help), "No");
				}

				if(PlayerInfo[getstatsid][hHelper] == 1)
				{
				    format(hhelp, sizeof(hhelp), "Yes");
				}
				else if(PlayerInfo[getstatsid][hHelper] == 0)
				{
				    format(hhelp, sizeof(hhelp), "No");
				}

        		new line1[200], line2[200], line3[200], line4[200], lines[1000], Name[30];
        		format(line1, sizeof(line1), "[Name]: %s [%d] [Score]: %d [Holding]: $%d [Kills]: %d [Deaths]: %d [Holdups]: %d [Crimes]: %d", GetName(getstatsid), getstatsid, GetPlayerScore(getstatsid), GetPlayerCash(getstatsid), PlayerInfo[getstatsid][pKills], PlayerInfo[getstatsid][pDeaths], PlayerInfo[getstatsid][pHoldups], PlayerInfo[getstatsid][pCrimes]);
				format(line2, sizeof(line2), "[Times Fined]: %d [Times Arrested]: %d [Takedowns]: %d [Issues]: %d [Joins]: %d [Warns]: %d [Kicks]: %d", PlayerInfo[getstatsid][pFined], PlayerInfo[getstatsid][pArrests], PlayerInfo[getstatsid][pTakedowns], PlayerInfo[getstatsid][pTickets], PlayerInfo[getstatsid][pJoins], PlayerInfo[getstatsid][pWarns], PlayerInfo[getstatsid][pKicks]);
				format(line3, sizeof(line3), "[Rope]: %d [Scissors]: %s [Cans]: %d [Medikits]: %d [vLock]: %s [Admin]: %d [VIP]: %d [Helper]: %s [Head Helper]: %s", PlayerInfo[getstatsid][pRope], sciss, PlayerInfo[getstatsid][pPaintCan], PlayerInfo[getstatsid][pKits], lock, PlayerInfo[getstatsid][aLevel], PlayerInfo[getstatsid][vLevel], help, hhelp);
				format(line4, sizeof(line4), "[Materials]: %d [Credit]: $%d [Debt Owing]: $%d [Vehicles]: %d [Houses]: %d [Businesses]: %d", PlayerInfo[getstatsid][pMaterials], BankInfo[getstatsid][Credit], BankInfo[getstatsid][Debt], GetPlayerVehicles{getstatsid}, GetOwnedHouses(getstatsid), GetPlayerOwnedBusinesses(getstatsid));
				format(lines, sizeof(lines), "{FFFFFF}%s\n%s\n%s\n%s", line1, line2, line3, line4);
				format(Name, sizeof(Name), "%s Stats", GetName(getstatsid));
				ShowPlayerDialog(playerid, STATS_LIST, DIALOG_STYLE_MSGBOX, Name, lines, "OK", "");
            }
            else
            {
                SendClientMessage(playerid, RED, "Player not logged in.");
            }
        }
        else
        {
            SendClientMessage(playerid, RED, "Player not found.");
        }
        return true;
	}
	else
	{
		new sciss[5], lock[5], help[5], hhelp[5];

		if(PlayerInfo[playerid][pScissors] == 1)
		{
			format(sciss, sizeof(sciss), "Yes");
		}
		else if(PlayerInfo[playerid][pScissors] == 0)
		{
			format(sciss, sizeof(sciss), "No");
		}

		if(PlayerInfo[playerid][vLock] == 1)
		{
			format(lock, sizeof(lock), "Yes");
		}
		else if(PlayerInfo[playerid][vLock] == 0)
		{
			format(lock, sizeof(lock), "No");
		}

		if(PlayerInfo[playerid][Helper] == 1)
		{
			format(help, sizeof(help), "Yes");
		}
		else if(PlayerInfo[playerid][Helper] == 0)
		{
			format(help, sizeof(help), "No");
		}

		if(PlayerInfo[playerid][hHelper] == 1)
		{
			format(hhelp, sizeof(hhelp), "Yes");
		}
		else if(PlayerInfo[playerid][hHelper] == 0)
		{
			format(hhelp, sizeof(hhelp), "No");
		}

        new line1[200], line2[200], line3[200], line4[200], lines[1000], Name[30];
   		format(line1, sizeof(line1), "[Name]: %s [%d] [Score]: %d [Holding]: $%d [Kills]: %d [Deaths]: %d [Holdups]: %d [Crimes]: %d", GetName(playerid), playerid, GetPlayerScore(playerid), GetPlayerCash(playerid), PlayerInfo[playerid][pKills], PlayerInfo[playerid][pDeaths], PlayerInfo[playerid][pHoldups], PlayerInfo[playerid][pCrimes]);
        format(line2, sizeof(line2), "[Times Fined]: %d [Times Arrested]: %d [Takedowns]: %d [Issues]: %d [Joins]: %d [Warns]: %d [Kicks]: %d", PlayerInfo[playerid][pFined], PlayerInfo[playerid][pArrests], PlayerInfo[playerid][pTakedowns], PlayerInfo[playerid][pTickets], PlayerInfo[playerid][pJoins], PlayerInfo[playerid][pWarns], PlayerInfo[playerid][pKicks]);
        format(line3, sizeof(line3), "[Rope]: %d [Scissors]: %s [Cans]: %d [Medikits]: %d [vLock]: %s [Admin]: %d [VIP]: %d [Helper]: %s [Head Helper]: %s", PlayerInfo[playerid][pRope], sciss, PlayerInfo[playerid][pPaintCan], PlayerInfo[playerid][pKits], lock, PlayerInfo[playerid][aLevel], PlayerInfo[playerid][vLevel], help, hhelp);
        format(line4, sizeof(line4), "[Materials]: %d [Credit]: $%d [Debt Owing]: $%d [Vehicles]: %d [Houses]: %d [Businesses]: %d", PlayerInfo[playerid][pMaterials], BankInfo[playerid][Credit], BankInfo[playerid][Debt], GetPlayerVehicles{playerid}, GetOwnedHouses(playerid), GetPlayerOwnedBusinesses(playerid));
        format(lines, sizeof(lines), "{FFFFFF}%s\n%s\n%s\n%s", line1, line2, line3, line4);
		format(Name, sizeof(Name), "%s Stats", GetName(playerid));
		ShowPlayerDialog(playerid, STATS_LIST, DIALOG_STYLE_MSGBOX, Name, lines, "OK", "");
	}
	return true;
}

CMD:setskin(playerid, params[])
{
	new setid, skinid;
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
	if(sscanf(params, "ud", setid, skinid)) return SendClientMessage(playerid, RED, "[USAGE]: /setskin [name/id] [skinid]");
	if(!IsPlayerConnected(setid)) return SendClientMessage(playerid, RED, "Player not found.");
    //if(skinid < 0 || skinid > 311) return SendClientMessage(playerid, RED, "Invalid skin id.");
    {
		SetPlayerSkin(setid, skinid);
		format(fstr, sizeof(fstr), "Admin %s [%d] has set your skin to id %d.", GetName(playerid), playerid, skinid);
        SendClientMessage(setid, LIGHTGREEN, fstr);
		format(fstr, sizeof(fstr), "You have set %s [%d] skin to id %d.", GetName(setid), setid, skinid);
        SendClientMessage(playerid, YELLOW, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] skin to id %d.", GetName(playerid), playerid, GetName(setid), setid, skinid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
	return true;
}

CMD:settime(playerid, params[])
{
	new sazman;
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
	if(sscanf(params, "d", sazman)) return SendClientMessage(playerid, RED, "[USAGE]: /settime [saat]");
    if(sazman < 0 || sazman > 23) return SendClientMessage(playerid, RED, "saat bayad beyne 0 ta 23 bashad.");
    {
		SetWorldTime(sazman);
		format(fstr, sizeof(fstr), "Admin %s [%d] has set WorldTime to %d.", GetName(playerid), playerid, sazman);
        SendMessageToAll(LIGHTGREEN, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set WorldTime to %d.", GetName(playerid), playerid, sazman);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
	return true;
}

CMD:setweather(playerid, params[])
{
	new weatid;
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
	if(sscanf(params, "d", weatid)) return SendClientMessage(playerid, RED, "[USAGE]: /setweater [id]");
    if(weatid < 0 || weatid > 45) return SendClientMessage(playerid, RED, "id bayad beyne 0 ta 45 bashad.");
    {
		SetWeather(weatid);
		format(fstr, sizeof(fstr), "Admin %s [%d] has set Weather to %d.", GetName(playerid), playerid, weatid);
        SendMessageToAll(LIGHTGREEN, fstr);
        new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] has set Weater to %d.", GetName(playerid), playerid, weatid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
	return true;
}

CMD:vskin(playerid, params[])
{
	new skinid;
    if(PlayerInfo[playerid][vLevel] < 3) return SendClientMessage(playerid, RED, "Only vip level 3+ can use this command.");
	if(sscanf(params, "d", skinid)) return SendClientMessage(playerid, RED, "[USAGE]: /vskin [skinid]");
    if(skinid < 0 || skinid > 311) return SendClientMessage(playerid ,RED, "Invalid skin id.");
    {
		SetPlayerSkin(playerid, skinid);
		format(fstr, sizeof(fstr), "You have set your skin to id %d.", skinid);
        SendClientMessage(playerid, LIGHTGREEN, fstr);
		//
		new mstring[150];
		format(mstring, sizeof(mstring), "VIP %s has just set there skin using /vskin...", GetName(playerid));
        ProxDetector(20.0, playerid, mstring, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN);
        //
		new astring[100];
        format(astring, sizeof(astring), "%s [%d] typed: /vskin %d", GetName(playerid), playerid, skinid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
	return true;
}

CMD:force(playerid, params[])
{
	new forceid;
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	if(sscanf(params, "d", forceid)) return SendClientMessage(playerid, RED, "[USAGE]: /force [name/id]");
	if(!IsPlayerConnected(forceid)) return SendClientMessage(playerid, RED, "Player not found.");
    if(IsPlayerNPC(forceid)) return SendClientMessage(playerid, RED, "Shoma nemitavanid Elvis ra force konid!.");
    {
		SetPlayerHealth(forceid,0);
		ForceClassSelection(forceid);
		format(fstr, sizeof(fstr), "Admin %s [%d] has forced you to class selection.", GetName(playerid), playerid);
        SendClientMessage(forceid, RED, fstr);
		SendClientMessage(playerid, YELLOW, "Player forced.");
		new astring[100];
        format(astring, sizeof(astring), "Admin %s [%d] forced %s [%d] to class selection.", GetName(playerid), playerid, GetName(forceid), forceid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    }
	return true;
}

CMD:exitat(playerid, params[])
{
    if(hasenteredtower{playerid} == 0) return SendClientMessage(playerid, RED, "You not in the admin tower.");
    if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command while you are jailed.");
    if(PlayerInfo[playerid][aLevel] >= 1)
    {
        SetPlayerPos(playerid,2143.2566,2425.5498,65.2773);
        SetPlayerFacingAngle(playerid,89.2129);
        hasenteredtower{playerid} = 0;
        KillTimer(attimer{playerid});
	}
	else if(PlayerInfo[playerid][vLevel] >= 1)
    {
        SetPlayerPos(playerid,2143.2566,2425.5498,65.2773);
        SetPlayerFacingAngle(playerid,89.2129);
        hasenteredtower{playerid} = 0;
        KillTimer(attimer{playerid});
	}
	else if(PlayerInfo[playerid][hHelper] == 1)
    {
        SetPlayerPos(playerid,2143.2566,2425.5498,65.2773);
        SetPlayerFacingAngle(playerid,89.2129);
        hasenteredtower{playerid} = 0;
        KillTimer(attimer{playerid});
	}
	else
	{
	    SendClientMessage(playerid, RED, "Only admin/vip/head helper level 1+ can use this command.");
	}
	return true;
}

CMD:gotoat(playerid, params[])
{
    if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command while you are jailed.");
    if(PlayerInfo[playerid][aLevel] >= 1)
	{
        SetPlayerPos(playerid,2150.0178,2425.3809,65.2773);
        SetPlayerFacingAngle(playerid,265.2805);
        hasenteredtower{playerid} = 1;
        SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		IsPlayerInArena{playerid} = false;
		attimer{playerid} = SetTimerEx("DetectATDeparture", 5000, true, "d", playerid);
		SendClientMessage(playerid, LIGHTGREEN, "Welcome to the Admin Tower, use /(open/close)hanger to toggle the hanger. Use /exitat at anytime.");
    	new astring[100];
        format(astring, sizeof(astring), "%s [%d] typed: /gotoat", GetName(playerid), playerid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
 	}
 	else if(IsPlayerAdmin(playerid))
 	{
        SetPlayerPos(playerid,2150.0178,2425.3809,65.2773);
        SetPlayerFacingAngle(playerid,265.2805);
        hasenteredtower{playerid} = 1;
        SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		IsPlayerInArena{playerid} = false;
		attimer{playerid} = SetTimerEx("DetectATDeparture", 5000, true, "d", playerid);
		SendClientMessage(playerid, LIGHTGREEN, "Welcome to the Admin Tower, use /(open/close)hanger to toggle the hanger. Use /exitat at anytime.");
 	}
 	else
 	{
        return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
 	}
	return true;
}

CMD:gotocells(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command while you are jailed.");
    {
        SetPlayerInterior(playerid, 3);
    	SetPlayerPos(playerid, 200.6972, 168.2653, 1003.0234);
    	SetPlayerFacingAngle(playerid, 89.0391);
		SetPlayerVirtualWorld(playerid, 0);
		IsPlayerInArena{playerid} = false;
	}
	new astring[100];
    format(astring, sizeof(astring), "%s [%d] typed: /gotocells", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:vbike(playerid, params[])
{
	new Float:x, Float:y, Float:z, Float:ang;
    if(PlayerInfo[playerid][vLevel] < 3) return SendClientMessage(playerid,RED,"Only admin vip 3+ can use this command.");
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "Your already in a vehicle.");
    {
        GetPlayerPos(playerid, x, y, z);
        GetPlayerFacingAngle(playerid, ang);
		new vehicle = CreateVehicle(522, x, y, z, ang, 0, 3, -1);
        PutPlayerInVehicle(playerid, vehicle, 0);
        SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(vehicle, GetPlayerInterior(playerid));
		ChangeVehicleColor(vehicle,0,3);
		vipvehicle[vehicle] = 1;
        SendClientMessage(playerid,GREEN, "NRG-500 SPAWNED");
		SendClientMessage(playerid,GREEN, "VIP NOTIFICATION: When you exit the VIP Vehicle, it will dissapear.");
		new astring[100], aName[24];
	    GetPlayerName(playerid, (aName), sizeof(aName));
	    format(astring, sizeof(astring), "%s [%d] Typed: /vbike", aName, playerid);
	    SendAdminMessage(GREY, astring);
	    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	return true;
}

CMD:vcar(playerid, params[])
{
	new Float:x, Float:y, Float:z, Float:ang;
    if(PlayerInfo[playerid][vLevel] < 2) return SendClientMessage(playerid,RED,"Only admin vip 2+ can use this command.");
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "Your already in a vehicle.");
    {
        GetPlayerPos(playerid, x, y, z);
        GetPlayerFacingAngle(playerid, ang);
		new vehicle = CreateVehicle(411, x, y, z, ang, 0, 3, -1);
        PutPlayerInVehicle(playerid, vehicle, 0);
        SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(vehicle, GetPlayerInterior(playerid));
		ChangeVehicleColor(vehicle,0,3);
		vipvehicle[vehicle] = 1;
        SendClientMessage(playerid,GREEN, "INF SPAWNED");
		SendClientMessage(playerid,GREEN, "VIP NOTIFICATION: When you exit the VIP Vehicle, it will dissapear.");
		new astring[100], aName[24];
	    GetPlayerName(playerid, (aName), sizeof(aName));
	    format(astring, sizeof(astring), "%s [%d] Typed: /vcar", aName, playerid);
	    SendAdminMessage(GREY, astring);
	    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	return true;
}

CMD:car(playerid, params[])
{
	new veh, Float:x, Float:y, Float:z, Float:ang;
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
	if(sscanf(params, "d", veh)) return SendClientMessage(playerid,RED, "[USAGE]: /car [vehicle type]");
    if(veh < 400 || veh > 611) return SendClientMessage(playerid, RED, "Invalid vehicle type.");
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "Your already in a vehicle.");
    if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command while you are jailed.");
    {
        GetPlayerPos(playerid, x, y, z);
        GetPlayerFacingAngle(playerid, ang);
		new vehicle = CreateVehicle(veh, x, y, z, ang, 6, 3, -1);
        PutPlayerInVehicle(playerid, vehicle, 0);
        SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(vehicle, GetPlayerInterior(playerid));
		ChangeVehicleColor(vehicle,6,3);
		vipvehicle[vehicle] = 1;
		SendClientMessage(playerid,GREEN, "NOTIFICATION: When you exit the Vehicle, it will dissapear.");
		new astring[100];
		format(astring, sizeof(astring), "Admin %s [%d] has spawned vehicle id %d.", GetName(playerid), playerid, veh);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	return true;
}

CMD:drag(playerid, params[])
{
		new targetid;
        new Float:x, Float:y, Float:z;
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,RED,"Shoma bayad dar mashin bashid");
        if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid,RED,"player is not connected");
        if(targetid == INVALID_PLAYER_ID) return SendClientMessage(playerid,RED,"Invalid playerid");
	    if(PlayerInfo[playerid][aLevel] <= 0) return SendClientMessage(playerid,RED,"Error: You are not admin.");
		if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, RED, "[USAGE]: /drag [PlayerID]");
		if(targetid == playerid) return SendClientMessage(playerid, RED, "Shoma nemitavanid khod ra drag konid.");
		{
            GetPlayerPos(playerid,x,y,z);
            if(IsPlayerInRangeOfPoint(targetid, 20.0, x, y, z))
	    	{
	    	    new carid = GetPlayerVehicleID(playerid);
           	    PutPlayerInVehicle(targetid,carid,1);
	    	    new sttr[256];
	    	    format(sttr,256,"Admin %s drags you to his/her vehicle.",GetName(playerid));
	    	    SendClientMessage(targetid,RED,sttr);
	    	    SendClientMessage(playerid,GREEN,"Dragged.");
	    	}
	    	else
	    	{
                SendClientMessage(playerid, RED, "Player is not near you.");
	    	}
		}
	    return 1;
}

CMD:gcar(playerid, params[])
{
	new veh, playa, Float:x, Float:y, Float:z, Float:ang;
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid,RED,"Only admin level 2+ can use this command.");
	if(sscanf(params, "ud", playa, veh)) return SendClientMessage(playerid,RED, "[USAGE]: /gcar [playerid] [vehicle type]");
	if(IsPlayerNPC(playa)) return SendClientMessage(playerid,RED,"Shoma nemitavanid be Elvis mashin bedahid.");
    if(veh < 400 || veh > 611) return SendClientMessage(playerid, RED, "Invalid vehicle type.");
    if(IsPlayerInAnyVehicle(playa)) return SendClientMessage(playerid, RED, "player morede nazar already in a vehicle.");
    if(playa == INVALID_PLAYER_ID) return SendClientMessage(playerid,RED,"Invalid playerid");
	if(playerid == playa) return SendClientMessage(playerid, RED, "az cmd /car baraye mashin dadan be khodetan estefade konid");
    {
        GetPlayerPos(playa, x, y, z);
        GetPlayerFacingAngle(playa, ang);
		new vehicle = CreateVehicle(veh, x, y, z, ang, 0, 1, -1);
        PutPlayerInVehicle(playa, vehicle, 0);
        SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playa));
		LinkVehicleToInterior(vehicle, GetPlayerInterior(playa));
		ChangeVehicleColor(vehicle,0,1);
		vipvehicle[vehicle] = 1;
		SendClientMessage(playa,GREEN, "NOTIFICATION: When you exit the Vehicle, it will dissapear.");
		new astring1[100], astring2[100];
		format(astring1, sizeof(astring1), "Admin %s [%d] has give vehicle id %d to player %s [%d].", GetName(playerid), playerid, veh, GetName(playa), playa);
        SendAdminMessage(GREY, astring1);
        SetPlayerChatBubble(playerid, astring1, GREY, 50, 5000);
        format(astring2, sizeof(astring2), "Admin %s [%d] has give you vehicle id %d.", GetName(playerid), playerid, veh);
        SendClientMessage(playa,ORANGE, astring2);
	}
	return true;
}

CMD:color(playerid, params[])
{
if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
new vcolorl1, vcolor2;
if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,RED,"Error: You are not in any vehicle.");
if(sscanf(params, "dd", vcolorl1, vcolor2)) return SendClientMessage(playerid,RED, "[USAGE]: /color [Color1] [Color2]");
if(vcolorl1 < 0 || vcolorl1 > 255) return SendClientMessage(playerid,RED,"ColorIDs must be between 0 and 255");
if(vcolor2 < 0 || vcolor2 > 255) return SendClientMessage(playerid,RED,"ColorIDs must be between 0 and 255");
ChangeVehicleColor(GetPlayerVehicleID(playerid), vcolorl1, vcolor2);
SendClientMessage(playerid,YELLOW,"The color of the vehicle has been changed.");
new astring[100], aName[24];
GetPlayerName(playerid, (aName), sizeof(aName));
format(astring, sizeof(astring), "%s [%d] Typed: /color", aName, playerid);
SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
return 1;
}

CMD:vcol(playerid, params[])
{
if(PlayerInfo[playerid][vLevel] < 1) return SendClientMessage(playerid,RED,"Only admin vip 1+ can use this command.");
new vcol1, vcol2;
if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,RED,"Error: You are not in any vehicle.");
if(sscanf(params, "dd", vcol1, vcol2)) return SendClientMessage(playerid,RED, "[USAGE]: /vcol [Color1] [Color2]");
if(vcol1 < 0 || vcol1 > 255) return SendClientMessage(playerid,RED,"ColorIDs must be between 0 and 255");
if(vcol2 < 0 || vcol2 > 255) return SendClientMessage(playerid,RED,"ColorIDs must be between 0 and 255");
ChangeVehicleColor(GetPlayerVehicleID(playerid), vcol1, vcol2);
SendClientMessage(playerid,YELLOW,"The color of the vehicle has been changed.");
new astring[100], aName[24];
GetPlayerName(playerid, (aName), sizeof(aName));
format(astring, sizeof(astring), "%s [%d] Typed: /vcol", aName, playerid);
SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
return 1;
}

CMD:bug(playerid, params[])
{
new bug[135];
if(sscanf(params,"s[100]",bug)) return SendClientMessage(playerid,RED,"[USAGE]: /bug [gozaresh]");
{
new string[200];
format(string, sizeof(string), "(( Bug Report: %s ))" , bug);
SendHelpMessage(LIGHTBLUE, string);
SendClientMessage(playerid,ORANGE,"Report ersal shod kheyli mamnonim az gozareshe bug.");
}
return 1;
}

CMD:sn(playerid, params[])
{
if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
new result[100];
if(sscanf(params, "s[100]", result)) return SendClientMessage(playerid, RED, "[USAGE]: /sn [text]");
{
new string[200];
format(string, sizeof(string), "{466FC0}(( ServerNews{FFFFFF}: %s {466FC0}))" , result);
SendMessageToAll(RED,string);
new astring[250];
format(astring, sizeof(astring), "Admin %s [%d] sayed: %s ",GetName(playerid), playerid,result);
SendAdminMessage(GREY, astring);
SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
}
return 1;
}

CMD:w(playerid, params[])
{
	    if(IsPlayerConnected(playerid))
	    {
   		    new giveplayerid, result[64];
			if(sscanf(params, "us[64]", giveplayerid, result)) return SendClientMessage(playerid, RED, "[USAGE]: /w(hisper) [player id] [text]");
            if(giveplayerid == playerid) return SendClientMessage(playerid,RED,"You cant Whisper yourself");
            if(GetPlayerScore(playerid) < 5) return SendClientMessage(playerid, RED, "score shoma kamtar az 5 ast!");
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        new Float:x, Float:y, Float:z;
           			GetPlayerPos(giveplayerid,x,y,z);
			        if(IsPlayerInRangeOfPoint(playerid, 5.0, x, y, z))
			        {
          	            new placeholder;
	                    for(new i = 0; i < sizeof(BadWords); i++)
	                    {
                            placeholder = strfind(result,BadWords[i],true);
	                        if(placeholder != -1)
                            {
	                            for(new r = placeholder; r < placeholder + strlen(BadWords[i]); r++)
                                {
	                                result[r] = '*';
	                            }
	                        }
	                    }
						new string[150];
						format(string, sizeof(string), "Whispers from %s: %s",GetName(playerid), result);
						SendClientMessage(giveplayerid, YELLOW, string);
	                    PlayerPlaySound(giveplayerid, 1085, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "Whispers to %s: %s",GetName(giveplayerid), result);
						SendClientMessage(playerid, YELLOW, string);
						format(string, sizeof(string), "Whisper From %s to %s: %s",GetName(playerid), GetName(giveplayerid), result);
                        SendOwnerMessage(GREY, string);
                        SetPlayerChatBubble(playerid, result, YELLOW, 50, 5000);
						return 1;
					}
					else
					{
					    SendClientMessage(playerid,  RED, "Player is not near you !");
					    return 1;
					}
				}
			}
			else
			{
					new string[100];
					format(string, sizeof(string), "that player is offline.");
					SendClientMessage(playerid, RED, string);
			}
		}
		return 1;
}

CMD:whisper(playerid, params[]) return cmd_w(playerid, params);

CMD:fsay(playerid, params[])
{
new playerfu, result[150];
if(sscanf(params, "us[150]", playerfu, result)) return SendClientMessage(playerid, RED, "[USAGE]: /fsay [player id] [text]");
if(!IsPlayerConnected(playerfu)) return SendClientMessage(playerid,RED,"Playere Morede nazar peyda nashod!.");
if(PlayerInfo[playerid][aLevel] == 4)
{
new tstr[300];
format(tstr, sizeof(tstr), "%s: {FFFFFF}%s", GetName(playerfu), result);
SendMessageToAll(GetPlayerColor(playerfu), tstr);
SetPlayerChatBubble(playerfu, result, WHITE, 50, 5000);
printf("fsay: from %s bejayer %s : %s",GetName(playerid),GetName(playerfu),result);
}
else if(IsPlayerAdmin(playerid))
{
new tstr[300];
format(tstr, sizeof(tstr), "%s: {FFFFFF}%s", GetName(playerfu), result);
SendMessageToAll(GetPlayerColor(playerfu), tstr);
SetPlayerChatBubble(playerfu, result, WHITE, 50, 5000);
printf("fsay: from %s bejayer %s : %s",GetName(playerid),GetName(playerfu),result);
}
else
{
return SendClientMessage(playerid, RED, "Error: admin level shoma kamtar az 4 ast.");
}
return 1;
}

CMD:jail(playerid,params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid,RED,"Faghat admin lvl +2 mitavanad az in cmd estefade konad.");
    {
        new pid, reson[30];
        if(sscanf(params, "us[30]", pid, reson)) return SendClientMessage(playerid, RED, "[USAGE]: /jail [id/name] [reason]");
        {
			if(IsPlayerNPC(pid)) return SendClientMessage(playerid,RED,"Shoma nemitavanid Elvis ra zendani konid.");
	        if(strlen(reson) < 0 || strlen(reson) > 30) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
            if(IsJailed{pid} == true || IsCaged{pid} == true) return SendClientMessage(playerid,RED,"Player morede nazar zendani ast.");
            if(!IsPlayerConnected(pid)) return SendClientMessage(playerid, RED, "Player not found.");
			{
                SendPlayerToJail(pid);
                format(fstr, sizeof(fstr), "Admin %s [%d] has jailed %s [%d] - Dalil: %s", GetName(playerid), playerid, GetName(pid), pid, reson);
	 	        SendMessageToAll(RED, fstr);
			}
		}
	}
	return true;
}

CMD:cage(playerid, params[])
{
	new cageid, reason[24], secs;
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
	if(sscanf(params, "uds[24]", cageid, secs, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /cage [name/id] [seconds] [reason]");
	if(!IsPlayerConnected(cageid)) return SendClientMessage(playerid, RED, "Player not found.");
	if(strlen(reason) < 0 || strlen(reason) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
	if(IsPlayerNPC(cageid)) return SendClientMessage(playerid, RED, "Shoma nemitavanid Elvis ra be ghafas biandazid.");
    if(IsJailed{cageid} == true || IsCaged{cageid} == true) return SendClientMessage(playerid,RED,"Player morede nazar zendani ast.");
    if(cageid == playerid) return SendClientMessage(playerid, RED, "Shoma nemitavanid khod ra be ghafas biandazid.");
    {
		SendPlayerToCage(cageid, secs);
		format(fstr, sizeof(fstr), "Admin %s [%d] has caged %s [%d] for %d secs - Dalil: %s", GetName(playerid), playerid, GetName(cageid), cageid, secs, reason);
		SendMessageToAll(RED, fstr);
    }
	return true;
}

CMD:uncage(playerid, params[])
{
	new cageid, reason[24];
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	if(sscanf(params, "us[24]", cageid, reason)) return SendClientMessage(playerid, RED, "[USAGE]: /uncage [name/id] [reason]");
	if(!IsPlayerConnected(cageid)) return SendClientMessage(playerid, RED, "Player not found.");
	if(strlen(reason) < 0 || strlen(reason) > 24) return SendClientMessage(playerid, RED, "Your reason can only contain 1-24 characters.");
    if(IsCaged{cageid} == false) return SendClientMessage(playerid,RED,"Player morede nazar zendani nist.");
    if(cageid == playerid) return SendClientMessage(playerid, RED, "Shoma nemitavanid khod ra be az ghafas azad konid.");
    {
		SendPlayerToCage(cageid, 0);
		format(fstr, sizeof(fstr), "Admin %s [%d] has uncaged %s [%d] - Dalil: %s", GetName(playerid), playerid, GetName(cageid), cageid, reason);
		SendMessageToAll(RED, fstr);
    }
	return true;
}

CMD:kojam(playerid, params[])
{
if(PlayerInfo[playerid][aLevel] >= 1 || IsPlayerAdmin(playerid))
{
new result[100];
if(sscanf(params, "s[100]", result)) return SendClientMessage(playerid, RED, "[USAGE]: /kojam [description]");
new Float:angg;
GetPlayerFacingAngle(playerid,angg);
new strring[200];
new Float:x,Float:y,Float:z;
GetPlayerPos(playerid,x,y,z);
format(strring,sizeof(strring),"You are in {FFFFFF}( %f,%f,%f )",x,y,z);
SendClientMessage(playerid,YELLOW,strring);
new pos1[200], pos2[200];
format(pos1, sizeof(pos1), " | PosX: %f PosY: %f PosZ: %f | Source: %f,%f,%f | ",x,y,z,x,y,z);
format(pos2, sizeof(pos2), " | Virtual World: %d | Interior: %i | Angel: %f | Description: %s | ",GetPlayerVirtualWorld(playerid),GetPlayerInterior(playerid),angg,result);
SendClientMessage(playerid,YELLOW,pos1);
SendClientMessage(playerid,YELLOW,pos2);
return 1;
}
else
{
SendClientMessage(playerid,RED,"You are not an admin.");
}
return 1;
}

CMD:vslap(playerid, params[])
{
new playa;
new Float:slx, Float:sly, Float:slz;
new string[200];
if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid,RED,"Only admin level 3+ can use this command.");
if(sscanf(params, "u", playa)) return SendClientMessage(playerid, RED, "[USAGE]: /vslap [name/id]");
if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, RED, "Player not found.");
if(!IsPlayerInAnyVehicle(playa)) return SendClientMessage(playerid,RED,"that Player Is not in any vehicle.");
if(playa != INVALID_PLAYER_ID)
{
GetVehiclePos(GetPlayerVehicleID(playa), slx, sly, slz);
SetVehiclePos(GetPlayerVehicleID(playa), slx, sly, slz+550);
PlayerPlaySound(playa, 1130, slx, sly, slz+550);
format(string, sizeof(string), "Admin %s [%d] has used the vslap for player: %s [%d].", GetName(playerid), playerid, GetName(playa), playa);
SendAdminMessage(GREY, string);
SetPlayerChatBubble(playerid, string, GREY, 50, 5000);
format(string, sizeof(string), "You have been vehicleslapped by Admin %s [%d]", GetName(playerid), playerid);
SendClientMessage(playa, RED, string);
}
return 1;
}

CMD:supervslap(playerid, params[])
{
new playa, Float:slx, Float:sly, Float:slz;
new string[200];
if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid,RED,"Only admin level 4 can use this command.");
if(sscanf(params, "u", playa)) return SendClientMessage(playerid, RED, "[USAGE]: /supervslap [name/id]");
if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, RED, "Player not found.");
if(!IsPlayerInAnyVehicle(playa)) return SendClientMessage(playerid,RED,"that Player Is not in any vehicle.");
if(playa != INVALID_PLAYER_ID)
{
GetVehiclePos(GetPlayerVehicleID(playa), slx, sly, slz);
SetVehiclePos(GetPlayerVehicleID(playa), slx, sly, slz+1000);
PlayerPlaySound(playa, 1130, slx, sly, slz+1000);
format(string, sizeof(string), "Admin %s [%d] has used the vslap for player: %s [%d].", GetName(playerid), playerid, GetName(playa), playa);
SendAdminMessage(GREY, string);
SetPlayerChatBubble(playerid, string, GREY, 50, 5000);
format(string, sizeof(string), "You have been vehicleslapped by Admin %s [%d]", GetName(playerid), playerid);
SendClientMessage(playa, RED, string);
}
return 1;
}

CMD:slap(playerid, params[])
{
new playa;
new Float:slx, Float:sly, Float:slz;
new string[200];
if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid,RED,"Only admin level 2+ can use this command.");
if(sscanf(params, "u", playa)) return SendClientMessage(playerid, RED, "[USAGE]: /slap [name/id]");
if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, RED, "Player not found.");
if(playa != INVALID_PLAYER_ID)
{
GetPlayerPos(playa, slx, sly, slz);
SetPlayerPos(playa, slx, sly, slz+5);
PlayerPlaySound(playa, 1190, slx, sly, slz+5);
format(string, sizeof(string), "Admin %s [%d] slaped player: %s [%d].", GetName(playerid), playerid, GetName(playa), playa);
SendAdminMessage(GREY, string);
SetPlayerChatBubble(playerid, string, GREY, 50, 5000);
format(string, sizeof(string), "You have been slaped by Admin %s [%d]", GetName(playerid), playerid);
SendClientMessage(playa, RED, string);
}
return 1;
}

CMD:jetpack(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	{
	    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
	    SendClientMessage(playerid, RED, "IMPORTANT: Use /removejetpack when your done, DONT LET A PLAYER ACCESS THIS JETPACK!");
		format(fstr, sizeof(fstr), "Admin %s [%d] has spawned a jetpack.", GetName(playerid), playerid);
        SendAdminMessage(GREY, fstr);
        SetPlayerChatBubble(playerid, fstr, GREY, 50, 5000);
	}
	return true;
}

CMD:removejetpack(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
	{
        new Float:x, Float:y, Float:z, Float:ang;
        GetPlayerPos(playerid, x, y, z);
        GetPlayerFacingAngle(playerid, ang);
        new VehicleID = CreateVehicle(522, x, y, z, ang, 3, 6, -1);
        PutPlayerInVehicle(playerid, VehicleID, 0);
        SetVehicleVirtualWorld(VehicleID, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(VehicleID, GetPlayerInterior(playerid));
		ChangeVehicleColor(VehicleID,3,6);
		DestroyVehicle(GetPlayerVehicleID(playerid));
	}
	else
	{
	    SendClientMessage(playerid, RED, "You do not have a jetpack.");
	}
    return true;
}

CMD:v(playerid, params[])
{
    new msg[64];
    if(PlayerInfo[playerid][vLevel] < 1) return SendClientMessage(playerid, RED, "Only vip level 1+ can use this command.");
    if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /v [msg]");
    if(strlen(msg) < 0 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Your message can only contain 1-64 characters.");
    if(PlayerInfo[playerid][vLevel] == 1)
    {
        format(fstr, sizeof(fstr), "Bronze VIP %s: %s", GetName(playerid), msg);
        SendVIPMessage(ORANGE, fstr);
    }
    else if(PlayerInfo[playerid][vLevel] == 2)
    {
        format(fstr, sizeof(fstr), "Silver VIP %s: %s", GetName(playerid), msg);
        SendVIPMessage(ORANGE, fstr);
    }
    else if(PlayerInfo[playerid][vLevel] == 3)
    {
        format(fstr, sizeof(fstr), "Gold VIP %s: %s", GetName(playerid), msg);
        SendVIPMessage(ORANGE, fstr);
    }
    else if(PlayerInfo[playerid][vLevel] == 4)
    {
        format(fstr, sizeof(fstr), "Platinum VIP %s: %s", GetName(playerid), msg);
        SendVIPMessage(ORANGE, fstr);
    }
    new astring[100];
    format(astring, sizeof(astring), "[VIP Radio]: %s [%d]: %s", GetName(playerid), playerid, msg);
	SendAdminMessage(GREY, astring);
    return true;
}

CMD:vweaps(playerid, params[])
{
    if(PlayerInfo[playerid][vLevel] < 2) return SendClientMessage(playerid, RED, "Only vip level 2+ can use this command.");
    if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this comand while you are jailed.");
    {
        GivePlayerWeapon(playerid, 31, 99999);
        GivePlayerWeapon(playerid, 28, 99999);
        GivePlayerWeapon(playerid, 26, 99999);
        GivePlayerWeapon(playerid, 24, 99999);
        SendClientMessage(playerid, LIGHTGREEN, "Deagle/UZI/M4/Sawn-Off + infinate ammo received.");
		//
		new mstring[150];
		format(mstring, sizeof(mstring), "VIP %s has just spawned a infinate weapon set using /vweaps...", GetName(playerid));
        ProxDetector(20.0, playerid, mstring, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN);
        //
        new astring[100];
        format(astring, sizeof(astring), "%s [%d] typed: /vweaps", GetName(playerid), playerid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	return true;
}

CMD:aweaps(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this comand while you are jailed.");
    {
        GivePlayerWeapon(playerid, 31, 99999);
        GivePlayerWeapon(playerid, 28, 99999);
        GivePlayerWeapon(playerid, 26, 99999);
        GivePlayerWeapon(playerid, 24, 99999);
        SendClientMessage(playerid, LIGHTGREEN, "Deagle/UZI/M4/Sawn-Off + infinate ammo received.");
        new astring[100];
        format(astring, sizeof(astring), "%s [%d] typed: /aweaps", GetName(playerid), playerid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	return true;
}

CMD:checkweap(playerid, params[])
{
	new target;
    
    if(sscanf(params, "d", target)) return SendClientMessage(playerid, RED, "[USAGE]: /checkweap [playerid].");
	if(target == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Player not found.");
	if(PlayerInfo[playerid][aLevel] > 2)
	{
        new string[300], sweapon, sammo;
	    format(string, sizeof(string), "%s[%d] has the following weapons:", GetName(target), target);
	    SendClientMessage(playerid, RED, string);
		for(new i=0; i<13; i++)
	    {
		    GetPlayerWeaponData(target, i, sweapon, sammo);
		    if(sweapon != 0)
		    {
		        new mywep[256];
		        GetWeaponName(sweapon,mywep,sizeof(mywep));
		        format(string, sizeof(string), "Slotid: %d Name: %s Ammo: %d", i, mywep, sammo);
		    	SendClientMessage(playerid, ORANGE, string);
			}
	    }
	}
	else if(IsPlayerAdmin(playerid))
	{
        new string[300], sweapon, sammo;
	    format(string, sizeof(string), "%s[%d] has the following weapons:", GetName(target), target);
	    SendClientMessage(playerid, RED, string);
		for(new i=0; i<13; i++)
	    {
		    GetPlayerWeaponData(target, i, sweapon, sammo);
		    if(sweapon != 0)
		    {
		        new mywep[256];
		        GetWeaponName(sweapon,mywep,sizeof(mywep));
		        format(string, sizeof(string), "Slotid: %d Name: %s Ammo: %d", i, mywep, sammo);
		    	SendClientMessage(playerid, ORANGE, string);
			}
	    }
	}
	else
	{
	    SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	}
	return 1;
}

//---------------------------------- Events -----------------------------------//
CMD:startevent(playerid, params[])
{
    new event[30];
	GetPlayerPos(playerid, aPos[evX], aPos[evY], aPos[evZ]);
    GetPlayerFacingAngle(playerid, aPos[evA]);
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    if(sscanf(params, "s[150]", event)) return SendClientMessage(playerid, RED, "[USAGE]: /startevent [event name]");
    if(strlen(event) < 0 || strlen(event) > 24) return SendClientMessage(playerid, RED, "The event name can only contain 1-24 characters.");
    if(HasEventStarted == 1) return format(fstr, sizeof(fstr), "Event '%s' is currently active, you cant start an event now.", event) && SendClientMessage(playerid, RED, fstr);
    {
        format(fstr, sizeof(fstr), "Elvis: event '%s' shoro shod! Type /join to join the event.Event Organizer %s", event, GetName(playerid));
        SendMessageToAll(WHITE, fstr);
        new evegt[200];
        format(evegt,sizeof(evegt),"~w~Type /join To Join The Event~n~'%s~w~'",event);
        GameTextForAll(evegt, 5000, 5);
		HasEventStarted = 1;
		HasMadeEvent{playerid} = 1;
	}
	return true;
}

CMD:eventvehs(playerid, params[])
{
	new vehid;
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    if(sscanf(params, "d", vehid)) return SendClientMessage(playerid, RED, "[USAGE]: /eventvehs [vehicleid]");
    if(vehid < 400 || vehid > 611) return SendClientMessage(playerid, RED, "Invalid vehicle id.");
	if(HasEventStarted == 0 || HasMadeEvent{playerid} == 0) return SendClientMessage(playerid,RED, "Your not holding any events to control.");
	if(CantJoinEvent == 0) return SendClientMessage(playerid,RED, "You need to stop joins before you can use this command.");
	if(eventvehsused == 1) return SendClientMessage(playerid,RED, "Faghat yek bar mitavanid az in cmd estefade konid!.");
	foreach(new i : Player)
	{
	    if(IsAtEvent{i} == 1)
	    {
	        new Float:posX, Float:posY, Float:posZ, Float:posAng;
	        GetPlayerPos(i, posX, posY, posZ);
	        GetPlayerFacingAngle(i, posAng);
            new eventveh = CreateVehicle(vehid, posX, posY, posZ, posAng, -1, -1, -1);
            eventvehsused = 1;
        	PutPlayerInVehicle(i, eventveh, 0);
        	SetVehicleVirtualWorld(eventveh, GetPlayerVirtualWorld(i));
			LinkVehicleToInterior(eventveh, GetPlayerInterior(i));
			ChangeVehicleColor(eventveh,6,6);
			eventvehs[eventveh] = 1;
			SendClientMessage(i, LIGHTGREEN, "Event vehicle received.");
	    }
	}
	return true;
}

CMD:stopjoins(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	if(HasEventStarted == 0 || HasMadeEvent{playerid} == 0) return SendClientMessage(playerid,RED, "Your not holding any events to control.");
	if(CantJoinEvent == 1) return SendClientMessage(playerid, RED, "You have already stopped joins for this event.");
    {
		SendMessageToAll(WHITE, "Elvis: The event is now NOT accepting anymore players.");
		CantJoinEvent = 1;
		HasAdminStoppedJoins = 1;
	}
	return true;
}

CMD:startjoins(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	if(HasEventStarted == 0 || HasMadeEvent{playerid} == 0) return SendClientMessage(playerid,RED, "Your not holding any events to control.");
	if(CantJoinEvent == 0) return SendClientMessage(playerid, RED, "Join event baz ast!.");
    {
    SendMessageToAll(WHITE, "Elvis: Join event baz shod.");
    CantJoinEvent = 0;
    HasAdminStoppedJoins = 0;
	}
	return true;
}

CMD:freezevent(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    if(HasEventStarted == 0) return SendClientMessage(playerid, RED, "Your not holding any events to control.");
    if(HasMadeEvent{playerid} == 0) return SendClientMessage(playerid, RED, "You cant control this event.");
	if(CantJoinEvent == 0) return SendClientMessage(playerid,RED, "You need to stop joins before you can use this command.");
    {
        foreach(new i : Player)
        {
            if(IsAtEvent{i} == 1)
            {
                TogglePlayerControllable(i,false);
                GameTextForPlayer(i,"~r~Event Freezed!",1500,3);
                SendClientMessage(i,RED,"Event Freezed!");
            }
        }
    }
    return 1;
}

CMD:unfreezevent(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    if(HasEventStarted == 0) return SendClientMessage(playerid, RED, "Your not holding any events to control.");
    if(HasMadeEvent{playerid} == 0) return SendClientMessage(playerid, RED, "You cant control this event.");
	if(CantJoinEvent == 0) return SendClientMessage(playerid,RED, "You need to stop joins before you can use this command.");
    {
    foreach(new i : Player)
    {
    if(IsAtEvent{i} == 1)
    {
    TogglePlayerControllable(i,true);
    GameTextForPlayer(i,"~g~Event UnFreezed.",1500,3);
    SendClientMessage(i,LIGHTGREEN,"Event UnFreezed!");
    }
    }
    }
    return 1;
}

CMD:getevent(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    if(HasEventStarted == 0) return SendClientMessage(playerid, RED, "Your not holding any events to control.");
    if(HasMadeEvent{playerid} == 0) return SendClientMessage(playerid, RED, "You cant control this event.");
	if(CantJoinEvent == 0) return SendClientMessage(playerid,RED, "You need to stop joins before you can use this command.");
    {
        new Float:px,Float:py,Float:pz;
        GetPlayerPos(playerid, px, py, pz);
        new pv = GetPlayerVirtualWorld(playerid), Int = GetPlayerInterior(playerid);
		foreach(new i : Player)
		{
            if(IsAtEvent{i} == 1)
            {
                if(GetPlayerVehicleID(i))
	            {
                    new vID;
                    vID = GetPlayerVehicleID(i);
                    SetPlayerVirtualWorld(i, pv);
		            SetVehiclePos(GetPlayerVehicleID(i), px, py, pz+2);
		            SetVehicleVirtualWorld(vID, pv);
		            SetPlayerInterior(i, Int);
		            if(IsPlayerInArena{playerid} == true)
		            {
		            	IsPlayerInArena{i} = true;
		        	}
		        	else if(IsPlayerInArena{playerid} == false)
		        	{
		            	IsPlayerInArena{i} = false;
		        	}
	            }
	        	else
	        	{
	        		SetPlayerVirtualWorld(i, pv);
	        	    SetPlayerPos(i, px, py, pz+1);
		            SetPlayerInterior(i, Int);
		        	if(IsPlayerInArena{playerid} == true)
		            {
		            	IsPlayerInArena{i} = true;
		        	}
		        	else if(IsPlayerInArena{playerid} == false)
		        	{
		            	IsPlayerInArena{i} = false;
		    	    }
                }
                SendClientMessage(i,RED,"Event organizer Get all event players");
	        }
        }
    }
    return true;
}

CMD:join(playerid, params[])
{
    if(HasEventStarted == 0) return SendClientMessage(playerid, RED, "There are currently no events on.");
    if(HasAdminStoppedJoins == 1 || CantJoinEvent == 1) return SendClientMessage(playerid, RED, "The event is now not accepting anymore players.");
	if(IsAtEvent{playerid} == 1) return SendClientMessage(playerid, RED, "Your already at the event.");
	{
	    GetPlayerPos(playerid, pPos[evX], pPos[evY], pPos[evZ]);
	    GetPlayerFacingAngle(playerid, pPos[evA]);
	    SetPlayerPos(playerid, aPos[evX], aPos[evY], aPos[evZ]);
        SetPlayerFacingAngle(playerid, aPos[evA]);
	    ResetPlayerWeapons(playerid);
	    SetPlayerHealth(playerid, 100);
	    SetPlayerArmour(playerid, 100);
//	    SetPlayerVirtualWorld(playerid, 8585);
		IsAtEvent{playerid} = 1;
	}
	new astring[100];
    format(astring, sizeof(astring), "%s [%d] typed: /join", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:e(playerid, params[])
{
    if(HasEventStarted == 0) return SendClientMessage(playerid, RED, "There are currently no events on.");
	if(IsAtEvent{playerid} == 0) return SendClientMessage(playerid, RED, "Shoma dar event nistid.");
	{
        foreach(new i : Player)
	    {
            if(IsAtEvent{i} == 1)
	        {
	        new evecha[600];
	        format(evecha, sizeof(evecha), "[Event]: %s: %s", GetName(playerid), params);
	        SendClientMessage(i,ORANGE,evecha);
	        print(evecha);
	        }
		}
	}
	return 1;
}

CMD:levent(playerid, params[])
{
    if(HasEventStarted == 0) return SendClientMessage(playerid, RED, "There are currently no events on.");
	if(IsAtEvent{playerid} == 0) return SendClientMessage(playerid, RED, "Shoma dar event nistid.");
	{
                IsAtEvent{playerid} = 0;
	            SetPlayerPos(playerid, pPos[evX], pPos[evY], pPos[evZ]);
	            SetPlayerFacingAngle(playerid, pPos[evA]);
				SetPlayerVirtualWorld(playerid, 0);
                ResetPlayerWeapons(playerid);
                TogglePlayerControllable(playerid,true);
	}
	SendClientMessage(playerid,RED, "Shoma event ra tark kardid.");
    return true;
}

CMD:finishevent(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    if(HasEventStarted == 0) return SendClientMessage(playerid, RED, "Your not holding any events to control.");
    if(HasMadeEvent{playerid} == 0) return SendClientMessage(playerid, RED, "You cant control this event.");
    {
        foreach(new i : Player)
	    {
            if(IsAtEvent{i} == 1)
	        {
                IsAtEvent{i} = 0;
	            SetPlayerPos(i, pPos[evX], pPos[evY], pPos[evZ]);
	            SetPlayerFacingAngle(i, pPos[evA]);
				foreach(new v : Vehicle)
	            {
	                if(eventvehs[v] == 1)
		            {
                        DestroyVehicle(v);
                        eventvehs[v] = 0;
                    }
                }
				eventvehsused = 0;
//				SetPlayerVirtualWorld(i, 0);
                ResetPlayerWeapons(i);
                TogglePlayerControllable(i,true);
			}
		}
		SendMessageToAll(WHITE, "Elvis: The event is now over.");
		GameTextForAll("~r~Event Over", 5000, 5);
		HasEventStarted = 0;
		CantJoinEvent = 0;
		HasAdminStoppedJoins = 0;
	    HasMadeEvent{playerid} = 0;
    }
    return true;
}

CMD:armevent(playerid, params[])
{
	new weap;
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	if(sscanf(params, "d", weap))
    {
			SendClientMessage(playerid, YELLOW, "__________________________________________________________________________");
            SendClientMessage(playerid, RED, "[USAGE]: /armevent [weapon id]");
			SendClientMessage(playerid, GREEN, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
			SendClientMessage(playerid, GREEN, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
			SendClientMessage(playerid, GREEN, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle 25: Shotgun");
			SendClientMessage(playerid, GREEN, "26: Sawnoff Shotgun 27: SPAS-12 28: Micro SMG (Mac 10) 29: SMG (MP5) 30: AK-47 31: M4 32: Tec9 33: Rifle");
			SendClientMessage(playerid, GREEN, "25: Shotgun 34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge");
			SendClientMessage(playerid, GREEN, "40: Detonator 41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Goggles 46: Parachute");
			SendClientMessage(playerid, YELLOW, "__________________________________________________________________________________________");
			return 1;
    }
    if(weap < 1 || weap > 46)
	{
	        SendClientMessage(playerid, YELLOW, "_____________________________________________________________________");
	        SendClientMessage(playerid, RED, "Invalid weapon id.");
			SendClientMessage(playerid, GREEN, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
			SendClientMessage(playerid, GREEN, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
			SendClientMessage(playerid, GREEN, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle 25: Shotgun");
			SendClientMessage(playerid, GREEN, "26: Sawnoff Shotgun 27: SPAS-12 28: Micro SMG (Mac 10) 29: SMG (MP5) 30: AK-47 31: M4 32: Tec9 33: Rifle");
			SendClientMessage(playerid, GREEN, "25: Shotgun 34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge");
			SendClientMessage(playerid, GREEN, "40: Detonator 41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Goggles 46: Parachute");
			SendClientMessage(playerid, YELLOW, "___________________________________________________________________________________________");
			return 1;
	}
	if(HasEventStarted == 0) return SendClientMessage(playerid, RED, "Your not holding any events to control.");
    if(HasMadeEvent{playerid} == 0) return SendClientMessage(playerid, RED, "You cant control this event.");
	if(CantJoinEvent == 0) return SendClientMessage(playerid,RED, "You need to stop joins before you can use this command.");
    {
        foreach(new i : Player)
	    {
            if(IsAtEvent{i} == 1)
	        {
                GivePlayerWeapon(i, weap, 99999);
			}
		}
		SendClientMessage(playerid, YELLOW, "All event members have been armed.");
    }
    return true;
}

CMD:countdown(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	if(HasEventStarted == 0) return SendClientMessage(playerid, RED, "You can only use the countdown at events");
	if(HasMadeEvent{playerid} == 0) return SendClientMessage(playerid, RED, "You cant control this event.");
	if(CountStatus == 1) return SendClientMessage(playerid, RED, "A countdown is in progress, please wait.");
	SetTimer("StartCountDown", 1000, false);
	IsAtEvent[playerid] = 1;
	foreach(new i : Player)
	{
	    if(IsAtEvent[i] == 1)
	    {
			TogglePlayerControllable(i, false);
		}
	}
	return true;
}

CMD:disarmevent(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED,"Only admin level 2+ can use this command.");
    if(HasEventStarted == 0) return SendClientMessage(playerid, RED, "Your not holding any events to control.");
    if(HasMadeEvent{playerid} == 0) return SendClientMessage(playerid, RED, "You cant control this event.");
    {
        foreach(new i : Player)
	    {
            if(IsAtEvent{i} == 1)
	        {
                ResetPlayerWeapons(i);
			}
		}
		SendClientMessage(playerid, YELLOW, "All event members have been disarmed.");
    }
    return true;
}
//------------------------ Event ----------------------------------------------//
CMD:savepos(playerid, params[])
{
    new Float:x,Float:y,Float:z;
    if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command while you are jailed.");
	if(PlayerInfo[playerid][aLevel] >= 1)
    {
        GetPlayerPos(playerid, x, y, z);
        SetPVarFloat(playerid, "PosX", x);
        SetPVarFloat(playerid, "PosY", y);
        SetPVarFloat(playerid, "PosZ", z);
        SetPVarInt(playerid, "IntID", GetPlayerInterior(playerid));
        SetPVarInt(playerid, "wID", GetPlayerVirtualWorld(playerid));
        SendClientMessage(playerid, YELLOW, "Position saved, use /loadpos to load this position at anytime.");
        HasSavedPos{playerid} = true;
	}
	else if(PlayerInfo[playerid][vLevel] >= 3)
	{
    	if(GetPlayerWantedLevel(playerid) >= 4) return SendClientMessage(playerid, RED, "You cant use this command while your wanted.");
        GetPlayerPos(playerid, x, y, z);
        SetPVarFloat(playerid, "PosX", x);
        SetPVarFloat(playerid, "PosY", y);
        SetPVarFloat(playerid, "PosZ", z);
        SetPVarInt(playerid, "IntID", GetPlayerInterior(playerid));
        SetPVarInt(playerid, "wID", GetPlayerVirtualWorld(playerid));
        SendClientMessage(playerid, YELLOW, "Position saved, use /loadpos to load this position at anytime.");
        HasSavedPos{playerid} = true;
	}
	else
	{
		return SendClientMessage(playerid, RED, "Only admin level 1+ and vip level 3+ can use this command.");
	}
	new astring[100];
    format(astring,sizeof(astring),"%s [%d] typed: /savepos", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:loadpos(playerid, params[])
{
    if(HasSavedPos{playerid} == false) return SendClientMessage(playerid, RED, "You have not saved a position since your last join, use /savepos");
    if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this command while you are jailed.");
	if(PlayerInfo[playerid][aLevel] >= 1)
    {
		if(GetPlayerWantedLevel(playerid) >= 4) return SendClientMessage(playerid, RED, "You cant use this command while your wanted.");
		{
		if(IsPlayerInAnyVehicle(playerid))
		{
		new vid = GetPlayerVehicleID(playerid);
		SetPlayerInterior(playerid,GetPVarInt(playerid, "IntID"));
		LinkVehicleToInterior(vid, GetPVarInt(playerid, "IntID"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid, "wID"));
		SetVehicleVirtualWorld(vid,GetPVarInt(playerid, "wID"));
		SetVehiclePos(vid, GetPVarFloat(playerid,"PosX"), GetPVarFloat(playerid,"PosY"), GetPVarFloat(playerid,"PosZ"));
        SendClientMessage(playerid, LIGHTGREEN, "Position loaded.");
		}
		else
		{
		SetPlayerInterior(playerid,GetPVarInt(playerid, "IntID"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid, "wID"));
		SetPlayerPos(playerid, GetPVarFloat(playerid,"PosX"), GetPVarFloat(playerid,"PosY"), GetPVarFloat(playerid,"PosZ"));
        SendClientMessage(playerid, LIGHTGREEN, "Position loaded.");
        }
        }
	}
	else if(PlayerInfo[playerid][vLevel] >= 3)
	{
    	if(GetPlayerWantedLevel(playerid) >= 4) return SendClientMessage(playerid, RED, "You cant use this command while your wanted.");
		{
		if(IsPlayerInAnyVehicle(playerid))
		{
		new vid = GetPlayerVehicleID(playerid);
		SetPlayerInterior(playerid,GetPVarInt(playerid, "IntID"));
		LinkVehicleToInterior(vid, GetPVarInt(playerid, "IntID"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid, "wID"));
		SetVehicleVirtualWorld(vid,GetPVarInt(playerid, "wID"));
		SetVehiclePos(vid, GetPVarFloat(playerid,"PosX"), GetPVarFloat(playerid,"PosY"), GetPVarFloat(playerid,"PosZ"));
        SendClientMessage(playerid, LIGHTGREEN, "Position loaded.");
        }
		else
		{
		SetPlayerInterior(playerid,GetPVarInt(playerid, "IntID"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid, "wID"));
		SetPlayerPos(playerid, GetPVarFloat(playerid,"PosX"), GetPVarFloat(playerid,"PosY"), GetPVarFloat(playerid,"PosZ"));
        SendClientMessage(playerid, LIGHTGREEN, "Position loaded.");
        }
		//
		new mstring[150];
		format(mstring, sizeof(mstring), "VIP %s has just loaded there saved position using /loadpos...", GetName(playerid));
        ProxDetector(20.0, playerid, mstring, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN);
        //
        }
	}
	else
	{
		return SendClientMessage(playerid, RED, "Only admin level 1+ and vip level 3+ can use this command.");
	}
	new astring[100];
    format(astring,sizeof(astring),"%s [%d] typed: /loadpos", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:paint(playerid, params[])
{
	new color1, color2;
    if(sscanf(params, "ii", color1, color1)) return SendClientMessage(playerid, RED, "[USAGE]: /paint [color id 1] [color id 2]") && SendClientMessage(playerid, YELLOW, "Valid color ids: 0-252");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehicle to use this command.");
    if(color1 < 0 || color1 > 252 || color2 < 0 || color2 > 252) return SendClientMessage(playerid, RED, "Invalid color id.");
    if(PlayerInfo[playerid][pPaintCan] >= 1)
    {
        ChangeVehicleColor(GetPlayerVehicleID(playerid), color1, color2);
        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
        SendClientMessage(playerid, YELLOW, "Vehicle resprayed, 1 spray can was used.");
        PlayerInfo[playerid][pPaintCan] --;
    }
    else
    {
        return SendClientMessage(playerid, RED, "You need a spray can to paint your vehicle, buy one at the 24/7 store.");
    }
    new astring[100];
    format(astring, sizeof(astring), "%s [%d] typed: /paint", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:vfuel(playerid, params[])
{
    if(PlayerInfo[playerid][vLevel] < 1) return SendClientMessage(playerid, RED, "Only vip level 1+ can use this command.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehicle to use this command.");
	{
	    new veh = GetPlayerVehicleID(playerid);
		GetVehicleFuel[veh] = 100;
        GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, vcondition);
		SetVehicleParamsEx(veh, ON, lights, OFF, doors, OFF, OFF, vcondition);
	    GameTextForPlayer(playerid,"~w~Vehicle ~g~Refuelled!", 5000, 5);
	}
	//
	new mstring[150];
	format(mstring, sizeof(mstring), "VIP %s has just refuelled there vehicle using /vfuel...", GetName(playerid));
	ProxDetector(20.0, playerid, mstring, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN);
	//
	new astring[64];
    format(astring, sizeof(astring), "%s [%d] typed: /vfuel", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:afuel(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehicle to use this command.");
	{
	    new veh = GetPlayerVehicleID(playerid);
		GetVehicleFuel[veh] = 100;
        GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, vcondition);
		SetVehicleParamsEx(veh, ON, lights, OFF, doors, OFF, OFF, vcondition);
	    GameTextForPlayer(playerid,"~w~Vehicle ~g~Refuelled!", 5000, 5);
	}
	new astring[64];
    format(astring, sizeof(astring), "%s [%d] typed: /afuel", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:vfix(playerid, params[])
{
    if(PlayerInfo[playerid][vLevel] < 1) return SendClientMessage(playerid, RED, "Only vip level 1+ can use this command.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehicle to use this command.");
	if((gettime() - 120) < TimerInfo[playerid][CMD_timer39]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");//2 mins
    TimerInfo[playerid][CMD_timer39] = gettime();
	{
	    RepairVehicle(GetPlayerVehicleID(playerid));
	    GameTextForPlayer(playerid,"~w~Vehicle ~g~Repaired", 5000, 5);
	}
	//
	new mstring[150];
	format(mstring, sizeof(mstring), "VIP %s has just repaired there vehicle using /vfix...", GetName(playerid));
	ProxDetector(20.0, playerid, mstring, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN);
	//
	new astring[64];
    format(astring, sizeof(astring), "%s [%d] typed: /vfix", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:afix(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehicle to use this command.");
	{
	    RepairVehicle(GetPlayerVehicleID(playerid));
	    GameTextForPlayer(playerid,"~w~Vehicle ~g~Repaired", 5000, 5);
	}
	new astring[100];
    format(astring, sizeof(astring), "%s [%d] typed: /afix", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:togglecolor(playerid, params[])
{
    if(PlayerInfo[playerid][vLevel] < 1) return SendClientMessage(playerid, RED, "Only vip level 1+ can use this command.");
    if(IsVIPInColorMode{playerid} == false)
    {
        IsVIPInColorMode{playerid} = true;
        SetPlayerColor(playerid, ORANGE);
        GameTextForPlayer(playerid,"~g~Now Hiding", 5000, 5);
        SendClientMessage(playerid, ORANGE, "You will now be shown as an orange marker at all times.");
		//
		new mstring[150];
		format(mstring, sizeof(mstring), "VIP %s has just changed there marker color using /togglecolor...", GetName(playerid));
		ProxDetector(20.0, playerid, mstring, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN);
		//
        return true;
    }
    else if(GetTeam{playerid} == CLASS_CIV && GetPlayerWantedLevel(playerid) == 0 && IsVIPInColorMode{playerid} == true)
	{
		IsVIPInColorMode{playerid} = false;
		SetPlayerColor(playerid, WHITE);
		GameTextForPlayer(playerid,"~r~Stopped Hiding", 5000, 5);
		SendClientMessage(playerid, YELLOW, "You will now be shown as a normal marker at all times.");
		return true;
	}
	else if(GetTeam{playerid} == CLASS_CIV && GetPlayerWantedLevel(playerid) >= 1 && GetPlayerWantedLevel(playerid) <= 3 && IsVIPInColorMode{playerid} == true)
	{
		IsVIPInColorMode{playerid} = false;
     	SetPlayerColor(playerid, YELLOW);
  		GameTextForPlayer(playerid,"~r~Stopped Hiding", 5000, 5);
  		SendClientMessage(playerid, YELLOW, "You will now be shown as a normal marker at all times.");
   		return true;
	}
	else if(GetTeam{playerid} == CLASS_CIV && GetPlayerWantedLevel(playerid) >= 4)
	{
   		IsVIPInColorMode{playerid} = false;
      	SetPlayerColor(playerid, RED);
      	GameTextForPlayer(playerid,"~r~Stopped Hiding", 5000, 5);
      	SendClientMessage(playerid, YELLOW, "You will now be shown as a normal marker at all times.");
      	return true;
	}
	else if(GetTeam{playerid} == CLASS_COPS && IsVIPInColorMode{playerid} == true)
	{
      	IsVIPInColorMode{playerid} = false;
      	SetPlayerColor(playerid, BLUE);
      	GameTextForPlayer(playerid,"~r~Stopped Hiding", 5000, 5);
    	SendClientMessage(playerid, YELLOW, "You will now be shown as a normal marker at all times.");
     	return true;
	}
	else if(GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_FBI && IsVIPInColorMode{playerid} == true)
	{
      	IsVIPInColorMode{playerid} = false;
      	SetPlayerColor(playerid, WHITE);
      	GameTextForPlayer(playerid,"~r~Stopped Hiding", 5000, 5);
    	SendClientMessage(playerid, YELLOW, "You will now be shown as a normal marker at all times.");
     	return true;
	}
	else if(GetTeam{playerid} == CLASS_ARMY && IsVIPInColorMode{playerid} == true)
	{
      	IsVIPInColorMode{playerid} = false;
      	SetPlayerColor(playerid, GREEN);
      	GameTextForPlayer(playerid,"~r~Stopped Hiding", 5000, 5);
    	SendClientMessage(playerid, YELLOW, "You will now be shown as a normal marker at all times.");
     	return true;
	}
	else if(GetTeam{playerid} == CLASS_MEDIC && IsVIPInColorMode{playerid} == true)
	{
      	IsVIPInColorMode{playerid} = false;
      	SetPlayerColor(playerid, PINK);
      	GameTextForPlayer(playerid,"~r~Stopped Hiding", 5000, 5);
      	SendClientMessage(playerid, YELLOW, "You will now be shown as a normal marker at all times.");
	}
	new astring[100];
    format(astring, sizeof(astring), "%s [%d] typed: /togglecolor", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:vcmds(playerid, params[])
{
	new VCMDS[2000];
    strcat(VCMDS, "{009E00}Bronze VIP{FFFFFF}: {009E00}Lvl 1: {FFFFFF}/v /vcol /vsay /vfix /vfuel /flip /addnos /(open/close)hanger /exitat /togglecolor\n");
    strcat(VCMDS, "{009E00}Silver VIP{FFFFFF}: {009E00}Lvl 2: {FFFFFF}/vweaps /vcar (+ level 1 commands)\n");
    strcat(VCMDS, "{009E00}Gold VIP{FFFFFF}: {009E00}Lvl 3: {FFFFFF}/vskin /(save/load)pos /vbike (+ levels 1-2 commands)\n");
    strcat(VCMDS, "{009E00}Platinum VIP{FFFFFF}: {009E00}Lvl 4: {FFFFFF}/vheal (+ levels 1-3 commands)\n");
    strcat(VCMDS, "{009E00}Ghabeliat haye VIP: {FFFFFF}(lvl 1-4)\n 1.savar shodan dar vasayel naghlie army ha dar har zaman. \n 2.pardakht nakardan maliat pooleshan baed az har 1 saat bazi. \n 3.mitavanad khane va biz va mashin khososi az harkodam 7ta bekharad. \n 4.pardakht nakardan avarez be BIMARESTAN + BANK + ZENDAN . \n 5.dastresi be Admin Tower va vasile naghlie Seasparrow.");
    ShowPlayerDialog(playerid, VCMDS_LIST , DIALOG_STYLE_MSGBOX, "{00C5B6}ACNR VIP/Donator Commands", VCMDS, "Ok", "");
    return true;
}

CMD:addnos(playerid, params[])
{
	if(PlayerInfo[playerid][vLevel] >= 1)
    {
        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehicle to use this command.");
        AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
        PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
        SendClientMessage(playerid, YELLOW, "Nitros oxide x10 added.");
		//
		new mstring[150];
		format(mstring, sizeof(mstring), "VIP %s has just added nos there vehicle using /addnos...", GetName(playerid));
		ProxDetector(20.0, playerid, mstring, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN);
		//
	}
	else if(PlayerInfo[playerid][aLevel] >= 1)
	{
        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in a vehicle to use this command.");
        AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
        PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
        SendClientMessage(playerid, YELLOW, "Nitros oxide x10 added.");
	}
	else
	{
	    return SendClientMessage(playerid, RED, "Only vip/admin level 1+ can use this command.");
	}
	new astring[100];
    format(astring, sizeof(astring), "%s [%d] typed: /addnos", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:events(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 2) return SendClientMessage(playerid, RED, "Only admin level 2+ can use this command.");
    {
        ShowPlayerDialog(playerid, EVENTS_HOWTO, DIALOG_STYLE_MSGBOX , "{FFFFFF}ACNR Events",
		"{FFFFFF}Commands: /(start/finish)event /(dis)armevent /eventvehs /(start/stop)joins /levent /getevent /countdown /(un)freezevent /e\n\nSome ACNR Events:\n\n- 'Hide'Or'Die' - Players given some time to hide in a open area/building,\nThen admins find/kill them all,Last one standing wins 500k.\n\n- 'Kill'That'Admin' - Admins arm up with bodyguards and announce random amounts on their heads,\nEach admin kill rises the win amount (ACNR Signature event)", "Ok", "");
    }
	return true;
}

CMD:objects(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    {
        new OJ[2000];
        strcat(OJ,"{FFFFFF}/bojlist  /createobject  /cancelobject  /setobject  /attachobject  /detachobject\n");
        strcat(OJ,"{FFFFFF}/moveobject  /moveup  /movedown  /movenorth  /movesouth  /moveeast  /movewest\n");
        strcat(OJ,"{FFFFFF}/rotatex  /rotatey  /rotatez");
        ShowPlayerDialog(playerid, OBJECTS_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Objects", OJ, "Ok", "");
    }
	return true;
}

CMD:hcmds(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] == 4)
    {
        ShowPlayerDialog(playerid, ADMIN_HCMDS, DIALOG_STYLE_MSGBOX ,"{FFFFFF}Admin House Commands","{FFFFFF}Commands:\n- /createhouse [type] *\n- /removehouse [house id]\n- /removeallhouses\n- /resethouseprices\n- /sellhouse [house id]\n- /sellallhouses\n\nTypes: 1. One Story House | 2. Two Story House | 3. Small Mansion | 4. Large Mansion | 5.Apartment", "Ok", "");
    }
    else if(IsPlayerSetBuilder{playerid} == true)
    {
        ShowPlayerDialog(playerid, ADMIN_HCMDS, DIALOG_STYLE_MSGBOX ,"{FFFFFF}Admin House Commands","{FFFFFF}Commands:\n- /createhouse [type]\n\nTypes: 1. One Story House | 2. Two Story House | 3. Small Mansion | 4. Large Mansion | 5.Apartment", "Ok", "");
    }
    else
	{
	    return SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
	}
	return true;
}

CMD:bcmds(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] == 4)
    {
        ShowPlayerDialog(playerid, ADMIN_BCMDS, DIALOG_STYLE_MSGBOX ,"{FFFFFF}Admin Business Commands","{FFFFFF}Commands:\n/createbiz /delete(all)biz /sell(all)biz", "Ok", "");
    }
	else if(IsPlayerSetBuilder{playerid} == true)
    {
        ShowPlayerDialog(playerid, ADMIN_BCMDS, DIALOG_STYLE_MSGBOX ,"{FFFFFF}Admin Business Commands","{FFFFFF}Commands:\n/createbiz", "Ok", "");
    }
    else
	{
	    SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
	}
	return true;
}

CMD:aranks(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
    ShowPlayerDialog(playerid, ARANKS_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}ACNR Admin Ranks", "{FFFFFF}Level 4: Owner\nLevel 3: Head Admin\nLevel 2: Server Admin\nLevel 1: Trial Admin\nNON ADMIN: Head Helper/Helper", "Ok", "");
	return true;
}

CMD:askadmin(playerid, params[])
{
    ShowPlayerDialog(playerid, ASK_DIALOG, DIALOG_STYLE_INPUT, "{FFFFFF}Ask An Admin", "{FFFFFF}Please enter your message below, it will be sent to all online admins:", "Submit", "Cancel");
    if((gettime() - 5) < TimerInfo[playerid][CMD_timer34]) return SendClientMessage(playerid, RED, "[Timer]: 5 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer34] = gettime();
	return true;
}

CMD:restart(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] >= 3)
    {
    	GameTextForAll("~w~Server ~r~Restarting ~w~In ~r~10 Secs...", 5000, 5);
    	SendMessageToAll(WHITE, "Elvis: The server will automatically restart in 10 secs.");
    	SendMessageToAll(YELLOW, "NOTE: Your stats have just been saved.");
		foreach(new i : Player)
		{
			if(IsPlayerConnected(i) && IsLoggedIn{i} == 1)
			{
	    		SaveBankStats(i);
    			SaveFightStats(i);
    			SaveUserStats(i);
    			SaveDegreeStats(i);
    		}
		}
    	SetTimer("RestartServer", 10000, false);
        new astring[100];
        format(astring, sizeof(astring),"%s [%d] typed: /restart", GetName(playerid), playerid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	else if(IsPlayerAdmin(playerid))
    {
    	GameTextForAll("~w~Server ~r~Restarting ~w~In ~r~10 Secs...", 5000, 5);
    	SendMessageToAll(WHITE, "Elvis: The server will automatically restart in 10 secs.");
    	SendMessageToAll(YELLOW, "NOTE: Your stats have just been saved.");
		foreach(new i : Player)
		{
			if(IsPlayerConnected(i) && IsLoggedIn{i} == 1)
			{
	    		SaveBankStats(i);
    			SaveFightStats(i);
    			SaveUserStats(i);
    			SaveDegreeStats(i);
    		}
		}
    	SetTimer("RestartServer", 10000, false);
        /*new astring[100];
        format(astring, sizeof(astring),"%s [%d] typed: /restart", GetName(playerid), playerid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);*/
	}
	else
	{
	    return SendClientMessage(playerid, RED, "Only admin level 3+ can use this command.");
	}
	return true;
}

CMD:undercover(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    {
        if(IsAdminUnderCover{playerid} == true)
        {
			IsAdminUnderCover{playerid} = false;
			SendClientMessage(playerid, ORANGE, "[ADMIN]: Undercover mode OFF");
			SendClientMessage(playerid, WHITE, "[NOTE]: You now will be SHOWN in /admins");
    		return true;
		}
		else
		{
			IsAdminUnderCover{playerid} = true;
			SendClientMessage(playerid, ORANGE, "[ADMIN]: Undercover mode ON");
			SendClientMessage(playerid, WHITE, "[NOTE]: You now will be HIDDEN in /admins");
		}
    }
    return true;
}

CMD:respawncars(playerid,params[])
{
    if(PlayerInfo[playerid][aLevel] < 3) return SendClientMessage(playerid, RED, "Faghat admin lvl +3 mitavanad az in cmd estefade konad.");
    {
    	GameTextForAll("~r~ReSpawn ~w~Cars ~w~ta ~r~10 Sanie ~w~digar...", 5000, 5);
    	SendMessageToAll(WHITE, "Elvis: Mashin haye bedone estefade ta 10 sanie digar respawn mishavand.");
        new astring[100];
        format(astring, sizeof(astring),"%s [%d] typed: /respawncars", GetName(playerid), playerid);
        SendAdminMessage(GREY, astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
        SetTimerEx("allcars",10000,false,"u",playerid);
    }
    return 1;
}

forward allcars(playerid);
public allcars(playerid)
{
    new bool:usedcars[MAX_VEHICLES] ,rastring[200];
	format(rastring,sizeof(rastring),"Admin %s hameye mashin haye bedone estefade ra respawn kard.",GetName(playerid));
    SendMessageToAll(RED,rastring);
    foreach(new i : Player)
	{
	    if(IsPlayerInAnyVehicle(i))
	    {
	        usedcars[GetPlayerVehicleID(i)] = true;
	    }
	}
    foreach(new v : Vehicle)
    {
        if(IsShopVehicle[v] != -1)
    	{
            usedcars[v] = true;
		}
	    if(usedcars[v])
	    {
	        if(IsTrailerAttachedToVehicle(v))
	        {
				usedcars[GetVehicleTrailer(v)] = true;
	        }
		}
        if(!usedcars[v])
        {
            SetVehicleToRespawn(v);
		}
	}
	return 1;
}

CMD:acmds(playerid, params[])
{
	new ACMDS[2000];
    if(PlayerInfo[playerid][aLevel] >= 1 || IsPlayerAdmin(playerid) || PlayerInfo[playerid][Helper] == 1 || PlayerInfo[playerid][hHelper] == 1 || IsPlayerSetBuilder{playerid} == true)
    {
		if(PlayerInfo[playerid][Helper] == 1 || PlayerInfo[playerid][hHelper] == 1)
		{
            strcat(ACMDS, "{009E00}Helper: {FFFFFF}/warn  /rwarn\n\n");
        }
    	if(PlayerInfo[playerid][hHelper] == 1)
		{
            strcat(ACMDS, "{009E00}Head Helper: {FFFFFF}/sethelper  /openhanger  /closehanger  /exitat  (+ Helper cmds) ( Dastresi be Admin Tower )\n\n");
    	}
    	if(IsPlayerSetBuilder{playerid} == true)
		{
    	    strcat(ACMDS, "{009E00}Builder: {FFFFFF}/hcmds  /bcmds\n\n");
    	}
    	if(PlayerInfo[playerid][aLevel] >= 1)
		{
            strcat(ACMDS, "{009E00}Lvl 1: {FFFFFF}/duty  /a  /spec  /specoff  /cage  /freeze  /unfreeze  /ap  /aranks  /mutelist  /car  /undercover\n");
            strcat(ACMDS, "{009E00}Lvl 1: {FFFFFF}/gotoat  /gotocells  /mute  /unmute  /nmute  /savepos  /loadpos  /exitat  /plus  /minus  /afuel  /objects\n");
            strcat(ACMDS, "{009E00}Lvl 1: {FFFFFF}/warn  /rwarn  /kick  /ann  /asay  /clearchat  /addnos  /disarm  /color  /sn  /kojam  /drag\n");
            strcat(ACMDS, "{009E00}Lvl 1: {FFFFFF}( Dastresi be Admin Tower )\n\n");
		}
	    if(PlayerInfo[playerid][aLevel] >= 2)
		{
            strcat(ACMDS, "{009E00}Lvl 2: {FFFFFF}/aweaps  /gcar  /jetpack  /ban  /afix  /events  /god  /godcar  /goto  /explode  /force  /carrespawn\n");
            strcat(ACMDS, "{009E00}Lvl 2: {FFFFFF}/flip  /akill  /givegun  /givecash  /reloadbans  /anopm  /jail  /uncage  /ip  /slap  /checkweap\n");
            strcat(ACMDS, "{009E00}Lvl 2: {FFFFFF}( + admin lvl 1 cmds )\n\n");
    	}
    	if(PlayerInfo[playerid][aLevel] >= 3)
		{
            strcat(ACMDS, "{009E00}Lvl 3: {FFFFFF}/restart  /get  /unban  /blockip  /unblockip  /respawncars  /gg  /settime  /setweather  /sethelper\n");
            strcat(ACMDS, "{009E00}Lvl 3: {FFFFFF}/banip  /setwanted  /sethp  /sethealth  /setarm  /setarmour  /setcash  /setskin  /vslap  /dcar /getplayer\n");
            strcat(ACMDS, "{009E00}Lvl 3: {FFFFFF}( + admin lvl 1-2 cmds )\n\n");
    	}
    	if(PlayerInfo[playerid][aLevel] >= 4)
		{
            strcat(ACMDS, "{009E00}Lvl 4: {FFFFFF}/setscore  /setadmin  /setvip  /sethhelper  /setbuilder  /cvote  /votes\n");
            strcat(ACMDS, "{009E00}Lvl 4: {FFFFFF}/fsay  /cchat  /fly  /startfly  /stopfly  /playaudio  /hcmds  /bcmds  /supervslap\n");
            strcat(ACMDS, "{009E00}Lvl 4: {FFFFFF}( + admin lvl 1-3 cmds )\n\n");
    	}
    	if(IsPlayerAdmin(playerid))
		{
            strcat(ACMDS, "{009E00}RCON: {FFFFFF}/setadmin  /setvip  /restart  /goto  /cvote  /votes  /gotoat  /ip  /a  /anopm\n");
            strcat(ACMDS, "{009E00}RCON: {FFFFFF}/ban  /kick  /banip  /unban  /fly  /checkweap  /kojam  /god  /reloadbans  /ap  /fsay\n");
            strcat(ACMDS, "{009E00}RCON: {FFFFFF}( Dastresi be Admin Tower )");
    	}
        ShowPlayerDialog(playerid, ACMDS_LIST , DIALOG_STYLE_MSGBOX, "{00C5B6}ACNR Admin CMDs", ACMDS, "Ok", "");
    }
    else
    {
        SendClientMessage(playerid, RED, "This command is restricted to [Head Helper] + [Admin lvl +1] + [Helper].");
    }
	return true;
}

CMD:wealth(playerid, params[])
{
	new targetid;
    if(!sscanf(params, "u", targetid))
    {
    	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
    	if(IsLoggedIn{targetid} == 0) return SendClientMessage(playerid, RED, "Player not logged in.");
        format(fstr, sizeof(fstr), "{FFFFFF}%s [%d] Total Wealth", GetName(targetid), targetid);
        format(fstr2, sizeof(fstr2), "{FFFFFF}Holding: $%d\nBank: $%d\nCredit: $%d\nEarnings: $%d", GetPlayerCash(targetid), BankInfo[targetid][Balance], BankInfo[targetid][Credit], GetPlayersBizEarnings(targetid));
    	ShowPlayerDialog(playerid, WEALTH_DIALOG, DIALOG_STYLE_MSGBOX, fstr, fstr2, "Ok", "");
    	return true;
    }
    else
    {
        format(fstr, sizeof(fstr), "{FFFFFF}Holding: $%d\nBank: $%d\nCredit: $%d\nEarnings: $%d", GetPlayerCash(playerid), BankInfo[playerid][Balance], BankInfo[playerid][Credit], GetPlayersBizEarnings(playerid));
    	ShowPlayerDialog(playerid, WEALTH_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Your Total Wealth", fstr, "Ok", "");
    }
    return true;
}

CMD:floor(playerid, params[])
{
    new flor;
    if(sscanf(params, "d", flor)) return SendClientMessage(playerid, 0x0080C0FF, "[USAGE]: /floor [0-12]");
    if(!IsPlayerInRangeOfPoint(playerid,63.5,1964.68, 2363.74, 11.29)) return SendClientMessage(playerid,0x0080C0FF,"shoma nazdike sakhteman nistid");
    if(flor > 12 || flor < 0) return SendClientMessage(playerid,RED,"In sakhteman faghat 12 tabaghe darad!");
	if(flor == 0)
	{
		if(IsPlayerInRangeOfPoint(playerid,2,  1964.68, 2363.74, 11.29  )) return SendClientMessage(playerid,RED,"Shoma dar tabagheye hamkaf hastid");
		MoveObject(ele,1964.68, 2363.74, 11.29 ,5.0);
		SendClientMessage(playerid,LIGHTGREEN,"DARHALE RAFTAN BE TABAGHEYE HAMKAF");
		return true;
	}
	else if(flor == 1)
	{
		if(IsPlayerInRangeOfPoint(playerid,2,  1964.68, 2363.74, 11.29 + 14.0  )) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 1 hastid");
		MoveObject(ele,1964.68, 2363.74, 11.29 + 14.0 ,5.0);
		SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE 1 ");
		return true;
	}
	else if(flor == 2)
	{
		if(IsPlayerInRangeOfPoint(playerid,2, 1964.68, 2363.74, 11.29 + 18.5 )) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 2 hastid");
        MoveObject(ele,1964.68, 2363.74, 11.29 + 18.5 ,5.0);
        SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE 2 ");
	}
	else if(flor == 3)
	{
		if(IsPlayerInRangeOfPoint(playerid,2, 1964.68, 2363.74, 11.29 + 18.5 + 4.5 )) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 3 hastid");
		MoveObject(ele,1964.68, 2363.74, 11.29 + 18.5 + 4.5 ,5.0);
		SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE 3 ");
	}
	else if(flor == 4)
	{
		if(IsPlayerInRangeOfPoint(playerid,2, 1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5 )) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 4 hastid");
		MoveObject(ele,1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5,5.0);
		SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE 4 ");
	}
	else if(flor == 5)
	{
		if(IsPlayerInRangeOfPoint(playerid,2, 1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5 + 4.5 )) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 5 hastid");
		MoveObject(ele,1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5+4.5,5.0);
		SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE 5 ");
	}
	else if(flor == 6)
	{
		if(IsPlayerInRangeOfPoint(playerid,2, 1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5 +4.5 +4.5)) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 6 hastid");
		MoveObject(ele,1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5+4.5+4.5,5.0);
		SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE 6 ");
	}
	else if(flor == 7)
	{
		if(IsPlayerInRangeOfPoint(playerid,2,1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5+4.5+4.5+4.5)) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 7 hastid");
        MoveObject(ele,1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5+4.5+4.5+4.5,5.0);
		SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE 7 ");
	}
	else if(flor == 8)
	{
		if(IsPlayerInRangeOfPoint(playerid,2,1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5+4.5+4.5+4.5+4.5)) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 8 hastid");
		MoveObject(ele,1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5+4.5+4.5+4.5+4.5,5.0);
		SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE 8 ");
	}
	else if(flor == 9)
	{
		if(IsPlayerInRangeOfPoint(playerid,2,1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5+4.5+4.5+4.5+4.5+4.5)) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 9 hastid");
		MoveObject(ele,1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5+4.5+4.5+4.5+4.5+4.5,5.0);
		SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE 9 ");
	}
	else if(flor == 10)
	{
		if(IsPlayerInRangeOfPoint(playerid,2,  1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5+4.5+4.5+4.5+4.5+4.5+4.5  )) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 10 hastid");
		MoveObject(ele,1964.68, 2363.74, 11.29 + 18.5 + 4.5 +4.5+4.5+4.5+4.5+4.5+4.5+4.5 ,5.0);
		SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE 10 ");
		return true;
	}
	else if(flor == 11)
	{
		if(IsPlayerInRangeOfPoint(playerid,2,  1964.68, 2363.74, 11.29 + 14.0 + 5.0 + 5.0 + 5.0 + 5.0 + 5.0 + 5.0 + 5.0 + 5.0 + 5.0 )) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 11 hastid");
		MoveObject(ele,1964.68, 2363.74, 11.29 + 14.0 + 5.0 + 5.0 + 5.0 + 5.0 + 5.0 + 5.0 + 5.0 + 5.0 + 5.0,5.0);
		SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE 11 ");
	}
		else if(flor == 12)
	{
		if(IsPlayerInRangeOfPoint(playerid,2,  1964.68, 2363.74, 11.29 + 63.0  )) return SendClientMessage(playerid,RED,"Shoma dar tabagheye 12 hastid");
		MoveObject(ele,1964.68, 2363.74, 11.29 + 63.5 ,5.0);
		SendClientMessage(playerid,LIGHTGREEN," DARHALE RAFTAN BE TABAGHEYE AKHAR ");
		return true;
	}
	return true;
}

CMD:vehcam(playerid, parasm[])
{
if(cambug{playerid} == 0)
{
cambug{playerid} = 1;
SendClientMessage(playerid, LIGHTBLUE," VEHCAM FAAL SHOD");
}
else
{
if(cambug{playerid} == 1)
{
cambug{playerid} = 0;
SendClientMessage(playerid,LIGHTGREEN,"VEHCAM GHEYRE FAAL SHOD");
}
}
return 1;
}

CMD:anopm(playerid,parasm[])
{
if(PlayerInfo[playerid][aLevel] > 2)
{
    if(IsAnopmOn{playerid} == 1)
    {
    IsAnopmOn{playerid} = 0;
    SendClientMessage(playerid, LIGHTGREEN,"(( Shoma Admin Message Daryaft Mikonid ))");
    }
    else
    {
    if(IsAnopmOn{playerid} == 0)
    {
    IsAnopmOn{playerid} = 1;
    SendClientMessage(playerid,RED,"(( Shoma Admin Message Daryaft NeMikonid ))");
    }
    }
    new astring[200];
    format(astring,sizeof(astring),"%s[%d] Typed: /anopm",GetName(playerid),playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
}
else if(IsPlayerAdmin(playerid))
{
    if(IsAnopmOn{playerid} == 1)
    {
    IsAnopmOn{playerid} = 0;
    SendClientMessage(playerid, LIGHTGREEN,"(( Shoma Admin Message Daryaft Mikonid ))");
    }
    else
    {
    if(IsAnopmOn{playerid} == 0)
    {
    IsAnopmOn{playerid} = 1;
    SendClientMessage(playerid,RED,"(( Shoma Admin Message Daryaft NeMikonid ))");
    }
    }
}
else
{
SendClientMessage(playerid,RED,"Faghat Admin lvl +2 mitavanad az in cmd estefade konad");
}
return 1;
}

CMD:vehcmds(playerid, params[])
{
    ShowPlayerDialog(playerid, VEH_MENU, DIALOG_STYLE_MSGBOX, "{FFFFFF}Vehicle Commands", "{FFFFFF}/myvehs /vehcam /service /setplate /boot /bonnet /deleteveh\n/alarm /lights /vlock(/lk) /park /(decline/accept)veh /sellvehto", "Ok", "");
    return true;
}

CMD:eject(playerid, params[])
{
    new VehID, ejectid;
    VehID = GetPlayerVehicleID(playerid);
    if(sscanf(params, "u", ejectid)) return SendClientMessage(playerid, RED, "[USAGE]: /(ej)ect [name/id]");
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, "Only the driver can eject passengers.");
    if(!IsPlayerConnected(ejectid)) return SendClientMessage(playerid, RED, "Player not found.");
    if(!IsPlayerInVehicle(ejectid, VehID)) return SendClientMessage(playerid, RED, "The player must be in your vehicle, to eject them.");
	{
        PlayerAzMashinBironKon(ejectid);
        format(fstr, sizeof(fstr), "You have ejected %s [%d] from your vehicle.", GetName(ejectid), ejectid);
        SendClientMessage(playerid, YELLOW, fstr);
        format(fstr, sizeof(fstr), "%s [%d] has ejected you from their vehicle.", GetName(playerid), playerid);
        SendClientMessage(ejectid, RED, fstr);
    }
    return true;
}

CMD:ej(playerid, params[]) return cmd_eject(playerid, params);

CMD:credits(playerid, params[])
{
    ShowPlayerDialog(playerid, CREDITS_LIST, DIALOG_STYLE_MSGBOX , "{FFFFFF}Sazandegan ACNR", "{FFFFFF}New Vegas Cops and Robbers(NVCNR) - v2.3 - by Weponz 2010-2012\nNew Vegas Cops and Robbers(NVCNR) - v2.3 - by Weponz 2010-2012 Edit: DopeX aka [ND]xXZeusXx\nAbolfazl Cops and Robbers(ACNR) - v2.2.2 - by Abolfazl 2015 - 2018 , 2024\nNigh Life Cops and Robbers(ACNR) - OPEN.mp - v2.2.2 - by Abolfazl 2024\nShoma mitavanid list kamele sazandegan ACNR ra dar \n{bf0000}Just-Samp.RozBlog.COM {ffffff}\nbebinid.", "Ok", "");
    new astring[100];
    format(astring,sizeof(astring),"%s [%d] typed: /credits", GetName(playerid), playerid);
    //SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:bankhelp(playerid,params[])
{
		new bastring[350];
		format(bastring,sizeof(bastring),"{ffffff} Whithdraw = Bardasht az hesab (/debit) \n Deposit = variz be hesab \n Balance = moshakhasat hesab \n Transfer = enteghal pool \n Credit = kart banki \n   Credit balance = moshakhasat kart banki   \n   Withdraw credit = bardasht az kart banki (/credit)   \n   Pay Debt = pardakht vam   \n   Loan = vam   \n Statement = moshakhasat koli ");
        ShowPlayerDialog(playerid,BANK_HELP,DIALOG_STYLE_MSGBOX,"{ffffff}Bank Help",bastring,"Ok","");
        new astring[100];
        format(astring,sizeof(astring),"%s [%d] typed: /bankhelp", GetName(playerid), playerid);
        //SendAdminMessage(GREY,astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
        return true;
}

CMD:stopaudio(playerid,params[])
{
	if(IsAccseptSong[playerid] == 1)
	{
        IsAccseptSong[playerid] = 0;
        SendClientMessage(playerid,RED,"Shoma AudioStream ra gheyre faal kardid.");
	}
	else if(IsAccseptSong[playerid] == 0)
	{
		IsAccseptSong[playerid] = 1;
        SendClientMessage(playerid,LIGHTGREEN,"Shoma AudioStream ra faal kardid.");
	}
    new astring[100];
    format(astring,sizeof(astring),"%s [%d] typed: /stopaudio", GetName(playerid), playerid);
    SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return 1;
}

CMD:playaudio(playerid,params[])
{
    new url[100];
    if(PlayerInfo[playerid][aLevel] != 4) return SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
    {
        if(sscanf(params,"s[100]",url)) return SendClientMessage(playerid,RED,"[USAGE]: /playaudio [url]");
        {
			foreach(new i : Player)
			{
                    PlayAudioStreamForPlayer(i, url);
            }
        }
        new astring[100];
        format(astring,sizeof(astring),"%s [%d] typed: /playaudio %s", GetName(playerid), playerid, url);
        SendAdminMessage(GREY,astring);
        SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
        return 1;
    }
}

CMD:afklist(playerid,params[])
{
  new string[128];
  new Lsname[MAX_PLAYER_NAME];
  new cstring[128];
  SendClientMessage(playerid, ORANGE, "______________________________________");
  SendClientMessage(playerid, GREEN, "       AFK List:");
  format(cstring,sizeof(cstring),"Hamaknon %d bazikon dar AFK mode hastand.", AFKcount);
  SendClientMessage(playerid, ORANGE, cstring);
  foreach(new i : Player)
  {
   if(IsPlayerConnected(i))
   {
	if(Inactive[i] == true)
	{
	  GetPlayerName(i,Lsname,sizeof(Lsname));
	  format(string,sizeof(string),"{33FF33}%s [%d] is Away From the Keyboard {FF0000}(AFK)\r\n", Lsname, i);
	  SendClientMessage(playerid, ORANGE, string);
	}
   }
  }
  return 1;
}

CMD:updates(playerid, params[])
{
    new UPS[2000];
    strcat(UPS, "{FFFFFF}Version 2.2.0 UPDATES : \n");
    strcat(UPS, "{FFFFFF}  Updating to OPEN.mp.\n");
    strcat(UPS, "{FFFFFF}  Updating libraries.\n");
    strcat(UPS, "{FFFFFF}  Updated foreach.\n");

    strcat(UPS, "{FFFFFF}Version 2.2.1 UPDATES : \n");
    strcat(UPS, "{FFFFFF}  Enabled UsePlayerPedAnims.\n");
    strcat(UPS, "{FFFFFF}  Enabled AllowInteriorWeapons.\n");
    strcat(UPS, "{FFFFFF}  Kinda fixed some VEHICLE SPEED CODES.\n");
    strcat(UPS, "{FFFFFF}  Fixed expired audio stream links.\n");
    strcat(UPS, "{FFFFFF}  Fixed format(zone, len, SACities[i][City_Name], 0);.\n");
    strcat(UPS, "{FFFFFF}  Fixed GetVehicleName.\n");
    strcat(UPS, "{FFFFFF}  Updated 6 filterscripts.\n");

    strcat(UPS, "{FFFFFF}Version 2.2.2 UPDATES : \n");
    strcat(UPS, "{FFFFFF}  Fixed a Loop problem under GamemodeInit.\n");
    strcat(UPS, "{FFFFFF}  Fixed speed numbers.\n");
    strcat(UPS, "{FFFFFF}  Added /todolist cmd.\n");

    strcat(UPS, "{FFFFFF}Version 2.2.2 BETA UPDATES : \n");
    strcat(UPS, "{FFFFFF}  Login dialog bug fix.\n"); //beta
    strcat(UPS, "{FFFFFF}  Creates scriptfiles directories.\n"); //beta
    strcat(UPS, "{FFFFFF}  .\n");

    strcat(UPS, "{FFFFFF}Version 2.2.2 ALFA UPDATES : \n");
    strcat(UPS, "{FFFFFF}  Added some DEBUG massages.\n");
    strcat(UPS, "{FFFFFF}  Fixed IsPlayersFirstSpawn.\n");
    strcat(UPS, "{FFFFFF}  Fixed Player health on SaveUserStats.\n");
    strcat(UPS, "{FFFFFF}  Fixed /savestats cmd.\n");
    strcat(UPS, "{FFFFFF}  Removed hashing password.\n");
    strcat(UPS, "{FFFFFF}  Fixed SavePosStats.\n");
    strcat(UPS, "{FFFFFF}  .\n");

    strcat(UPS, "{FFFFFF}Version 2.2.2 TETA UPDATES : \n");
    strcat(UPS, "{FFFFFF}  Fixed load user file after server restart.\n");
    strcat(UPS, "{FFFFFF}  fixed login_menu bug.\n");
    strcat(UPS, "{FFFFFF}  Disabled player name text on screen after exiting vehicle.\n");
    strcat(UPS, "{FFFFFF}  Fixed Login_menu bug.\n");
    strcat(UPS, "{FFFFFF}  Hide car name textdraw on player state change.\n");
    strcat(UPS, "{FFFFFF}  Fixed vehicle speed numbers.\n");
    strcat(UPS, "{FFFFFF}  Added 3D speedo meter /tdspeedo.\n");
    strcat(UPS, "{FFFFFF}  Added Client Commands to cmd list (/cmds).\n");
    strcat(UPS, "{FFFFFF}  Disabled Anti Bad Words.\n");
    strcat(UPS, "{FFFFFF}  Updated some callbacks.\n");
    strcat(UPS, "{FFFFFF}  Fixed /sleep cmd.\n");
    strcat(UPS, "{FFFFFF}  Added /stopanim cmd.\n");
    strcat(UPS, "{FFFFFF}  Added /getplayer cmd to Admin+3.\n");
    strcat(UPS, "{FFFFFF}  Added /vehhelp cmd.\n");
    strcat(UPS, "{FFFFFF}  Now /dcar will change vehiclepos to 0,0,3.\n");
    strcat(UPS, "{FFFFFF}  Increased police station gates range.\n");
    strcat(UPS, "{FFFFFF}  Increased police cmds range.\n");
    strcat(UPS, "{FFFFFF}  Added /helpme cmd.\n");
    strcat(UPS, "{FFFFFF}  Added /helpadmin cmd.\n");
    strcat(UPS, "{FFFFFF}  Changed Vehicle Neons to Streamer Dynamic Objects.\n");
    strcat(UPS, "{FFFFFF}  Changed to PLAYER_MARKERS_MODE_GLOBAL.\n");
    strcat(UPS, "{FFFFFF}  Added Group names to chat massages.\n");
    strcat(UPS, "{FFFFFF}  .\n");

    strcat(UPS, "{FFFFFF}github.com/Kingvornex/ACNR-OPENMP");
    ShowPlayerDialog(playerid, UPDATES, DIALOG_STYLE_MSGBOX , "{FFFFFF}ACNR Updates", UPS, "Ok", "");
    new astring[100];
    format(astring,sizeof(astring),"%s [%d] typed: /updates", GetName(playerid), playerid);
    //SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:todolist(playerid, params[])
{
    new UPS[2000];
    strcat(UPS, "{FFFFFF}Version 2.2.2 ToDo List : \n");
    strcat(UPS, "{FFFFFF}  Add easyDialog.\n");
    strcat(UPS, "{FFFFFF}  Fix Anti Fake Kill.\n");
    strcat(UPS, "{FFFFFF}  fix login password.\n");
    strcat(UPS, "{FFFFFF}  Save Vehicle Color with TUNE_MENU2 Purchases.\n");
    strcat(UPS, "{FFFFFF}  Fix texdraws and loading screen after /restart.\n");
    strcat(UPS, "{FFFFFF}  save in user files when the data being edited.\n");
    strcat(UPS, "{FFFFFF}  .\n");
    strcat(UPS, "{FFFFFF}  .\n");
    strcat(UPS, "{FFFFFF}  .\n");
    strcat(UPS, "{FFFFFF}  .\n");
    strcat(UPS, "{FFFFFF}  .\n");
    strcat(UPS, "{FFFFFF}  .\n");
    strcat(UPS, "{FFFFFF}  .\n");
    strcat(UPS, "{FFFFFF}  .\n");
    strcat(UPS, "{FFFFFF}  .\n");
    strcat(UPS, "{FFFFFF}  .\n");
    strcat(UPS, "{FFFFFF}  .\n");
    strcat(UPS, "{FFFFFF}github.com/Kingvornex/ACNR-OPENMP");
    ShowPlayerDialog(playerid, UPDATES, DIALOG_STYLE_MSGBOX , "{FFFFFF}ACNR Updates", UPS, "Ok", "");
    new astring[100];
    format(astring,sizeof(astring),"%s [%d] typed: /updates", GetName(playerid), playerid);
    //SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:helpadmin(playerid, params[]) {
Dialog_Show(playerid, HELP_ADMIN, DIALOG_STYLE_TABLIST_HEADERS, "ADMIN Help Menu", "Command\tparameters\tAdmin Level\n\
/objlist\t[-]\t+1\n\
/createobject\t[objectid]\t+1\n\
/cancelobject\t[-]\t+1\n\
/setobject\t[-]\t+1\n\
/deletesetobjects\t[-]\t+1\n\
/attachobject\t[-]\t+1\n\
/detachobject\t[-]\t+1\n\
/moveobject\t[symbol] [coord] [distance] [seconds]\t+1\n\
/moveup\t[coord]\t+1\n\
/movedown\t[coord]\t+1\n\
/movenorth\t[coord]\t+1\n\
/movesouth\t[coord]\t+1\n\
/movewest\t[coord]\t+1\n\
/moveeast\t[coord]\t+1\n\
/rotatex\t[rotation]\t+1\n\
/rotatey\t[rotation]\t+1\n\
/rotatez\t[rotation]\t+1\n\
/createhouse\t[type]\t4\n\
/removehouse\t[house id]\t4\n\
/removeallhouses\t[-]\t4\n\
/resethouseprices\t[-]\t4\n\
/sellhouse\t[house id]\t4\n\
/sellallhouses\t[-]\t4\n\
/...\t[...]\t...", "OK", "Close");
return 1;
}

Dialog:HELP_ADMIN(playerid, response, listitem, inputtext[])
{
    if(response)
	{
		new str[64];
        format(str, 64, "You have selected the '%s'.", inputtext);
        SendClientMessage(playerid, -1, str);
	}
	return 1;
}

CMD:helpme(playerid, params[]) {
    Dialog_Show(playerid, HelpMe, DIALOG_STYLE_TABLIST_HEADERS, "Help Menu", "CMD\tCommand\tDescription\n\
		/cmds\t/commands\tCommands List\n\
		/acmds\t-\tAdmin Commands List\n\
		/gcmds\t-\tGroup Commands\n\
		/vehcmds\t/vehhelp\tVehicle Commands\n\
		/help\t/classhelp\tClass Help\n\
		/cp\t-\tControl Panel\n\
		/faqs\t-\tFrequently Asked Questions\n\
		/w\t/whisper\t-\n\
		/vcmds\t-\tVIP Commands", "OK", "Close");
    return 1;
}

Dialog:HelpMe(playerid, response, listitem, inputtext[])
{
    if(response)
	{
//		new str[64];
//        format(str, 64, "You have selected the '%s'.", inputtext);
//        SendClientMessage(playerid, -1, str);
        switch (listitem)
			{
				case 0:
				{
					return cmd_cmds(playerid, "");
				}
				case 1:
				{
					return cmd_acmds(playerid, "");
				}
				case 2:
				{
					return cmd_gcmds(playerid, "");
				}
				case 3:
				{
					return cmd_vehcmds(playerid, "");
				}
				case 4:
				{
					return cmd_vcmds(playerid, "");
				}
				case 5:
				{
					return cmd_help(playerid, "");
				}
				case 6:
				{
					return cmd_cp(playerid, "");
				}
				case 7:
				{
					return cmd_faqs(playerid, "");
				}
				case 8:
				{
					return cmd_w(playerid, "");
				}
			}
    }
    return 1;
}

CMD:votecmds(playerid, params[])
{
	ShowPlayerDialog(playerid, VOTECMDS, DIALOG_STYLE_MSGBOX, "{FFFFFF}Vote System Commands", "{FFFFFF}/vote : to create a vote\n /yes : to vote yes\n  /no : to vote no ", "Ok", "");
    return true;
}

CMD:vote(playerid, params[])
{
	new time, res[50];
	if(sscanf(params, "ds[50]", time, res)) return SendClientMessage(playerid, RED, "Make a vote: /vote <time> <Text>");
    if(OnVote == 1) return SendClientMessage(playerid,RED,"There is a vote already started");
    if(time <= 59 || time >= 301) return SendClientMessage(playerid, RED, "Zaman vote bayad beyne 60 ta 300 sanie bashad.");
    new str[128], string[200];
    OnVote = 1;
    strcpy(Voting[Vote], res, 50);
    format(str, sizeof(str), "    %s has started a vote: %s", GetName(playerid), res);
    format(string, sizeof(string), "    Zaman vote: %d sanie.", time);
    SendMessageToAll(LIGHTGREEN, "||================ VOTE ==============||");
    SendMessageToAll(LIGHTGREEN, str);
    SendMessageToAll(LIGHTGREEN, "    Type  /yes  or  /no  to vote.");
    SendMessageToAll(LIGHTGREEN, string);
    SendMessageToAll(LIGHTGREEN, "||================ VOTE ==============||");
    votetimer = SetTimer("CancelVote", (time * 1000), 0);
    print(str);
    return 1;
}

CMD:yes(playerid, params[])
{
	new str[128];
	if(OnVote == 1)
	{
		if(Voted[playerid] != -1) return SendClientMessage(playerid, RED, "You have already voted, You can't vote again!");
		Voted[playerid] = 1;
		Voting[VoteY]++;
		format(str, sizeof(str), "Vote: %s | Yes: %d , No: %d", Voting[Vote], Voting[VoteY], Voting[VoteN]);
		SendClientMessage(playerid, GREEN, str);
		return 1;
	}
	else return SendClientMessage(playerid, RED, "There is no vote currently");
}

CMD:no(playerid, params[])
{
	new str[128];
	if(OnVote == 1)
	{
		if(Voted[playerid] != -1) return SendClientMessage(playerid, RED, "You have already voted, You can't vote again!");
		Voted[playerid] = 0;
		Voting[VoteN]++;
		format(str, sizeof(str), "Vote: %s | Yes: %d , No: %d", Voting[Vote], Voting[VoteY], Voting[VoteN]);
		SendClientMessage(playerid, GREEN, str);
		return 1;
	}
	else return SendClientMessage(playerid, RED, "There is no vote currently");
}

CMD:cvote(playerid, params[])
{
	new str[128], res[50];
	if(sscanf(params, "s[50]", res)) return SendClientMessage(playerid, RED, "Cancel vote: /cvote <Reason>");
	if(OnVote == 0) return SendClientMessage(playerid, RED, "There is no vote currently");
    if(PlayerInfo[playerid][aLevel] >= 4)
    {
    	if(!isnull(res))
    	format(str, sizeof(str), "Administrator %s has canceled the vote: %s", GetName(playerid), res);
    	else format(str, sizeof(str), "Administrator %s has canceled the vote", GetName(playerid));
    	SendMessageToAll(RED, str);
    	OnVote = 0;
    	foreach(new i : Player) Voted[i] = -1;
    	Voting[VoteY] = 0;
    	Voting[VoteN] = 0;
    	KillTimer(votetimer);
    	return 1;
	}
	else if(IsPlayerAdmin(playerid))
	{
	    if(!isnull(res))
	    format(str, sizeof(str), "Administrator %s has canceled the vote: %s", GetName(playerid), res);
	    else format(str, sizeof(str), "Administrator %s has canceled the vote", GetName(playerid));
	    SendMessageToAll(RED, str);
    	OnVote = 0;
    	foreach(new i : Player) Voted[i] = -1;
    	Voting[VoteY] = 0;
    	Voting[VoteN] = 0;
    	KillTimer(votetimer);
	}
	else
	{
        SendClientMessage(playerid, RED, "You're not allowed to use this command");
	}
	return 1;
}

CMD:votes(playerid, params[])
{
	new Players = 0;
	new string[500], str[128];
	new vote_res[][] = {"No", "Yes"};
	if(PlayerInfo[playerid][aLevel] >= 4)
    {
    	string = "{FFFFFF}";

    	foreach(new i : Player)
    	{
        	if (Voted[i] != -1)
        	{
            	format(str, 128, "{FFFFFF}%s - {00FF00}%s\n", GetName(i), vote_res[Voted[i]]);
            	strcat(string, str, sizeof(string));
            	Players++;
        	}
    	}
    	if(Players == 0)
    	{
       	    ShowPlayerDialog(playerid, VOTES1,DIALOG_STYLE_MSGBOX,"Note","{FF0000}No one has voted" ,"Close","");
		}
		if(OnVote == 0)
		{
     	   ShowPlayerDialog(playerid, VOTES2,DIALOG_STYLE_MSGBOX,"Note","{FF0000}There is no vote currently" ,"Close","");
		}
     	else
     	{
		    ShowPlayerDialog(playerid,VOTES3,DIALOG_STYLE_LIST,"Players Votes",string,"OK","");
		}
     	return 1;
    }
    else if(IsPlayerAdmin(playerid))
    {
    	string = "{FFFFFF}";

    	foreach(new i : Player)
    	{
        	if (Voted[i] != -1)
        	{
            	format(str, 128, "{FFFFFF}%s - {00FF00}%s\n", GetName(i), vote_res[Voted[i]]);
            	strcat(string, str, sizeof(string));
            	Players++;
        	}
    	}
    	if(Players == 0)
       	ShowPlayerDialog(playerid, VOTES1,DIALOG_STYLE_MSGBOX,"Note","{FF0000}No one has voted" ,"Close","");
        if(OnVote == 0)
     	ShowPlayerDialog(playerid, VOTES2,DIALOG_STYLE_MSGBOX,"Note","{FF0000}There is no vote currently" ,"Close","");
     	else ShowPlayerDialog(playerid,VOTES3,DIALOG_STYLE_LIST,"Players Votes",string,"OK","");
     	return 1;
    }
    else
    {
        SendClientMessage(playerid, RED, "Only admin lvl 4 can use this cmd.");
    }
	return 1;
}

public CancelVote()
{
	if(OnVote == 0) return 0;
	new str[128], str2[128];
	foreach(new i : Player) Voted[i] = -1;
	format(str, sizeof(str), "    Vote: %s is OVER!", Voting[Vote]);
	format(str2, sizeof(str2), "    Yes: %d , No: %d", Voting[VoteY], Voting[VoteN]);
    SendMessageToAll(LIGHTGREEN, "||================ VOTE ==============||");
	SendMessageToAll(LIGHTGREEN, str);
	SendMessageToAll(LIGHTGREEN, str2);
    SendMessageToAll(LIGHTGREEN, "||================ VOTE ==============||");
	OnVote = 0;
	Voting[VoteY] = 0;
	Voting[VoteN] = 0;
	KillTimer(votetimer);
	return 1;
}

CMD:sazandegan(playerid, params[])
{
    ShowPlayerDialog(playerid, CREDITS_LIST, DIALOG_STYLE_MSGBOX , "{FFFFFF}Sazandegan ACNR", "{FFFFFF}Shoma mitavanid list kamele sazandegan ACNR ra dar \n{bf0000}Just-Samp.RozBlog.COM {ffffff}\nbebinid.", "Ok", "");
    new astring[100];
    format(astring,sizeof(astring),"%s [%d] typed: /sazandegan", GetName(playerid), playerid);
    //SendAdminMessage(GREY,astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:ap(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] >= 2 || IsPlayerAdmin(playerid))
	{
        ShowPlayerDialog(playerid, PANEL_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Admin Panel", "{FFFFFF}Weapons\nVehicles\nTeleports\nSkins\nTune Menu\nEvents\nObjects\nAdmin Commands", "Select", "Cancel");
		IsPlayerUsingTuneMenu{playerid} = true;
	}
	else
	{
	    return SendClientMessage(playerid,RED,"Only admin level 2+ can use this command.");
	}
	return true;
}

CMD:cp(playerid, params[])
{
	ShowPlayerDialog(playerid, CONTROL_PANEL, DIALOG_STYLE_LIST, "{FFFFFF}Player Control Panel", "{FFFFFF}Change Password\nMy Stats\nPlayer Stats\nReport Someone\nHelp\nCommands\nRules\nFAQ", "Select", "Cancel");
	return true;
}

CMD:sellvehto(playerid, params[])
{
    new playerid2, price, string[150], string2[150], Float:posX, Float:posY, Float:posZ;
    if(DegreeInfo[playerid][dDealer] < 1) return SendClientMessage(playerid, RED, "Shoma baraye estefade az in cmd niaz be Madrak Dealership darid.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You must be in a owned vehicle to use this command.");
	if(strcmp(GetName(playerid), VehicleInfo[IsShopVehicle[GetPlayerVehicleID(playerid)]][vOwner], false) != 0) return SendClientMessage(playerid, RED, "You do not own this vehicle.");
	if(sscanf(params, "ud", playerid2, price)) return SendClientMessage(playerid, RED, "[USAGE]: /sellvehto [name/id] [price]");
	GetPlayerPos(playerid2, posX, posY, posZ);
	if(!IsPlayerConnected(playerid2)) return SendClientMessage(playerid, RED, "Player not found.");
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, posX, posY, posZ)) return SendClientMessage(playerid, RED, "You need to be near the player to offer your vehicle to them.");
	{
		offer_price[playerid2] = price;
		offerer_id[playerid2] = playerid;
		offeredveh[playerid2] = IsShopVehicle[GetPlayerVehicleID(playerid)];
		format(string, sizeof(string), "Vehicle offered to %s for $%d, please await response.", GetName(playerid2), price);
		SendClientMessage(playerid, WHITE, string);
		format(string2, sizeof(string2), "%s [%d] has offered their vehicle to you for $%d, use /(accept/decline)veh", GetName(playerid), playerid, price);
		SendClientMessage(playerid2, WHITE, string2);
		SetTimerEx("AcceptCMDExpire", 30000, false, "d", playerid2);
		new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /sellvehto %d %d", GetName(playerid), playerid, playerid2, price);
    	SendAdminMessage(GREY, astring);
    	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	return true;
}

CMD:acceptveh(playerid, params[])
{
	new Float:posX, Float:posY, Float:posZ;
	GetPlayerPos(offerer_id[playerid], posX, posY, posZ);
    if(!IsPlayerConnected(offerer_id[playerid])) return SendClientMessage(playerid, RED, "The offerer has disconnected.");
    if(offerer_id[playerid] == -1) return SendClientMessage(playerid, RED, "You have not been offered a vehicle recently to accept.");
	if(GetPlayerCash(playerid) < offer_price[playerid]) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
    if(!IsPlayerInRangeOfPoint(playerid, 10.0, posX, posY, posZ)) return SendClientMessage(playerid, RED, "You need to be near the offerer to buy the vehicle from them.");
	new string[150], string2[150];
	GivePlayerCash(offerer_id[playerid], offer_price[playerid]);
	GivePlayerCash(playerid, - offer_price[playerid]);
	VehicleInfo[offeredveh[playerid]][vPrice] = offer_price[playerid];
	new vowner[24], vplate[32];
	format(vowner, sizeof(vowner), "%s", GetName(playerid));
	format(vplate, sizeof(vplate), "ACNR");
	VehicleInfo[offeredveh[playerid]][vOwner] = vowner;
	VehicleInfo[offeredveh[playerid]][vPlate] = vplate;
	VehicleInfo[offeredveh[playerid]][vLocked] = 0;
	SaveVehicleStats(offeredveh[playerid]);
	PlayerAzMashinBironKon(offerer_id[playerid]);
	TogglePlayerControllable(offerer_id[playerid], true);
	format(string, sizeof(string), "Vehicle sold to %s for $%d", GetName(playerid), offer_price[playerid]);
	SendClientMessage(offerer_id[playerid], WHITE, string);
	format(string2, sizeof(string2), "Vehicle purchased from %s for $%d", GetName(offerer_id[playerid]), offer_price[playerid]);
	SendClientMessage(playerid, WHITE, string2);
	offer_price[playerid] = -1;
	offerer_id[playerid] = -1;
	offeredveh[playerid] = -1;
	new astring[100];
    format(astring, sizeof(astring), "%s [%d] typed: /acceptveh", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:declineveh(playerid, params[])
{
    new string[150];
    if(offerer_id[playerid] == -1) return SendClientMessage(playerid, RED, "You have not been offered a vehicle recently to decline.");
	offer_price[playerid] = -1;
	offerer_id[playerid] = -1;
	format(string, sizeof(string), "%s [%d] has declined your offer.", GetName(playerid), playerid);
	SendClientMessage(offerer_id[playerid], RED, string);
	SendClientMessage(playerid, WHITE, "Offer declined.");
	new astring[100];
    format(astring, sizeof(astring), "%s [%d] typed: /declineveh", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:deleteveh(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in an owned vehicle to use this command.");
	new v = GetPlayerVehicleID(playerid);
	if(IsPlayerInOwnedVehicle(playerid, v) == 0) return SendClientMessage(playerid, RED, "You dont own this vehicle.");
	{
		if(verifydestroycar{playerid} == 0)
		{
			SendClientMessage(playerid, RED, "WARNING: Are you sure you would like to completely delete this vehicle? (NO REFUND)");
			SendClientMessage(playerid, WHITE, "Type /deleteveh again to confirm, otherwise type /canceldeletion");
			verifydestroycar{playerid} = 1;
			return true;
		}
		else if(verifydestroycar{playerid} == 1)
		{
		    new file[40];
			format(file, sizeof(file), VEH_FILE, IsShopVehicle[v]);
			PlayerAzMashinBironKon(playerid);
			DestroyNeons(GetPlayerVehicleID(playerid));
			DestroyVehicle(GetPlayerVehicleID(playerid));
			fremove(file);
			GetPlayerVehicles{playerid}--;
	 		GetServerVehicles--;
		    verifydestroycar{playerid} = 0;
		    SendClientMessage(playerid, WHITE, "You have deleted this vehicle, you now have (1) extra empty vehicle slot.");
		}
	}
	new astring[100];
    format(astring, sizeof(astring), "%s [%d] typed: /deleteveh", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:canceldeletion(playerid, params[])
{
	if(verifydestroycar{playerid} == 0) return SendClientMessage(playerid, RED, "You have not tried to delete any vehicles yet, use /deleteveh");
	verifydestroycar{playerid} = 0;
	SendClientMessage(playerid, WHITE, "Vehicle deletion cancelled.");
	new astring[100];
    format(astring, sizeof(astring), "%s [%d] typed: /canceldeletion", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
    return true;
}

CMD:park(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in an owned vehicle to use this command.");
	new v = GetPlayerVehicleID(playerid), Float:Pos[4];
	if(IsPlayerInOwnedVehicle(playerid, v) == 0) return SendClientMessage(playerid, RED, "You dont own this vehicle.");
	{
		GetVehiclePos(v, Pos[0], Pos[1], Pos[2]);
		GetVehicleZAngle(v, Pos[3]);
		VehicleInfo[IsShopVehicle[v]][vPosX] = Pos[0];
		VehicleInfo[IsShopVehicle[v]][vPosY] = Pos[1];
		VehicleInfo[IsShopVehicle[v]][vPosZ] = Pos[2];
		VehicleInfo[IsShopVehicle[v]][vPosA] = Pos[3];
		SendClientMessage(playerid, WHITE, "Vehicle parked, it will now load at this position.");
		SaveVehicleStats(IsShopVehicle[v]);
	}
	return true;
}

CMD:setplate(playerid, params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You need to be in an owned vehicle to use this command.");
	new v = GetPlayerVehicleID(playerid), number[32], color1, color2;
	if(IsPlayerInOwnedVehicle(playerid, v) == 0) return SendClientMessage(playerid, RED, "You dont own this vehicle.");
	if(sscanf(params, "s[32]", number)) return SendClientMessage(playerid, RED, "[USAGE]: /setplate [number]");
	if(strlen(number) < 0 || strlen(number) > 32) return SendClientMessage(playerid, RED, "The plate number can only contain 0-32 characters.");
    if(GetVehicleColor(v, color1, color2))
	{
		new Float:vPos[4];
		GetVehiclePos(v, vPos[0], vPos[1], vPos[2]);
		GetVehicleZAngle(v, vPos[3]);
		strmid(VehicleInfo[IsShopVehicle[v]][vPlate], number, 0, 32, 32);
		SetVehicleNumberPlate(v, number);
		SetVehicleToRespawn(v);
		SetVehiclePos(v, vPos[0], vPos[1], vPos[2]);
		SetVehicleZAngle(v, vPos[3]);
		PutPlayerInVehicle(playerid, v, 0);
		ChangeVehicleColor(v, color1, color2);
		new string[150];
		format(string, sizeof(string), "You have saved your vehicles number plate to: %s", number);
		SendClientMessage(playerid, WHITE, string);
		SaveVehicleStats(IsShopVehicle[v]);
	}
	return true;
}

CMD:lk(playerid, params[])
{
	new string[150];
    if(PlayerInfo[playerid][vLock] == 0) return SendClientMessage(playerid, RED, "You dont own a vLock, buy one at a 24/7 store.");
	if(GetClosestOwnedVehID(playerid) == INVALID_VEHICLE_ID) return SendClientMessage(playerid, RED, "You need to be near an owned vehicle to use this command.");
    new v = GetClosestOwnedVehID(playerid);
	if(VehicleInfo[IsShopVehicle[v]][vLocked] == 0)
	{
	    VehicleInfo[IsShopVehicle[v]][vLocked] = 1;
		SetVehicleParamsForAll(v, 0, 1);
        GetVehicleParamsEx(v, engine, lights, alarm, doors, bonnet, boot, vcondition);
		SetVehicleParamsEx(v, engine, lights, alarm, ON, bonnet, boot, vcondition);
		SaveVehicleStats(IsShopVehicle[v]);
		GameTextForPlayer(playerid, "~g~Locked", 3000, 5);
		PlayerPlaySound(playerid, 1147, 0.0, 0.0, 10.0);
		format(string, sizeof(string), "%s locks their vehicle...", GetName(playerid));
        ProxDetector(20.0, playerid, string, RED, RED, RED, RED, RED);
	}
	else
	{
	    VehicleInfo[IsShopVehicle[v]][vLocked] = 0;
		SetVehicleParamsForAll(v, 0, 0);
        GetVehicleParamsEx(v, engine, lights, alarm, doors, bonnet, boot, vcondition);
		SetVehicleParamsEx(v, engine, lights, alarm, OFF, bonnet, boot, vcondition);
		SaveVehicleStats(IsShopVehicle[v]);
		GameTextForPlayer(playerid, "~r~Unlocked", 3000, 5);
		PlayerPlaySound(playerid, 1147, 0.0, 0.0, 10.0);
		format(string, sizeof(string), "%s unlocks their vehicle...", GetName(playerid));
        ProxDetector(20.0, playerid, string, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
	}
	return true;
}

CMD:vlock(playerid, params[])
{
	new string[150];
    if(PlayerInfo[playerid][vLock] == 0) return SendClientMessage(playerid, RED, "You dont own a vLock, buy one at a 24/7 store.");
	if(GetClosestOwnedVehID(playerid) == INVALID_VEHICLE_ID) return SendClientMessage(playerid, RED, "You need to be near an owned vehicle to use this command.");
    new v = GetClosestOwnedVehID(playerid);
	if(VehicleInfo[IsShopVehicle[v]][vLocked] == 0)
	{
	    VehicleInfo[IsShopVehicle[v]][vLocked] = 1;
		SetVehicleParamsForAll(v, 0, 1);
        GetVehicleParamsEx(v, engine, lights, alarm, doors, bonnet, boot, vcondition);
		SetVehicleParamsEx(v, engine, lights, alarm, ON, bonnet, boot, vcondition);
		SaveVehicleStats(IsShopVehicle[v]);
		GameTextForPlayer(playerid, "~g~Locked", 3000, 5);
		PlayerPlaySound(playerid, 1147, 0.0, 0.0, 10.0);
		format(string, sizeof(string), "%s locks their vehicle...", GetName(playerid));
        ProxDetector(20.0, playerid, string, RED, RED, RED, RED, RED);
	}
	else
	{
	    VehicleInfo[IsShopVehicle[v]][vLocked] = 0;
		SetVehicleParamsForAll(v, 0, 0);
        GetVehicleParamsEx(v, engine, lights, alarm, doors, bonnet, boot, vcondition);
		SetVehicleParamsEx(v, engine, lights, alarm, OFF, bonnet, boot, vcondition);
		SaveVehicleStats(IsShopVehicle[v]);
		GameTextForPlayer(playerid, "~r~Unlocked", 3000, 5);
		PlayerPlaySound(playerid, 1147, 0.0, 0.0, 10.0);
		format(string, sizeof(string), "%s unlocks their vehicle...", GetName(playerid));
        ProxDetector(20.0, playerid, string, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
	}
	return true;
}

CMD:myvehs(playerid, params[])
{
	new count = 0, slots[600];
	if(GetPlayerVehicles{playerid} == 0) return SendClientMessage(playerid, RED, "Shoma hich mashini nadari!.");
	for(new v = 0; v < MAX_SHOP_VEHICLES; v++)
	{
		if(IsShopVehicle[v] != -1)
		{
	    	if(!strcmp(GetName(playerid), VehicleInfo[IsShopVehicle[v]][vOwner], false))
	        {
	            Vehicle_Data_Model[playerid][count] = VehicleInfo[IsShopVehicle[v]][vModel];
	            Vehicle_Data_ID[playerid][count] = v;
	            count++;
	            if(count == MAX_VIP_VEHS)
	            {
	                break;
	            }
	            else continue;
	        }
		}
	}
	if(count == 1)
	{
	    format(slots, sizeof(slots), "Vehicle 1: %s",
		GlobalVehicleNames[Vehicle_Data_Model[playerid][0] - 400]);
	    ShowPlayerDialog(playerid, MY_VEHS_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Owned Vehicle List", slots, "Locate", "Cancel");
	    return true;
	}
	else if(count == 2)
	{
	    format(slots, sizeof(slots), "Vehicle 1: %s\nVehicle 2: %s",
		GlobalVehicleNames[Vehicle_Data_Model[playerid][0] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][1] - 400]);
	    ShowPlayerDialog(playerid, MY_VEHS_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Owned Vehicle List", slots, "Locate", "Cancel");
	    return true;
	}
	else if(count == 3)
	{
	    format(slots, sizeof(slots), "Vehicle 1: %s\nVehicle 2: %s\nVehicle 3: %s",
		GlobalVehicleNames[Vehicle_Data_Model[playerid][0] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][1] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][2] - 400]);
	    ShowPlayerDialog(playerid, MY_VEHS_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Owned Vehicle List", slots, "Locate", "Cancel");
	    return true;
	}
	else if(count == 4)
	{
	    format(slots, sizeof(slots), "Vehicle 1: %s\nVehicle 2: %s\nVehicle 3: %s\nVehicle 4: %s",
		GlobalVehicleNames[Vehicle_Data_Model[playerid][0] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][1] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][2] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][3] - 400]);
	    ShowPlayerDialog(playerid, MY_VEHS_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Owned Vehicle List", slots, "Locate", "Cancel");
	    return true;
	}
	else if(count == 5)
	{
	    format(slots, sizeof(slots), "Vehicle 1: %s\nVehicle 2: %s\nVehicle 3: %s\nVehicle 4: %s\nVehicle 5: %s",
		GlobalVehicleNames[Vehicle_Data_Model[playerid][0] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][1] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][2] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][3] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][4] - 400]);
	    ShowPlayerDialog(playerid, MY_VEHS_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Owned Vehicle List", slots, "Locate", "Cancel");
	    return true;
	}
	else if(count == 6)
	{
	    format(slots, sizeof(slots), "Vehicle 1: %s\nVehicle 2: %s\nVehicle 3: %s\nVehicle 4: %s\nVehicle 5: %s\nVehicle 6: %s",
		GlobalVehicleNames[Vehicle_Data_Model[playerid][0] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][1] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][2] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][3] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][4] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][5] - 400]);
	    ShowPlayerDialog(playerid, MY_VEHS_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Owned Vehicle List", slots, "Locate", "Cancel");
	    return true;
	}
	else if(count == 7)
	{
	    format(slots, sizeof(slots), "Vehicle 1: %s\nVehicle 2: %s\nVehicle 3: %s\nVehicle 4: %s\nVehicle 5: %s\nVehicle 6: %s\nVehicle 7: %s",
		GlobalVehicleNames[Vehicle_Data_Model[playerid][0] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][1] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][2] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][3] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][4] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][5] - 400], GlobalVehicleNames[Vehicle_Data_Model[playerid][6] - 400]);
	    ShowPlayerDialog(playerid, MY_VEHS_MENU, DIALOG_STYLE_LIST, "{FFFFFF}Owned Vehicle List", slots, "Locate", "Cancel");
	}
	return true;
}

CMD:lights(playerid, params[])
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You must be in a vehicle to use this command.");
    new veh = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, vcondition);
	if(lights == OFF)
	{
		SetVehicleParamsEx(veh, engine, ON, alarm, doors, bonnet, boot, vcondition);
		SendClientMessage(playerid, WHITE, "Lights ON.");
	}
	else
	{
		SetVehicleParamsEx(veh, engine, OFF, alarm, doors, bonnet, boot, vcondition);
		SendClientMessage(playerid, WHITE, "Lights OFF.");
	}
	new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /lights", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:alarm(playerid, params[])
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You must be in a vehicle to use this command.");
    new veh = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, vcondition);
	if(alarm == OFF)
	{
		SetVehicleParamsEx(veh, engine, lights, ON, doors, bonnet, boot, vcondition);
		SendClientMessage(playerid, WHITE, "Alarm ON.");
	}
	else
	{
		SetVehicleParamsEx(veh, engine, lights, OFF, doors, bonnet, boot, vcondition);
		SendClientMessage(playerid, WHITE, "Alarm OFF.");
	}
	new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /alarm", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:bonnet(playerid, params[])
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You must be in a vehicle to use this command.");
    new veh = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, vcondition);
	if(bonnet == OFF)
	{
		SetVehicleParamsEx(veh, engine, lights, alarm, doors, ON, boot, vcondition);
		SendClientMessage(playerid, WHITE, "Bonnet OPENED.");
	}
	else
	{
		SetVehicleParamsEx(veh, engine, lights, alarm, doors, OFF, boot, vcondition);
		SendClientMessage(playerid, WHITE, "Bonnet CLOSED.");
	}
	new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /bonnet", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:boot(playerid, params[])
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You must be in a vehicle to use this command.");
    new veh = GetPlayerVehicleID(playerid);
	GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, vcondition);
	if(boot == OFF)
	{
		SetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, ON, vcondition);
		SendClientMessage(playerid, WHITE, "Boot OPENED.");
	}
	else
	{
		SetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, OFF, vcondition);
		SendClientMessage(playerid, WHITE, "Boot CLOSED.");
	}
	new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /boot", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:createbiz(playerid, params[])
{
	new Count, cost, bizname[50], bizowner[24], file[40];
	Count = GetFreeBizID();
	cost = random(200000) + 300000;//Random 2M-5M
	new Float:adminx, Float:adminy, Float:adminz, Float:admina;
	GetPlayerPos(playerid, adminx, adminy, adminz);
	GetPlayerFacingAngle(playerid, admina);
	if(Count < 0)
	{
		new str[150];
		format(str, sizeof(str), "The server has reached a maximum of %d businesses.", MAX_BUSINESSES);
		SendClientMessage(playerid, RED, str);
		return true;
	}
	if(PlayerInfo[playerid][aLevel] == 4)
	{
		format(file, sizeof(file), BIZ_FILE, Count);
		new File:startfile = fopen(file, io_write);
		fclose(startfile);

		format(bizname, sizeof(bizname), "For-Sale");

		format(bizowner, sizeof(bizowner), "%s", DEFAULT_BIZ_OWNER_NAME);

		BizInfo[Count][bName] = bizname;
		BizInfo[Count][bOwner] = bizowner;
		BizInfo[Count][bPrice] = cost;
		BizInfo[Count][bExtX] = adminx;
		BizInfo[Count][bExtY] = adminy;
		BizInfo[Count][bExtZ] = adminz;
		BizInfo[Count][bIntX] = -25.8424;
		BizInfo[Count][bIntY] = -188.2505;
		BizInfo[Count][bIntZ] = 1003.5469;

		new Float:sX, Float:sY;
		GetPosBehindOfPlayer(playerid, sX, sY, -2.0);

		BizInfo[Count][bExtSpwnX] = sX;
		BizInfo[Count][bExtSpwnY] = sY;
		BizInfo[Count][bExtSpwnZ] = adminz;
		BizInfo[Count][bExtSpwnA] = admina + 180;
        BizInfo[Count][bIntSpwnX] = -25.5918;
		BizInfo[Count][bIntSpwnY] = -185.0244;
		BizInfo[Count][bIntSpwnZ] = 1003.5469;
		BizInfo[Count][bIntSpwnA] = 358.4055;

		BizInfo[Count][bRobX] = -10.6035;
		BizInfo[Count][bRobY] = -178.2635;
		BizInfo[Count][bRobZ] = 1003.5469;
		BizInfo[Count][bInterior] = 17;
		BizInfo[Count][bVWorld] = Count +1000;
		BizInfo[Count][bEarnings] = 0;

		new INI:bFilee = INI_Open(file);
		INI_WriteString(bFilee, "bName", BizInfo[Count][bName]);
		INI_WriteString(bFilee, "bOwner", BizInfo[Count][bOwner]);
		INI_WriteInt(bFilee, "bPrice", BizInfo[Count][bPrice]);
		INI_WriteFloat(bFilee, "bExtX", BizInfo[Count][bExtX]);
		INI_WriteFloat(bFilee, "bExtY", BizInfo[Count][bExtY]);
		INI_WriteFloat(bFilee, "bExtZ", BizInfo[Count][bExtZ]);
		INI_WriteFloat(bFilee, "bIntX", BizInfo[Count][bIntX]);
		INI_WriteFloat(bFilee, "bIntY", BizInfo[Count][bIntY]);
		INI_WriteFloat(bFilee, "bIntZ", BizInfo[Count][bIntZ]);
		INI_WriteFloat(bFilee, "bExtSpwnX", BizInfo[Count][bExtSpwnX]);
		INI_WriteFloat(bFilee, "bExtSpwnY", BizInfo[Count][bExtSpwnY]);
		INI_WriteFloat(bFilee, "bExtSpwnZ", BizInfo[Count][bExtSpwnZ]);
		INI_WriteFloat(bFilee, "bExtSpwnA", BizInfo[Count][bExtSpwnA]);
		INI_WriteFloat(bFilee, "bIntSpwnX", BizInfo[Count][bIntSpwnX]);
		INI_WriteFloat(bFilee, "bIntSpwnY", BizInfo[Count][bIntSpwnY]);
		INI_WriteFloat(bFilee, "bIntSpwnZ", BizInfo[Count][bIntSpwnZ]);
		INI_WriteFloat(bFilee, "bIntSpwnA", BizInfo[Count][bIntSpwnA]);
		INI_WriteFloat(bFilee, "bRobX", BizInfo[Count][bRobX]);
		INI_WriteFloat(bFilee, "bRobY", BizInfo[Count][bRobY]);
		INI_WriteFloat(bFilee, "bRobZ", BizInfo[Count][bRobZ]);
		INI_WriteInt(bFilee, "bInterior", BizInfo[Count][bInterior]);
		INI_WriteInt(bFilee, "bVWorld", BizInfo[Count][bVWorld]);
		INI_WriteInt(bFilee, "bEarnings", BizInfo[Count][bEarnings]);
		INI_Close(bFilee);

		bizentercp[Count] = CreateDynamicCP(BizInfo[Count][bExtX], BizInfo[Count][bExtY], BizInfo[Count][bExtZ], 1.0, 0, 0, -1, 4.0);
		bizexitcp[Count] = CreateDynamicCP(BizInfo[Count][bIntX], BizInfo[Count][bIntY], BizInfo[Count][bIntZ], 1.0, BizInfo[Count][bVWorld], BizInfo[Count][bInterior], -1, 4.0);
		bizrobberycp[Count] = CreateDynamicCP(BizInfo[Count][bRobX], BizInfo[Count][bRobY], BizInfo[Count][bRobZ], 1.0, BizInfo[Count][bVWorld], BizInfo[Count][bInterior], -1, 4.0);

		bLabel[Count] = Create3DTextLabel(bizname, YELLOW, BizInfo[Count][bExtX], BizInfo[Count][bExtY], BizInfo[Count][bExtZ]+0.5, 30.0, 0, 1);
			
		new string[150];
		format(string, sizeof(string), "Business id %d created.", Count);
		SendClientMessage(playerid, WHITE, string);
		return true;
	}
	else if(IsPlayerSetBuilder{playerid} == true)
	{
		format(file, sizeof(file), BIZ_FILE, Count);
		new File:startfile = fopen(file, io_write);
		fclose(startfile);

		format(bizname, sizeof(bizname), "For-Sale");

		format(bizowner, sizeof(bizowner), "%s", DEFAULT_BIZ_OWNER_NAME);

		BizInfo[Count][bName] = bizname;
		BizInfo[Count][bOwner] = bizowner;
		BizInfo[Count][bPrice] = cost;
		BizInfo[Count][bExtX] = adminx;
		BizInfo[Count][bExtY] = adminy;
		BizInfo[Count][bExtZ] = adminz;
		BizInfo[Count][bIntX] = -25.8424;
		BizInfo[Count][bIntY] = -188.2505;
		BizInfo[Count][bIntZ] = 1003.5469;

		new Float:sX, Float:sY;
		GetPosBehindOfPlayer(playerid, sX, sY, -2.0);

		BizInfo[Count][bExtSpwnX] = sX;
		BizInfo[Count][bExtSpwnY] = sY;
		BizInfo[Count][bExtSpwnZ] = adminz;
		BizInfo[Count][bExtSpwnA] = admina + 180;
        BizInfo[Count][bIntSpwnX] = -25.5918;
		BizInfo[Count][bIntSpwnY] = -185.0244;
		BizInfo[Count][bIntSpwnZ] = 1003.5469;
		BizInfo[Count][bIntSpwnA] = 358.4055;

		BizInfo[Count][bRobX] = -10.6035;
		BizInfo[Count][bRobY] = -178.2635;
		BizInfo[Count][bRobZ] = 1003.5469;
		BizInfo[Count][bInterior] = 17;
		BizInfo[Count][bVWorld] = Count +1000;
		BizInfo[Count][bEarnings] = 0;

		new INI:bFilee = INI_Open(file);
		INI_WriteString(bFilee, "bName", BizInfo[Count][bName]);
		INI_WriteString(bFilee, "bOwner", BizInfo[Count][bOwner]);
		INI_WriteInt(bFilee, "bPrice", BizInfo[Count][bPrice]);
		INI_WriteFloat(bFilee, "bExtX", BizInfo[Count][bExtX]);
		INI_WriteFloat(bFilee, "bExtY", BizInfo[Count][bExtY]);
		INI_WriteFloat(bFilee, "bExtZ", BizInfo[Count][bExtZ]);
		INI_WriteFloat(bFilee, "bIntX", BizInfo[Count][bIntX]);
		INI_WriteFloat(bFilee, "bIntY", BizInfo[Count][bIntY]);
		INI_WriteFloat(bFilee, "bIntZ", BizInfo[Count][bIntZ]);
		INI_WriteFloat(bFilee, "bExtSpwnX", BizInfo[Count][bExtSpwnX]);
		INI_WriteFloat(bFilee, "bExtSpwnY", BizInfo[Count][bExtSpwnY]);
		INI_WriteFloat(bFilee, "bExtSpwnZ", BizInfo[Count][bExtSpwnZ]);
		INI_WriteFloat(bFilee, "bExtSpwnA", BizInfo[Count][bExtSpwnA]);
		INI_WriteFloat(bFilee, "bIntSpwnX", BizInfo[Count][bIntSpwnX]);
		INI_WriteFloat(bFilee, "bIntSpwnY", BizInfo[Count][bIntSpwnY]);
		INI_WriteFloat(bFilee, "bIntSpwnZ", BizInfo[Count][bIntSpwnZ]);
		INI_WriteFloat(bFilee, "bIntSpwnA", BizInfo[Count][bIntSpwnA]);
		INI_WriteFloat(bFilee, "bRobX", BizInfo[Count][bRobX]);
		INI_WriteFloat(bFilee, "bRobY", BizInfo[Count][bRobY]);
		INI_WriteFloat(bFilee, "bRobZ", BizInfo[Count][bRobZ]);
		INI_WriteInt(bFilee, "bInterior", BizInfo[Count][bInterior]);
		INI_WriteInt(bFilee, "bVWorld", BizInfo[Count][bVWorld]);
		INI_WriteInt(bFilee, "bEarnings", BizInfo[Count][bEarnings]);
		INI_Close(bFilee);

		bizentercp[Count] = CreateDynamicCP(BizInfo[Count][bExtX], BizInfo[Count][bExtY], BizInfo[Count][bExtZ], 1.0, 0, 0, -1, 4.0);
		bizexitcp[Count] = CreateDynamicCP(BizInfo[Count][bIntX], BizInfo[Count][bIntY], BizInfo[Count][bIntZ], 1.0, BizInfo[Count][bVWorld], BizInfo[Count][bInterior], -1, 4.0);
		bizrobberycp[Count] = CreateDynamicCP(BizInfo[Count][bRobX], BizInfo[Count][bRobY], BizInfo[Count][bRobZ], 1.0, BizInfo[Count][bVWorld], BizInfo[Count][bInterior], -1, 4.0);

		bLabel[Count] = Create3DTextLabel(bizname, YELLOW, BizInfo[Count][bExtX], BizInfo[Count][bExtY], BizInfo[Count][bExtZ]+0.5, 30.0, 0, 1);

		new string[150];
		format(string, sizeof(string), "Business id %d created.", Count);
		SendClientMessage(playerid, WHITE, string);
		return true;
	}
	else
	{
	    SendClientMessage(playerid, RED, "Only admin level 4+ can use this command.");
	}
	return true;
}

CMD:sellbiz(playerid, params[])
{
	new file[64], b;
	if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
	if(sscanf(params, "d", b)) return SendClientMessage(playerid, RED, "[USAGE]: /sellbiz [biz id]");
    format(file, sizeof(file), BIZ_FILE, b);
	if(!fexist(file)) return SendClientMessage(playerid, RED, "Invalid biz id.");
	if(!strcmp(BizInfo[b][bOwner], "Nobody", false)) return SendClientMessage(playerid, RED, "This business has no owner, you cant sell it.");
	{
		//GivePlayerCash(playerid, BizInfo[b][bEarnings]);
		//GivePlayerCash(playerid, BizInfo[b][bPrice]/2);
		//SendClientMessage(playerid, WHITE, "Business sold. You received 50 percent of the value of the business and the remaining earnings.");
		SellBiz(b);
	}
    return true;
}

CMD:sellallbiz(playerid, params[])
{
	new file[40], count = 0;
	if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4 can use this command.");
	for(new b = 0; b < MAX_BUSINESSES; b++)
	{
    	format(file, sizeof(file), BIZ_FILE, b);
		if(fexist(file))
		{
			if(strcmp(BizInfo[b][bOwner], "Nobody", false))
			{
				new gname[50], gowner[24];
				format(gowner, sizeof(gowner), "Nobody");
				format(gname, sizeof(gname), "For-Sale");
				BizInfo[b][bName] = gname;
				BizInfo[b][bOwner] = gowner;
				new INI:bFilee = INI_Open(file);
				INI_WriteString(bFilee, "bName", gname);
				INI_WriteString(bFilee, "bOwner", gowner);
				INI_WriteInt(bFilee, "bPrice", BizInfo[b][bPrice]);
				INI_WriteFloat(bFilee, "bExtX", BizInfo[b][bExtX]);
				INI_WriteFloat(bFilee, "bExtY", BizInfo[b][bExtY]);
				INI_WriteFloat(bFilee, "bExtZ", BizInfo[b][bExtZ]);
				INI_WriteFloat(bFilee, "bIntX", BizInfo[b][bIntX]);
				INI_WriteFloat(bFilee, "bIntY", BizInfo[b][bIntY]);
				INI_WriteFloat(bFilee, "bIntZ", BizInfo[b][bIntZ]);
				INI_WriteFloat(bFilee, "bExtSpwnX", BizInfo[b][bExtSpwnX]);
				INI_WriteFloat(bFilee, "bExtSpwnY", BizInfo[b][bExtSpwnY]);
				INI_WriteFloat(bFilee, "bExtSpwnZ", BizInfo[b][bExtSpwnZ]);
				INI_WriteFloat(bFilee, "bExtSpwnA", BizInfo[b][bExtSpwnA]);
				INI_WriteFloat(bFilee, "bIntSpwnX", BizInfo[b][bIntSpwnX]);
				INI_WriteFloat(bFilee, "bIntSpwnY", BizInfo[b][bIntSpwnY]);
				INI_WriteFloat(bFilee, "bIntSpwnZ", BizInfo[b][bIntSpwnZ]);
				INI_WriteFloat(bFilee, "bIntSpwnA", BizInfo[b][bIntSpwnA]);
				INI_WriteFloat(bFilee, "bRobX", BizInfo[b][bRobX]);
				INI_WriteFloat(bFilee, "bRobY", BizInfo[b][bRobY]);
				INI_WriteFloat(bFilee, "bRobZ", BizInfo[b][bRobZ]);
				INI_WriteInt(bFilee, "bInterior", BizInfo[b][bInterior]);
				INI_WriteInt(bFilee, "bVWorld", BizInfo[b][bVWorld]);
				INI_WriteInt(bFilee, "bEarnings", 0);
				INI_Close(bFilee);
				Update3DTextLabelText(bLabel[b], YELLOW, gname);
				SaveBizStats(b);
				count++;
			}
		}
	}
	new string[64];
	format(string, sizeof(string), "%d businesses sold.", count);
	SendClientMessage(playerid, WHITE, string);
    return true;
}

CMD:deletebiz(playerid, params[])
{
	new bizid, file[40];
    if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4+ can use this command.");
	if(sscanf(params, "d", bizid)) return SendClientMessage(playerid, RED, "[USAGE]: /deletebiz [business id]");
	format(file, sizeof(file), BIZ_FILE, bizid);
	if(!fexist(file)) return SendClientMessage(playerid, RED, "Invalid business id.");
	DestroyDynamicCP(bizentercp[bizid]);
	DestroyDynamicCP(bizexitcp[bizid]);
	DestroyDynamicCP(bizrobberycp[bizid]);
	Delete3DTextLabel(bLabel[bizid]);
	format(fstr, sizeof(fstr), "Business id %d deleted.", bizid);
	SendClientMessage(playerid, WHITE, fstr);
	fremove(file);
	return true;
}

CMD:deleteallbiz(playerid, params[])
{
	new file[40], count = 0;
    if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4+ can use this command.");
    for(new b = 0; b < MAX_BUSINESSES; b++)
	{
    	format(file, sizeof(file), BIZ_FILE, b);
		if(fexist(file))
		{
			DestroyDynamicCP(bizentercp[b]);
			DestroyDynamicCP(bizexitcp[b]);
			DestroyDynamicCP(bizrobberycp[b]);
			Delete3DTextLabel(bLabel[b]);
			fremove(file);
			count++;
		}
	}
	format(fstr, sizeof(fstr), "%d businesses deleted.", count);
	SendClientMessage(playerid, WHITE, fstr);
	return true;
}

CMD:setbuilder(playerid, params[])
{
	new targetid;
	if(PlayerInfo[playerid][aLevel] < 4) return SendClientMessage(playerid, RED, "Only admin level 4+ can use this command.");
	if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, RED, "[USAGE]: /setbuilder [name/id]");
	if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
	if(IsPlayerSetBuilder{targetid} == false)
	{
	IsPlayerSetBuilder{targetid} = true;
	new aastring[100];
    format(aastring, sizeof(aastring), "Admin %s has set you as a Temparary Builder, follow his instructions.", GetName(playerid));
    SendClientMessage(targetid, LIGHTGREEN, aastring);
	SendClientMessage(playerid, WHITE, "Builder set.");
	}
	else
	{
	IsPlayerSetBuilder{targetid} = false;
	new aastring[100];
    format(aastring, sizeof(aastring), "Admin %s has UNset you as a Temparary Builder, follow his instructions.", GetName(playerid));
	SendClientMessage(targetid, RED, aastring);
	SendClientMessage(playerid, WHITE, "Builder UNset.");
	}
    new astring[100];
    format(astring, sizeof(astring), "Admin %s [%d] has set %s [%d] to builder.", GetName(playerid), playerid, GetName(targetid), targetid);
    SendAdminMessage(GREY, astring);
    SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	return true;
}

CMD:sellbizto(playerid, params[])
{
    new playerid2, price, string[150], string2[150], Float:posX, Float:posY, Float:posZ;
    if(DegreeInfo[playerid][dReal] < 1) return SendClientMessage(playerid, RED, "Shoma baraye estefade az in cmd niaz be Madrak Real Estate darid.");
	if(sscanf(params, "Ud", playerid2, price)) return SendClientMessage(playerid, RED, "[USAGE]: /sellbizto [name/id] [price]");
	GetPlayerPos(playerid2, posX, posY, posZ);
	if(!IsPlayerConnected(playerid2)) return SendClientMessage(playerid, RED, "Player not found.");
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, posX, posY, posZ)) return SendClientMessage(playerid, RED, "You need to be near the player to offer your business to them.");
	for(new i = 0; i < MAX_BUSINESSES; i++)
	{
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, BizInfo[i][bExtX], BizInfo[i][bExtY], BizInfo[i][bExtZ]) && strcmp(BizInfo[i][bOwner], GetName(playerid), false)) return SendClientMessage(playerid, RED, "You must be outside near the door to sell a business you own to a player.");
	    {
			offer_price2[playerid2] = price;
			offerer_id2[playerid2] = playerid;
			sellingbizid[playerid] = i;
			format(string, sizeof(string), "Business offered to %s for $%d, please await response.", GetName(playerid2), price);
			SendClientMessage(playerid, WHITE, string);
			format(string2, sizeof(string2), "%s [%d] has offered %s to you for $%d, use /(accept/decline)biz", GetName(playerid), playerid, BizInfo[i][bName], price);
			SendClientMessage(playerid2, WHITE, string2);
			SetTimerEx("AcceptCMDExpire", 30000, false, "d", playerid2);
		}
	}
	new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /sellbizto %d %d", GetName(playerid), playerid, playerid2, price);
    SendAdminMessage(GREY, astring);
	return true;
}

CMD:acceptbiz(playerid, params[])
{
	new Float:posX, Float:posY, Float:posZ;
	GetPlayerPos(offerer_id2[playerid], posX, posY, posZ);
    if(!IsPlayerConnected(offerer_id2[playerid])) return SendClientMessage(playerid, RED, "The offerer has disconnected.");
    if(offerer_id2[playerid] == -1) return SendClientMessage(playerid, RED, "You have not been offered a business recently.");
	if(GetPlayerCash(playerid) < offer_price2[playerid]) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
    if(!IsPlayerInRangeOfPoint(playerid, 10.0, posX, posY, posZ)) return SendClientMessage(playerid, RED, "You need to be near the offerer to buy the business from them.");
    new string[150], string2[150];
    new file[40];
	format(file, sizeof(file), BIZ_FILE, sellingbizid[playerid]);
	format(bizlabel, sizeof(bizlabel), "%s's business", GetName(playerid));
	Update3DTextLabelText(bLabel[BizID[playerid]], YELLOW, bizlabel);
	new INI:bFilee = INI_Open(file);
	INI_WriteString(bFilee, "bName", bizlabel);
	INI_WriteString(bFilee, "bOwner", GetName(playerid));
	INI_Close(bFilee);
	GivePlayerCash(offerer_id2[playerid], BizInfo[sellingbizid[playerid]][bPrice]/2);
	GivePlayerCash(playerid, - offer_price2[playerid]);
	GivePlayerCash(offerer_id2[playerid], offer_price2[playerid]);
	format(string, sizeof(string), "Business sold to %s for $%d", GetName(playerid), offer_price2[playerid]);
	SendClientMessage(offerer_id2[playerid], WHITE, string);
	format(string2, sizeof(string2), "Business purchased from %s for $%d", GetName(offerer_id2[playerid]), offer_price2[playerid]);
	SendClientMessage(playerid, WHITE, string2);
	offer_price2[playerid] = -1;
	offerer_id2[playerid] = -1;
	sellingbizid[playerid] = -1;
	new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /acceptbiz", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
	return true;
}

CMD:declinebiz(playerid, params[])
{
    new string[150];
    if(offerer_id2[playerid] == -1) return SendClientMessage(playerid, RED, "You have not been offered a business recently.");
	offer_price2[playerid] = -1;
	offerer_id2[playerid] = -1;
	sellingbizid[playerid] = -1;
	format(string, sizeof(string), "%s [%d] has declined your offer.", GetName(playerid), playerid);
	SendClientMessage(offerer_id2[playerid], RED, string);
	SendClientMessage(playerid, WHITE, "Offer declined.");
	new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /declinebiz", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
	return true;
}

CMD:bizmenu(playerid, params[])
{
	if(BizID[playerid] == -1) return SendClientMessage(playerid, RED, "You must be in an owned business to use this command.");
	if(strcmp(BizInfo[BizID[playerid]][bOwner], GetName(playerid), false)) return SendClientMessage(playerid, RED, "You dont own this business.");
	ShowPlayerDialog(playerid, BIZ_MENU_DIALOG, DIALOG_STYLE_LIST, "{FFFFFF}Business Menu", "{FFFFFF}Change Business Name\nEarnings Balance\nWithdraw Earnings\nSell Business", "Select", "Cancel");
	return true;
}

CMD:bm(playerid, params[])
{
	if(BizID[playerid] == -1) return SendClientMessage(playerid, RED, "You must be in an owned business to use this command.");
	if(strcmp(BizInfo[BizID[playerid]][bOwner], GetName(playerid), false)) return SendClientMessage(playerid, RED, "You dont own this business.");
	ShowPlayerDialog(playerid, BIZ_MENU_DIALOG, DIALOG_STYLE_LIST, "{FFFFFF}Business Menu", "{FFFFFF}Change Business Name\nEarnings Balance\nWithdraw Earnings\nSell Business", "Select", "Cancel");
	return true;
}

CMD:getmats(playerid, params[])
{
	if(DegreeInfo[playerid][dWeapons] < 1) return SendClientMessage(playerid, RED, "In command niaz be Madrak Weapons darad.");
	if(IsPlayerInRangeOfPoint(playerid, 1.0, 966.2469,2160.6836,10.8203))//LV
	{
	    if(IsPlayerGettingMatsNV{playerid} == false)
	    {
			IsPlayerGettingMatsBS{playerid} = true;
			SendClientMessage(playerid, YELLOW, "Alan shoma mitavanid Ghate haye aslahe ra az karkhaneye ghate sazi (2) begirid (/gps).");
			return true;
		}
		else if(IsPlayerGettingMatsNV{playerid} == true)
		{
	    	PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
		    IsPlayerGettingMatsNV{playerid} = false;
	    	PlayerInfo[playerid][pMaterials] = PlayerInfo[playerid][pMaterials] + 500;
	    	SendClientMessage(playerid, LIGHTGREEN, "[MATS]: 500 ghate aslahe daryaft kardid.");
		}
		return true;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 1.0, -2488.5205,2295.3135,4.9844))//BS
	{
	    if(IsPlayerGettingMatsBS{playerid} == false)
	    {
			IsPlayerGettingMatsNV{playerid} = true;
			SendClientMessage(playerid, YELLOW, "Alan shoma mitavanid Ghate haye aslahe ra az karkhaneye ghate sazi (1) begirid (/gps).");
			return true;
		}
		else if(IsPlayerGettingMatsBS{playerid} == true)
		{
	    	PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
		    IsPlayerGettingMatsBS{playerid} = false;
	    	PlayerInfo[playerid][pMaterials] = PlayerInfo[playerid][pMaterials] + 500;
	    	SendClientMessage(playerid, LIGHTGREEN, "[MATS]: 500 ghate aslahe daryaft kardid.");
		}
		return true;
	}
	else
	{
	    SendClientMessage(playerid, RED, "Your not near a materials pickup point.");
	}
	return true;
}

CMD:fix(playerid, params[])
{
	new customer, price, string1[150], string2[150];
	if(DegreeInfo[playerid][dMechanic] < 1) return SendClientMessage(playerid, RED, "In command niaz be Madrak Mechanical darad.");
	if(sscanf(params, "ud", customer, price)) return SendClientMessage(playerid, RED, "[USAGE]: /fix [name/id] [price]");
	if(!IsPlayerConnected(customer)) return SendClientMessage(playerid, RED, "Player not found.");
	if(!IsPlayerInAnyVehicle(customer)) return SendClientMessage(playerid, RED, "Player not in a vehicle.");
    if((gettime() - 180) < TimerInfo[playerid][CMD_timer28]) return SendClientMessage(playerid, RED, "[Timer]: 180 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer28] = gettime();
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(customer, cx, cy, cz);
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, cx, cy, cz)) return SendClientMessage(playerid, RED, "You must be near the player to offer mechanical services to them.");
    {
		format(string1, sizeof(string1), "%s [%d] has offered to fix your vehicle for $%d, use /(accept/decline)fix", GetName(playerid), playerid, price);
		SendClientMessage(customer, WHITE, string1);
		format(string2, sizeof(string2), "You have offered %s [%d] to fix their vehicle for $%d, please await response.", GetName(customer), customer, price);
		SendClientMessage(playerid, WHITE, string2);
		offerer_id8[customer] = playerid;
		offer_price8[customer] = price;
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", playerid);
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", customer);
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /fix %d %d", GetName(playerid), playerid, customer, price);
    	SendAdminMessage(GREY, astring);
    	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	return true;
}

CMD:refill(playerid, params[])
{
	new customer, price, string1[150], string2[150];
	if(DegreeInfo[playerid][dMechanic] < 1) return SendClientMessage(playerid, RED, "In command niaz be Madrak Mecanical darad.");
	if(sscanf(params, "ud", customer, price)) return SendClientMessage(playerid, RED, "[USAGE]: /refill [name/id] [price]");
	if(!IsPlayerConnected(customer)) return SendClientMessage(playerid, RED, "Player not found.");
	if(!IsPlayerInAnyVehicle(customer)) return SendClientMessage(playerid, RED, "Player not in a vehicle.");
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(customer, cx, cy, cz);
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, cx, cy, cz)) return SendClientMessage(playerid, RED, "You must be near the player to offer mechanical services to them.");
    {
		format(string1, sizeof(string1), "%s [%d] has offered to refill your vehicle for $%d, use /(accept/decline)refill", GetName(playerid), playerid, price);
		SendClientMessage(customer, WHITE, string1);
		format(string2, sizeof(string2), "You have offered %s [%d] to refill their vehicle for $%d, please await response.", GetName(customer), customer, price);
		SendClientMessage(playerid, WHITE, string2);
		offerer_id9[customer] = playerid;
		offer_price9[customer] = price;
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", playerid);
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", customer);
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /refill %d %d", GetName(playerid), playerid, customer, price);
    	SendAdminMessage(GREY, astring);
    	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	return true;
}

CMD:acceptrefill(playerid, params[])
{
	if(offerer_id9[playerid] == -1) return SendClientMessage(playerid, RED, "This have not been offered mechanical services recently.");
	if(GetPlayerCash(playerid) < offer_price8[playerid]) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You must be in a vehicle to use this command.");
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(offerer_id9[playerid], cx, cy, cz);
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, cx, cy, cz)) return SendClientMessage(playerid, RED, "You must be near the offerer to buy mechanical services from them.");
	{
	    GivePlayerCash(offerer_id9[playerid], offer_price9[playerid]);
	    GivePlayerCash(playerid, - offer_price9[playerid]);
		new veh = GetPlayerVehicleID(playerid);
		GetVehicleFuel[veh] = 100;
        GetVehicleParamsEx(veh, engine, lights, alarm, doors, bonnet, boot, vcondition);
		SetVehicleParamsEx(veh, ON, lights, OFF, doors, OFF, OFF, vcondition);
		SendClientMessage(offerer_id9[playerid], WHITE, "Vehicle refilled.");
		SendClientMessage(playerid, WHITE, "Your vehicle has been refilled.");
		//
		if(offerer_id9[playerid] == playerid)
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Mechanic %s has just refuelled there own vehicle...", GetName(offerer_id9[playerid]));
        	ProxDetector(20.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
		}
		else
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Mechanic %s has just refuelled %s vehicle...", GetName(offerer_id9[playerid]), GetName(playerid));
        	ProxDetector(20.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
	        SetPlayerScore(offerer_id9[playerid], GetPlayerScore(offerer_id9[playerid]) +1);
        }
        //
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /acceptrefill", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
	}
	offerer_id9[playerid] = -1;
	return true;
}

CMD:declinerefill(playerid, params[])
{
	if(offerer_id8[playerid] == -1) return SendClientMessage(playerid, RED, "This have not been offered mechanical services recently.");
	SendClientMessage(offerer_id8[playerid], WHITE, "Services declined.");
	SendClientMessage(playerid, WHITE, "Services declined.");
	offerer_id9[playerid] = -1;
	offer_price9[playerid] = -1;
	new astring[100];
	format(astring, sizeof(astring),"%s [%d] typed: /declinerefill", GetName(playerid), playerid);
	SendAdminMessage(GREY, astring);
	return true;
}

CMD:acceptfix(playerid, params[])
{
	if(offerer_id8[playerid] == -1) return SendClientMessage(playerid, RED, "This have not been offered mechanical services recently.");
	if(GetPlayerCash(playerid) < offer_price8[playerid]) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You must be in a vehicle to use this command.");
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(offerer_id8[playerid], cx, cy, cz);
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, cx, cy, cz)) return SendClientMessage(playerid, RED, "You must be near the offerer to buy mechanical services from them.");
	{
	    GivePlayerCash(offerer_id8[playerid], offer_price8[playerid]);
	    GivePlayerCash(playerid, - offer_price8[playerid]);
		RepairVehicle(GetPlayerVehicleID(playerid));
		SendClientMessage(offerer_id8[playerid], WHITE, "Vehicle fixed.");
		SendClientMessage(playerid, WHITE, "Your vehicle has been fixed.");
		//
		if(offerer_id8[playerid] == playerid)
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Mechanic %s has just repaired there own vehicle...", GetName(offerer_id8[playerid]));
        	ProxDetector(20.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
		}
		else
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Mechanic %s has just repaired %s vehicle...", GetName(offerer_id8[playerid]), GetName(playerid));
        	ProxDetector(20.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
	        SetPlayerScore(offerer_id8[playerid], GetPlayerScore(offerer_id8[playerid]) +1);
        }
        //
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /acceptfix", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
		offerer_id8[playerid] = -1;
	}
	return true;
}

CMD:declinefix(playerid, params[])
{
	if(offerer_id8[playerid] == -1) return SendClientMessage(playerid, RED, "This have not been offered mechanical services recently.");
	SendClientMessage(offerer_id8[playerid], WHITE, "Services declined.");
	SendClientMessage(playerid, WHITE, "Services declined.");
	offerer_id8[playerid] = -1;
	offer_price8[playerid] = -1;
	new astring[100];
	format(astring, sizeof(astring),"%s [%d] typed: /declinefix", GetName(playerid), playerid);
	SendAdminMessage(GREY, astring);
	return true;
}

CMD:sellmats(playerid, params[])
{
	new customer, materials, price, string1[150], string2[150];
	if(DegreeInfo[playerid][dWeapons] < 1) return SendClientMessage(playerid, RED, "In command niaz be Madrak Weapons darad.");
	if(PlayerInfo[playerid][pMaterials] < 1) return SendClientMessage(playerid, RED, "You dont have any materials to sell.");
	if(sscanf(params, "udd", customer, materials, price)) return SendClientMessage(playerid, RED, "[USAGE]: /sellmats [name/id] [materials] [price]");
	if(!IsPlayerConnected(customer)) return SendClientMessage(playerid, RED, "Player not found.");
	if(DegreeInfo[customer][dWeapons] < 1) return SendClientMessage(playerid, RED, "Bazikon morede nazar Madrak Weapons ra nadarad.");
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(customer, cx, cy, cz);
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, cx, cy, cz)) return SendClientMessage(playerid, RED, "You must be near the player to offer mats to them.");
	{
		format(string1, sizeof(string1), "%s [%d] has offered you %d materials for $%d, use /(accept/decline)mats", GetName(playerid), playerid, materials, price);
		SendClientMessage(customer, WHITE, string1);
		format(string2, sizeof(string2), "You have offered %s [%d] %d materials for $%d, please await response.", GetName(customer), customer, materials, price);
		SendClientMessage(playerid, WHITE, string2);
		offerer_id6[customer] = playerid;
		offer_price6[customer] = price;
		matsbuying[customer] = materials;
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", playerid);
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", customer);
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /sellmats %d %d %d", GetName(playerid), playerid, customer, materials, price);
    	SendAdminMessage(GREY, astring);
	}
	return true;
}

CMD:acceptmats(playerid, params[])
{
	if(DegreeInfo[playerid][dWeapons] < 1) return SendClientMessage(playerid, RED, "In command niaz be Madrak Weapons darad.");
	if(offerer_id6[playerid] == -1) return SendClientMessage(playerid, RED, "This have not been offered a gun recently.");
	if(GetPlayerCash(playerid) < offer_price6[playerid]) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(offerer_id6[playerid], cx, cy, cz);
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, cx, cy, cz)) return SendClientMessage(playerid, RED, "You must be near the offerer to buy mats from them.");
	{
	    GivePlayerCash(offerer_id6[playerid], offer_price6[playerid]);
	    GivePlayerCash(playerid, - offer_price6[playerid]);
		PlayerInfo[offerer_id6[playerid]][pMaterials] = PlayerInfo[offerer_id6[playerid]][pMaterials] - matsbuying[playerid];
		PlayerInfo[playerid][pMaterials] = PlayerInfo[playerid][pMaterials] + matsbuying[playerid];
		SendClientMessage(offerer_id6[playerid], WHITE, "Mats sold.");
		SendClientMessage(playerid, WHITE, "Mats received.");
		//
		if(offerer_id6[playerid] == playerid)
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s hands a package of materials to himself...", GetName(offerer_id6[playerid]));
        	ProxDetector(20.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
		}
		else
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s hands a package of materials to %s...", GetName(offerer_id6[playerid]), GetName(playerid));
        	ProxDetector(20.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
        }
        //
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /acceptmats", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
	}
	offerer_id6[playerid] = -1;
	return true;
}

CMD:declinemats(playerid, params[])
{
	if(DegreeInfo[playerid][dWeapons] < 1) return SendClientMessage(playerid, RED, "In command niaz be Madrak Weapons darad.");
	if(offerer_id6[playerid] == -1) return SendClientMessage(playerid, RED, "This have not been offered any mats recently.");
	SendClientMessage(offerer_id6[playerid], WHITE, "Mats declined.");
	SendClientMessage(playerid, WHITE, "Mats declined.");
	offerer_id6[playerid] = -1;
	offer_price6[playerid] = -1;
	matsbuying[playerid] = 0;
	new astring[100];
	format(astring,sizeof(astring),"%s [%d] typed: /declinemats", GetName(playerid), playerid);
	SendAdminMessage(GREY,astring);
	return true;
}

CMD:sellhouseto(playerid, params[])
{
    new playerid2, price, string[150], string2[150], Float:posX, Float:posY, Float:posZ, file[40];
    if(DegreeInfo[playerid][dReal] < 1) return SendClientMessage(playerid, RED, "Shoma baraye estefade az in cmd niaz be Madrak Real Estate darid.");
	if(sscanf(params, "ud", playerid2, price)) return SendClientMessage(playerid, RED, "[USAGE]: /sellhouseto [name/id] [price]");
	GetPlayerPos(playerid2, posX, posY, posZ);
	if(!IsPlayerConnected(playerid2)) return SendClientMessage(playerid, RED, "Player not found.");
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, posX, posY, posZ)) return SendClientMessage(playerid, RED, "You need to be near the player to offer your house to them.");
	Loop(i, MAX_HOUSES)
	{
	    format(file, sizeof(file), HOUSE_FILE, i);
     	if(fexist(file))
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[i][hSPOutX], HouseInfo[i][hSPOutY], HouseInfo[i][hSPOutZ])) return SendClientMessage(playerid, RED, "You must be outside near the door to sell a house you own to a player.");
		if(strcmp(GetHouseOwner(i), GetName(playerid), false)) return SendClientMessage(playerid, RED, "You must be outside near the door to sell a house you own to a player.");
	    {
			offer_price3[playerid2] = price;
			offerer_id3[playerid2] = playerid;
			sellinghouseid[playerid2] = i;
			format(string, sizeof(string), "House offered to %s for $%d, please await response.", GetName(playerid2), price);
			SendClientMessage(playerid, WHITE, string);
			format(string2, sizeof(string2), "%s [%d] has offered their house to you for $%d, use /(accept/decline)house", GetName(playerid), playerid, price);
			SendClientMessage(playerid2, WHITE, string2);
			SetTimerEx("AcceptCMDExpire", 30000, false, "d", playerid2);
		}
	}
	new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /sellhouseto %d %d", GetName(playerid), playerid, playerid2, price);
    SendAdminMessage(GREY, astring);
	return true;
}

CMD:accepthouse(playerid, params[])
{
	if(offerer_id3[playerid] == -1) return SendClientMessage(playerid, RED, "You have not been offered a house recently.");
	if(GetPlayerCash(playerid) < offer_price3[playerid]) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
    if(!ProxDetectorS(5.0, playerid, offerer_id3[playerid])) return SendClientMessage(playerid, RED, "You need to be near the offerer to buy the house from them.");
	{
		new file[40];
		format(file, sizeof(file), HOUSE_FILE, sellinghouseid[playerid]);
		GivePlayerCash(offerer_id3[playerid], offer_price3[playerid]);
		new str[150];
		format(str,sizeof(str),"You have successfully sold your house to %s for $%d.", GetName(playerid), offer_price3[playerid]);
		SendClientMessage(offerer_id3[playerid],WHITE,str);
		HouseInfo[sellinghouseid[playerid]][hValue] = HouseInfo[sellinghouseid[playerid]][hValue] - ReturnPercent(GetHouseValue(sellinghouseid[playerid]), HOUSE_SELLING_PERCENT_RETURN);
		new gname[40], gowner[24];
		format(gowner,sizeof(gowner), "%s", GetName(playerid));
		format(gname,sizeof(gname), "%s's house", GetName(playerid));
		HouseInfo[sellinghouseid[playerid]][hOwner] = gowner;
		HouseInfo[sellinghouseid[playerid]][hName] = gname;
		new stringg[24];
		format(stringg, sizeof(stringg), "Empty");
		HouseInfo[sellinghouseid[playerid]][hKeyOwner1] = stringg;
		HouseInfo[sellinghouseid[playerid]][hKeyOwner2] = stringg;
		HouseInfo[sellinghouseid[playerid]][hKeyOwner3] = stringg;
		HouseInfo[sellinghouseid[playerid]][hKeyOwner4] = stringg;
		HouseInfo[sellinghouseid[playerid]][hKeyOwner5] = stringg;
		HouseInfo[sellinghouseid[playerid]][hKeyOwner6] = stringg;
		HouseInfo[sellinghouseid[playerid]][hKeyOwner7] = stringg;
		HouseInfo[sellinghouseid[playerid]][hKeyOwner8] = stringg;
		HouseInfo[sellinghouseid[playerid]][hKeyOwner9] = stringg;
		HouseInfo[sellinghouseid[playerid]][hKeyOwner10] = stringg;
		GivePlayerCash(playerid, - offer_price3[playerid]);
		new str2[150];
		format(str2, sizeof(str2),"You have successfully bought a house from %s for $%d.", GetName(offerer_id3[playerid]), offer_price3[playerid]);
		SendClientMessage(playerid, WHITE, str2);
		/*Loop(h2, MAX_HOUSES)
		{
			if(IsHouseInRangeOfHouse(sellinghouseid[playerid], h2, VALUE_RANGE_BETWEEN_HOUSES) && h2 != sellinghouseid[playerid])
			{
				new file2[24];
				format(file2, sizeof(file2), HOUSE_FILE, h2);
				HouseInfo[h2][hValue] = HouseInfo[h2][hValue] - ReturnPercent(GetHouseValue(h2), HOUSE_SOLD_AREA_VALUE);
				UpdateHouseText(h2);
				SaveHouseStats(h2);
			}
		}*/
		UpdateHouseText(sellinghouseid[playerid]);
		SaveHouseStats(sellinghouseid[playerid]);
	}
	new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /accepthouse", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
	return true;
}

CMD:declinehouse(playerid, params[])
{
    new string[150];
    if(offerer_id3[playerid] == -1) return SendClientMessage(playerid, RED, "You have not been offered a house recently.");
	offer_price3[playerid] = -1;
	offerer_id3[playerid] = -1;
	sellinghouseid[playerid] = -1;
	format(string, sizeof(string), "%s [%d] has declined your offer.", GetName(playerid), playerid);
	SendClientMessage(offerer_id3[playerid], RED, string);
	SendClientMessage(playerid, WHITE, "Offer declined.");
	new astring[100];
    format(astring, sizeof(astring),"%s [%d] typed: /declinehouse", GetName(playerid), playerid);
    SendAdminMessage(GREY, astring);
	return true;
}

CMD:enterarena(playerid, params[])
{
	if(IsPlayerInArena{playerid} == false)
	if(IsPlayerInRangeOfPoint(playerid,1.0,1099.5729, 1601.4722, 12.5469))
	{
		SetPlayerPos(playerid, -1362.5973, 935.0837, 1036.3635);
		SetPlayerInterior(playerid, 15);
		SetPlayerVirtualWorld(playerid, 0);
		IsPlayerInArena{playerid} = true;
		SendClientMessage(playerid, WHITE, "Welcome to  Arena, use /exitarena at anytime to leave.");
		new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /enterarena", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
    	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	else
	{
	    SendClientMessage(playerid, RED, "Shoma jeloye dare vorodi nistid!");
	}
	return true;
}

CMD:exitarena(playerid, params[])
{
	if(IsPlayerInArena{playerid} == true)
	{
		SetPlayerPos(playerid, 1099.5729,1601.4722,12.5469);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		IsPlayerInArena{playerid} = false;
		new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /exitarena", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
    	SetPlayerChatBubble(playerid, astring, GREY, 50, 5000);
	}
	else
	{
	    SendClientMessage(playerid, RED, "You not in the  Arena.");
	}
	return true;
}

CMD:groupcreate(playerid, params[])
{
	new groupname[24];
  	if(pGroupInfo[playerid][gid] != -1) return SendClientMessage(playerid, RED, "You must leave your current group to create another.");
  	if(sscanf(params, "s[24]", groupname)) return SendClientMessage(playerid, RED, "[USAGE]: /groupcreate [group name]");
  	if(strlen(groupname) > 24 || strlen(groupname) < 3) return SendClientMessage(playerid, RED, "Group names can only contain 3-24 characters.");
	if(IsGroupTaken(params)) return SendClientMessage(playerid, RED, "Group name aready exists.");
	CreateGroup(groupname, playerid);
  	return true;
}

CMD:groupleave(playerid, params[])
{
	if(pGroupInfo[playerid][gid] == -1) return SendClientMessage(playerid, RED, "Your not in a group.");
 	LeaveGroup(playerid, 0);
 	return true;
}

CMD:groupinvite(playerid, params[])
{
	new invitee;
	if(pGroupInfo[playerid][order] != 1) return SendClientMessage(playerid, RED, "Only the leader of the group can invite players.");
  	if(sscanf(params, "u", invitee)) return SendClientMessage(playerid, RED, "[USAGE]: /groupinvite [name/id]");
	if(!IsPlayerConnected(invitee)) return SendClientMessage(playerid, RED, "Player not found.");
	if(pGroupInfo[invitee][gid] == pGroupInfo[playerid][gid]) return SendClientMessage(playerid, RED, "That player is already in another group.");
 	if(pGroupInfo[invitee][invited] == pGroupInfo[playerid][gid]) return SendClientMessage(playerid, RED, "That player has already been invited to the group.");
	if(pGroupInfo[invitee][attemptjoin] == pGroupInfo[playerid][gid]) return GroupJoin(invitee, pGroupInfo[playerid][gid]);
	pGroupInfo[invitee][invited] = pGroupInfo[playerid][gid];
 	new string[150], pname[24];
 	GetPlayerName(invitee, pname, 24);
 	format(string, sizeof(string), "You have been invited to join group %s (%d), Use /groupjoin %d to join.", GroupInfo[pGroupInfo[playerid][gid]][grname], pGroupInfo[playerid][gid], pGroupInfo[playerid][gid]);
	SendClientMessage(invitee, LIGHTGREEN, string);
 	GetPlayerName(invitee, pname, 24);
	format(string, sizeof(string), "You have invited %s [%d] to join the group.", pname, invitee);
	SendClientMessage(playerid, ORANGE, string);
 	return true;
}

CMD:groupleader(playerid, params[])
{
	new invitee;
	if(pGroupInfo[playerid][order] != 1) return SendClientMessage(playerid, RED, "Only the leader of the group can change group leaders.");
  	if(sscanf(params, "u", invitee)) return SendClientMessage(playerid, RED, "[USAGE]: /groupleader [name/id]");
	if(!IsPlayerConnected(invitee)) return SendClientMessage(playerid, RED, "Player not found.");
	if(invitee == playerid) return SendClientMessage(playerid, RED, "You are already group leader.");
	if(pGroupInfo[playerid][gid] != pGroupInfo[invitee][gid]) return SendClientMessage(playerid, RED, "That player is not in the group.");
	ChangeMemberOrder(pGroupInfo[playerid][gid], 1);
	pGroupInfo[playerid][order] = GroupMembers(pGroupInfo[playerid][gid]);
	return true;
}

CMD:groupjoin(playerid, params[])
{
	new group;
	if(pGroupInfo[playerid][gid] != -1) return SendClientMessage(playerid, RED, "You must leave your current group to join another.");
  	if(sscanf(params, "d", group)) return SendClientMessage(playerid, RED, "[USAGE]: /groupjoin [group id]");
	if(group == pGroupInfo[playerid][invited] && pGroupInfo[playerid][invited] != -1) return GroupJoin(playerid, pGroupInfo[playerid][invited]);
	if(!GroupInfo[group][active]) return SendClientMessage(playerid, RED, "That group dont exist.");
	pGroupInfo[playerid][attemptjoin] = group;
	new string[150], pname[24];
	GetPlayerName(playerid, pname, 24);
	format(string, sizeof(string), "You have requested to join group %s (%d), please wait to be accepted.", GroupInfo[group][grname], group);
	SendClientMessage(playerid, LIGHTGREEN, string);
	format(string, sizeof(string), "%s [%d] has requested to join the group, use /groupinvite %s/%d to accept.", pname, playerid, pname, playerid);
	SendMessageToLeader(group, string);
	return true;
}

CMD:groupkick(playerid, params[])
{
	new kickee;
	if(pGroupInfo[playerid][order] != 1) return SendClientMessage(playerid, 0xFF0000, "Only the leader of the group can kick group members.");
  	if(sscanf(params, "u", kickee)) return SendClientMessage(playerid, RED, "[USAGE]: /groupkick [name/id]");
	if(!IsPlayerConnected(kickee)) return SendClientMessage(playerid, RED, "Player not found.");
	if(kickee == playerid) return SendClientMessage(playerid, RED, "You cant kick yourself, use /groupleave");
	if(pGroupInfo[playerid][gid] != pGroupInfo[kickee][gid]) return SendClientMessage(playerid, RED, "That player is not in the group.");
	LeaveGroup(kickee, 1);
	return true;
}

CMD:groupmessage(playerid, params[])
{
	new msg[64];
	if(pGroupInfo[playerid][gid] == -1) return SendClientMessage(playerid, RED, "You are not in a group.");
  	if(sscanf(params, "s[64]", msg)) return SendClientMessage(playerid, RED, "[USAGE]: /groupmessage [message]");
  	if(strlen(msg) < 1 || strlen(msg) > 64) return SendClientMessage(playerid, RED, "Group messages can only contain 1-64 characters.");
	new pname[24], string[140+24], leadmem[30];
	GetPlayerName(playerid, pname, 24);
	new groupid = pGroupInfo[playerid][gid];
    if(GroupInfo[groupid][leader] != playerid) format(leadmem, sizeof(leadmem), "[MEMBER] %s [%d]", pname, playerid);
    if(GroupInfo[groupid][leader] == playerid) format(leadmem, sizeof(leadmem), "[LEADER] %s [%d]", pname, playerid);
	format(string, sizeof(string), "Group %s: %s", leadmem, msg);
	SendMessageToAllGroupMembers(pGroupInfo[playerid][gid], string);
	return true;
}

CMD:grouplist(playerid, params[])
{
	new group;
  	if(sscanf(params, "d", group)) return SendClientMessage(playerid, RED, "[USAGE]: /grouplist [group id]");
  	if(!GroupInfo[group][active]) return SendClientMessage(playerid, RED, "That group dont exist.");
	{
   	DisplayGroupMembers(group, playerid);
	}
	return true;
}

CMD:groups(playerid, params[])
{
    ListGroups(playerid);
    return true;
}

CMD:gcmds(playerid, params[])
{
	ShowPlayerDialog(playerid, GCMDS_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Group Commands", "{FFFFFF}/groupcreate(/grc) /groupjoin(/grj) /groupleave(/grl) /groupinvite(/gri)\n/groupleader(/grlead) /groupkick(/grk) /groupmessage(/gm) /grouplist(/grlist) /groups", "Ok", "");
    return true;
}

CMD:grl(playerid, params[]) return cmd_groupleave(playerid, params);
CMD:grc(playerid, params[]) return cmd_groupcreate(playerid, params);
CMD:gri(playerid, params[]) return cmd_groupinvite(playerid, params);
CMD:grlead(playerid, params[]) return cmd_groupleader(playerid, params);
CMD:grj(playerid, params[]) return cmd_groupjoin(playerid, params);
CMD:grk(playerid, params[]) return cmd_groupkick(playerid, params);
CMD:gm(playerid, params[]) return cmd_groupmessage(playerid, params);
CMD:grlist(playerid, params[]) return cmd_grouplist(playerid, params);
CMD:gg(playerid, params[]) return cmd_givegun(playerid, params);

CMD:closehanger(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] > 0)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773) || IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773 + 20.0))
	    {
	        MoveObject(hanger1, 2151.81958008, 2409.79785156, 78.44499207, 2);
	        MoveObject(hanger1, 2151.81958008, 2409.79785156, 78.44499207, 2);
	        MoveObject(hanger2, 2160.73437500, 2409.79785156, 78.44499207, 2);
	        MoveObject(hanger3, 2151.81958008, 2417.00878906, 78.44499207, 2);
	        MoveObject(hanger4, 2160.73437500, 2417.00878906, 78.44499207, 2);
			SendClientMessage(playerid, YELLOW, "Hanger CLOSED.");
		}
	    return true;
	}
	else if(PlayerInfo[playerid][vLevel] > 0)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773) || IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773 + 20.0))
	    {
	        MoveObject(hanger1, 2151.81958008, 2409.79785156, 78.44499207, 2);
	        MoveObject(hanger2, 2160.73437500, 2409.79785156, 78.44499207, 2);
	        MoveObject(hanger3, 2151.81958008, 2417.00878906, 78.44499207, 2);
	        MoveObject(hanger4, 2160.73437500, 2417.00878906, 78.44499207, 2);
			SendClientMessage(playerid, YELLOW, "Hanger CLOSED.");
		}
	    return true;
	}
	else if(PlayerInfo[playerid][hHelper] == 1)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773) || IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773 + 20.0))
	    {
	        MoveObject(hanger1, 2151.81958008, 2409.79785156, 78.44499207, 2);
	        MoveObject(hanger2, 2160.73437500, 2409.79785156, 78.44499207, 2);
	        MoveObject(hanger3, 2151.81958008, 2417.00878906, 78.44499207, 2);
	        MoveObject(hanger4, 2160.73437500, 2417.00878906, 78.44499207, 2);
			SendClientMessage(playerid, YELLOW, "Hanger CLOSED.");
		}
	    return true;
	}
	else
	{
		SendClientMessage(playerid, RED, "Only admins and vips and Head Helper can use this command.");
	}
	return true;
}

CMD:openhanger(playerid, params[])
{
	if(PlayerInfo[playerid][aLevel] > 0)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773) || IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773 + 20.0))
	    {
	        MoveObject(hanger1, 2151.81958008, 2423.4087, 78.44499207, 2);
	        MoveObject(hanger2, 2160.73437500, 2423.4087, 78.44499207, 2);
	        MoveObject(hanger3, 2151.81958008, 2423.4087, 78.44499207, 2);
	        MoveObject(hanger4, 2160.73437500, 2423.4087, 78.44499207, 2);
			SendClientMessage(playerid, YELLOW, "Hanger OPENED.");
		}
	    return true;
	}
	else if(PlayerInfo[playerid][vLevel] > 0)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773) || IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773 + 20.0))
	    {
	        MoveObject(hanger1, 2151.81958008, 2423.4087, 78.44499207, 2);
	        MoveObject(hanger2, 2160.73437500, 2423.4087, 78.44499207, 2);
	        MoveObject(hanger3, 2151.81958008, 2423.4087, 78.44499207, 2);
	        MoveObject(hanger4, 2160.73437500, 2423.4087, 78.44499207, 2);
			SendClientMessage(playerid, YELLOW, "Hanger OPENED.");
		}
	    return true;
	}
	else if(PlayerInfo[playerid][hHelper] == 1)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773) || IsPlayerInRangeOfPoint(playerid, 20.0, 2159.2090,2414.2146,65.2773 + 20.0))
	    {
	        MoveObject(hanger1, 2151.81958008, 2423.4087, 78.44499207, 2);
	        MoveObject(hanger2, 2160.73437500, 2423.4087, 78.44499207, 2);
	        MoveObject(hanger3, 2151.81958008, 2423.4087, 78.44499207, 2);
	        MoveObject(hanger4, 2160.73437500, 2423.4087, 78.44499207, 2);
			SendClientMessage(playerid, YELLOW, "Hanger OPENED.");
		}
	    return true;
	}
	else
	{
		SendClientMessage(playerid, RED, "Only admins and vips and head helper can use this command.");
	}
	return true;
}

public OnPlayerRequestGate(playerid, gateid)
{
	if(gateid == FBIGate && GetTeam{playerid} != CLASS_FBI)
	{
		 return 0;
	}
	if(gateid == PDGate1 && GetTeam{playerid} == CLASS_CIV || GetTeam{playerid} == CLASS_MEDIC)
	{
		 return 0;
	}
	if(gateid == PDGate2 && GetTeam{playerid} == CLASS_CIV || GetTeam{playerid} == CLASS_MEDIC)
	{
		 return 0;
	}
	if(gateid == PDGate2 && GetTeam{playerid} == CLASS_CIV)
	{
		 return 0;
	}
	if(gateid == PDGate2 && GetTeam{playerid} == CLASS_MEDIC)
	{
		 return 0;
	}
	if(gateid == PDGate1 && GetTeam{playerid} == CLASS_CIV)
	{
		 return 0;
	}
	if(gateid == PDGate1 && GetTeam{playerid} == CLASS_MEDIC)
	{
		 return 0;
	}
	
	return 1;
}

CMD:robbiz(playerid, params[])
{
    new chance = random(3), bizowner = GetID(BizInfo[BizRobCP[playerid]][bOwner]);
	if(BizRobCP[playerid] == -1) return SendClientMessage(playerid, RED, "You must be in a business checkpoint to use this command.");
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
	if(bizowner == playerid) return SendClientMessage(playerid, RED, "You cant rob your own business.");
	if((gettime() - 120) < TimerInfo[playerid][CMD_timer9]) return SendClientMessage(playerid, RED, "[Timer]: 120 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer9] = gettime();
	if(!IsPlayerConnected(bizowner))
	{
	    if((gettime() - 120) < bizrobbed[BizRobCP[playerid]]) return SendClientMessage(playerid, RED, "This business has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
		new current_zone;
        current_zone = Player_Zone[playerid];
	    SendClientMessage(playerid, RED, "You failed to rob the business [WANTED LEVEL INCREASED]");
	    SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	    format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has attempted to rob %s at %s", GetName(playerid), playerid, BizInfo[BizRobCP[playerid]][bName], ZoneNames[current_zone][zone_name]);
		CopRadio(BLUE, fstr);
 		format(fstr2, sizeof(fstr2), "%s [%d] has attempted to rob your business at %s.", GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
		SendClientMessage(bizowner, RED, fstr2);
		bizrobbed[BizRobCP[playerid]] = gettime();
		return true;
	}
	if(BizInfo[BizRobCP[playerid]][bEarnings] < 10000)
	{
	    if((gettime() - 120) < bizrobbed[BizRobCP[playerid]]) return SendClientMessage(playerid, RED, "This business has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
		new current_zone;
        current_zone = Player_Zone[playerid];
	    SendClientMessage(playerid, RED, "You failed to rob the business [WANTED LEVEL INCREASED]");
	    SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	    format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has attempted to rob %s at %s", GetName(playerid), playerid, BizInfo[BizRobCP[playerid]][bName], ZoneNames[current_zone][zone_name]);
		CopRadio(RED, fstr);
 		format(fstr2, sizeof(fstr2), "%s [%d] has attempted to rob your business at %s.", GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
		SendClientMessage(bizowner, RED, fstr2);
		bizrobbed[BizRobCP[playerid]] = gettime();
		return true;
	}
	if(chance == 0)
	{
	    if((gettime() - 120) < bizrobbed[BizRobCP[playerid]]) return SendClientMessage(playerid, RED, "This business has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
		new current_zone;
        current_zone = Player_Zone[playerid];
	    SendClientMessage(playerid, WHITE, "You are robbing the business, DON'T LEAVE THE CHECKPOINT!");
	    GameTextForPlayer(playerid, "~w~Your ~g~Robbing ~w~The Business...~n~~r~Dont Leave ~w~The ~r~Checkpoint.", 25000, 5);
		format(fstr, sizeof(fstr), "[ROBBERY]: %s [%d] is robbing %s at %s", GetName(playerid), playerid, BizInfo[BizRobCP[playerid]][bName], ZoneNames[current_zone][zone_name]);
		CopRadio(RED, fstr);
 		format(fstr2, sizeof(fstr2), "%s [%d] is robbing your business at %s.", GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
		SendClientMessage(bizowner, RED, fstr2);
	    biztimer{playerid} = SetTimerEx("BizRob", 25000, false, "d", playerid);
   		ApplyAnimation(playerid,"ped","ARRESTgun",4.1,0,1,1,1,1);
    	IsPlayerRobbingBiz{playerid} = true;
		bizrobbed[BizRobCP[playerid]] = gettime();
		return true;
	}
	else if(chance == 1 || chance == 2)
	{
	    if((gettime() - 120) < bizrobbed[BizRobCP[playerid]]) return SendClientMessage(playerid, RED, "This business has been robbed recently, try again later. [Timer]: 120 sanie sabr kon.");
		new current_zone;
        current_zone = Player_Zone[playerid];
	    SendClientMessage(playerid, RED, "You failed to rob the business [WANTED LEVEL INCREASED]");
	    SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
	    format(fstr, sizeof(fstr), "[DISPATCH]: Suspect %s [%d] has attempted to rob %s at %s", GetName(playerid), playerid, BizInfo[BizRobCP[playerid]][bName], ZoneNames[current_zone][zone_name]);
		CopRadio(RED, fstr);
 		format(fstr2, sizeof(fstr2), "%s [%d] has attempted to rob your business at %s.", GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
		SendClientMessage(bizowner, RED, fstr2);
		bizrobbed[BizRobCP[playerid]] = gettime();
	}
	return true;
}

CMD:blowbomb(playerid,params[])
{
    if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
	foreach(new v : Vehicle)
	{
	    if(VehicleBombOwner[v] != playerid) continue;
	  	if(BomberStage{playerid} != 1) return SendClientMessage(playerid, RED, "You dont have any bombs attached to any vehicles.");
	  	if(IsPlayerInAnyVehicle(playerid) && GetVehicleDriverID(v) == playerid || GetPlayerVehicleID(playerid) == v) return SendClientMessage(playerid, RED, "You cant blow a vehicle up when your in it.");
		{
			new Float:x, Float:y, Float:z;
	       	GetVehiclePos(v, x, y, z);
			CreateExplosion(x, y, z, 7, 10);
 			CreateExplosion(x + 5.0, y, z, 7, 10);
 			CreateExplosion(x, y + 5.0, z, 7, 10);
 			CreateExplosion(x, y, z + 5.0, 7, 10);
	      	SetVehicleHealth(v, 0.0);
 			VehicleBombOwner[v] = INVALID_PLAYER_ID;
         	SendClientMessage(playerid, LIGHTGREEN, "The bomb has exploded.");
         	BomberStage{playerid} = 0;
        	if(GetVehicleDriverID(v) != INVALID_PLAYER_ID)
          	{
            	new msg[150];
	      		SetPlayerHealth(GetVehicleDriverID(v), 0.0);
            	format(msg, sizeof(msg), "%s [%d] has died in a massive vehicle explosion...", GetName(GetVehicleDriverID(v)), GetVehicleDriverID(v));
            	SendMessageToAll(PINK, msg);
          		CallRemoteFunction("OnPlayerDeath", "ddd", GetVehicleDriverID(v), playerid, 40);
          	}
			return true;
		}
	}
	return true;
}

CMD:setelvisanim(playerid,params[])
{
	if(IsPlayerNPC(playerid))
	{
		ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
	}
	else
	{
		SendClientMessage(playerid, WHITE, "SERVER: Unknown command.");
	}
	return true;
}

CMD:plus(playerid,params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid,RED,"Only admin level 1+ can use this command.");
    if(HasSpawned{playerid} == false) return SendClientMessage(playerid, RED, "You must be spawned before you can use this command.");
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use this command in a vehicle.");
	new coordinate[150], Float:distance, Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
    if(sscanf(params, "s[150]f", coordinate, distance)) return SendClientMessage(playerid, RED, "[USAGE]: /plus [x/y/z] [distance]");
    if(strfind(coordinate, "x", false) != -1)
    {
        SetPlayerPos(playerid, x + distance, y, z);
    }
    else if(strfind(coordinate, "y", false) != -1)
    {
        SetPlayerPos(playerid, x, y + distance, z);
    }
    else if(strfind(coordinate, "z", false) != -1)
    {
        SetPlayerPos(playerid, x, y, z + distance);
    }
    else
    {
        SendClientMessage(playerid, RED, "The coord can only be x, y or z.");
    }
    return true;
}

CMD:minus(playerid,params[])
{
	if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    if(HasSpawned{playerid} == false) return SendClientMessage(playerid, RED, "You must be spawned before you can use this command.");
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "You cant use this command in a vehicle.");
	new coordinate[150], Float:distance, Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
    if(sscanf(params, "s[150]f", coordinate, distance)) return SendClientMessage(playerid, RED, "[USAGE]: /minus [x/y/z] [distance]");
    if(strfind(coordinate, "x", false) != -1)
    {
        SetPlayerPos(playerid, x - distance, y, z);
    }
    else if(strfind(coordinate, "y", false) != -1)
    {
        SetPlayerPos(playerid, x, y - distance, z);
    }
    else if(strfind(coordinate, "z", false) != -1)
    {
        SetPlayerPos(playerid, x, y, z - distance);
    }
    else
    {
        SendClientMessage(playerid, RED, "The coord can only be x, y or z.");
    }
    return true;
}

CMD:spec(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    new targetid, string[64];
    if(sscanf(params,"u", targetid)) return SendClientMessage(playerid, RED, "[USAGE]: /spec [name/id]");
    if(!IsPlayerConnected(targetid)) return SendClientMessage(playerid, RED, "Player not found.");
    if(HasSpawned{targetid} == false) return SendClientMessage(playerid, RED, "The player must be spawned before you can spectate them.");
    if(targetid == playerid) return SendClientMessage(playerid, RED,"You cant spectate yourself.");
    if(IsOnduty{playerid} == 1)
	{
        IsOnduty{playerid} = 0;
		SetPlayerHealth(playerid, 100.0);
	}
    IsAdminSpectating{playerid} = true;
    IsPlayerBeingSpectated{targetid} = true;
    PlayerBeingSpectatedBy[targetid] = playerid;
	SpecInfo[playerid][IsSpectating] = targetid;
	TogglePlayerSpectating(playerid, true);
    if(IsPlayerInAnyVehicle(targetid))
    {
        SetPlayerInterior(playerid, GetPlayerInterior(targetid));
        SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(targetid));
        PlayerSpectateVehicle(playerid, GetPlayerVehicleID(targetid));
        format(fstr, sizeof(fstr), "{FFFFFF}%s [%d] Total Wealth", GetName(targetid), targetid);
        format(fstr2, sizeof(fstr2), "{FFFFFF}Holding: $%d\nBank: $%d\nCredit: $%d\nEarnings: $%d", GetPlayerCash(targetid), BankInfo[targetid][Balance], BankInfo[targetid][Credit], GetPlayersBizEarnings(targetid));
    	ShowPlayerDialog(playerid, WEALTH_DIALOG, DIALOG_STYLE_MSGBOX, fstr, fstr2, "Ok", "");
    	return 1;
    }
    else
    {
        SetPlayerInterior(playerid, GetPlayerInterior(targetid));
        SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(targetid));
        PlayerSpectatePlayer(playerid, targetid);
        format(fstr, sizeof(fstr), "{FFFFFF}%s [%d] Total Wealth", GetName(targetid), targetid);
        format(fstr2, sizeof(fstr2), "{FFFFFF}Holding: $%d\nBank: $%d\nCredit: $%d\nEarnings: $%d", GetPlayerCash(targetid), BankInfo[targetid][Balance], BankInfo[targetid][Credit], GetPlayersBizEarnings(targetid));
    	ShowPlayerDialog(playerid, WEALTH_DIALOG, DIALOG_STYLE_MSGBOX, fstr, fstr2, "Ok", "");
    }
    format(string, sizeof(string), "[SPEC]: You are now spectating %s [%d]", GetName(targetid), targetid);
    SendClientMessage(playerid, YELLOW, string);
	return true;
}

CMD:specoff(playerid, params[])
{
    if(PlayerInfo[playerid][aLevel] < 1) return SendClientMessage(playerid, RED, "Only admin level 1+ can use this command.");
    IsPlayerBeingSpectated{SpecInfo[playerid][IsSpectating]} = false;
    PlayerBeingSpectatedBy[SpecInfo[playerid][IsSpectating]] = -1;
	SpecInfo[playerid][IsSpectating] = -1;
    IsAdminSpectating{playerid} = false;
    TogglePlayerSpectating(playerid, false);
    SendClientMessage(playerid, YELLOW, "[SPEC]: Spectating mode turned OFF.");
    return true;
}

CMD:viewinterior(playerid, params[])
{
    if(IsInHouse[playerid] == 1) return SendClientMessage(playerid, RED, "You must be at a for-sale house door to use this command.");
    if(LastHouseCP[playerid] != -1)
    {
        if(!strcmp(GetHouseOwner(LastHouseCP[playerid]), "Nobody", false))
        {
			IsInHouse[playerid] = 1;
			SetPlayerHouseInterior(playerid, LastHouseCP[playerid]);
    		SendClientMessage(playerid, YELLOW, "You are now viewing the interior.");
    		return true;
    	}
		else
		{
	    	SendClientMessage(playerid, RED, "This house is owned by someone.");
		}
    	return true;
	}
	else
	{
	    SendClientMessage(playerid, RED, "Your not at a valid for-sale house door location.");
	}
	return true;
}

CMD:raid(playerid, params[])
{
	if(GetTeam{playerid} == CLASS_CIV || GetTeam{playerid} == CLASS_MEDIC) return SendClientMessage(playerid, RED, "Only law enforcement can use this command.");
    if(IsInHouse[playerid] == 1) return SendClientMessage(playerid, RED, "You must be at a house door to use this command.");
	if((gettime() - 60) < TimerInfo[playerid][CMD_timer36]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer36] = gettime();
    if(LastHouseCP[playerid] != -1)
    {
        if(strcmp(GetHouseOwner(LastHouseCP[playerid]), "Nobody", false))
        {
            IsInHouse[playerid] = 1;
			SetPlayerHouseInterior(playerid, LastHouseCP[playerid]);
			if(IsPlayerConnected(GetID(GetHouseOwner(LastHouseCP[playerid]))))
			{
				new string[150], current_zone;
        		current_zone = Player_Zone[playerid];
				format(string, sizeof(string), "You house has been raided by law enforcement at %s", ZoneNames[current_zone][zone_name]);
				SendClientMessage(GetID(GetHouseOwner(LastHouseCP[playerid])), RED, string);
			}
			return true;
		}
		else
		{
	    	SendClientMessage(playerid, RED, "This house is not owned by anybody.");
		}
    	return true;
	}
	else
	{
	    SendClientMessage(playerid, RED, "Your not at a valid house door location.");
	}
	return true;
}

CMD:breakin(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "Only civilians can use this command.");
    if(IsInHouse[playerid] == 1) return SendClientMessage(playerid, RED, "You must be at a house door to use this command.");
	if((gettime() - 60) < TimerInfo[playerid][CMD_timer37]) return SendClientMessage(playerid, RED, "[Timer]: 60 sanie sabr kon.");
    TimerInfo[playerid][CMD_timer37] = gettime();
    if(LastHouseCP[playerid] != -1)
    {
        if(strcmp(GetHouseOwner(LastHouseCP[playerid]), "Nobody", false))
        {
			new chance = random(5);
			switch(chance)
			{
			    case 0:
			    {
            		IsInHouse[playerid] = 1;
					SetPlayerHouseInterior(playerid, LastHouseCP[playerid]);
					new string[150], current_zone;
        			current_zone = Player_Zone[playerid];
					format(string, sizeof(string), "[DISPATCH]: %s [%d] has broken into %s's house at %s", GetName(playerid), playerid, GetHouseOwner(LastHouseCP[playerid]), ZoneNames[current_zone][zone_name]);
					CopRadio(BLUE, string);
					SendClientMessage(playerid, RED, "You have broken into the house [WANTED LEVEL INCREASED]");
					SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
					if(IsPlayerConnected(GetID(GetHouseOwner(LastHouseCP[playerid]))))
					{
						new string2[150];
						format(string2, sizeof(string2), "%s [%d] has broken into your house at %s", GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
						SendClientMessage(GetID(GetHouseOwner(LastHouseCP[playerid])), RED, string2);
					}
					return true;
                }
                case 1..4:
                {
                    new string[150], current_zone;
        			current_zone = Player_Zone[playerid];
					format(string, sizeof(string), "[DISPATCH]: %s [%d] has attempted to break into %s's house at %s", GetName(playerid), playerid, GetHouseOwner(LastHouseCP[playerid]), ZoneNames[current_zone][zone_name]);
					CopRadio(BLUE, string);
					SendClientMessage(playerid, RED, "You have failed to break into the house [WANTED LEVEL INCREASED]");
					SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) + 4);
					if(IsPlayerConnected(GetID(GetHouseOwner(LastHouseCP[playerid]))))
					{
						new string2[150];
						format(string2, sizeof(string2), "%s [%d] has attempted to break into your house at %s", GetName(playerid), playerid, ZoneNames[current_zone][zone_name]);
						SendClientMessage(GetID(GetHouseOwner(LastHouseCP[playerid])), RED, string2);
					}
                }
			}
            return true;
		}
		else
		{
	    	SendClientMessage(playerid, RED, "This house is not owned by anybody.");
		}
    	return true;
	}
	else
	{
	    SendClientMessage(playerid, RED, "Your not at a valid house door location.");
	}
	return true;
}

CMD:acceptgun(playerid, params[])
{
	if(offerer_id5[playerid] == -1) return SendClientMessage(playerid, RED, "This have not been offered a gun recently.");
	if(GetPlayerCash(playerid) < offer_price5[playerid]) return SendClientMessage(playerid, RED, "POOL KAFI NADARI!");
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(offerer_id5[playerid], cx, cy, cz);
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, cx, cy, cz)) return SendClientMessage(playerid, RED, "You must be near the offerer to buy a gun from them.");
	if(gunbuying[playerid] == 1)
	{
	    GivePlayerCash(offerer_id5[playerid], offer_price5[playerid]);
	    GivePlayerCash(playerid, - offer_price5[playerid]);
		PlayerInfo[offerer_id5[playerid]][pMaterials] = PlayerInfo[offerer_id5[playerid]][pMaterials] - 50;
		GivePlayerWeapon(playerid, 24, 99999);
		SendClientMessage(offerer_id5[playerid], WHITE, "Weapon sold, you used 50 materials to fabricate the firearm.");
		SendClientMessage(playerid, WHITE, "Weapon received.");
		//
		if(offerer_id5[playerid] == playerid)
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s fabricates a firearm and hands it to himself...", GetName(offerer_id5[playerid]));
        	ProxDetector(20.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
		}
		else
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s fabricates a firearm and hands it to %s...", GetName(offerer_id5[playerid]), GetName(playerid));
        	ProxDetector(20.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
	        SetPlayerScore(offerer_id5[playerid], GetPlayerScore(offerer_id5[playerid]) +1);
        }
        //
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /acceptgun", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
		return true;
	}
	else if(gunbuying[playerid] == 2)
	{
	    GivePlayerCash(offerer_id5[playerid], offer_price5[playerid]);
	    GivePlayerCash(playerid, - offer_price5[playerid]);
		PlayerInfo[offerer_id5[playerid]][pMaterials] = PlayerInfo[offerer_id5[playerid]][pMaterials] - 100;
		GivePlayerWeapon(playerid, 29, 99999);
		SendClientMessage(offerer_id5[playerid], WHITE, "Weapon sold, you used 100 materials to fabricate the firearm.");
		SendClientMessage(playerid, WHITE, "Weapon received.");
		//
		if(offerer_id5[playerid] == playerid)
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s fabricates a firearm and hands it to himself...", GetName(offerer_id5[playerid]));
        	ProxDetector(10.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
		}
		else
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s fabricates a firearm and hands it to %s...", GetName(offerer_id5[playerid]), GetName(playerid));
        	ProxDetector(10.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
	        SetPlayerScore(offerer_id5[playerid], GetPlayerScore(offerer_id5[playerid]) +1);
        }
        //
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /acceptgun", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
		return true;
	}
	else if(gunbuying[playerid] == 3)
	{
	    GivePlayerCash(offerer_id5[playerid], offer_price5[playerid]);
	    GivePlayerCash(playerid, - offer_price5[playerid]);
		PlayerInfo[offerer_id5[playerid]][pMaterials] = PlayerInfo[offerer_id5[playerid]][pMaterials] - 200;
		GivePlayerWeapon(playerid, 27, 99999);
		SendClientMessage(offerer_id5[playerid], WHITE, "Weapon sold, you used 200 materials to fabricate the firearm.");
		SendClientMessage(playerid, WHITE, "Weapon received.");
		//
		if(offerer_id5[playerid] == playerid)
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s fabricates a firearm and hands it to himself...", GetName(offerer_id5[playerid]));
        	ProxDetector(10.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
		}
		else
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s fabricates a firearm and hands it to %s...", GetName(offerer_id5[playerid]), GetName(playerid));
        	ProxDetector(10.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
	        SetPlayerScore(offerer_id5[playerid], GetPlayerScore(offerer_id5[playerid]) +1);
        }
        //
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /acceptgun", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
		return true;
	}
	else if(gunbuying[playerid] == 4)
	{
	    GivePlayerCash(offerer_id5[playerid], offer_price5[playerid]);
	    GivePlayerCash(playerid, - offer_price5[playerid]);
		PlayerInfo[offerer_id5[playerid]][pMaterials] = PlayerInfo[offerer_id5[playerid]][pMaterials] - 250;
		GivePlayerWeapon(playerid, 31, 99999);
		SendClientMessage(offerer_id5[playerid], WHITE, "Weapon sold, you used 250 materials to fabricate the firearm.");
		SendClientMessage(playerid, WHITE, "Weapon received.");
		//
		if(offerer_id5[playerid] == playerid)
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s fabricates a firearm and hands it to himself...", GetName(offerer_id5[playerid]));
        	ProxDetector(10.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
		}
		else
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s fabricates a firearm and hands it to %s...", GetName(offerer_id5[playerid]), GetName(playerid));
        	ProxDetector(10.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
	        SetPlayerScore(offerer_id5[playerid], GetPlayerScore(offerer_id5[playerid]) +1);
        }
        //
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /acceptgun", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
    	return true;
	}
	else if(gunbuying[playerid] == 5)
	{
	    GivePlayerCash(offerer_id5[playerid], offer_price5[playerid]);
	    GivePlayerCash(playerid, - offer_price5[playerid]);
		PlayerInfo[offerer_id5[playerid]][pMaterials] = PlayerInfo[offerer_id5[playerid]][pMaterials] - 500;
		GivePlayerWeapon(playerid, 34, 99999);
		SendClientMessage(offerer_id5[playerid], WHITE, "Weapon sold, you used 500 materials to fabricate the firearm.");
		SendClientMessage(playerid, WHITE, "Weapon received.");
		//
		if(offerer_id5[playerid] == playerid)
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s fabricates a firearm and hands it to himself...", GetName(offerer_id5[playerid]));
        	ProxDetector(10.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
		}
		else
		{
			new mstring[150];
			format(mstring, sizeof(mstring), "Arms Dealer %s fabricates a firearm and hands it to %s...", GetName(offerer_id5[playerid]), GetName(playerid));
        	ProxDetector(10.0, playerid, mstring, ORANGE, ORANGE, ORANGE, ORANGE, ORANGE);
	        SetPlayerScore(offerer_id5[playerid], GetPlayerScore(offerer_id5[playerid]) +1);
        }
        //
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /acceptgun", GetName(playerid), playerid);
    	SendAdminMessage(GREY, astring);
	}
	offerer_id5[playerid] = -1;
	return true;
}

CMD:sellgun(playerid, params[])
{
	new customer, gun, price, string1[150], string2[150];
	if(DegreeInfo[playerid][dWeapons] < 1) return SendClientMessage(playerid, RED, "In command niaz be Madrak Weapons darad.");
    if(IsJailed{playerid} == true || IsCaged{playerid} == true) return SendClientMessage(playerid, RED, "You cant use this comand while you are jailed.");
	if(sscanf(params, "udd", customer, gun, price)) return SendClientMessage(playerid, RED, "[USAGE]: /sellgun [name/id] [gun] [price]") && SendClientMessage(playerid, WHITE, "Guns: 1=Deagle[50 MATS] 2=MP5[100 MATS] 3=Combat[200 MATS] 4=M4[250 MATS] 5=Sniper[500 MATS]");
	if(!IsPlayerConnected(customer)) return SendClientMessage(playerid, RED, "Player not found.");
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(customer, cx, cy, cz);
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, cx, cy, cz)) return SendClientMessage(playerid, RED, "You must be near the player to offer a gun to them.");
	if(gun == 1)
	{
	    if(PlayerInfo[playerid][pMaterials] < 50) return SendClientMessage(playerid, RED, "Invalid materials, you need atleast 50 materials to fabricate this weapon.");
		format(string1, sizeof(string1), "%s [%d] has offered you a Desert Eagle[Infinate Ammo] for $%d, use /(accept/decline)gun", GetName(playerid), playerid, price);
		SendClientMessage(customer, WHITE, string1);
		format(string2, sizeof(string2), "You have offered %s [%d] a Desert Eagle[Infinate Ammo] for $%d, please await response.", GetName(customer), customer, price);
		SendClientMessage(playerid, WHITE, string2);
		offerer_id5[customer] = playerid;
		offer_price5[customer] = price;
		gunbuying[customer] = gun;
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", playerid);
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", customer);
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /sellgun %d %d %d", GetName(playerid), playerid, customer, gun, price);
    	SendAdminMessage(GREY, astring);
		return true;
	}
	else if(gun == 2)
	{
	    if(PlayerInfo[playerid][pMaterials] < 100) return SendClientMessage(playerid, RED, "Invalid materials, you need atleast 100 materials to fabricate this weapon.");
		format(string1, sizeof(string1), "%s [%d] has offered you a MP5[Infinate Ammo] for $%d, use /(accept/decline)gun", GetName(playerid), playerid, price);
		SendClientMessage(customer, WHITE, string1);
		format(string2, sizeof(string2), "You have offered %s [%d] a MP5[Infinate Ammo] for $%d, please await response.", GetName(customer), customer, price);
		SendClientMessage(playerid, WHITE, string2);
		offerer_id5[customer] = playerid;
		offer_price5[customer] = price;
		gunbuying[customer] = gun;
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", playerid);
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", customer);
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /sellgun %d %d %d", GetName(playerid), playerid, customer, gun, price);
    	SendAdminMessage(GREY, astring);
		return true;
	}
	else if(gun == 3)
	{
	    if(PlayerInfo[playerid][pMaterials] < 200) return SendClientMessage(playerid, RED, "Invalid materials, you need atleast 200 materials to fabricate this weapon.");
		format(string1, sizeof(string1), "%s [%d] has offered you a Combat Shotgun[Infinate Ammo] for $%d, use /(accept/decline)gun", GetName(playerid), playerid, price);
		SendClientMessage(customer, WHITE, string1);
		format(string2, sizeof(string2), "You have offered %s [%d] a Combat Shotgun[Infinate Ammo] for $%d, please await response.", GetName(customer), customer, price);
		SendClientMessage(playerid, WHITE, string2);
		offerer_id5[customer] = playerid;
		offer_price5[customer] = price;
		gunbuying[customer] = gun;
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", playerid);
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", customer);
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /sellgun %d %d %d", GetName(playerid), playerid, customer, gun, price);
    	SendAdminMessage(GREY, astring);
		return true;
	}
	else if(gun == 4)
	{
	    if(PlayerInfo[playerid][pMaterials] < 250) return SendClientMessage(playerid, RED, "Invalid materials, you need atleast 250 materials to fabricate this weapon.");
		format(string1, sizeof(string1), "%s [%d] has offered you a M4[Infinate Ammo] for $%d, use /(accept/decline)gun", GetName(playerid), playerid, price);
		SendClientMessage(customer, WHITE, string1);
		format(string2, sizeof(string2), "You have offered %s [%d] a M4[Infinate Ammo] for $%d, please await response.", GetName(customer), customer, price);
		SendClientMessage(playerid, WHITE, string2);
		offerer_id5[customer] = playerid;
		offer_price5[customer] = price;
		gunbuying[customer] = gun;
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", playerid);
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", customer);
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /sellgun %d %d %d", GetName(playerid), playerid, customer, gun, price);
    	SendAdminMessage(GREY, astring);
		return true;
	}
	else if(gun == 5)
	{
	    if(PlayerInfo[playerid][pMaterials] < 500) return SendClientMessage(playerid, RED, "Invalid materials, you need atleast 500 materials to fabricate this weapon.");
		format(string1, sizeof(string1), "%s [%d] has offered you a Sniper Rifle[Infinate Ammo] for $%d, use /(accept/decline)gun", GetName(playerid), playerid, price);
		SendClientMessage(customer, WHITE, string1);
		format(string2, sizeof(string2), "You have offered %s [%d] a Sniper Rifle[Infinate Ammo] for $%d, please await response.", GetName(customer), customer, price);
		SendClientMessage(playerid, WHITE, string2);
		offerer_id5[customer] = playerid;
		offer_price5[customer] = price;
		gunbuying[customer] = gun;
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", playerid);
        SetTimerEx("AcceptCMDExpire", 30000, false, "d", customer);
        new astring[100];
    	format(astring, sizeof(astring),"%s [%d] typed: /sellgun %d %d %d", GetName(playerid), playerid, customer, gun, price);
    	SendAdminMessage(GREY, astring);
		return true;
	}
	else
	{
	    SendClientMessage(playerid, RED, "Invalid gun id.");
		SendClientMessage(playerid, WHITE, "Guns: 1=Deagle[50 MATS] 2=MP5[100 MATS] 3=Combat[200 MATS] 4=M4[250 MATS] 5=Sniper[500 MATS]");
	}
	return true;
}

CMD:declinegun(playerid, params[])
{
	if(GetTeam{playerid} != CLASS_CIV) return SendClientMessage(playerid, RED, "This command is restricted to civilian class.");
	if(offerer_id5[playerid] == -1) return SendClientMessage(playerid, RED, "This have not been offered a gun recently.");
	SendClientMessage(offerer_id5[playerid], WHITE, "Weapon declined.");
	SendClientMessage(playerid, WHITE, "Weapon declined.");
	offerer_id5[playerid] = -1;
	offer_price5[playerid] = -1;
	gunbuying[playerid] = 0;
	new astring[100];
	format(astring, sizeof(astring),"%s [%d] typed: /declinegun", GetName(playerid), playerid);
	SendAdminMessage(GREY, astring);
	return true;
}

ptask UpdateFuelTimer[15000](playerid)//15 Second
{
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
  	{
		GetVehicleFuel[GetPlayerVehicleID(playerid)] = GetVehicleFuel[GetPlayerVehicleID(playerid)] - 1;
	}
	return 1;
}

ptask poolup[1000](playerid)
{
    new poolstr[1000];
    playerpool[playerid] = GetPlayerCash(playerid);
    if(GetPlayerColor(playerid) == RED)
   	{
   	    if(playerpool[playerid] == 0)
       	{
       	format(poolstr,sizeof(poolstr),"~w~$%d~n~~r~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	    else if(playerpool[playerid] > 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~g~$%d~n~~r~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
   	    }
       	else if(playerpool[playerid] < 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~r~$%d~n~~r~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
       	return 1;
   	}
   	else if(GetPlayerColor(playerid) == YELLOW)
   	{
   	    if(playerpool[playerid] == 0)
       	{
       	format(poolstr,sizeof(poolstr),"~w~$%d~n~~y~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	    else if(playerpool[playerid] > 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~g~$%d~n~~y~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
   	    }
       	else if(playerpool[playerid] < 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~r~$%d~n~~y~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
       	return 1;
   	}
   	else if(GetPlayerColor(playerid) == BLUE)
   	{
   	    if(playerpool[playerid] == 0)
       	{
       	format(poolstr,sizeof(poolstr),"~w~$%d~n~~b~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	    else if(playerpool[playerid] > 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~g~$%d~n~~b~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
   	    }
       	else if(playerpool[playerid] < 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~r~$%d~n~~b~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
       	return 1;
   	}
   	else if(GetPlayerColor(playerid) == GREEN)
   	{
   	    if(playerpool[playerid] == 0)
       	{
       	format(poolstr,sizeof(poolstr),"~w~$%d~n~~g~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	    else if(playerpool[playerid] > 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~g~$%d~n~~g~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
   	    }
       	else if(playerpool[playerid] < 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~r~$%d~n~~g~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
       	return 1;
   	}
   	else if(GetPlayerColor(playerid) == PINK)
   	{
   	    if(playerpool[playerid] == 0)
       	{
       	format(poolstr,sizeof(poolstr),"~w~$%d~n~~r~~h~~h~~h~~h~~h~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	    else if(playerpool[playerid] > 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~g~$%d~n~~r~~h~~h~~h~~h~~h~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
   	    }
       	else if(playerpool[playerid] < 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~r~$%d~n~~r~~h~~h~~h~~h~~h~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
       	return 1;
   	}
   	else if(GetPlayerColor(playerid) == PURPLE)
   	{
   	    if(playerpool[playerid] == 0)
       	{
       	format(poolstr,sizeof(poolstr),"~w~$%d~n~~p~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	    else if(playerpool[playerid] > 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~g~$%d~n~~p~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
   	    }
       	else if(playerpool[playerid] < 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~r~$%d~n~~p~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
       	return 1;
	}
   	else if(GetPlayerColor(playerid) == WHITE || GetPlayerColor(playerid) == GREY)
   	{
   	    if(playerpool[playerid] == 0)
       	{
       	format(poolstr,sizeof(poolstr),"~w~$%d~n~~w~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	    else if(playerpool[playerid] > 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~g~$%d~n~~w~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
   	    }
       	else if(playerpool[playerid] < 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~r~$%d~n~~w~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	}
   	else if(GetPlayerColor(playerid) == ORANGE)
   	{
   	    if(playerpool[playerid] == 0)
       	{
       	format(poolstr,sizeof(poolstr),"~w~$%d~n~~l~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	    else if(playerpool[playerid] > 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~g~$%d~n~~l~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
   	    }
       	else if(playerpool[playerid] < 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~r~$%d~n~~l~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	}
   	else
   	{
   	    if(playerpool[playerid] == 0)
       	{
       	format(poolstr,sizeof(poolstr),"~w~$%d~n~~l~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	    else if(playerpool[playerid] > 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~g~$%d~n~~l~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
   	    }
       	else if(playerpool[playerid] < 0)
   	    {
   	    format(poolstr,sizeof(poolstr),"~r~$%d~n~~l~%d ] %d",playerpool[playerid],GetPlayerScore(playerid),GetPlayerWantedLevel(playerid));
       	TextDrawSetString(playerwanted[playerid],poolstr);
       	}
   	}
   	return 1;
}

ptask Afk_Dec[1000](playerid)//1 Second
{
    if(IsPlayerPaused(playerid) == true && Inactive[playerid] == false)
    {
        new var0[600], var1[24];
	    GetPlayerName(playerid, var1, 24);
	    format(var0, 400, "{FF0000}(Auto_AFK) {33FF33}%s [%d] is now {FF0000}Away {FF0000}From {33FF33}the {FF0000}Keyboard {FFFFFF}(/afklist)", var1, playerid);
        ProxDetector(20.0, playerid, var0, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN);
        Inactive[playerid] = true;
        AFKcount++;
        return 1;
    }
    else if(IsPlayerPaused(playerid) == false && Inactive[playerid] == true)
    {
        new var0[300], var1[24];
	    GetPlayerName(playerid, var1, 24);
        format(var0, 200, "{FF0000}(Auto_AFK) {33FF33}%s [%d] is back from {FF0000}AFK", var1, playerid);
        ProxDetector(20.0, playerid, var0, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN, LIGHTGREEN);
        Inactive[playerid] = false;
        AFKcount--;
    }
    return 1;
}

stock GetSwimmingPointZ(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 50.0, 1962.15, -1198.71, 17.45)) return 19;
	if(IsPlayerInRangeOfPoint(playerid, 100.0, -1127.58, 2764.43, 40.00)) return 43;
	if(IsPlayerInRangeOfPoint(playerid, 100.0, -988.19, 2486.89, 40.00)) return 43;
	if(IsPlayerInRangeOfPoint(playerid, 100.0, -924.33, 2306.59, 40.00)) return 43;
	if(IsPlayerInRangeOfPoint(playerid, 100.0, -1104.15, 2175.83, 40.00)) return 43;
	if(IsPlayerInRangeOfPoint(playerid, 100.0, -1307.06, 2119.33, 40.00)) return 43;
	if(IsPlayerInRangeOfPoint(playerid, 100.0, -831.85, 2122.23, 40.00)) return 43;
	if(IsPlayerInRangeOfPoint(playerid, 100.0, -595.76, 2138.34, 40.00)) return 43;
	if(IsPlayerInRangeOfPoint(playerid, 100.0, -569.24, 2274.40, 40.00)) return 43;
	if(IsPlayerInRangeOfPoint(playerid, 12.0, 1095.800, -674.950, 111.908)) return 113;
 	if(IsPlayerInRangeOfPoint(playerid, 12.0, 224.500, -1185.725, 73.908)) return 76;
  	if(IsPlayerInRangeOfPoint(playerid, 12.0, 193.700, -1230.608, 76.603)) return 79;
   	if(IsPlayerInRangeOfPoint(playerid, 12.0, 1277.500, -805.200, 86.581)) return 88;
    if(IsPlayerInRangeOfPoint(playerid, 12.0, 2582.0, 2387.0, 16.0)) return 18;
	return 10;
}

stock IsPlayerAtHealingPoint(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 4, -2420.219, 984.578, 44.297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2420.180, 985.945, 44.297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2225.203, -1153.422, 1025.906)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2576.703, -1284.430, 1061.094)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2155.906, 1606.773, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2209.906, 1607.195, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2222.203, 1606.773, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 495.969, -24.320, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 501.828, -1.430, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 373.828, -178.141, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 330.680, 178.500, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 331.922, 178.500, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 350.906, 206.086, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 361.563, 158.617, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 371.594, 178.453, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 374.891, 188.977, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2155.844, 1607.875, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2202.453, 1617.008, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2209.242, 1621.211, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2222.367, 1602.641, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 500.563, -1.367, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 379.039, -178.883, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2480.86,-1959.27,12.9609)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 1634.11,-2237.53,12.8906)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2139.52,-1161.48,23.3594)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2153.23,-1016.15,62.2344)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -1350.12,493.859,10.5859)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2229.19,286.414,34.7031)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 1659.46,1722.86,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2647.7,1129.66,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2845.73,1295.05,10.7891)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 1398.84,2222.61,10.4219)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -1455.12,2591.66,55.2344)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -76.0312,1227.99,19.125)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 662.43,-552.164,15.7109)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -253.742,2599.76,62.2422)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2271.73,-76.4609,25.9609)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 1789.21,-1369.27,15.1641)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 1729.79,-1943.05,12.9453)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2060.12,-1897.64,12.9297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 1928.73,-1772.45,12.9453)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2325.98,-1645.13,14.2109)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2352.18,-1357.16,23.7734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 1154.73,-1460.89,15.1562)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -1350.12,492.289,10.5859)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2118.97,-423.648,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2118.62,-422.414,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2097.27,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2092.09,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2063.27,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2005.65,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2034.46,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2068.56,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2039.85,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -2011.14,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -1980.79,142.664,27.0703)) return 1;
 	else if(IsPlayerInRangeOfPoint(playerid, 4, 2319.99,2532.85,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 1520.15,1055.27,10.00)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2503.14,1243.7,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 2085.77,2071.36,10.4531)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -862.828,1536.61,21.9844)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -14.7031,1175.36,18.9531)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, -253.742,2597.95,62.2422)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 201.016,-107.617,0.898438)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 4, 1277.84,372.516,18.9531)) return 1;
	else return 0;
}

ptask ACNR_anticheat[2000](playerid)//2 Second
{
    //if(PlayerInfo[playerid][aLevel] >= 1 || IsPlayerAdmin(playerid)) return 1;
	if(GetPlayerState(playerid) == PLAYER_STATE_NONE) return 1;
	{
        {
			//Anti-Speed Hack
	    	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        	{
				new pveh = GetPlayerVehicleID(playerid);
            	if(GetVehicleSpeed(pveh) > MAX_VEHICLE_SPEED)
            	{
					if(GetVehicleModel(pveh) != 520)
                    {
                        new Float: vehicleVelocity[3];
                        GetVehicleVelocity(pveh, vehicleVelocity[0], vehicleVelocity[1], vehicleVelocity[2]);
                        if(vehicleVelocity[2] > -0.5)
                        {
                	        format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Speed hacks (PlayerSpeed: %d > %d)", GetName(playerid), playerid, soratbegirs(GetPlayerVehicleID(playerid)), MAX_VEHICLE_SPEED);
	        		        SendMessageToAll(RED, fstr);
        		        	GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
        		        	SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
                            PlayerInfo[playerid][pKicks]++;
				        	KickPlayer(playerid);
				        	tedadekick++;
	                    	accssave();
		                    print(fstr);
						}
					}
				}
				return 1;
    		}
			//Anti-Fly
			if(GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    		{
            	if(IsPlayerSkydiving(playerid) == 0 && IsPlayerUsingParachute(playerid) == 0)
            	{
            	    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
			        {
						new ai = GetPlayerAnimationIndex(playerid);
						if(ai == 1538 || ai == 1538 || ai == 1543)
						{
							if(!GetPlayerInterior(playerid))
							{
							    new Float: playersPos[3];
							    GetPlayerPos(playerid, playersPos[0], playersPos[1], playersPos[2]);
							    if(playersPos[2] > GetSwimmingPointZ(playerid))
							    {
							        format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Fly Hack", GetName(playerid), playerid);
	        			        	SendMessageToAll(RED, fstr);
        				        	GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
        				        	SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
  		        		            PlayerInfo[playerid][pKicks]++;
						        	KickPlayer(playerid);
							        tedadekick++;
		                            accssave();
		                            print(fstr);
							    }
						    }
						}
			        }
            	}
            	return 1;
        	}
        	//Anti-Airbrake
	    	if(GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    		{
            	if(IsPlayerSkydiving(playerid) == 0 && IsPlayerUsingParachute(playerid) == 0  /*   && GetPlayerSpeed(playerid) > MAX_ON_FOOT_SPEED  */  )
            	{
            	    new ai = GetPlayerAnimationIndex(playerid);
			        if(ai == 1231 || ai == 1266)
			        {
			            new Float: playersPos[3];
			            GetPlayerPos(playerid, playersPos[0], playersPos[1], playersPos[2]);
			            if(playersPos[2] > GetSwimmingPointZ(playerid))
			            {
			                if(!IsPlayerInRangeOfPoint(playerid, 200.0, 602.74, 871.44, -20.65) && !IsPlayerInRangeOfPoint(playerid, 300.0, 1678.38, -2291.18, -1.00))
			                {
			                    //if(GetPointZPos(playersPos[0], playersPos[1]) < playersPos[2] - 15.0)
			                    {
			                        format(fstr, sizeof(fstr), "Elvis has kicked %s [%d] from ACNR - Dalil: Airbrake", GetName(playerid), playerid);
	        	                	SendMessageToAll(RED, fstr);
        		                	GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
        		                	SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
                                    PlayerInfo[playerid][pKicks]++;
				                	KickPlayer(playerid);
				                	tedadekick++;
		                            accssave();
		                            print(fstr);
			                    }
			                }
			            }
			        }
					return 1;
            	}
        	}
        	//Anti-Jetpack Cheat
	    	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
	    	{
	        	format(fstr, sizeof(fstr), "Elvis has kick %s [%d] from ACNR - Dalil: Jetpack ", GetName(playerid), playerid);
	        	SendMessageToAll(RED, fstr);
        		GameTextForPlayer(playerid, "~r~Kicked...~n~kicked..~n~kicked.~n~kicked", 5000, 2);
        		SendClientMessage(playerid, ORANGE, "If you think this kick is unfair post an appeal at just-samp.rozblog.com");
                PlayerInfo[playerid][pKicks]++;
				KickPlayer(playerid);
				tedadekick++;
		        accssave();
		        print(fstr);
	        	return 1;
	    	}
            //Anti Money Cheat
            if(GetPlayerCash(playerid) != GetPlayerCash(playerid))
            {
                ResetServerCash(playerid);
                UpdateServerCash(playerid, GetPlayerCash(playerid));
            }
		}
    }
	return 1;
}

ptask ACNR_taxandinterest[3600000](playerid)//1 Hour
{
	if(IsLoggedIn{playerid} == 0/* || GetPlayerState(playerid) == PLAYER_STATE_NONE*/) return SendClientMessage(playerid,RED,"Shoma 1 saat dar server budid ama zamane pardakht malit login nashode budi!.");
	SendClientMessage(playerid,LIGHTGREEN,"Afarin! , 1 saat bazi kardi! . ;)");
	new string[150], string2[150], string3[150];
	//Interest
	if(BankInfo[playerid][Balance] > 0)
	{
		new interest = BankInfo[playerid][Balance]/64;//1.5%
   		BankInfo[playerid][Balance] = BankInfo[playerid][Balance] + interest;
    	SaveBankStats(playerid);
		format(string, sizeof(string), "[Interest]: Shoma $%d sood az bank daryaft kardid.", interest);
		SendClientMessage(playerid, WHITE, string);
	}
	if(PlayerInfo[playerid][vLevel] < 1)//VIP pass
	{
		//General Taxes
		if(CalculateWealth(playerid) > 1000000 && CalculateWealth(playerid) < 5000000)
		{
			new tax = CalculateWealth(playerid)/128;//0.75%
			BankInfo[playerid][Balance] = BankInfo[playerid][Balance] - tax;
			format(string2, sizeof(string2), "[General Taxes]: Shoma $%d maliat pool khod ra pardakht kardid.", tax);
			SendClientMessage(playerid, ORANGE, string2);
			GivePlayerCash(playerid, - tax);
		}

		//Wealth Taxes
		else if(CalculateWealth(playerid) > 5000000)
		{
			new tax = CalculateWealth(playerid)/64;//1.5%
	    	BankInfo[playerid][Balance] = BankInfo[playerid][Balance] - tax;
			format(string2, sizeof(string2), "[Wealth Taxes]: Shoma $%d maliat pool khod ra pardakht kardid.", tax);
    		SendClientMessage(playerid, ORANGE, string2);
			GivePlayerCash(playerid, - tax);
   		}

   		if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
		{
			SaveBankStats(playerid);
			SaveFightStats(playerid);
    		SaveUserStats(playerid);
    		SaveDegreeStats(playerid);
 		}

		//Property Taxes
		new housecount = 0, bizcount = 0;
		if(GetOwnedHouses(playerid) > 0)
		{
				housecount = 1;
		}
		if(GetPlayerOwnedBusinesses(playerid) > 0)
		{
			bizcount = 1;
		}
		if(bizcount == 0 && housecount == 0)
		{
			return 1;
		}
		else if(bizcount == 1 && housecount == 0 || bizcount == 0 && housecount == 1)
		{
			new propertytax = random(5000) + 5000;//Random 10K
			BankInfo[playerid][Balance] = BankInfo[playerid][Balance] - propertytax;
			format(string3, sizeof(string3), "[Property Taxes]: Shoma $%d maliat khane ya business khod ra pardakht kardid.", propertytax);
    		SendClientMessage(playerid, ORANGE, string3);
			GivePlayerCash(playerid, - propertytax);
		}
		else if(bizcount == 1 && housecount == 1)
		{
			new propertytax = random(10000) + 10000;//Random 20K
			BankInfo[playerid][Balance] = BankInfo[playerid][Balance] - propertytax;
			format(string3, sizeof(string3), "[Property Taxes]: Shoma $%d maliat khane va business khod ra pardakht kardid.", propertytax);
    		SendClientMessage(playerid, ORANGE, string3);
			GivePlayerCash(playerid, - propertytax);
		}

   		if(IsPlayerConnected(playerid) && IsLoggedIn{playerid} == 1)
		{
			SaveBankStats(playerid);
			SaveFightStats(playerid);
    		SaveUserStats(playerid);
    		SaveDegreeStats(playerid);
 		}
	}
	return 1;
}

ptask SetPlayersColors[1000](playerid)
{
	if(HasSpawned{playerid} == false)
	{
	  	SetPlayerColor(playerid, GREY);
	  	return 1;
	}
	else if(HasSpawned{playerid} == true && GetTeam{playerid} == CLASS_CIV)
	{
	    if(IsOnduty{playerid} == 1)
		{
	  		SetPlayerColor(playerid, PURPLE);
	  		return 1;
		}
		else if(IsVIPInColorMode{playerid} == true)
		{
			SetPlayerColor(playerid, ORANGE);
	  		return 1;
		}
		else if(GetPlayerWantedLevel(playerid) == 0)
		{
			SetPlayerColor(playerid, WHITE);
	  		return 1;
		}
		else if(GetPlayerWantedLevel(playerid) >= 1 && GetPlayerWantedLevel(playerid) <= 3)
		{
			SetPlayerColor(playerid, YELLOW);
	  		return 1;
		}
		else if(GetPlayerWantedLevel(playerid) >= 4)
		{
			SetPlayerColor(playerid, RED);
		}
		return 1;
	}
	else if(HasSpawned{playerid} == true && GetTeam{playerid} == CLASS_CIA || GetTeam{playerid} == CLASS_FBI)
	{
	    if(IsOnduty{playerid} == 1)
		{
	  		SetPlayerColor(playerid, PURPLE);
	  		return 1;
		}
		else if(IsVIPInColorMode{playerid} == true)
		{
			SetPlayerColor(playerid, ORANGE);
	  		return 1;
		}
		else
		{
   			SetPlayerColor(playerid, WHITE);
     	}
     	return 1;
	}
	else if(HasSpawned{playerid} == true && GetTeam{playerid} == CLASS_COPS)
	{
	    if(IsOnduty{playerid} == 1)
		{
	  		SetPlayerColor(playerid, PURPLE);
	  		return 1;
		}
		else if(IsVIPInColorMode{playerid} == true)
		{
			SetPlayerColor(playerid, ORANGE);
	  		return 1;
		}
		else
		{
      		SetPlayerColor(playerid, BLUE);
    	}
    	return 1;
	}
	else if(HasSpawned{playerid} == true && GetTeam{playerid} == CLASS_ARMY)
	{
	    if(IsOnduty{playerid} == 1)
		{
	  		SetPlayerColor(playerid, PURPLE);
	  		return 1;
		}
		else if(IsVIPInColorMode{playerid} == true)
		{
			SetPlayerColor(playerid, ORANGE);
	  		return 1;
		}
		else
		{
       		SetPlayerColor(playerid, GREEN);
       	}
       	return 1;
	}
	else if(HasSpawned{playerid} == true && GetTeam{playerid} == CLASS_MEDIC)
 	{
	    if(IsOnduty{playerid} == 1)
		{
	  		SetPlayerColor(playerid, PURPLE);
	  		return 1;
		}
		else if(IsVIPInColorMode{playerid} == true)
		{
			SetPlayerColor(playerid, ORANGE);
	  		return 1;
		}
		else
		{
      		SetPlayerColor(playerid, PINK);
      	}
	}
	return 1;
}

ptask DecWantedLevel[180000](playerid) // fekonam 30 min
{
    if(GetPlayerWantedLevel(playerid) == 0 || IsPlayerUndergoingHoldup(playerid) == 1 || IsPlayerNearLawEnforcement(playerid) == 1 || GetPlayerState(playerid) == PLAYER_STATE_NONE || HasSpawned{playerid} == false || GetTeam{playerid} != CLASS_CIV) return 1;
    else if(GetPlayerWantedLevel(playerid) >= 5)
    {
		new wantlvl = GetPlayerWantedLevel(playerid);
        SetPlayerWantedLevel(playerid, wantlvl - 1);
        new www[100];
        format(www,sizeof(www), "[WANTED]: You have lost a wanted level [Level %d]",wantlvl - 1);
        SendClientMessage(playerid, RED,www);
        return 1;
    }
    else if(GetPlayerWantedLevel(playerid) == 4)
    {
        SetPlayerWantedLevel(playerid, 3);
        SendClientMessage(playerid, YELLOW, "[WANTED]: You have lost a wanted level [Level 3]");
        return 1;
    }
    else if(GetPlayerWantedLevel(playerid) == 3)
    {
        SetPlayerWantedLevel(playerid, 2);
        SendClientMessage(playerid, YELLOW, "[WANTED]: You have lost a wanted level [Level 2]");
        return 1;
    }
    else if(GetPlayerWantedLevel(playerid) == 2)
    {
        SetPlayerWantedLevel(playerid, 1);
        SendClientMessage(playerid, YELLOW, "[WANTED]: You have lost a wanted level [Level 1]");
        return 1;
    }
    else if(GetPlayerWantedLevel(playerid) == 1)
    {
        SetPlayerWantedLevel(playerid, 0);
        SendClientMessage(playerid, WHITE, "[WANTED]: You have now lost your wanted level [Bigonah]");
    }
    return 1;
}

task LotteryDraw[600000]() // fekonam 10 min
{
	MakeNumber();
	new Winnings[MAX_PLAYERS];

	foreach(new i : Player)
	{
		if(HasLotteryTicket{i} == 1)
		{
			for(new n = 0; n < 6; n++)
			{
				if(PlayersLottoNumbers[0][i] == Number[n])
				{
					Winnings[i]++;
				}
				if(PlayersLottoNumbers[1][i] == Number[n])
				{
					Winnings[i]++;
				}
				if(PlayersLottoNumbers[2][i] == Number[n])
				{
					Winnings[i]++;
				}
				if(PlayersLottoNumbers[3][i] == Number[n])
				{
					Winnings[i]++;
				}
				if(PlayersLottoNumbers[4][i] == Number[n])
				{
					Winnings[i]++;
				}
				if(PlayersLottoNumbers[5][i] == Number[n])
				{
					Winnings[i]++;
				}
			}
			format(fstr, sizeof(fstr), "[LOTTO]: shomarehaye ghorekeshi shoma: %d, %d, %d, %d, %d, %d", PlayersLottoNumbers[0][i], PlayersLottoNumbers[1][i], PlayersLottoNumbers[2][i], PlayersLottoNumbers[3][i], PlayersLottoNumbers[4][i], PlayersLottoNumbers[5][i]);
			SendClientMessage(i, ORANGE, fstr);

			format(fstr2, sizeof(fstr2), "[DRAW]: shomarehaye barande: %d, %d, %d, %d, %d, %d", Number[0], Number[1], Number[2], Number[3], Number[4], Number[5]);
			SendClientMessage(i, ORANGE, fstr2);

			if(Winnings[i] == 0)
			{
				SendClientMessage(i, RED, "[LOTTO]: to hich shomareye dorosti nadashti.");
				SendClientMessage(i, RED, "[LOTTO]: barandeye: $0");
			}
			else if(Winnings[i] == 1)
			{
				SendClientMessage(i, LIGHTGREEN, "[LOTTO]: Tabrik!, to yek shomare dorost dashti.");
				SendClientMessage(i, YELLOW, "[LOTTO]: Winnings: $250K");
			    format(fstr3, sizeof(fstr3), "[LOTTO]: %s [%d] barandeye ghorekeshi shod ba 1 shomareye dorost!! - barandeye: $250K", GetName(i), i);
			    SendMessageToAll(ORANGE, fstr3);
				GivePlayerCash(i, 250000);
			}
			else if(Winnings[i] == 2)
			{
				SendClientMessage(i, LIGHTGREEN, "[LOTTO]: Tabrik!, to 2shomareye doros dashti.");
				SendClientMessage(i, YELLOW, "[LOTTO]: Winnings: $750K");
			    format(fstr3, sizeof(fstr3), "[LOTTO]: %s [%d] barandeye ghorekeshi shod ba 2 shomareye dorost!! - barandeye: $750K", GetName(i), i);
			    SendMessageToAll(ORANGE, fstr3);
				GivePlayerCash(i, 750000);
			}
			else if(Winnings[i] == 3)
			{
				SendClientMessage(i, LIGHTGREEN, "[LOTTO]: Tabrik!, shoma 3 shomareye doros dashti.");
				SendClientMessage(i, YELLOW, "[LOTTO]: Winnings: $1M");
			    format(fstr3, sizeof(fstr3), "[LOTTO]: %s [%d] barandeye ghorekeshi shod ba 3 shomareye dorost!! - barandeye: $1M", GetName(i), i);
			    SendMessageToAll(ORANGE, fstr3);
				GivePlayerCash(i, 1000000);
			}
			else if(Winnings[i] == 4)
			{
				SendClientMessage(i, LIGHTGREEN, "[LOTTO]: Tabrik!, shoma 4 shomareye dorost dashti.");
				SendClientMessage(i, YELLOW, "Winnings: $5M");
			    format(fstr3, sizeof(fstr3), "[LOTTO]: %s [%d] barandeye ghorekeshi shod ba 4 shomareye dorost!! - barandeye: $5M", GetName(i), i);
			    SendMessageToAll(ORANGE, fstr3);
				GivePlayerCash(i, 5000000);
			}
			else if(Winnings[i] == 5)
			{
				SendClientMessage(i, LIGHTGREEN, "[LOTTO]: Tabrik!, shoma 5 shomareye dorost dashti!.");
				SendClientMessage(i, YELLOW, "[LOTTO]: Winnings: $7M");
			    format(fstr3, sizeof(fstr3), "[LOTTO]: %s [%d] barandeye ghorekeshi shod ba 5 shomareye dorost!! - barandeye: $7M", GetName(i), i);
			    SendMessageToAll(ORANGE, fstr3);
				GivePlayerCash(i, 7000000);
			}
			else if(Winnings[i] == 6)
			{
				SendClientMessage(i, LIGHTGREEN, "[LOTTO]: Tabrik!, Tamam shomarehaye ghorekeshi to dorost bud!.");
				SendClientMessage(i, YELLOW, "[LOTTO]: Winnings: $10M [MAX WIN]");
			    format(fstr3, sizeof(fstr3), "[LOTTO]: %s [%d] barandeye ghorekeshi shod ba 6 shomareye dorost!! - barandeye: $10M [MAX WIN]", GetName(i), i);
			    SendMessageToAll(ORANGE, fstr3);
				GivePlayerCash(i, 10000000);
			}
			HasLotteryTicket{i} = 0;
		}
	}
	return 1;
}

task SendElvisMSG[240000]() // fekonam 4 min
{
    new RandMSG = random(sizeof(ACNR_Elvis_Mainchat_Messages));
	SendMessageToAll(WHITE, ACNR_Elvis_Mainchat_Messages[RandMSG]);
	return 1;
}

